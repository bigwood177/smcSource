;GENLG2.GL

;  GENLEG / GL 
;
;
;
;		PRINT GENERAL LEDGER
;
;
RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CC/YY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR



RECORD GLAMAS		; 
		.INCLUDE 'DEF:RD031A.DEF'
RECORD, X		; 
		.INCLUDE 'DEF:RD031C.DEF'
RECORD MASTER ,X		; 
		.INCLUDE 'DEF:RD070A.DEF'
RECORD GLAIDX		; 
		.INCLUDE 'DEF:RD032A.DEF'
RECORD YTDGLT		; 
		.INCLUDE 'DEF:RD033A.DEF'

RECORD	APDIST
	.INCLUDE 'DEF:RD016A.DEF'
RECORD	DUMDST
	.INCLUDE 'DEF:RD016B.DEF'

RECORD	VENMAS
	.INCLUDE 'DEF:RD011A.DEF'
RECORD,X
	.INCLUDE 'DEF:RD011B.DEF'

RECORD	VENIDX
	.INCLUDE 'DEF:RD012A.DEF'

RECORD	APOPEN
	.INCLUDE 'DEF:RD017A.DEF'
RECORD,X
	.INCLUDE 'DEF:RD017B.DEF'

RECORD TITLE
		,A14,'GENERAL LEDGER'
RECORD HDR1
		,A7,'ACCT-NO'
		,A4
		,A16,'ACCT-DESCRIPTION'
		,A39
;;;		,A11,'BAL FORWARD'
RECORD HDR2
		,A3
		,A8,'TRX-DATE'
		,A2
		,A4,'VEN#'
		,A2
		,A13,'NAME         '
		,A19
		,A6,'AMOUNT'
		,A4
		,A8,'INV-DATE'
		,A3
		,A8,'INVOICE#'

RECORD LEGND2
		,A7,'PERIOD:'
		,A2
	PDFROM	,A10
		,A2
		,A2,'TO'
		,A2
	PDTO	,A10
		,A23
		,A11,'MIN AMOUNT:'
		,A1
	LMIN	,A10
;;;	PCNTR	,A3

RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD CLEAR
	ALLCTL	,D1
	COMPSW	,D1
	ENDACT	,D7
	ENDDAT	,D8
	PRFCTR	,D3
	STARDT	,D8
	STRACT	,D7
	SVPCTR	,A3
	ACTCNT	,D3
	ASBBAL	,D10
	ASCHLY	,D10
	ASEBLY	,D10
	ASNTCH	,D10
	BEGBAL	,D10
	CHTCTL	,D1
	CIDXSW	,D1
	CRDSUB	,D10
	DBTSUB	,D10
	ENDSW	,D1
	GTBBAL	,D10
	GTCHLY	,D10
	GTEBLY	,D10
	GTNTCH	,D10
	LSTACT	,D7
	LYRCH	,D10
	NETCH	,D10
	SKPCTL	,D1
	SSBBAL	,D10
	SSCHLY	,D10
	SSEBLY	,D10
	SSNTCH	,D10
	TOTCR	,D10
	TOTCRL	,D10
	TOTDR	,D10
	TOTDRL	,D10
	YTRXD2	,D8

RECORD PERIOD
	CCSTNO	,D2
	CCENNO	,D2
	CCSTDT	,D8
	CCENDT	,D8

RECORD	VARS
	P_DIST	,D1		;DIST PRINTED?
	BSMID	,D5
	BSEND	,D5
	ORGVEN	,D5
	SRCCTL	,D1
	KEY	,A16
	KEY2	,A4
	APOEND	,D5
	ACCPRD	,D2
	ALPHA	,A2
	BLANKS	,A8
	BRACKS	,A6,']]]]]]'
	BALFWD	,A11,'BAL FORWRD:'
	CHGLYR	,A23,'CHANGE SAME PRD LST YR:'
	CNGCTL  ,D1
	DASHES ,A12,'------------'
	DBLDSH	,A12,'============'
	DTMASK	,A8,'XX/XX/XX'
	ENDBAL	,A11,'ENDING BAL:'
	ENDLYR	,A23,'ENDBAL SAME PRD LST YR:'
	ENTDAT	,D8
	ENTRY	,A30
	INXCTL  ,D1
	SWITCH	,D1,1
	LPSW	,D1
	LINCNT	,D2,60
	MASK1	,A13,'Z,ZZZ,ZZZ.XX-'
	MASK2	,A8,'ZZZZ-XXX'
	MSKEND	,A10
	MSKSTD	,A10
	NETCHG	,A11,'NET CHANGE:'
	PGCNT	,D3
	PLINE	,A80
	PRNTSW	,D1
	PRTCTL	,D1
	RECCNT	,D5,00001
	STREND	,D8
	STRSTD	,D8
	STVEN	,A4
	ENVEN	,A4
	MINAMT	,D8
	A4A	,A4
	V	,D1
	WHATNO	,D2
	YES	,D1,	1
RECORD
	COL2	,D2
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1
	LPARG	,D1,2
	PRTTYP	,A1
	RPTNUM	,D3
	SPLFIL	,A14
PROC 
	XCALL TERID (V)
RESTRT,
	XCALL OUTPT (1,1,2,'GENERAL LEDGER INQUIRY',V)
	RECCNT = 1
	CLEAR =
	ACTCNT =
	GLAIDX =
	GLAMAS =

;;;	XCALL FILES (1,'I',70,SWITCH)		;#70 MASTER FILE
;;;	IF (SWITCH.EQ.9) GO TO END
	open (1,i,'smc:master.y06')

	LOKCTL = 1
	XCALL IO (1,MASTER,1,READ,LOKCTL)
;;;	XCALL FILES (1,'I',70,4)
	close 1

	IF (MNOPRD.EQ.0) GO TO NOPRDS
START,
	XCALL OUTPT (3,20,2,'PLEASE ENTER SELECTION PARAMETERS',V)
	XCALL OUTPT (4,25,0,'1. ACCOUNTING PERIOD #',V)
	XCALL OUTPT (5,25,0,'2. FROM              TO          ',V)
;;;	XCALL OUTPT (6,25,0,'3. STARTING VENDOR',V)
	XCALL OUTPT (7,25,0,'3. MINIMUM AMOUNT',V)
	XCALL OUTPT (8,25,0,'4. STARTING G/L ACCOUNT #',V)
	XCALL OUTPT (9,25,0,'5. ENDING G/L ACCOUNT #',V)
ACTPRD,
	CTL = '04,49,02,00,#E'
	CALL INPUT
	GO TO (START,DONE), INXCTL
	ACCPRD = ENTRY(1,2)
	IF (ACCPRD.LT.0.OR.ACCPRD.GT.MNOPRD) GO TO ACTPRD
	IF (ACCPRD.NE.0) GO TO FINDAT
	IF (MCSTNO.NE.0.AND.MCENNO.EQ.MCSTNO) CALL DSPPER

	STARDT = MCSTDT
	ENDDAT = MCENDT
	XCALL DATE8(MCSTDT, D_OUT, D_OUTR, MSKSTD, D_SW)
	XCALL DATE8(MCENDT, D_OUT, D_OUTR, MSKEND, D_SW)

	CCSTDT = MCSTDT
	CCENDT = MCENDT
	CCSTNO = MCSTNO
	CCENNO = MCENNO
	GO TO CONTON
NOPRDS,
	XCALL MESAG('MUST ENTER PERIODS FIRST',1)
	GO TO END
DSPPER,
	ALPHA = MCSTNO, 'XX'
	XCALL OUTPT (4,49,0,ALPHA,V)
	RETURN
FINDAT,
	STRSTD = MSTDTS(ACCPRD)
	STREND = MENDTS(ACCPRD)

	XCALL DATE8(STRSTD, D_OUT, D_OUTR, MSKSTD, D_SW)
	XCALL DATE8(STREND, D_OUT, D_OUTR, MSKEND, D_SW)

	CCSTDT = STRSTD
	CCENDT = STREND
	CCSTNO = ACCPRD
	CCENNO = ACCPRD

	STARDT = STRSTD
	ENDDAT = STREND

	GO TO CONTON
ENTRDT,
	XCALL OUTPT (4,48,1,'\',V)
	CTL = '05,34,08,05,D '
	CALL INPUT
	GO TO (START), INXCTL
	ENTDAT=ENTRY(1,8)
	XCALL DATE8(ENTDAT, D_OUT, STARDT, MSKSTD, D_SW)
	CCSTDT = ENTDAT(1,8)
	COL = 52
	CALL INPUT
	GO TO (ENTRDT), INXCTL
	ENTDAT=ENTRY(1,8)
	XCALL DATE8(ENTDAT, D_OUT, ENDDAT, MSKEND, D_SW)
	CCENDT = ENTDAT
	CCSTNO =
	CCENNO =
	COMPSW =
CONTON,
	XCALL OUTPT (5,34,0,MSKSTD,V)
	XCALL OUTPT (5,52,0,MSKEND,V)
	XCALL DATE8(CCSTDT, D_OUT, D_OUTR, PDFROM, D_SW)
	XCALL DATE8(CCENDT, D_OUT, D_OUTR, PDTO, D_SW)
	GO TO (ANY), CNGCTL

MINAMT,
	CTL = '07,52,08,00,$ '
	CALL INPUT
	GOTO (START),INXCTL
	MINAMT = ENTRY(1,8)
	GOTO (ANY),CNGCTL

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;STVEN,
;;;	CTL = '06,52,04,00,A '
;;;	CALL INPUT
;;;	GO TO (START), INXCTL
;;;	STVEN = ENTRY(1,4)
;;;	IF (STVEN .EQ. A4A)
;;;		BEGIN
;;;		ENVEN = 'ZZZZ'
;;;		XCALL OUTPT(ROW,COL,0,'ALL  ',V)
;;;		XCALL OUTPT(7,52,1,' ',V)
;;;		GOTO(ANY),CNGCTL
;;;		GOTO STAC
;;;		END
;;;ENVEN,
;;;	CTL = '07,52,04,00,A '
;;;	CALL INPUT
;;;	GOTO(START),INXCTL
;;;	ENVEN = ENTRY(1,4)
;;;	IF(ENVEN .EQ. A4A)
;;;		BEGIN
;;;		ENVEN = STVEN
;;;		XCALL OUTPT(ROW,COL,1,ENVEN,V)
;;;		END
;;;	GO TO (ANY), CNGCTL
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
STAC,
	XCALL OUTPT (8,52,1,'\',V)
	ALLCTL =
	CTL = '08,52,04,00,A '
	CALL INPUT
	GO TO (START), INXCTL
	IF (ENTRY(1,4).EQ.'ALL '.OR.ENTRY.EQ.BLANKS) GO TO ALL
	ON ERROR INVNUM
	STRACT (1,4) = ENTRY (1,4)
	OFF ERROR
	XCALL OUTPT (8,56,0,'-',V)
	CTL (4,8) = '57,03'
	CALL INPUT
	GO TO (STAC), INXCTL
	IF (ENTRY(1,3).NE.BLANKS) GO TO SUB1
	XCALL OUTPT (8,57,1,'000',V)
; 
; ABOVE LINE CHANGED AS PER MCBA PATCH GL6-DIBOL-7
;
SUB1,
	STRACT (5,7) = ENTRY (1,3)
ENAC,
	GO TO (ANY), ALLCTL
	XCALL OUTPT (9,52,1,'\',V)
	CTL = '09,52,04,00,N '
	CALL INPUT
	GO TO (START), INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO SAMACT
	ENDACT (1,4) = ENTRY (1,4)
	XCALL OUTPT (9,56,0,'-',V)
	CTL (4,8) = '57,03'
	CALL INPUT
	GO TO (ENAC), INXCTL
	IF (ENTRY(1,3).NE.BLANKS) GO TO SUB2
	XCALL OUTPT (9,57,1,'000',V)
;
; ABOVE 1 LINE CHANGED AS PER MCBA PATCH GL6-DIBOL-7
;
SUB2,
	ENDACT(5,7) = ENTRY(1,3)
	GO TO ANY
SAMACT,
	ENDACT = STRACT
	ENTRY (1,8) = ENDACT, MASK2
	XCALL OUTPT (9,52,0,ENTRY(1,8),V)
	GO TO ANY
ALL,
	XCALL OUTPT (8,52,0,'ALL     ',V)
	XCALL OUTPT (9,52,0,'        ',V)
	ALLCTL = 1
ANY,
	CNGCTL =
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (PROCES,CNGBR,START), CNGCTL + 1
CNGBR,
	GO TO (ACTPRD,ENTRDT,MINAMT,STAC,ENAC), WHATNO
	XCALL MESAG(' ',3)
	GO TO ANY
INVNUM,
	OFF ERROR
	XCALL MESAG (' ',3)
	GO TO START
PROCES,
	XCALL WATE (3,V)

	COMPSW = 0			;NO COMPARISON
	PRFCTR = 0			;ALL PROFIT CENTERS
	SVPCTR = 'ALL'
	LMIN = MINAMT,	'ZZZ,ZZX.XX'
;;;	PCNTR = SVPCTR
	XCALL FILES(2,'I',32,SWITCH)
	IF (SWITCH.EQ.9) GO TO END
	XCALL FILES(1,'I',31,SWITCH)
	IF (SWITCH.NE.9) GO TO OPEN4
	CALL CLOSE1
	GO TO END
OPEN4,
	SWITCH = 5
	XCALL FILES(5,'I',16,SWITCH)
	XCALL IO(5,DUMDST,1,READ,LOKCTL)

	XCALL FILES(6,'I',11,SWITCH)
	XCALL FILES(7,'I',12,SWITCH)
	XCALL IO(6,VENMAS,1,READ,LOKCTL)
	ORGVEN = ORG011

	XCALL FILES(8,'I',17,SWITCH)
	XCALL IO(8,APOPEN,1,READ,LOKCTL)
	APOEND = ORG017

;;;	SWITCH = 1
;;;	XCALL FILES(4,'I',33,SWITCH)
;;;	IF (SWITCH.NE.9) GO TO GOON
;;;	CALL CLOSE2
;;;	GO TO END
	open (4, i, 'smc:ytdglt.y06')

GOON,
	LOKCTL = 1
	XCALL IO (4,YTDGLT,1,READ,LOKCTL)
ONSCRN,
READ,
	LOKCTL = 1
	XCALL IOS (4,YTDGLT,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO EOF
	IF (YTDGLT.EQ.BRACKS) GO TO EOF
	IF (PRFCTR.EQ.0) GO TO CHKDAT
	IF (YACTNO(5,7).NE.PRFCTR) GO TO READ
CHKDAT,
	GO TO (PALL), ALLCTL
	IF (YACTNO.LT.STRACT) GO TO READ
	IF (YACTNO.GT.ENDACT) GO TO EOF
PALL,
	IF (YTRXDT.GT.ENDDAT) GO TO READ
	IF (YACTNO.NE.LSTACT) CALL NEWACT
	IF (YTRXDT.LT.STARDT) GO TO BGBAL
	NETCH = NETCH + YTRXAM
	IF (YTRXAM.GE.0) TOTDR = TOTDR + YTRXAM
	IF (YTRXAM.LT.0) TOTCR = TOTCR + YTRXAM
	IF (YTRXAM.GE.0) DBTSUB = DBTSUB + YTRXAM
	IF (YTRXAM.LT.0) CRDSUB = CRDSUB + YTRXAM
CHKDT2,
	SKPCTL =
	IF (CHTCTL.EQ.1) CALL PRTBGB

	IF(YSRCE .EQ. 'APIN')
		BEGIN
		CALL APDIST
		IF(P_DIST)GOTO READ
		END

	XCALL DATE8(YTRXDT, D_OUT, D_OUTR, D_FMT, D_SW)
	PLINE (2,11) = D_FMT
	PLINE (14,17) = YSRCE
	PLINE (20,44) = YTRXRF
	PLINE (46,58) = YTRXAM, MASK1
	IF (YTRXAM.LT.0) PLINE (46,72) = YTRXAM, MASK1
	PLINE (76,80) = YTRAIL
	CALL PRINT

	GO TO READ

APDIST,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR P_DIST
	CLEAR KEY
	KEY(1,1) = '6'	;EXPENSES
	KEY(2,8) = YACTNO
        XCALL SERCH(5,APDIST,KEY,1,8,ORG016,BSMID,SRCCTL,4,0,0,0,0,0,0)
	BSMID = BSMID - 1
	IF(BSMID .LE. 1) RETURN
	XCALL IO(5,APDIST,BSMID,READ,LOKCTL)
AD_LOOP,
	XCALL IOS(5,APDIST,READ,LOKCTL)
	IF(APDIST.EQ.']]]]]]')RETURN
	IF(GACCT.NE.YACTNO) RETURN
	IF(GDATE.GT.YTRXDT) RETURN
	IF(GDATE.LT.YTRXDT) GOTO AD_LOOP
;;;	IF(GVENNO.LT.STVEN .OR. GVENNO.GT.ENVEN) GOTO AD_LOOP
	IF(GTRXAM.GT.MINAMT) GOTO AMT_OK
	IF(-GTRXAM.GT.MINAMT) GOTO AMT_OK
	GOTO AD_LOOP
AMT_OK,
	KEY = GVENNO
	XCALL SERCH(7,VENIDX,KEY,1,4,ORGVEN,BSMID,SRCCTL,4,6,10,0,0,0,0)
	IF(SRCCTL.EQ.0 .AND. IRC011.NE.0)
	THEN	XCALL IO (6,VENMAS,IRC011,READ,LOKCTL)
	ELSE	CLEAR VENMAS
	CALL FNDVCH
	
	XCALL DATE8(GDATE, D_OUT, D_OUTR, D_FMT, D_SW)
	PLINE (2,11) = D_FMT
	PLINE (14,17) = VENNO
	PLINE (20,44) = NAME
	PLINE (46,58) = GTRXAM, MASK1
	XCALL DATE8(AINVDT, D_OUT, D_OUTR, D_FMT, D_SW)
	PLINE (60,69) = D_FMT
	PLINE (73,80) = AINVNO
	CALL PRINT
	P_DIST=1
	GOTO AD_LOOP
	RETURN
;-----------------------------------------------------

FNDVCH,
	KEY2 = GVENNO
	SRCCTL = 2
	XCALL SERCH (8,APOPEN,KEY2,1,4,APOEND,BSMID,SRCCTL,4,32,37,0,0,0,0)
	GOTO (NO_APO), SRCCTL
BACKUP,
	BSMID = BSMID -1
	LOKCTL = 1
	XCALL IO (8,APOPEN,BSMID,READ,LOKCTL)
	IF (AVENNO.EQ.GVENNO) GO TO BACKUP
NXTVCH,
	INCR BSMID
	LOKCTL = 1
	XCALL IO (8,APOPEN,BSMID,READ,LOKCTL)
	IF (AVENNO .NE. GVENNO)  GOTO NO_APO
	IF (AVCHNO .NE. GVCHNO)  GOTO NXTVCH
	RETURN
NO_APO,
	CLEAR APOPEN
	RETURN
;-----------------------------------------------------
BGBAL,
	BEGBAL = BEGBAL + YTRXAM
	TOTDRL = TOTDRL + YTRXAM
	IF (YTRXAM.GE.0) GO TO READ
	TOTDRL = TOTDRL - YTRXAM
	TOTCRL = TOTCRL + YTRXAM
	GO TO READ
NEWACT,
	IF (LSTACT.EQ.0) GO TO MATCH
	IF (CHTCTL.EQ.1) CALL PRTBGB
	IF (SKPCTL.EQ.1) GO TO NOLINE
	IF (LINCNT.GE.56) LINCNT = 61
	PLINE (47,58) = DASHES
;;;	PLINE (61,72) = DASHES
	CALL PRINT
	PLINE (32,44) = 'TOTAL AMOUNT:'
	PLINE (46,58) = DBTSUB, MASK1
;;;	PLINE (60,72) = CRDSUB, MASK1
	CALL PRINT
	DBTSUB =
	CRDSUB =
	XCALL LINFD (1)
	INCR LINCNT

NOLINE,
;;;	IF (COMPSW.LT.2) GO TO NOBAL1
;;;	PLINE (4,26) = CHGLYR
;;;	LYRCH = LYEAR (CCENNO+1) - LYEAR(CCSTNO)
;;;	PLINE (28,40) = LYRCH, MASK1
;;;	IF (LYRCH.LT.0) PLINE (42,43) = 'CR'
;;;NOBAL1,
;;;	IF (LINCNT.GE.59) LINCNT = 61
;;;	PLINE (53,63) = NETCHG
;;;	PLINE (65,77) = NETCH, MASK1
;;;	IF (NETCH.LT.0) PLINE (79,80) = 'CR'
;;;	CALL PRINT
;;;	IF (COMPSW.LT.2) GO TO NOBAL2
;;;	PLINE (4,26) = ENDLYR
;;;	PLINE (28,40) = LYRBAL(CCENNO), MASK1
;;;	IF (LYRBAL(CCENNO).LT.0) PLINE (42,43) = 'CR'
;;;NOBAL2,
;;;	PLINE (53,63) = ENDBAL
;;;	PLINE (65,77) = BEGBAL + NETCH, MASK1
;;;	IF (BEGBAL+NETCH.LT.0) PLINE (79,80) = 'CR'
;;;	CALL PRINT
;;;	XCALL LINFD (2)
;;;	LINCNT = LINCNT +2
;;;	ASBBAL = ASBBAL + BEGBAL
;;;	ASNTCH = ASNTCH + NETCH
;;;	ASCHLY = ASCHLY + LYRCH
;;;	SSBBAL = SSBBAL + BEGBAL
;;;	SSNTCH = SSNTCH + NETCH
;;;	SSCHLY = SSCHLY + LYRCH
;;;	GTBBAL = GTBBAL + BEGBAL
;;;	GTNTCH = GTNTCH + NETCH
;;;	GTCHLY = GTCHLY + LYRCH
;;;	IF (COMPSW.LT.2) GO TO NOBAL3
;;;	ASEBLY = ASEBLY + LYRBAL (CCENNO)
;;;	SSEBLY = SSEBLY + LYRBAL (CCENNO)
;;;	GTEBLY = GTEBLY + LYRBAL (CCENNO)
;;;NOBAL3,
;;;	INCR ACTCNT
;;;	IF (YACTNO(1,4).EQ.LSTACT(1,4)) GO TO CHKSST
;;;	IF (ACTCNT.EQ.1) GO TO CLRASB
;;;ACTSUB,
;;;	IF (LINCNT.GE.58) LINCNT = 61
;;;	PLINE (1,9) = '**ACCOUNT'
;;;	PLINE (11,14) = LSTACT (1,4)
;;;	PLINE (16,26) = 'SUB-TOTALS:'
;;;	PLINE (53,63) = BALFWD
;;;	PLINE (65,77) = ASBBAL ,MASK1
;;;	IF (ASBBAL.LT.0) PLINE (79,80) = 'CR'
;;;	CALL PRINT
;;;	PLINE (4,26) = CHGLYR
;;;	PLINE (28,40) = ASCHLY, MASK1
;;;	IF (ASCHLY.LT.0) PLINE (42,43) = 'CR'
;;;	IF (COMPSW.LT.2) PLINE (4,43) =
;;;	PLINE (53,63) = NETCHG
;;;	PLINE (65,77) = ASNTCH, MASK1
;;;	IF (ASNTCH.LT.0) PLINE (79,80) = 'CR'
;;;	CALL PRINT
;;;	PLINE (4,26) = ENDLYR
;;;	PLINE (28,40) = ASEBLY, MASK1
;;;	IF (ASEBLY.LT.0) PLINE (42,43) = 'CR'
;;;	IF (COMPSW.LT.2) PLINE (4,43) =
;;;	PLINE (53,63) = ENDBAL 
;;;	PLINE (65,77) = ASBBAL + ASNTCH, MASK1
;;;	IF (ASBBAL+ASNTCH.LT.0) PLINE (79,80) ='CR'
;;;	CALL PRINT
;;;	XCALL LINFD (2)
;;;	LINCNT = LINCNT +2
CLRASB,
	ASBBAL = 
	ASNTCH = 
	ASCHLY = 
	ASEBLY =
	ACTCNT =
CHKSST,
;;;	IF (SSTCDE.NE.'Y') GO TO MATCH
;;;	IF (YACTNO(1,4).EQ.LSTACT(1,4)) GO TO MATCH
;;;	PLINE (1,19) = 'SECTION SUB-TOTALS:'
;;;	PLINE (53,63) = BALFWD
;;;	PLINE (65,77) = SSBBAL, MASK1
;;;	IF (SSBBAL.LT.0) PLINE (79,80) = 'CR'
;;;	CALL PRINT
;;;	PLINE (4,26) = CHGLYR
;;;	PLINE (28,40) = SSCHLY, MASK1
;;;	IF (SSCHLY.LT.0) PLINE (42,43) = 'CR'
;;;	IF (COMPSW.LT.2) PLINE (4,43) =
;;;	PLINE (53,63) = NETCHG
;;;	PLINE (65,77) = SSNTCH, MASK1
;;;	IF (SSNTCH.LT.0) PLINE (79,80) = 'CR'
;;;	CALL PRINT
;;;	PLINE (4,26) = ENDLYR
;;;	PLINE (28,40) = SSEBLY, MASK1
;;;	IF (SSEBLY.LT.0) PLINE (42,43) = 'CR'
;;;	IF (COMPSW.EQ.2) PLINE (4,43) =
;;;	PLINE (53,63) = ENDBAL
;;;	PLINE (65,77) = SSBBAL + SSNTCH, MASK1
;;;	IF (SSBBAL+SSNTCH.LT.0) PLINE (79,80) = 'CR'
;;;	CALL PRINT
;;;	PLINE (1,12) = DASHES
;;;	PLINE (13,24) = DASHES
;;;	PLINE (25,36) = DASHES
;;;	PLINE (37,48) = DASHES
;;;	PLINE (49,60) = DASHES
;;;	PLINE (61,72) = DASHES
;;;	PLINE (73,80) = DASHES
;;;	CALL PRINT
;;;	XCALL LINFD (1)
;;;	LINCNT = LINCNT +1
;;;	SSBBAL = 
;;;	SSNTCH = 
;;;	SSCHLY = 
;;;	SSEBLY = 
MATCH,
	IF (ENDSW.EQ.1) RETURN
	IF (IACTNO.EQ.YACTNO) GO TO FOUND
	IF (IACTNO.GT.YACTNO) GO TO NOMACH
RDIDX,
	GO TO (NOMACH), CIDXSW
	INCR RECCNT
	LOKCTL = 1
	XCALL IO (2,GLAIDX,RECCNT,READ,LOKCTL)
	IF (GLAIDX.EQ.BRACKS) GO TO EOFIDX
	GO TO MATCH
FOUND,
	IF (IRC031.EQ.0) GO TO RDIDX
	LOKCTL = 1
	XCALL IO (1,GLAMAS,IRC031,READ,LOKCTL)
ENDNEW,
	LSTACT = YACTNO
	BEGBAL =
	NETCH = 
	CHTCTL = 1
	SKPCTL = 1
	RETURN
PRTBGB,
	PLINE (1,8) = LSTACT, MASK2
	PLINE (12,41) = DESCR
	IF (COMPSW.EQ.0.OR.COMPSW.EQ.2) GO TO NOBUDG
	IF (BUDGET(CCENNO).EQ.0) GO TO NOBUDG
	PLINE (43,49) = 'BUDGET:'
	PLINE (50,62) = BUDGET(CCENNO),MASK1
	IF (BUDGET(CCENNO).LT.0) PLINE (63,64) = 'CR'
	IF (BUDGET(CCENNO).GT.0) PLINE (63,64) = 'DR'
NOBUDG,
;;;	PLINE (66,78) = BEGBAL, MASK1
;;;	IF (BEGBAL.LT.0) PLINE (79,80) = 'CR'
	CALL PRINT
	CHTCTL =
	IF (SKPCTL.EQ.1) RETURN
	XCALL LINFD (1)
	INCR LINCNT
	RETURN
EOFIDX,
	CIDXSW = 1
NOMACH,
	GLAMAS =
	DESCR = '***  ACCOUNT NOT ON CHART  ***'
	GO TO ENDNEW
EOF,
	ENDSW = 1
	YACTNO = 9999999
	CALL NEWACT
	IF (LINCNT.GT.56) LINCNT = 60
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	IF (ALLCTL.EQ.1) HDR1 =
;;;	IF (ALLCTL.EQ.1) HDR2 =
;;;	PLINE (47,58) = DBLDSH
;;;	PLINE (61,72) = DBLDSH
;;;	CALL PRINT
;;;	PLINE (1,13) = 'GRAND TOTALS:'
;;;	IF (ALLCTL.EQ.0) PLINE (1,5) = 'RANGE'
;;;	PLINE (30,44) = 'CURRENT PERIOD:'
;;;	PLINE (46,58) = TOTDR, MASK1
;;;	PLINE (60,72) = TOTCR, MASK1
;;;	CALL PRINT
;;;	PLINE (33,44) = 'LAST PERIOD:'
;;;	PLINE (46,58) = TOTDRL,MASK1
;;;	PLINE (60,72) = TOTCRL,MASK1
;;;	CALL PRINT
;;;	PLINE (31,44) = 'TOTAL TO DATE:'
;;;	PLINE (46,58) = TOTDRL + TOTDR, MASK1
;;;	PLINE (60,72) = TOTCRL + TOTCR, MASK1
;;;	CALL PRINT
;;;	XCALL LINFD (2)
;;;	LINCNT = LINCNT +2
;;;	IF (LINCNT.GT.57) LINCNT = 60
;;;	PLINE (53,63) = BALFWD
;;;	PLINE (65,77) = GTBBAL, MASK1
;;;	IF (GTBBAL.LT.0) PLINE (79,80) = 'CR'
;;;	CALL PRINT
;;;	PLINE (4,26) = CHGLYR
;;;	PLINE (28,40) = GTCHLY, MASK1
;;;	IF (GTCHLY.LT.0) PLINE (42,43) = 'CR'
;;;	PLINE (53,63) = NETCHG
;;;	PLINE (65,77) = GTNTCH, MASK1
;;;	IF (GTNTCH.LT.0) PLINE (79,80) = 'CR'
;;;	IF (COMPSW.LT.2) PLINE (4,43) =
;;;	CALL PRINT
;;;	PLINE (4,26) = ENDLYR
;;;	PLINE (28,40) = GTEBLY, MASK1
;;;	IF (GTEBLY.LT.0) PLINE (42,43) = 'CR'
;;;	PLINE (53,63) = ENDBAL
;;;	PLINE (65,77) = GTBBAL + GTNTCH, MASK1
;;;	IF (GTBBAL+GTNTCH.LT.0) PLINE (79,80) = 'CR'
;;;	IF (COMPSW.LT.2) PLINE (4,43) =
;;;	CALL PRINT
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CALL CLOSE3
	IF (ALLCTL.EQ.1) GOTO DONE
	IF (PRNTSW.EQ.1) CALL LPOFF
	GOTO RESTRT
ABORT,
	CALL CLOSE3
DONE,
;	XCALL FILES (1,'I',31,4)
END,
	IF (PRNTSW.EQ.1) CALL LPOFF
	XCALL WATE(3,V)
	XCALL PGCHN ('GL:GLMENU',1)
CLOSE3,
	XCALL FILES(4,'I',33,4)
CLOSE2,
	CLOSE 5
	CLOSE 6
	CLOSE 7
	CLOSE 8
	XCALL FILES(1,'I',31,4)
CLOSE1,
	XCALL FILES(2,'I',32,4)
	RETURN
INPUT,
	XCALL INPUT(ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
PRINT,
	IF (PRNTSW.EQ.0) CALL LPON
	XCALL LPOUT (LINCNT,PGCNT,PLINE,TITLE,HDR1,HDR2,'NO HDR3',LEGND2,
&		'NO LEG',' ',0,80,80,1,LPSW,RPTNUM,PRTTYP)
	RETURN
LPON,
	LPSW = 1
	SPLFIL (5,6) = 'BD'
	XCALL LPON (LPSW,SPLFIL)
	IF (LPSW.EQ.0) GO TO ABORT
	LPARG = 2
	IF (LPSW.EQ.2) LPARG = 4
	XCALL WATE (LPARG,V)
	PRNTSW = 1
	RETURN
LPOFF,
	XCALL LPOFF (LPSW,SPLFIL,PGCNT)
	PGCNT =
	LINCNT = 60
	PRNTSW =
	RETURN
END

