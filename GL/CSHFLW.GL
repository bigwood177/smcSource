;  CSHFLW / GL 
;
;
;		::PCPYGL.DEF::
;******************************************************************************
;		GENERAL LEDGER
;
;		RELEASED: AUGUST 1, 1984 (d70s10)
;******************************************************************************
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984
;		MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;		PGM TO PRINT CASH FLOW REPORT
;
;	PATCHED AS PER MCBA PATCH GL9-DIBOL-7		19-SEP-85
;
RECORD
	,A64,'THIS MATERIAL CONTAINS THE VALUABLE PROPERTIES AND TRADE SECRETS'
	,A62,'OF MCBA, EMBODYING CONFIDENTIAL INFORMATION AND IDEAS, NO PART'
	,A56,'OF WHICH MAY BE USED AND/OR DISCLOSED WITHOUT MCBAs DULY'
	,A55,'AUTHORIZED LICENSE AGREEMENT AND/OR WRITTEN PERMISSION.'
	,A61,'COPYRIGHT (C) MCBA, AN UNPUBLISHED WORK. ALL RIGHTS RESERVED.'
RECORD GLAMAS		; 
		.INCLUDE 'DEF:RD031A.DEF'
RECORD, X		; 
		.INCLUDE 'DEF:RD031C.DEF'
RECORD DUMGLA		; 
		.INCLUDE 'DEF:RD031B.DEF'
RECORD TFNIDX		; 
		.INCLUDE 'DEF:RD038A.DEF'
RECORD CONAME
		,A50
RECORD YTDGLT		; 
		.INCLUDE 'DEF:RD033A.DEF'
RECORD DUMYTD		; 
		.INCLUDE 'DEF:RD033B.DEF'
RECORD MASTER		; 
		.INCLUDE 'DEF:RD070A.DEF'
RECORD LEGEND
		,A3,	'FOR'
		,A1
		,A3,	'THE'
		,A1
		,A6,	'PERIOD'
		,A2
	LGNDT1	,A8
		,A2
		,A2,	'TO'
		,A2
	LGNDT2	,A8
RECORD HEAD5
		,A14,	'CURRENT-PERIOD'
		,A6
		,A12,	'YEAR-TO-DATE'
		,A11
		,A15,	'COMPARATIVE PRD'
		,A6
		,A13,	'LAST-YR-TO-DT'
RECORD TBUF
	TLINE	,A132
RECORD PBUF
	PLINE	,A132
RECORD CUR
	CURCOM 	,D10
	VPCUR	,D10
	VPPRE	,D10
	YTDCOM	,D10
RECORD SUBB
	SUBCOM	,D10
	SUBCUR	,D10
	SUBYCM	,D10
	SUBYTD	,D10
RECORD
	TDATE	,D6
	CDATE	,D6
	TOTCUR	,D10
	TOTYTD	,D10
	TOTCOM	,D10
	TOTYCM	,D10
	AMNT	,D10
	BEGBAL	,D10
	BRACKS	,A6,	']]]]]]'
	CD	,A2
	COL	,D3
	CURAMT	,D10
	DESCR2	,A30
	DIVSN	,A30
	DLRSW	,D1
	DOUBLE	,A16,	'================'
	ENDTE2	,D6
	FSCM	,3A30
	GLDTE2	,D6
	I	,D1
	SWITCH	,D1,1
	INSERT 	,A2
	LPARG	,D1,	2
	LPSW	,D1
	LINCNT	,D2,	60
	LYRBEG	,D10
	LYRCBG	,D10
	MASK1	,A8,	'ZX/XX/XX'
	MASK2	,A6,	'ZZZ.XX'
	MASK3	,A13,	'ZZ,ZZZ,ZZZ.XX'
	NOTTL	,D1
	NUMCSH	,D2
	NUMPER	,D2
	PGCNT	,D3
	PAGSIZ	,D3,	132
	PFC	,D3
	PFCSW	,D1
	PROGRM	,A10,	'GL:SARATO '
	PRTCTL	,D3
	PRTTYP	,A1
	RPTNUM	,D3
	STRDT2	,D6
	SAVCOM	,D10
	SAVCUR	,D10
	SAVYCM	,D10
	SAVYTD	,D10
	SPLFIL	,A14
	SVPRTC	,D3
	SVSFCD	,D1
	TACT	,D4
	TCD	,D3
	TITLE	,A30,	'      CASH FLOW ANALYSIS      '
	TXI	,3D1
	TYPBA2	,A1
	UNDER 	,A16,	'----------------'
	V	,D1
	YES	,D1,	1
	YTDAMT	,D10
RECORD
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1
	STRTSW	,D1	,0
PROC 
	XCALL TERID (V)
	XCALL OUTPT (2,1,2,'CASH FLOW ANALYSIS',1)
	SPLFIL (5,6) = 'BK'
	LPSW = 4	;AUTO-SPOOLED
	XCALL LPON (LPSW,SPLFIL)
	IF (LPSW.EQ.0) XCALL PGCHN ('GL:UNPRFS',1)
	IF (LPSW.EQ.2) LPARG = 4
	XCALL WATE (LPARG,V)
	XCALL FILES (1,'I',31,5)		;FILE # 031 -- GLAMAS FILE
	LOKCTL = 1
	XCALL IO (1,DUMGLA,1,READ,LOKCTL)
	SAVCUR = NETCUR
	SAVCOM = NETCOM
	SAVYCM = NETYCM
	SAVYTD = NETYTD
	STRDT2(1,2) = CCSTDT(5,6)
	STRDT2(3,6) = CCSTDT(1,4)
	ENDTE2(1,2) = CCENDT(5,6)
	ENDTE2(3,6) = CCENDT(1,4)
	LGNDT1  = CCSTDT, MASK1
	LGNDT2  = CCENDT, MASK1
	NUMCSH=NUMSAF(SUB)
	IF (COMP.EQ.0) HEAD5 (34,77) =
	SWITCH = 5
	XCALL FILES (5,'I',70,SWITCH)		;FILE # 070 -- MASTER FILE
	LOKCTL = 1
	XCALL IO (5,MASTER,1,READ,LOKCTL)
	CDATE = MSTDTS(1)
	TDATE(1,2) = CDATE(5,6)
	TDATE(3,6) = CDATE(1,4)
	CLOSE 5
	XCALL FILES (4,'I',33,5)		;FILE # 033 -- YTDGLT FILE
	LOKCTL = 1
	XCALL IO (4,DUMYTD,1,READ,LOKCTL)
	TOTCUR =
	TOTCOM =
	TOTYCM =
	TOTYTD =
	XCALL FILES (13,'I',99,5)		; CONAME FILE
	LOKCTL = 1
	XCALL IO (13,CONAME,1,READ,LOKCTL)
	CLOSE 13
	XCALL FILES (10,'I',38,5)		;FILE # 038 -- TFNIDX FILE
	LOKCTL = 1
	XCALL IO (10,TFNIDX,1,READ,LOKCTL)
	PFC = PFCCDE (SUB)
	IF (COMP .EQ. 0)  PAGSIZ = 80
	IF (CCSTNO.NE.0) GO TO PRFCRD
	HEAD5 (49,92) =
	PAGSIZ = 80
PRFCRD,
	LOKCTL = 1
	XCALL IOS (10,TFNIDX,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO EOF
	IF (TFNIDX.EQ.BRACKS) GO TO EOF
	IF (TSFFST(1,1).LT.'3') GO TO PRFCRD
	IF (TSFFST(1,1).GT.'3') GO TO NTFND
	LOKCTL = 1
	XCALL IO (1,GLAMAS,TFRCNO,READ,LOKCTL)
	IF (ACCTNO(1,4).NE.9830) GO TO NTFND
	IF (ACCTNO(5,7).NE.PFC) GO TO PRFCRD
	DIVSN = DESCR
	GO TO TEXT
NTFND,
	IF (PFC.EQ.0) GO TO ALLD
	DIVSN = '     PROFIT CENTER -'
	DIVSN (22,24) = PFC
	GO TO NXT
ALLD,
	DIVSN = '        ALL DIVISIONS'
	GO TO NXT
TEXT,
	LOKCTL = 1
	XCALL IOS (10,TFNIDX,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO EOF
	IF (TFNIDX.EQ.BRACKS) GO TO EOF
	LOKCTL = 1
	XCALL IO (1,GLAMAS,TFRCNO,READ,LOKCTL)
NXT,
	TACT = ACCTNO (1,4)
	IF (TACT.EQ.9830) GO TO TEXT
	IF (TACT.GT.9833) GO TO NEXT
	IF (TACT.LT.9831) GO TO NOTITL
	I = ACCTNO (4,4)
	FSCM (I) = DESCR
	TXI (I) = 1
	GO TO TEXT
NEXT,
	IF (TACT.NE.9834) GO TO NOTITL
	TITLE =
	TITLE (1,30) = DESCR
	GO TO BEGIN
NOTITL,
	NOTTL = 1
	GO TO BEGIN
PRTHDR,
	TBUF = PBUF
	PBUF=
	SVPRTC = PRTCTL
	LINCNT =
	INCR PGCNT
	IF (STRTSW) XCALL LINFD (0)
	STRTSW = 1
	PLINE (16,65) = CONAME
	PLINE (73,76) = 'PAGE'
	PLINE (78,80) = PGCNT
	CALL PRINT1
	PLINE (26,55) = DIVSN
	CALL PRINT1
	XCALL LINFD (1)
	INCR LINCNT
	I = 1
TXLP,
	IF (TXI(I).NE.1) GO TO INCI
	PLINE (26,55) = FSCM (I)
	CALL PRINT1
INCI,
	INCR I
	IF (I.LT.4) GO TO TXLP
	XCALL LINFD (1)
	INCR LINCNT
	PLINE (26,55) = TITLE
	CALL PRINT1
	XCALL LINFD (1)
	INCR LINCNT
	PBUF (24,134) = LEGEND(1,38)
	CALL PRINT1
	XCALL LINFD (1)
	INCR LINCNT
	PBUF (49,126) = HEAD5
	CALL PRINT1
	XCALL LINFD (1)
	INCR LINCNT
	PBUF = TBUF
	PRTCTL = SVPRTC
	RETURN
BEGIN,
	GO TO (FRST), NOTTL
READAC,
	LOKCTL = 1
	XCALL IOS (10,TFNIDX,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO EOF
	IF (TFNIDX.EQ.BRACKS) GO TO EOF
FRST,
	IF (TSFCDE.EQ.0) GO TO READAC
	LOKCTL = 1
	XCALL IO (1,GLAMAS,TFRCNO,READ,LOKCTL)
TEST,
	CD = FSTCDE (6,7)
	IF (CD.EQ.'LF') GO TO FORMS
	IF (CD.EQ.'HL') GO TO HEADLN
	IF (CD.NE.'HF') GO TO TYPBL
	LINCNT = 60
TYPBL,
	TYPBA2 = TYPBAL
	SVSFCD = TSFCDE
	IF (FSTCDE(7,7).EQ.'P') GO TO VPIPNP
	IF (CD.EQ.'NS') GO TO NET
	IF (CD(1,1).NE.'C') GO TO READAC
	PLINE (3,32) = DESCR
	IF (CD.EQ.'CH') CALL HEADER
	IF (CD.EQ.'CX') CALL PRINT
	DLRSW =
	IF (CD.EQ.'CS') CALL SUBTOT
	IF (CD.EQ.'CT') CALL TOTAL
	GO TO READAC
HEADLN,
	PLINE (35,64) = DESCR
	CALL HEADER
	GO TO READAC
FORMS,
	XCALL LINFD (1)
	INCR LINCNT
	GO TO READAC
VPIPNP,
	CALL TSTPFC
	IF (FSTCDE(6,6).EQ.'N') GO TO NET
	DESCR2 = DESCR
	IF (FSTCDE(6,6).EQ.'I') GO TO NXTACT
	CALL GTLYR
FNDIDX,
	IF (PFC.EQ.0) GO TO RDMAIN
	IF (TFNPFC.NE.PFC) GO TO NXTACT
RDMAIN,
	IF (TFYREC.EQ.0) GOTO NXTACT
	LOKCTL = 1
	XCALL IO (4,YTDGLT,TFYREC,READ,LOKCTL)
	INCR TFYREC
	IF (YACTNO.NE.ACCTNO) GO TO NXTACT
	GLDTE2(1,2) = YTRXDT(5,6)
	GLDTE2(3,6) = YTRXDT(1,4)
	IF (GLDTE2.GT.ENDTE2) GO TO NXTACT
	IF (GLDTE2.LT.TDATE) BEGBAL = BEGBAL + YTRXAM
;
; ABOVE 1 LINE CHANGED AS PER MCBA PATCH GL9-DIBOL-7
;
	IF (GLDTE2.LT.STRDT2) GO TO PRECUR
	VPCUR = VPCUR + YTRXAM
	GO TO RDMAIN
PRECUR,
	VPPRE = VPPRE + YTRXAM
	GO TO RDMAIN
NXTACT,
	LOKCTL = 1
	XCALL IOS (10,TFNIDX,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO EOF
	IF (TFNIDX.EQ.BRACKS) GO TO EOF
	LOKCTL = 1
	XCALL IO (1,GLAMAS,TFRCNO,READ,LOKCTL)
	IF (FSTCDE(6,7).NE.'VS') GO TO VIPTOT
	CALL GTLYR
	CALL TSTPFC
	GO TO FNDIDX
NET,
	CURAMT = - SAVCUR
	YTDAMT = - SAVYTD
	CURCOM = - SAVCOM
	YTDCOM = - SAVYCM
	DESCR2 =
	DESCR2 = 'NET INCOME (LOSS)'
	PFCSW = 1
	LOKCTL = 1
	XCALL IOS (10,TFNIDX,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO EOF
	IF (TFNIDX.EQ.BRACKS) GO TO EOF
	LOKCTL = 1
	XCALL IO (1,GLAMAS,TFRCNO,READ,LOKCTL)
	GO TO PRTLN
VIPTOT,
	IF (PFCSW.EQ.0) GO TO TEST
	IF (SVSFCD.EQ.1) GO TO CASH
	CURAMT = - VPCUR
	YTDAMT = VPCUR + VPPRE
	YTDAMT = - YTDAMT + BEGBAL
	CURCOM = - CURCOM
	YTDCOM = - YTDCOM + LYRBEG
	IF (CURAMT.NE.0.OR.YTDAMT.NE.0) GO TO PRTLN
	IF (CCSTNO.EQ.0) GO TO NOPRT
	IF (CURCOM.NE.0) GO TO PRTLN
	IF (YTDCOM.EQ.0) GO TO NOPRT
PRTLN,
	PLINE (1,30) = DESCR2
	CALL BUFF3
SKIP,
	SUBCUR = SUBCUR + CURAMT
	SUBYTD = SUBYTD + YTDAMT
	SUBCOM = SUBCOM + CURCOM
	SUBYCM = SUBYCM + YTDCOM
NOPRT,
	CUR =
	BEGBAL =
	LYRBEG =
	LYRCBG =
	DLRSW = 1
	PFCSW =
	GO TO TEST
CASH,
	CURAMT = VPPRE
	YTDAMT = BEGBAL
	CURCOM = LYRCBG
	YTDCOM = LYRBEG
	GO TO SKIP
TSTPFC,
	IF (PFC.EQ.0) GO TO SETSW
	IF (ACCTNO(5,7).NE.PFC) RETURN
SETSW,
	PFCSW = 1
	RETURN
BUFF3,
	PLINE (48,60) = CURAMT, MASK3
	COL = 47
	AMNT = CURAMT
	CALL TYPE
	PLINE (67,79) = YTDAMT, MASK3
	COL = 66
	AMNT = YTDAMT
	CALL TYPE
	IF (CCSTNO.EQ.0) GO TO NOCOM
	IF (COMP.EQ.0)GO TO NOCOM
	PLINE (93,105) = CURCOM, MASK3
	COL = 92
	AMNT = CURCOM
	CALL TYPE
	PLINE (112,124) = YTDCOM, MASK3
	COL = 111
	AMNT = YTDCOM
	CALL TYPE
NOCOM,
	CALL PRINT
	RETURN
TYPE,
	INSERT =
	IF (AMNT.GE.0) GO TO PERTYP
PARENS,
	PLINE (COL+14,COL+14) = ')'
	INSERT (1,1) = '('
	GO TO (JUSTFY), DLRSW
	GO TO DOLLAR
PERTYP,
	IF (DLRSW.EQ.1) RETURN
DOLLAR,
	PLINE (COL,COL) = '$'
JUSTFY,
	INCR COL
	IF (PLINE (COL,COL).EQ.' ') GO TO JUSTFY
	PLINE (COL-3,COL-2) = INSERT
	RETURN
SUBTOT,
	CURAMT = SUBCUR
	YTDAMT = SUBYTD
	CURCOM = SUBCOM
	YTDCOM = SUBYCM
	IF (SVSFCD.NE.1) CALL STOT
	CALL BUFF3
	TOTCUR = TOTCUR+SUBCUR
	TOTYTD = TOTYTD+SUBYTD
	TOTCOM = TOTCOM + SUBCOM
	TOTYCM = TOTYCM + SUBYCM
	SUBB =
	CUR =
	RETURN
TOTAL,
	CALL SETAMT
	CALL STOT
	CALL BUFF3
	CALL GTOT
	CUR =
	RETURN
SETAMT,
	CURAMT = TOTCUR
	YTDAMT = TOTYTD
	CURCOM = TOTCOM
	YTDCOM = TOTYCM
	RETURN
HEADER,
	XCALL LINFD (1)
	INCR LINCNT
PRINT,
	PRTCTL = PAGSIZ
	IF (LINCNT.GE.60) CALL PRTHDR
PRINT1,
	LINCNT = LINCNT - 1
	XCALL LPOUT (LINCNT,PGCNT,PLINE (1,PAGSIZ),'NO TITLE','NO HDR',
&		' ',' ','NO LEG',' ',' ',0,0,PRTCTL,0,LPSW,RPTNUM,PRTTYP)
	RETURN
EOF,
	NUMCSH = NUMCSH - 1
	IF (NUMCSH.LE.0) GO TO END
	LOKCTL = 1
	XCALL IO (10,TFNIDX,1,READ,LOKCTL)
	NOTTL =
	LINCNT = 60
	TOTCOM =
	TOTCUR =
	TOTYTD =
	TOTYCM =
	SUBB =
	CUR =
	GO TO BEGIN
END,
	CLOSE 1
	XCALL LPOFF (LPSW,SPLFIL,PGCNT)
	XCALL PGCHN (PROGRM,1)
GTOT,
	LINCNT = LINCNT - 1
	PLINE =
	PLINE (46,60) = DOUBLE
	PLINE (65,79) = DOUBLE
	IF (CCSTNO.EQ.0) GO TO GTP
	IF (COMP.EQ.0) GO TO GTP
	PLINE (91,105) = DOUBLE
	PLINE (110,125) = DOUBLE
GTP,
	CALL PRINT
	INCR LINCNT
	RETURN
STOT,
	LINCNT = LINCNT - 1
	PLINE =
	PLINE (46,60) = UNDER
	PLINE (65,79) = UNDER
	IF (CCSTNO.EQ.0) GO TO STP
	IF (COMP.EQ.0) GO TO STP
	PLINE (91,105) = UNDER
	PLINE (110,125) = UNDER
STP,
	CALL PRINT
	INCR LINCNT
	PLINE (3,32) = DESCR
	RETURN
GTLYR,
	IF (CCSTNO.EQ.0) RETURN
	IF (PFC.EQ.0) GO TO AOK
	IF (ACCTNO(5,7).NE.PFC) RETURN
AOK,
	LYRBEG = LYRBEG + PYREND
	CURCOM = CURCOM + (LYEAR(CCENNO+1) - LYEAR(CCSTNO))
	YTDCOM = YTDCOM + LYRBAL (CCENNO)
	IF (SVSFCD.NE.1) RETURN
	LYRCBG = LYRCBG + LYEAR (CCSTNO)
	RETURN
END
