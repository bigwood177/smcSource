;  ADFACE / GL 
;
;
;		::PCPYGL.DEF::
;******************************************************************************
;		GENERAL LEDGER
;
;		RELEASED: AUGUST 1, 1984 (d70s10)
;******************************************************************************
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984
;		MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;
;		GENERAL LEDGER INTERFACE
;
;
RECORD
	,A64,'THIS MATERIAL CONTAINS THE VALUABLE PROPERTIES AND TRADE SECRETS'
	,A62,'OF MCBA, EMBODYING CONFIDENTIAL INFORMATION AND IDEAS, NO PART'
	,A56,'OF WHICH MAY BE USED AND/OR DISCLOSED WITHOUT MCBAs DULY'
	,A55,'AUTHORIZED LICENSE AGREEMENT AND/OR WRITTEN PERMISSION.'
	,A61,'COPYRIGHT (C) MCBA, AN UNPUBLISHED WORK. ALL RIGHTS RESERVED.'

RECORD GLAMAS		;
		.INCLUDE 'DEF:RD031A.DEF'
RECORD	,X		;
		.INCLUDE 'DEF:RD031B.DEF'
RECORD GLAIDX		;
		.INCLUDE 'DEF:RD032A.DEF'
RECORD GLWORK		;
		.INCLUDE 'DEF:RD034A.DEF'
RECORD DUMGLW		;
		.INCLUDE 'DEF:RD034B.DEF'
RECORD ADDIST		;
		.INCLUDE 'DEF:RD086A.DEF'
RECORD ADSCTL	,X	;
		.INCLUDE 'DEF:RD086B.DEF'
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD EXPAND
	TRXCNA	,A6
		,A27,	' RECORDS BEFORE PROCEEDING.'
RECORD
	BLANKS	,A5
	BSEND	,D5
	BSMID	,D5
	CNGCTL	,D1
	COMPRS	,A1
	DATTOT	,D10
	DSTCNT	,D5
	DSTREC	,D5
	DTMASK	,A8,	'XX/XX/XX'
	ENDFLG	,D1
	ENTRY	,A6
	HSHADD	,D10
	INXCTL	,D1
	KEY	,A7
	KEYMSK	,A7,'XXXXXXX'
	MAXCNT	,D5
	POSTNG	,D1
	PSTDAT	,D6
	RECNO	,D5
	RECSIZ	,D2
	SAVACT	,D7
	SAVDAT	,D6	;,000001-
	SRCCTL	,D1
	SWITCH	,D1
	THRUDT	,D6
	TODAYA	,A8
	TODAY	,D6
	TRXCNT	,D5
	TRXDAT	,D6
	V	,D1
	LOKCTL	,D1
	READ	,D1,0
	WRITE	,D1,1
	WHATNO	,D1
PROC
	XCALL TERID (V)
	V = 1
	XCALL RDATE(TODAY)
	SAVDAT = -1
BEGIN,
	CNGCTL =
	XCALL OUTPT(1,1,2,'INTERFACE FROM A/D TO G/L',V)
	XCALL OUTPT(10,15,0,'PLEASE ENTER:',V)
	XCALL OUTPT(12,20,0,'INTERFACE CUT-OFF DATE',V)
	XCALL OUTPT(14,20,0,'COMPRESS BY DATE ?',V)
THRUDT,
	CTL = '12,44,06,00,DE'
	CALL INPUT
	GO TO (BEGIN,ENDOFF), INXCTL
	THRUDT = ENTRY (1,6)
	IF (THRUDT.EQ.0) CALL TODAY
	IF (THRUDT.EQ.0) GO TO THRUDT
	PSTDAT (1,2) = THRUDT (5,6)
	PSTDAT (3,6) = THRUDT (1,4)
	GO TO COMPRS
TODAY,
	THRUDT = TODAY
	IF (THRUDT.EQ.0) RETURN
	TODAYA = THRUDT, DTMASK
	XCALL OUTPT(12,44,0,TODAYA,V)
	RETURN
COMPRS,
	CTL = '14,44,01,00,YY'
	CALL INPUT
	COMPRS = ENTRY (1,1)
	GO TO ANYCNG
PROCES,
	XCALL WATE(4,V)
	SWITCH = 3
	XCALL FILES (2,'I',86,SWITCH)		; ADDIST FILE
	IF (SWITCH.EQ.9) GO TO ENDOFF
	SWITCH = 5
	XCALL FILES (2,'U',86,SWITCH)		; ADDIST FILE
	IF (SWITCH.EQ.9) GO TO CLOSE0
	LOKCTL = 1
	XCALL IO (2,ADSCTL,1,READ,LOKCTL)
	IF (GLFLAG.NE.1) GO TO NOINTF
	SWITCH = 3
	XCALL FILES (1,'U',34,SWITCH)		; GLWORK FILE
	IF (SWITCH.EQ.9) GO TO CLOSE0
	SWITCH = 1
	XCALL FILES(4,'I',31,SWITCH)		; GLAMAS FILE
	IF (SWITCH.EQ.9) GO TO CLOSE1
	XCALL FILES(5,'I',32,SWITCH)		; GLAIDX FILE
	IF (SWITCH.EQ.9) GO TO CLOSE2
	LOKCTL = 1
	XCALL IO (4,GLAMAS,1,READ,LOKCTL)
	BSEND = ORG031
	XCALL FILES(1,'U',34,5)
	LOKCTL = 1
	XCALL IO (1,DUMGLW,1,READ,LOKCTL)
	TRXCNT = REC034
	MAXCNT = MAX034
	GJSRCE = 'ADIN'
	SAVDAT = -1
	SAVACT = 0
	SAVDAT = 0
	POSTNG = 0
	HSHADD = 0
	GJREF (1,3) = 'AD-'
	GJREF (4,11) = TODAY, DTMASK
	GJREF (12,25) = ' INTERFACED'
	GO TO ADFACE
FNDACT,
	XCALL SERCH(5,GLAIDX,KEY,1,7,BSEND,BSMID,SRCCTL,4,18,22,0,0,0,0)
	GO TO (NODESC), SRCCTL
	LOKCTL = 1
	XCALL IO (4,GLAMAS,IRC031,READ,LOKCTL)
	GJDESC = DESCR
	RETURN
NODESC,
	GJDESC = '*** ACCOUNT NOT ON FILE ***'
	RETURN
ADFACE,
	DSTCNT = 0
STRTPR,
	LOKCTL = 1
	XCALL IO (2,ADDIST,1,READ,LOKCTL)
	DSTREC = REC086
	RECNO = 1
RDNXT2,
	INCR RECNO
	IF (RECNO.GT.DSTREC) GO TO END2
	READ (2,ADDIST,RECNO)
	IF (ADFLAG.EQ.1) GO TO RDNXT2
	TRXDAT (1,2) = ADDATE (5,6)
	TRXDAT (3,6) = ADDATE (1,4)
	IF (TRXDAT.GT.PSTDAT) GO TO RDNXT2
	IF (COMPRS.EQ.'Y') GO TO CMPRS2
	IF (ADACCT.NE.SAVACT.AND.POSTNG) GO TO ADACCT
	IF (POSTNG) GO TO WRITE2
	INCR DSTCNT
	GO TO RDNXT2
ADACCT,
	KEY = ADACCT, KEYMSK
	CALL FNDACT
	SAVACT = ADACCT
WRITE2,
	GJACCT = ADACCT
	GJDATE = ADDATE
	GJAMT = ADAMT
	ADFLAG = 1
	IF (COMPRS.NE.'Y') CALL SETREF
	HSHADD = HSHADD + GJAMT
	CALL WRITE
	GO TO RDNXT2
CMPRS2,
	ADFLAG = 1
	IF (POSTNG) CALL WRITED
	IF (ADACCT.NE.SAVACT) GO TO NEWAC2
	IF (ADDATE.NE.SAVDAT) GO TO NEWDT2
CNTNU2,
	IF (POSTNG) DATTOT = DATTOT + ADAMT
	GO TO RDNXT2
NEWDT2,
	IF (SAVDAT.EQ.-1) GO TO FSTDT2
	IF (POSTNG) CALL WRTAPX
FSTDT2,
	IF (ENDFLG.EQ.1) RETURN
	SAVDAT = ADDATE
	DATTOT = 0
	IF (ADACCT.NE.SAVACT) RETURN
	IF (POSTNG.EQ.0) INCR DSTCNT
	GO TO CNTNU2
NEWAC2,
	CALL NEWDT2
	IF (ENDFLG.EQ.1) RETURN
	KEY = ADACCT, KEYMSK
	IF (POSTNG) CALL FNDACT
	SAVACT = ADACCT
	IF (POSTNG.EQ.0) INCR DSTCNT
	GO TO CNTNU2
NEWTP2,
	CALL NEWAC2
	IF (ENDFLG.EQ.1) RETURN
	IF (POSTNG.EQ.0) INCR DSTCNT
	GO TO CNTNU2
END2,
	ENDFLG = 1
	IF (COMPRS.EQ.'Y') CALL NEWTP2
	IF (POSTNG) GO TO ENDAP
	IF (DSTCNT.EQ.0) GO TO NODIST
	TRXCNT = TRXCNT + DSTCNT
	IF (TRXCNT.GT.MAXCNT) GO TO NOROOM
	SAVACT = 0
	SAVDAT = 0
	DATTOT = 0
	POSTNG = 1
	ENDFLG = 0
	GO TO STRTPR
WRTAPX,
	GJACCT = SAVACT
	KEY = GJACCT, KEYMSK
	CALL FNDACT
	GJDATE = SAVDAT
	GJAMT = DATTOT
	HSHADD = HSHADD + GJAMT
	CALL WRITE
	RETURN
SETREF,
	GJSRCE (1,2) = 'AD'
	GJREF (1,8) = TODAY, DTMASK
	GJREF (9,15) = '-ASSET='
	GJREF (16,23) = ADITEM, 'XXXX-XXX'
	GJREF (24,25) =
	RETURN
ENDAP,
	HASH2 = HASH2 + HSHADD
	WRITE (1,DUMGLW,1)
	XCALL FILES (1,'U',34,04)	;CLOSE FILE # 34 -- GLWORK FILE
	XCALL FILES (2,'U',86,04)	;CLOSE FILE # 86 -- ADDIST FILE
	GO TO DONMSG
WRITE,
	IF (ENDFLG.NE.1) CALL WRITED
	IF (GJAMT.EQ.0) RETURN
	INCR REC034
	LOKCTL = 1
	XCALL IO (1,GLWORK,REC034,WRITE,LOKCTL)
	RETURN
WRITED,
	LOKCTL = 1
	XCALL IO (2,ADDIST,RECNO,WRITE,LOKCTL)
	RETURN
NOINTF,
	XCALL MESAG('SYSTEM NOT SET TO INTERFACE TO G/L',1)
	GO TO CLOSE0
DONMSG,
	XCALL OUTPT(10,15,2,'INTERFACE FROM A/D HAS BEEN COMPLETED.',V)
	XCALL OUTPT(12,15,0,'THE INTERFACED TRX MAY NOW BE EDITED OR POSTED',V)
	XCALL OUTPT(14,15,0,'USING THE G/L TRX ENTRY & EDITING APPLICATION.',V)
	XCALL MESAG (' ',2)
	XCALL WATE(3,V)
	XCALL FILES(5,'I',32,4)
	XCALL FILES(4,'I',31,4)
	GO TO ENDOFF
CLOSED,
	XCALL FILES (2,'I',86,04)
	RETURN
NODIST,
	XCALL MESAG ('THERE ARE NO DISTRIBUTIONS TO INTERFACE',1)
	GO TO CLOSE3
NOROOM,
	CALL CLOSED
	XCALL OUTPT(10,15,2,'INTERFACE FROM A/D CANNOT BE CARRIED OUT',V)
	XCALL OUTPT(12,15,0,'BECAUSE THE "GLWORK" FILE NEEDS MORE ROOM.',V)
	TRXCNA = TRXCNT, 'ZZ,ZZX'
	XCALL OUTPT(14,15,0,'PLEASE EXPAND THE "GLWORK" FILE TO AT LEAST',V)
	XCALL OUTPT(16,15,0,EXPAND,V)
	XCALL MESAG (' ',1)
CLOSE3,
	XCALL FILES(5,'I',32,4)
CLOSE2,
	XCALL FILES(4,'I',31,4)
CLOSE1,
	XCALL FILES(1,'U',34,4)		;CLOSE FILE # 34 -- GLWORK FILE
CLOSE0,
	CALL CLOSED
ENDOFF,
	XCALL WATE(3,V)
	XCALL PGCHN ('GL:GLMENU',1)
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
ANYCNG,
	CNGCTL = 2
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (PROCES,BEGIN,BEGIN), CNGCTL + 1
END
