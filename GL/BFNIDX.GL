;  BFNIDX / GL 
;
;
;
;
;		PROGRAM TO BUILD FINANCIAL STATEMENT INDICES
;
RECORD GLAMAS		; 
		.INCLUDE 'DEF:RD031A.DEF'
RECORD DUMGLA		; 
		.INCLUDE 'DEF:RD031B.DEF'
RECORD GLAIDX		; 
		.INCLUDE 'DEF:RD032A.DEF'
RECORD YTDGLT		; 
		.INCLUDE 'DEF:RD033A.DEF'
RECORD TFSIDX		; 
		.INCLUDE 'DEF:RD036A.DEF'
RECORD TSCIDX		; 
		.INCLUDE 'DEF:RD037A.DEF'
RECORD TFNIDX		; 
		.INCLUDE 'DEF:RD038A.DEF'
RECORD
		.INCLUDE 'DEF:RD036S.DEF'
		.INCLUDE 'DEF:RD037S.DEF'
		.INCLUDE 'DEF:RD038S.DEF'
RECORD SNDMS
		,A3,'GL:'
		,A6,'STCIDX'
		,A10
		,D3,036
		,D3
RECORD MSG1
		,A3,'GL:'
		,A6,'STSIDX'
		,A10
		,D3,038
		,D3
RECORD MSG2
		,A3,'GL:'
		,A6,'SARATO'
		,A10
		,D3,037
RECORD
	BLANKS	,A30
	BRACKS	,A21, ']]]]]]]]]]]]]]]]]]]]]'
	I	,D1
	SIZE	,D5
	SWITCH	,D3
	NOSAF	,D1
	NOSCH	,D1
	TEST	,6A1,'C','I','N','A','L','F'
	V	,D1
	YEOFLG	,D1
	YES	,D1,	1
	YIRCNO	,D5
RECORD
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1
	WRKFCD	,A7
	WRKSCD	,A7
PROC 
	XCALL TERID (V)
	XCALL OUTPT (2,1,1,'BUILD INDEX',1)
	XCALL FILES (1,'I',31,5)		;FILE # 031 -- GLAMAS FILE
	LOKCTL = 1
	XCALL IO (1,DUMGLA,1,READ,LOKCTL)
	IF (NUMSCH(1,10).EQ.0) NOSCH = 1
	IF (NUMSAF(1,10).EQ.0) NOSAF = 1
	XCALL FILES (2,'I',32,5)		;FILE # 032 -- GLAIDX FILE
	LOKCTL = 1
	XCALL IOS (2,GLAIDX,READ,LOKCTL)
	XCALL FILES (4,'I',33,5)		;FILE # 033 -- YTDGLT FILE
	LOKCTL = 1
	XCALL IOS (4,YTDGLT,READ,LOKCTL)

	SWITCH = 5
	XCALL FILES (5, 'O', 036, SWITCH)
	XCALL FILES (6, 'O', 037, SWITCH)
	XCALL FILES (7, 'O', 038, SWITCH)

	LOKCTL = 1
	XCALL IOS (5,TFSIDX,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IOS (6,TSCIDX,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IOS (7,TFNIDX,WRITE,LOKCTL)
	INCR YIRCNO
READ,
	LOKCTL = 1
	XCALL IOS (2,GLAIDX,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO EOF
	IF (GLAIDX.EQ.']]]]]]') GO TO EOF
	IF (IRC031.EQ.0) GO TO READ
	LOKCTL = 1
	XCALL IO (1,GLAMAS,IRC031,READ,LOKCTL)
	WRKFCD = FSTCDE
	IF (CODUSE.EQ.2) WRKFCD = FSTCD2
	WRKSCD = SCHCDE
	IF (CODUSE.EQ.2) WRKSCD = SCHCD2
	CALL BYITRX
	GO TO READ
EOF,
	LOKCTL = 1
	XCALL IOS (5,BRACKS(1,20),WRITE,LOKCTL)
	IF (LOKCTL.EQ.3) GO TO NOROOM
	LOKCTL = 1
	XCALL IOS (6,BRACKS(1,20),WRITE,LOKCTL)
	IF (LOKCTL.EQ.3) GO TO NOROOM
	LOKCTL = 1
	XCALL IOS (7,BRACKS,WRITE,LOKCTL)
	IF (LOKCTL.EQ.3) GO TO NOROOM
	CLOSE 1
	CLOSE 2
	CLOSE 4
	CLOSE 5
	CLOSE 6
	CLOSE 7
	XCALL WATE (4,V)
	SWITCH = 5
	XCALL SNMSG (SNDMS,SWITCH)
	SWITCH = 2
	XCALL SNMSG (MSG1,SWITCH)
	SWITCH = 2
	XCALL SNMSG (MSG2,SWITCH)
	XCALL PGCHN('GL:STFIDX',1)
END3,
	CLOSE 2
END2,
	CLOSE 1
END1,
	XCALL WATE(3,V)
	XCALL PGCHN('GL:UNPRFS',1)
BYITRX,
	IF (WRKFCD(6,6).NE.'V') GOTO NOMACH
	IF (ACCTNO.EQ.YACTNO) GO TO FOUND
	IF (ACCTNO.LT.YACTNO) GO TO NOMACH
	GO TO (NOMACH), YEOFLG
	INCR YIRCNO
	LOKCTL = 1
	XCALL IOS (4,YTDGLT,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO YEOF
	IF (YTDGLT.EQ.']]]]]]') GO TO YEOF
	GO TO BYITRX
YEOF,
	YEOFLG = 1
NOMACH,
	TYRCNO =
	IF (WRKFCD.EQ.BLANKS) GO TO TSTSCH
	GO TO CODE
FOUND,
	TYRCNO = YIRCNO
CODE,
	TFSTCD = WRKFCD
	TFSPFC = ACCTNO (5,7)
	TCRCNO = IRC031
	LOKCTL = 1
	XCALL IOS (5,TFSIDX,WRITE,LOKCTL)
	IF (LOKCTL.EQ.3) GO TO NOROOM
TSTSCH,
	IF (NOSCH.EQ.1.OR.WRKSCD.EQ.BLANKS) GO TO TSTSAF
	TSCPFC = ACCTNO (5,7)
	TSCHCD = WRKSCD
	TSYREC = TYRCNO
	TSRCNO = IRC031
	LOKCTL = 1
	XCALL IOS (6,TSCIDX,WRITE,LOKCTL)
	IF (LOKCTL.EQ.3) GO TO NOROOM
TSTSAF,
	IF (NOSAF.EQ.1.OR.SAFCDE.EQ.' ') RETURN
	TFNPFC = ACCTNO (5,7)
	I=
LOOP,
	INCR I
	IF (TEST(I).EQ.SAFCDE) GO TO OUT
	IF (I.LT.6) GO TO LOOP
	I=0
OUT,
	TSFCDE = I
	TSFFST = WRKFCD
	TFYREC = TYRCNO
	TFRCNO = IRC031
	LOKCTL = 1
	XCALL IOS (7,TFNIDX,WRITE,LOKCTL)
	IF (LOKCTL.EQ.3) GO TO NOROOM
	RETURN
NOROOM,
	XCALL MESAG ('NO ROOM ON DEVICE FOR TEMPORARY INDEX FILES',2)
	GO TO END3
END
