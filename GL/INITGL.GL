;  INITGL / GL 
;
;*************************************************************************
;	P L E A S E    N O T E :
;
;	THIS INITALIZATION PROGRAM WILL INITIALIZE FILES UP TO A MAXIMUM
;	RECORD SIZE OF 1,500 BYTES + CARRIAGE RETURN + LINE FEED.
;
;	IF SIGNIFICANT PROGRAM CHANGES (IE, RECORD SIZE CHANGES) ARE MADE
;	TO THIS APPLICATION, THEN THOSE CHANGES MAY WARRANT INCREASING
;	THIS BUFFER SIZE.
;
;*************************************************************************

RECORD COMPNY
			.INCLUDE 'DEF:CMP001.DEF'
RECORD DEVICE
			.INCLUDE 'DEF:DEV001.DEF'
RECORD FILES
	GENL1	,A14,'   :MASTER.   '
	GENL2	,A14,'   :GLAMAS.   '
	GENL3	,A14,'   :GLAIDX.   '
	GENL4	,A14,'   :YTDGLT.   '
	GENL5	,A14,'   :GLWORK.   '
RECORD ,X
	GENL	,5A14
RECORD 
	PHYDEV	,A3
	CPYEXT	,A3
RECORD CTLVAR
		,D10,0000100001
	MAXREC	,D5
		,D3,000
RECORD ZERO
		,2D10
RECORD BRACKS
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
RECORD
	WRTREC	,A1500
RECORD MESSGE
	ERRNAM	,A14
		,A50
RECORD
			.INCLUDE 'DEF:RD070S.DEF'
			.INCLUDE 'DEF:RD031S.DEF'
			.INCLUDE 'DEF:RD032S.DEF'
			.INCLUDE 'DEF:RD033S.DEF'
			.INCLUDE 'DEF:RD034S.DEF'
RECORD,X
	RECSIZ 	,5D4
RECORD
	COL2	,D2
	ERROR	,D3
	FILCNT	,D2,	00
	MAXCNT	,5D5
	ROW2	,D2
	BLKSIZ	,5D5
	ENTRY	,A6
	FILBL	,A14
	INXCTL	,D1
	MAX	,D1
	ROW	,D2
	COL	,D2
	TYPE	,A2
	CNGCTL	,D1
	WHATNO	,D1
	RECCNT	,D5,	00000
	V	,D1
	OPNFIL	,A23
	SWITCH	,D1
	SYSTEM	,D1
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1
	CPNTR	,D2
PROC
	V = -1
	XCALL TERID (V)
	SYSTEM = 1
BEGIN,
	V = 1
	XCALL OUTPT (1,1,2,'INITIALIZE GENERAL LEDGER FILES',V)
	XCALL OUTPT (4,20,0,'PLEASE ENTER COMPANY CODE',V)
INPTCE,
	XCALL INPUT (4,47,3,3,'AE',ENTRY,INXCTL,V)
	GO TO (BEGIN,END), INXCTL
	CPYEXT = ENTRY (1,3)
	ERRNAM = 'UT:COMPNY.DDF'
	XCALL OPENF (11,'I',ERRNAM,ERROR,0,SWITCH)
	IF (SWITCH) GO TO BADOPN
	LOKCTL = 1
	XCALL IO (11,COMPNY,1,READ,LOKCTL)
	CLOSE 11
	CPNTR =
CPLOOP,
	INCR CPNTR
	IF (CPNTR.GT.8) GOTO INVCMP
	IF (CPYEXT.NE.COMCOD(CPNTR)) GOTO CPLOOP
	CNGCTL = 2
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (REDDEV,INPTCE), CNGCTL + 1
INVCMP,
	XCALL MESAG ('INVALID COMPANY CODE',1)
	GOTO INPTCE
REDDEV,
	ERRNAM = 'UT:DEVICE.DDF'
	XCALL OPENF (11,'I',ERRNAM,ERROR,0,SWITCH)
	IF (SWITCH) GO TO BADOPN
	LOKCTL = 1
	XCALL IO (11,DEVICE,70,READ,LOKCTL)
	GENL1 (1,3) = DEVNAM(CPNTR)
	IF (GENL1(1,3).EQ.'   ') GO TO BADDEV
	GENL1 (12,14) = CPYEXT
	LOKCTL = 1
	XCALL IO (11,DEVICE,31,READ,LOKCTL)
	GENL2 (1,3) = DEVNAM(CPNTR)
	IF (GENL2(1,3).EQ.'   ') GO TO BADDEV
	GENL2 (12,14) = CPYEXT
	LOKCTL = 1
	XCALL IO (11,DEVICE,32,READ,LOKCTL)
	GENL3 (1,3) = DEVNAM(CPNTR)
	IF (GENL3(1,3).EQ.'   ') GO TO BADDEV
	GENL3 (12,14) = CPYEXT
	LOKCTL = 1
	XCALL IO (11,DEVICE,33,READ,LOKCTL)
	GENL4 (1,3) = DEVNAM(CPNTR)
	IF (GENL4(1,3).EQ.'   ') GO TO BADDEV
	GENL4 (12,14) = CPYEXT
	LOKCTL = 1
	XCALL IO (11,DEVICE,34,READ,LOKCTL)
	GENL5 (1,3) = DEVNAM(CPNTR)
	IF (GENL5(1,3).EQ.'   ') GO TO BADDEV
	GENL5 (12,14) = CPYEXT
	CLOSE 11
BEGIN1,
	XCALL OUTPT (7,20,0,'PLEASE ENTER THE MAX # RECORDS',V)
	XCALL OUTPT (8,20,0,'TO ALLOW FOR EACH FILE BELOW:',V)
	XCALL OUTPT (10,20,0,'1. CHART OF ACCOUNTS',V)
	XCALL OUTPT (11,20,0,'2. YEAR-TO-DATE TRANSACTION',V)
	XCALL OUTPT (12,20,0,'3. GENERAL JOURNAL TRANSACTION',V)
	XCALL OUTPT (20,19,0,'(LEAVING A FIELD BLANK WILL',V)
	XCALL OUTPT (21,20,0,'SKIP CREATING THAT FILE.)',V)
INPUT1,
	TYPE = '#E'
	ROW = 10
	MAX = 5
	CALL INPUT
	GO TO (BEGIN,END), INXCTL
	MAXCNT (1) = 1
	MAXCNT (2) = ENTRY (1,5)
	MAXCNT (3) = ENTRY (1,5)
	IF (MAXCNT(2).EQ.0) MAXCNT (1) = 0
	GO TO (ANYCNG), CNGCTL
INPUT2,
	TYPE = '# '
	ROW = 11
	MAX = 5
	CALL INPUT
	GO TO (BEGIN), INXCTL
	MAXCNT (4) = ENTRY (1,5)
	GO TO (ANYCNG), CNGCTL
INPUT3,
	ROW = 12
	MAX = 5
	CALL INPUT
	GO TO (BEGIN), INXCTL
	MAXCNT (5) = ENTRY (1,5)
	GO TO (ANYCNG), CNGCTL
CNGBR,
	TYPE = '# '
	GO TO (INPUT1,INPUT2,INPUT3), WHATNO
	GO TO ANYCNG
PROCES,
	V = 2
	XCALL WATE (4,V)
	FILCNT = 00
BLOCKS,
	INCR FILCNT
	BLKSIZ(FILCNT) = (((RECSIZ(FILCNT)+2)*(MAXCNT(FILCNT)+2))+2)/512 + 1
	IF (FILCNT.EQ.1) BLKSIZ(FILCNT) = 1
	IF (FILCNT.LT.5) GO TO BLOCKS
	FILCNT = 00
	XCALL OUTPT (2,0,1,'\',V)
	XCALL OUTPT (3,0,2,'\',V)
WRLOOP,
	INCR FILCNT
	IF (FILCNT.GT.5) GO TO BEGIN
	IF (MAXCNT(FILCNT).EQ.0) GO TO WRLOOP
	MAXREC = MAXCNT (FILCNT) + 1
	IF (FILCNT.EQ.1) MAXREC = 1
	IF (FILCNT.EQ.1.OR.FILCNT.EQ.3) GO TO NOCNTR
	WRTREC (RECSIZ(FILCNT)-17,RECSIZ(FILCNT)) = CTLVAR
NOCNTR,
	FILBL = GENL (FILCNT)
	ROW = 6 + FILCNT
	XCALL OUTPT (ROW,30,0,'INITIALIZING FILE ',V)
	XCALL OUTPT (0,0,0,FILBL,V)
	XCALL OPENF 
&	(1,'O',FILBL,BLKSIZ(FILCNT),RECSIZ(FILCNT),SWITCH)
	IF (SWITCH) GO TO OPNERR
	LOKCTL = 1
	XCALL IOS (1,WRTREC(1,RECSIZ(FILCNT)),WRITE,LOKCTL)
	IF (LOKCTL.EQ.3) GOTO ERRMSG
	RECCNT = 01
WRBRKS,
	IF (RECCNT.GE.MAXREC) GO TO WRTDUN
	INCR RECCNT
	LOKCTL = 1
	XCALL IOS (1,BRACKS(1,RECSIZ(FILCNT)),WRITE,LOKCTL)
	IF (LOKCTL.EQ.3) GOTO ERRMSG
	GO TO WRBRKS
WRTDUN,
	CLOSE 1
	WRTREC =
	GO TO WRLOOP
END,
	CLOSE 15
	XCALL PGMND
	STOP
INPUT,
	XCALL INPUT (ROW,53,MAX,0,TYPE,ENTRY,INXCTL,V)
	RETURN
ANYCNG,
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (PROCES,CNGBR), CNGCTL+1
	GO TO ANYCNG
OPNERR,
	ERRNAM = FILBL
	ERROR = BLKSIZ (FILCNT)
	IF (SWITCH.EQ.3) GO TO OTHERR
	GO TO ERRMSG
BADOPN,
	IF (SWITCH.EQ.3) GO TO OTHERR
	MESSGE (15,28) = 'FILE NOT FOUND'
	XCALL MESAG (MESSGE,2)
	GO TO END
OTHERR,
	MESSGE (15,53) = ' CANNOT BE OPENED DUE TO DIBOL ERROR # '
	MESSGE (53,55) = ERROR
	XCALL MESAG (MESSGE,2)
	GO TO END
BADDEV,
	XCALL MESAG
&('MUST SPECIFY DEVICE FOR FILES VIA SECURITY BEFORE INITIALIZING',2)
	GO TO END
ERRMSG,
	XCALL OUTPT (11,1,0,'ERROR CREATING FILE ',V)
	XCALL OUTPT (0,0,0,GENL(FILCNT),V)
	XCALL OUTPT (0,0,0,' - NOT ENOUGH ROOM',V)
	XCALL MESAG (' ',1)
	GO TO BEGIN
END
