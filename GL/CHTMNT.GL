;  CHTMNT / GL 
;
;
;
;		PART ONE OF ADD,CHANGE AND DELETE MODES FOR
;		CHART OF ACCOUNTS MAINTENANCE
;
;
;
;
RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CC/YY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR



RECORD MASTER		; 
		.INCLUDE 'DEF:RD070A.DEF'
RECORD GLAMAS		; 
		.INCLUDE 'DEF:RD031A.DEF'
RECORD DUMGLA		; 
		.INCLUDE 'DEF:RD031B.DEF'
RECORD GLAIDX		; 
		.INCLUDE 'DEF:RD032A.DEF'
RECORD YTDCTL 		;
		.INCLUDE 'DEF:RD033B.DEF'
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD SNDMSG
		,A3,'GL:'
	PRGNAM	,A6,'CHTCNT'
	RCNT	,D5
	OCNT	,D5
		,D3,032
		,D3
RECORD NXTMSG
	MSGPRG	,A9
RECORD
	ALPHA	,A10
	BSMID	,D5
	BLANKS	,A11
	CNGCTL	,D1
	COLMN	,D2
	DECMAL	,D18
	DSPLAY	,A13
	ENTRY	,A30
	I	,D2
	SWITCH	,D1,1
	INXCTL  ,D1
	KEY   	,A7
	LINNUM	,A2
	MASK	,A13,'ZZ,ZZZ,ZZZ.XX'
	MASK1	,A8,'XX/XX/XX'
	PARTSW	,D1
	SVROW	,D2
	SVCOL	,D2
	SELECT	,D1
	SRCCTL	,D1
	STRDAT	,A10
	STRDLR	,A10
	TEST	,D5
	TSTFLG	,D1
	V	,D1
	WHATNO	,D2
	YES	,D1,	1
	TCHAR	,D3
	SYSTEM	,D1
	DUMMY	,A62
	ORG33	,D5
	PNTR	,D5
RECORD
	COL2	,D2
	ROW2	,D2
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1
PROC 
	XCALL TERID (V)
	XCALL ENVRN(SYSTEM)
	XCALL FILES (3,'I',70,SWITCH)		;# 70 MASTER FILE
	IF (SWITCH.EQ.9) GO TO END
	XCALL FILES (1,'U',31,SWITCH)		;# 31 GLAMAS FILE
	IF (SWITCH.NE.9) GO TO OPEN2
	CALL CLOSE1
	GO TO END
OPEN2,
	XCALL FILES (2,'U',32,SWITCH)		;# 32 GLAIDX FILE
	IF (SWITCH.NE.9) GO TO UPDFLG
	CALL CLOSE2
	GO TO END
UPDFLG,
	SWITCH = 1
	XCALL FILES (4,'I',33,SWITCH)		;# 33 YTDGLT FILE
	IF (SWITCH.EQ.9) CALL CLOSE3
	IF (SWITCH.EQ.9) GO TO END
	XCALL IO (4,YTDCTL,1,READ,LOKCTL)
	ORG33 = ORG033
	LOKCTL = 1
	XCALL IO (1,DUMGLA,1,READ,LOKCTL)
	DFL031 =
	SFL031 =
	LOKCTL = 1
	XCALL IO (1,DUMGLA,1,WRITE,LOKCTL)
BEGIN,
	XCALL MMENU ('CHART OF ACCOUNTS MAINTENANCE','ACCOUNT',SELECT,V)
	GO TO (DISPLA,DISPLA,DISPLA,LIST,LIST), SELECT
	XCALL WATE(3,V)
ENDMNU,
	ONERROR ENDMNU
	LOKCTL = 1
	XCALL IO (1,DUMGLA,1,READ,LOKCTL)
	IF (DFL031.NE.1.AND.DEL031.GE.50) GO TO ORGGLA
	IF (SFL031.NE.1.AND.(REC031-ORG031).GT.0) GO TO SRTIDX
	UNLOCK 1
ENDOFF,
	CALL CLOSE4
END,
	XCALL WATE(3,V)
	XCALL PGCHN('GL:GLMENU',1)
LIST,
	CALL CLOSE4
	IF (SELECT.EQ.4) XCALL PGCHN('GL:CHTLST',1)
	MSGPRG = 'GL:CHTLST'
SRTIX2,
	XCALL WATE(4,V)
	SWITCH = 3
	XCALL FILES(2,'U',32,SWITCH)
	IF (SWITCH.EQ.9) XCALL PGCHN('GL:GLMENU',1)
	XCALL FILES(1,'U',31,5)
	LOKCTL = 1
	XCALL IO (1,DUMGLA,1,READ,LOKCTL)
	RCNT = REC031
	OCNT = ORG031
	SFL031 = 1
	LOKCTL = 1
	XCALL IO (1,DUMGLA,1,WRITE,LOKCTL)
	CLOSE 1
	SWITCH = 5
	XCALL SNMSG (SNDMSG,SWITCH)
	SWITCH = 2
	XCALL SNMSG (NXTMSG,SWITCH)
	XCALL PGCHN('GL:SRTIDX',0)
ORGGLA,
	DFL031 = 1
	LOKCTL = 1
	XCALL IO (1,DUMGLA,1,WRITE,LOKCTL)
	CALL CLOSE4
	XCALL WATE(4,V)
	XCALL PGCHN('GL:ORGCHT',0)
SRTIDX,
	MSGPRG = 'GL:GLMENU'
	CALL CLOSE4
	GO TO SRTIX2
CLOSE4,
	XCALL FILES (4,'I',33,4)
CLOSE3,
	XCALL FILES(2,'U',32,4)
CLOSE2,
	XCALL FILES(1,'U',31,4)
CLOSE1,
	XCALL FILES(3,'I',70,4)
	RETURN
PURGE,
	XCALL MESAG ('DELETED RECORDS MUST BE PURGED',1)
	GO TO ORGGLA
DISPLA,
	UNLOCK 1
	OFFERROR
	CNGCTL =
	PARTSW =
	GLAMAS =
	XCALL OUTPT (2,7,2,'\',V)
	XCALL OUTPT (2,20,0,'1. ACCOUNT #',V)
	XCALL OUTPT (3,20,0,'2. DESCRIPTION',V)
	XCALL OUTPT (4,20,0,'3. TYPICAL BAL',V)
	XCALL OUTPT (5,20,0,'4. FIN STM CODE (1)',V)
	XCALL OUTPT (5,55,0,'5. FSC (2)',V)
	XCALL OUTPT (6,20,0,'6. SCHED CODE   (1)',V)
	XCALL OUTPT (6,55,0,'7. SCD (2)',V)
	XCALL OUTPT (7,20,0,'8. S/A FND CODE',V)
	XCALL OUTPT (8,20,0,'9. USER CODE',V)
	XCALL OUTPT (9,19,0,'10. SEC SUBTOT ?',V)
	XCALL OUTPT (10,19,0,'11. SUMRY POST ?',V)
	XCALL OUTPT (11,19,0,'12. COMPRESS ?',V)
	IF (SELECT.GT.1) XCALL OUTPT (2,19,0,'*',V)
ACTNUM,
	IF (SELECT.NE.1.AND.CNGCTL) GO TO BADCNG
	IF (SELECT.EQ.1.AND.REC031.GE.MAX031) GO TO FULL
	IF (SELECT.EQ.3.AND.DEL031.GE.95) GO TO PURGE
	XCALL OUTPT (2,37,1,'\',V)
	CTL = '02,37,04,03,#E'
	CALL INPUT
	GO TO (DISPLA,BEGIN), INXCTL
	IF (ENTRY(1,3) .EQ. '000') GO TO ACTNUM
	ACCTNO (1,4) = ENTRY (1,4)
	XCALL OUTPT (2,41,0,'-',V)
	CTL = '02,42,03,00,# '
	CALL INPUT
	GO TO (ACTNUM), INXCTL
	IF (ENTRY(1,3).EQ.BLANKS) CALL NOSUBA
	ACCTNO (5,7) = ENTRY(1,3)
	KEY = ACCTNO, 'XXXXXXX'
	LOKCTL = 1
	XCALL IO (2,GLAIDX,MAX031,READ,LOKCTL)
	XCALL SERCH (2,GLAIDX,KEY,1,7,ORG031,BSMID,SRCCTL,4,18,22,0,0,0,0)
	GO TO (FNDREC,FNDREC), SELECT - 1
	GO TO (BADACT), SRCCTL + 1
	GO TO (ANYCNG), CNGCTL
	GO TO DSCRIP
FULL,
	CALL CLOSE4
	XCALL OUTPT (3,0,3,'\',V)
	XCALL OUTPT (6,20,0,'THE G/L CHART FILE IS NOW FULL.',V)
;		'PLEASE RUN "XPAND" TO EXPAND "GLAMAS"')
	XCALL OUTPT (7,20,0,'PLEASE RUN "XPAND" TO EXPAND "GLAMAS"',V)
	XCALL OUTPT (8,20,0,'AND THEN PROCEED AS USUAL.',V)
	XCALL MESAG (' ',2)
	XCALL PGCHN ('GL:GLMENU',1)
BADACT,
	UNLOCK 1
	XCALL MESAG ('ACCOUNT # ALREADY USED',1)
	GO TO DISPLA
NOSUBA,
	XCALL OUTPT (2,41,1,'\',V)
	RETURN
DSCRIP,
	CTL = '03,37,30,01,L '
	CALL INPUT
	GO TO (DISPLA),INXCTL
	DESCR = ENTRY (1,30)
	GO TO (ANYCNG), CNGCTL
DBCR,
	XCALL OUTPT (12,1,0,'"D"=DEBIT   "C"=CREDIT',V)
	CTL = '04,37,01,00,A '
	CALL INPUT
	GO TO (DISPLA),INXCTL
	TYPBAL = ENTRY(1,1)
	IF (TYPBAL.EQ.'C') GO TO OK
	IF (TYPBAL.EQ.'D') GO TO OK
	IF (TYPBAL.EQ.' ') GO TO OK
	XCALL MESAG (' ',3)
	GO TO DBCR
OK,
	XCALL OUTPT (12,1,1,'\',V)
	GO TO (ANYCNG),CNGCTL
FINCDE,
	CTL = '05,40,07,07,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	TSTFLG = 1
	ON ERROR INVCDE
	TEST = ENTRY (2,5)
	OFF ERROR
	FSTCDE = ENTRY (1,7)
	IF (FSTCDE.EQ.BLANKS) GO TO INVCDE
	GO TO (ANYCNG), CNGCTL
FINCD2,
	CTL = '05,67,07,00,AT'
	CALL INPUT
	GO TO (DISPLA,DISPLA,SAMFCD), INXCTL
FINC22,
	TSTFLG = 2
	ON ERROR INVCDE
	TEST = ENTRY (2,5)
	OFF ERROR
	FSTCD2 = ENTRY (1,7)
	GO TO (ANYCNG), CNGCTL
SCHCDE,
	CTL = '06,40,07,00,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	TSTFLG = 3
	ON ERROR INVCDE
	TEST = ENTRY (1,5)
	OFF ERROR
	SCHCDE = ENTRY (1,7)
	IF (SCHCDE.EQ.BLANKS) GO TO SCHCD1
	IF (TEST.NE.0.AND.TEST(1,2).EQ.0) GO TO INVCDE
	IF (TEST(1,2).GT.89) GO TO INVCDE
	IF (TEST(1,2).GT.49.AND.FSTCDE.EQ.'P') GO TO INVCDE
	IF (TEST(1,2).LT.50.AND.FSTCDE.EQ.'B') GO TO INVCDE
SCHCD1,
	GO TO (ANYCNG), CNGCTL
SCHCD2,
	CTL = '06,67,07,00,AT'
	CALL INPUT
	GO TO (DISPLA,DISPLA,SAMSCD), INXCTL
SCHC22,
	TSTFLG = 4
	ON ERROR INVCDE
	TEST = ENTRY (1,5)
	OFF ERROR
	SCHCD2 = ENTRY (1,7)
	IF (SCHCD2.EQ.BLANKS) GO TO SCHC32
	IF (TEST.NE.0.AND.TEST(1,2).EQ.0) GO TO INVCDE
	IF (TEST(1,2).GT.89) GO TO INVCDE
	IF (TEST(1,2).GT.49.AND.FSTCD2.EQ.'P') GO TO INVCDE
	IF (TEST(1,2).LT.50.AND.FSTCD2.EQ.'B') GO TO INVCDE
SCHC32,
	GO TO (ANYCNG), CNGCTL
SAF,
	CTL = '07,37,01,00,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	SAFCDE = ENTRY (1,1)
	IF (SAFCDE.EQ.' ') GO TO VALID
	IF (SAFCDE.EQ.'A'.OR.SAFCDE.EQ.'C'.OR.SAFCDE.EQ.'F') GO TO VALID
	IF (SAFCDE.EQ.'I'.OR.SAFCDE.EQ.'L'.OR.SAFCDE.EQ.'N') GO TO VALID
	IF (SAFCDE.EQ.'T') GO TO VALID
	XCALL MESAG('INVALID SAF CODE',1)
	GO TO SAF
VALID,
	GO TO (ANYCNG), CNGCTL
USR,
	CTL = '08,37,01,00,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	USRCDE = ENTRY (1,1)
	GO TO (ANYCNG), CNGCTL
SST,
	CTL = '09,37,01,00,YN'
	CALL INPUT
	SSTCDE = ENTRY (1,1)
	GO TO (ANYCNG), CNGCTL
SMP,
	CTL = '10,37,01,00,YN'
	CALL INPUT
	SMPCDE = ENTRY (1,1)
	GO TO (ANYCNG), CNGCTL
CMPR,
	CTL = '11,37,01,00,YN'
	CALL INPUT
	CMPCDE = ENTRY (1,1)
	GO TO ANYCNG
SAMFCD,
	ENTRY (1,7) = FSTCDE
	XCALL OUTPT (5,67,0,FSTCDE,V)
	GO TO FINC22
SAMSCD,
	ENTRY (1,7) = SCHCDE
	XCALL OUTPT (6,67,0,SCHCDE,V)
	GO TO SCHC22
INVCDE,
	OFF ERROR
	XCALL MESAG (' ',3)
	GO TO (FINCDE,FINCD2,SCHCDE,SCHCD2), TSTFLG
CNGBR,
	GO TO (SCRN2,SCRN2), PARTSW
	GO TO (ACTNUM,DSCRIP,DBCR,FINCDE,FINCD2,SCHCDE,SCHCD2,SAF,USR,SST,SMP,CMPR), WHATNO
BADCNG,
	CNGCTL = 3
	GO TO ANYCNG
SCRN2,
	IF (WHATNO.LT.0.OR.WHATNO.GT.MNOPRD) GO TO BADCNG
	IF (WHATNO.EQ.0.AND.PARTSW.EQ.2) GO TO BADCNG
	I = WHATNO
	IF (I.GE.7) GO TO SNDCOL
	SVROW = I + 4
	SVCOL = 27
	IF (I.EQ.0) GO TO (PBAL,BUDG22), PARTSW
	GO TO (BAL,BAL2), PARTSW
INVSTM,
	XCALL MESAG('INVALID STATEMENT CODE',1)
	GO TO ANYCNG
INVBAL,
	XCALL MESAG('TYPICAL BAL MUST BE "C" OR "D"',1)
	GO TO ANYCNG
SNDCOL,
	SVROW = I-2
;;;	SVCOL = 60
	SVCOL = 62
	GO TO (BAL,BAL2), PARTSW
PROCES,
	IF ((FSTCDE(6,7).EQ.'VP'.OR.FSTCDE(6,7).EQ.'VS').AND.
&		FSTCDE(1,1).NE.'B'.AND.FSTCDE(1,1).NE.'P') GO TO INVSTM
	IF ((FSTCDE(6,7).EQ.'VS'.OR.FSTCDE(6,7).EQ.'VP').AND.
&		TYPBAL.EQ.' ') GO TO INVBAL
	IF (PARTSW.EQ.0) GO TO PARTB
	IF (PARTSW.EQ.1) GO TO PARTC
	GO TO (ADD,CHANGE), SELECT
	GO TO DISPLA
FNDREC,
	GO TO (NOFIND), SRCCTL
	LOKCTL = 1
	XCALL IO (1,GLAMAS,IRC031,READ,LOKCTL)
	XCALL OUTPT (3,37,0,DESCR,V)
	XCALL OUTPT (4,37,0,TYPBAL,V)
	XCALL OUTPT (5,40,0,FSTCDE,V)
	XCALL OUTPT (5,67,0,FSTCD2,V)
	XCALL OUTPT (6,40,0,SCHCDE,V)
	XCALL OUTPT (6,67,0,SCHCD2,V)
	XCALL OUTPT (7,37,0,SAFCDE,V)
	XCALL OUTPT (8,37,0,USRCDE,V)
	XCALL OUTPT (9,37,0,SSTCDE,V)
	ALPHA (1,1) = USRCDE
	XCALL OUTPT (10,37,0,SMPCDE,V)
	XCALL OUTPT (11,37,0,CMPCDE,V)
	IF (SELECT.NE.3) GO TO ANYCNG
	XCALL OUTPT (12,1,1,'OK TO DELETE ?',V)
	CTL = '12,17,01,00,YN'
	CALL INPUT
	GO TO (DELETE,DISPLA), INXCTL
ADD,
	LOKCTL = 1
	XCALL IO (1,DUMGLA,1,READ,LOKCTL)
	BSMID = BSMID - 1
	XCALL SERCH(2,GLAIDX,KEY,1,7,ORG031,BSMID,SRCCTL,5,18,22,0,0,0,0)
	GO TO (BADACT), SRCCTL + 1
	INCR REC031
	IF (REC031.GT.MAX031) GO TO FULL
	IACTNO = ACCTNO
	IFSTCD = FSTCDE
	ISAFCD = SAFCDE
	IACTCD = ACTCDE
	IRC031 = REC031
	LOKCTL = 1
	XCALL IO (2,GLAIDX,REC031,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IO (1,GLAMAS,REC031,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IO (1,DUMGLA,1,WRITE,LOKCTL)
	GO TO FREBUF
DELETE,
	SRCCTL = 2	;No TRXs should be marked as deleted.
	XCALL SERCH (4,DUMMY,KEY,1,7,ORG33,PNTR,SRCCTL,1,1,7,0,0,0,0)
	IF (SRCCTL.EQ.1) GO TO CONT1
	XCALL MESAG
&	('G/L account number cannot be deleted - YTD transactions exist.',1)
	GO TO DISPLA
CONT1,
	FSTCDE = ']]]DEL '
	LOKCTL = 1
	XCALL IO (1,DUMGLA,1,READ,LOKCTL)
	INCR DEL031
	LOKCTL = 1
	XCALL IO (1,DUMGLA,1,WRITE,LOKCTL)
CHANGE,
	LOKCTL = 1
	XCALL IO (1,GLAMAS,IRC031,WRITE,LOKCTL)
	IFSTCD = FSTCDE
	ISAFCD = SAFCDE
	IACTCD = ACTCDE
	LOKCTL = 1
	XCALL IO (2,GLAIDX,BSMID,WRITE,LOKCTL)
	IF (SELECT.EQ.2) GO TO FREBUF
	IRC031 =
	LOKCTL = 1
	XCALL IO (2,GLAIDX,BSMID,WRITE,LOKCTL)
	XCALL MESAG ('ACCOUNT DELETED',2)
FREBUF,
	LOKCTL = 1
	XCALL IO (2,GLAIDX,MAX031,READ,LOKCTL)
	LOKCTL = 1
	XCALL IO (2,GLAIDX,1,READ,LOKCTL)
	LOKCTL = 1
	XCALL IO (1,DUMGLA,MAX031,READ,LOKCTL)
	LOKCTL = 1
	XCALL IO (1,DUMGLA,1,READ,LOKCTL)
	UNLOCK 2
	GO TO DISPLA
NOFIND,
	XCALL MESAG ('ACCOUNT NOT FOUND',1)
	GO TO DISPLA
PARTB,
	PARTSW = 1
	IF (FSTCDE(6,7).EQ.'VP') GO TO CONTNU
	IF (FSTCDE(6,7).EQ.'VS') GO TO CONTNU
	GO TO PROCES
CONTNU,
	ALPHA (1,8) = ACCTNO,'XXXX-XXX'
	IF (ACCTNO(5,7).EQ.0) ALPHA (5,8) = '    '
	XCALL OUTPT (2,14,2,'\',V)
	XCALL OUTPT (2,14,0,'ACCOUNT #  ',V)
	XCALL OUTPT (2,25,0,ALPHA (1,8),V)
	XCALL OUTPT (2,36,0,DESCR,V)
	XCALL OUTPT (3,10,0,'0.  PREV YR-END',V)
	XCALL OUTPT (4,7,0,'PRD  COMPARATIVE    ENDING BAL     PRD  COMPARATIVE    ENDING BAL',V)
	LOKCTL = 1
	XCALL IO (3,MASTER,1,READ,LOKCTL)
	IF (MNOPRD.EQ.0) GO TO NOPRDS
	I = 1
	SVROW = 5
;;;	SVCOL = 9
	SVCOL = 7
DATLOP,
	ROW = SVROW
	COL = SVCOL
;;;	STRDAT = (MENDTS(I)-1),MASK1
	XCALL DATE8((MENDTS(I)-10000), D_OUT, D_OUTR, STRDAT, D_SW)
	LINNUM = I,'ZX'
	XCALL OUTPT (ROW,COL,0,LINNUM,V)
	XCALL OUTPT (0,0,0,'.  TO ',V)
	XCALL OUTPT (0,0,0,STRDAT,V)
	INCR I
	INCR SVROW
	IF (I.GT.MNOPRD) GO TO CONTON
	IF (I.NE.7) GO TO DATLOP
	SVROW = 5
	SVCOL = 42
	GO TO DATLOP
NOPRDS,
	XCALL MESAG('ACCOUNTING PERIODS NOT YET ENTERED',1)
	GO TO DISPLA
CONTON,
	GO TO (PBAL), SELECT
	MAX = 10
	I =
	ROW = 3
	COL = 27
	DECMAL = PYREND
	CALL DSPDLR
	ROW = 5
	COL = 27
BB,
	INCR I
	DECMAL = LYRBAL(I)
	CALL DSPDLR
	INCR ROW
	IF (I.GE.MNOPRD) GO TO ANYCNG
	IF (I.NE.6) GO TO BB
	ROW = 5
;;;	COL = 60
	COL = 62
	GO TO BB
PBAL,
	ROW = 3
	COL = 27
	CTL (7,14) = '10,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	PYREND = ENTRY(1,11)
BUDG2,
	GO TO (ANYCNG), CNGCTL
	SVROW = 5
	SVCOL = 27
	I = 1
	COLMN =
BAL,
	ROW = SVROW
	COL = SVCOL
	CTL (7,14) = '10,00,$T'
	CALL INPUT
	GO TO (DISPLA,CONT,ANYCNG),INXCTL
CONT,
	LYRBAL (I) = ENTRY (1,11)
	GO TO (ANYCNG), CNGCTL
	INCR I
	INCR SVROW
	INCR COLMN
	IF (COLMN.GE.MNOPRD) GO TO ANYCNG
	IF (I.NE.7) GO TO BAL
	SVROW = 5
;;;	SVCOL = 60
	SVCOL = 62
	GO TO BAL
PARTC,
	PARTSW = 2
	IF (FSTCDE(6,7).EQ.'VP'.OR.FSTCDE(6,7).EQ.'VS') GO TO CONTN2
	GO TO PROCES
CONTN2,
	ALPHA (1,8) = ACCTNO,'XXXX-XXX'
	IF (ACCTNO(5,7).EQ.0) ALPHA (5,8) = '    '
	XCALL OUTPT (2,14,2,'\',V)
	XCALL OUTPT (2,14,0,'ACCOUNT #  ',V)
	XCALL OUTPT (2,25,0,ALPHA (1,8),V)
	XCALL OUTPT (2,36,0,DESCR,V)
	XCALL OUTPT (4,7,0,
&	'PERIOD              BUDGET         PERIOD              BUDGET  ',V)
	LOKCTL = 1
	XCALL IO (3,MASTER,1,READ,LOKCTL)
	I = 1
	SVROW = 5
;;;	SVCOL = 9
	SVCOL = 7
DATLO2,
	ROW = SVROW
	COL = SVCOL
;;;	STRDAT = (MENDTS(I)),MASK1
	XCALL DATE8(MENDTS(I), D_OUT, D_OUTR, STRDAT, D_SW)

	LINNUM = I,'ZX'
	XCALL OUTPT (ROW,COL,0,LINNUM,V)
	XCALL OUTPT (0,0,0,'.  TO ',V)
	XCALL OUTPT (0,0,0,STRDAT,V)
	INCR I
	INCR SVROW
	IF (I.GT.MNOPRD) GO TO CONTO2
	IF (I.NE.7) GO TO DATLO2
	SVROW = 5
	SVCOL = 42
	GO TO DATLO2
CONTO2,
	GO TO (BUDG22), SELECT
	MAX = 10
	I =
	ROW = 5
	COL = 27
BB2,
	INCR I
	DECMAL = BUDGET(I)
	CALL DSPDLR
	INCR ROW
	IF (I.GE.MNOPRD) GO TO ANYCNG
	IF (I.NE.6) GO TO BB2
	ROW = 5
;;;	COL = 60
	COL = 62
	GO TO BB2
BUDG22,
	SVROW = 5
	SVCOL = 27
	I = 1
	COLMN =
BAL2,
	ROW = SVROW
	COL = SVCOL
	CTL (7,14) = '10,00,$T'
	CALL INPUT
	GO TO (DISPLA,CONT2,ANYCNG),INXCTL
CONT2,
	BUDGET (I) = ENTRY (1,11)
	GO TO (ANYCNG), CNGCTL
	INCR I
	INCR SVROW
	INCR COLMN
	IF (COLMN.GE.MNOPRD) GO TO ANYCNG
	IF (I.NE.7) GO TO BAL2
	SVROW = 5
;;;	SVCOL = 60
	SVCOL = 62
	GO TO BAL2
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
ANYCNG,
	CNGCTL = 5
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (PROCES,CNGBR,DISPLA), CNGCTL+1
	GO TO PROCES
DSPDLR,
	XCALL DSPLY (MAX,ROW,COL,DECMAL,3,V)
	RETURN
END
