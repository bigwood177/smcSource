;  COMPRS / GL 
;
;
;		COMPRESS YTDGLT RECORDS BY ACCOUNTING PERIOD
;
RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CC/YY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR



RECORD MASTER		; 
		.INCLUDE 'DEF:RD070A.DEF'
RECORD GLAMAS		; 
		.INCLUDE 'DEF:RD031A.DEF'
RECORD GLAIDX		; 
		.INCLUDE 'DEF:RD032A.DEF'
RECORD YTDGLT		; 
		.INCLUDE 'DEF:RD033A.DEF'
RECORD YTDTR2		; 
		.INCLUDE 'DEF:RD033F.DEF'
RECORD, X			; 
		.INCLUDE 'DEF:RD033B.DEF'
RECORD BRACKS			; 
		.INCLUDE 'DEF:RD033C.DEF'
RECORD			;
		.INCLUDE 'DEF:RD033E.DEF'
RECORD
	ARRIN	,D3
	ARROUT	,D3
	CLTNAM	,A30
	CIDXSW	,D1
	CMPRD	,D3
	CNGCTL	,D1
	DATE	,D8
	ENDATS	,13D8
	ENTRY	,A10
	INXCTL	,D1
	SWITCH	,D1,1
	LSTACT	,D7,	-0000001
	NEWCNT	,D5
	PERIOD	,D2
	RECCNT	,D5
	TOTAMT	,D10
	V	,D1
	WHATNO	,D1
	YTRDAT	,D8
RECORD
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1

PROC 
	XCALL TERID (V)
	XCALL OUTPT (1,1,2,'COMPRESS YEAR-TO-DATE FILE',V)
	XCALL FILES (3,'I',70,SWITCH)		;#70 MASTER FILE
	IF (SWITCH.EQ.9) GO TO DONE
	LOKCTL = 1
	XCALL IO (3,MASTER,1,READ,LOKCTL)
	XCALL FILES (3,'I',70,4)
	IF (MNOPRD.EQ.0) GO TO NOPRDS
	XCALL FILES (1,'I',31,SWITCH)
	IF (SWITCH.EQ.9) GO TO DONE
	LOKCTL = 1
	XCALL IO (1,GLAMAS,1,READ,LOKCTL)
	XCALL FILES (2,'I',32,SWITCH)
	IF (SWITCH.EQ.9) GO TO END1
	LOKCTL = 1
	XCALL IO (2,GLAIDX,1,READ,LOKCTL)
	SWITCH = 3
	XCALL FILES (4,'U',33,SWITCH)
	IF (SWITCH.EQ.9) GO TO END2
	XCALL FILES(4,'U',33,5)
	LOKCTL = 1
	XCALL IO (4,YTDTR2,1,READ,LOKCTL)
	XCALL OUTPT (6,15,0,'HOW MANY ACCOUNTING PERIODS DO YOU WISH TO COMPRESS ?',V)
INPUT,
	XCALL INPUT (6,70,2,1,'#E',ENTRY, INXCTL,V)
	GO TO (INPUT,FINI), INXCTL
	CMPRD = ENTRY (1,2)
	IF (CMPRD.LT.1.OR.CMPRD.GT.MNOPRD) GO TO AGAIN
	CNGCTL = 2
	XCALL ANYCN (CNGCTL, WHATNO) 
	GO TO (PROCES,INPUT), CNGCTL + 1
AGAIN,
	XCALL MESAG('INVALID NUMBER OF PERIODS',1)
	GO TO INPUT
NOPRDS,
	XCALL MESAG('MUST ENTER PERIODS FIRST',1)
	GO TO DONE
PROCES,
	XCALL WATE (4,V)
	PERIOD =
CLOOP,
	INCR PERIOD
	IF (PERIOD.GT.MNOPRD) GO TO OUT
	ENDATS (PERIOD) = MENDTS(PERIOD)
;;;	YTRDAT = MENDTS(PERIOD)
;;;	DATE(1,2) = YTRDAT (5,6)
;;;	DATE(3,6) = YTRDAT (1,4)
;;;	ENDATS (PERIOD) = DATE
	GO TO CLOOP
OUT,
	PERIOD =
	RECCNT = 1
	CALL FILBUF
RDYTD,
	INCR RECCNT
	LOKCTL = 1
	XCALL IO (4,YTDGLT,RECCNT,READ,LOKCTL)
	IF (YTDGLT.EQ.BRACKS) GO TO EOFYTD
	IF (YACTNO.NE.LSTACT) CALL NEWACT
	IF (CMPCDE.EQ.'N'.OR.YSRCE.EQ.'BBF ') GO TO PASS
	IF (YSRCE.EQ.'BF  '.OR.YSRCE.EQ.'CMP ') GO TO PASS
;;;	YTRDAT(1,2) = YTRXDT(5,6)
;;;	YTRDAT(3,6) = YTRXDT(1,4)
CHKDAT,
	IF (PERIOD.GT.CMPRD) GO TO PASS
;;;	IF (YTRDAT.GT.ENDATS(PERIOD)) GO TO NEWPRD
	IF (YTRXDT.GT.ENDATS(PERIOD)) GO TO NEWPRD
	TOTAMT = TOTAMT + YTRXAM
	GO TO RDYTD
NEWPRD,
	IF (PERIOD.GE.MNOPRD) GO TO PASS
	IF (TOTAMT.NE.0) CALL OLDPRD	;EFFECTIVELY DELETES 0 BAL ACCTS
	INCR PERIOD
	GO TO CHKDAT
NEWACT,
	IF (LSTACT.EQ.-1) GO TO MATCH
	IF (TOTAMT.NE.0) CALL OLDPRD
MATCH,
	IF (IACTNO.EQ.YACTNO) GO TO FOUND
	IF (IACTNO.GT.YACTNO) GO TO NOMACH
RDIDX,
	GO TO  (NOMACH), CIDXSW
	LOKCTL = 1
	XCALL IOS (2,GLAIDX,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO EOFIDX
	IF (GLAIDX.EQ.BRACKS) GO TO EOFIDX
	GO TO MATCH
FOUND,
	IF (IRC031.EQ.0) GO TO RDIDX
	ON ERROR NOMACH
	LOKCTL = 1
	XCALL IO (1,GLAMAS,IRC031,READ,LOKCTL)
	OFFERROR
ENDNEW,
	LSTACT = YACTNO
	TOTAMT =
	PERIOD = 1
	RETURN
EOFIDX,
	CIDXSW = 1
NOMACH,
	CMPCDE = 'N'
	GO TO ENDNEW
PASS,
	IF (TOTAMT.NE.0) CALL OLDPRD
	YTDTR2 = YTDGLT
	CALL FILBUF
	GO TO RDYTD
OLDPRD,
	YACTN2 = LSTACT
	YTRXD2 = ENDATS (PERIOD)
;----------------------------------------
;;;	DATE = ENDATS (PERIOD)
;;;	YTRXD2(1,4) = DATE (3,6)
;;;	YTRXD2 (5,6) = DATE (1,2)
;----------------------------------------

	YSRCE2 = 'CMP '
	YTRXR2 = 'NET ACTIVITY THIS PERIOD'
	YTRXA2 = TOTAMT
	CALL FILBUF
	TOTAMT =
	RETURN
FILBUF,
	INCR ARRIN
	BUF062(ARRIN) = YTDTR2
	IF (ARRIN.LT.BLM062) RETURN
WRTBUF,
	INCR NEWCNT
	INCR ARROUT
	YTDTR2 = BUF062 (ARROUT)
	LOKCTL = 1
	XCALL IO (4,YTDTR2,NEWCNT,WRITE,LOKCTL)
	IF (ARROUT.LT.ARRIN) GO TO WRTBUF
	ARRIN =
	ARROUT =
	YTDTR2 =
	RETURN
EOFYTD,
	IF (TOTAMT.NE.0) CALL OLDPRD
	IF (ARRIN.NE.0) CALL WRTBUF
	LOKCTL = 1
	XCALL IO (4,YTDTR2,1,READ,LOKCTL)
	RECCNT = REC033
	REC033 = NEWCNT
	LOKCTL = 1
	XCALL IO (4,YTDTR2,1,WRITE,LOKCTL)
WRBRKS,
	INCR NEWCNT
	IF (NEWCNT.GT.RECCNT) GO TO FINI
	LOKCTL = 1
	XCALL IO (4,BRACKS,NEWCNT,WRITE,LOKCTL)
	GO TO WRBRKS
FINI,
	XCALL WATE(3,V)
	XCALL FILES (4,'U',33,4)
END2,
	XCALL FILES (2,'I',32,4)
END1,
	XCALL FILES (1,'I',31,4)
DONE,
	XCALL PGCHN ('GL:GLSPFN',1)
END
