;AUTAP.GL
SUBROUTINE AUTAP
	E_DATE	,D	;MONTH END DATE
	ERROR	,D	;1 = DID NOT COMPLETE

;  APFACE / GL 
;
;
;
;
RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CC/YY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR


RECORD GLAMAS		;
		.INCLUDE 'DEF:RD031A.DEF'
RECORD	,X		;
		.INCLUDE 'DEF:RD031B.DEF'
RECORD GLAIDX		;
		.INCLUDE 'DEF:RD032A.DEF'
RECORD GLWORK		;
		.INCLUDE 'DEF:RD034A.DEF'
RECORD DUMGLW		;
		.INCLUDE 'DEF:RD034B.DEF'
RECORD APDIST		;
		.INCLUDE 'DEF:RD016A.DEF'
RECORD	,X		;
		.INCLUDE 'DEF:RD016B.DEF'
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD EXPAND
	TRXCNA	,A6
		,A27,	' RECORDS BEFORE PROCEEDING.'
RECORD	CHANNEL
	CHN016	,D2
	CHN031	,D2
	CHN032	,D2
	CHN034	,D2

RECORD	VARS
	OPNOK	,D1
	WRKACT	,D7
	BLANKS	,A5
	BSEND	,D5
	BSMID	,D5
	CNGCTL	,D1
	COMPRS	,A1
	DATTOT	,D10
	DSTCNT	,D5
	DSTREC	,D5
	DTMASK	,A8,	'XX/XX/XX'
	ENDFLG	,D1
	ENTRY	,A8
	HSHADD	,D10
	INXCTL	,D1
	KEY	,A7
	KEYMSK	,A7,'XXXXXXX'
	MAXCNT	,D5
	POSTNG	,D1
	PSTDAT	,D8
	STDAT	,D8
	RECNO	,D5
	RECSIZ	,D2
	SAVACT	,D7
	SAVDAT	,D8
	SAVTYP	,D1
	SRCCTL	,D1
	SWITCH	,D1,3
	THRUDT	,D8
	TODAYA	,A10
	TODAY	,D8
	TDATE	,D6
	TRXCNT	,D5
	TRXDAT	,D8
	V	,D1
	WHATNO	,D1
RECORD
	READ	,D1,0
	WRITE	,D1,1
	LOKCTL	,D1
PROC
	XCALL TERID (V)
	V = 1
	XCALL RDATE(TDATE)
	XCALL DATE8(TDATE, D_OUT, TODAY, D_FMT, D_SW)
BEGIN,
	xcall outpt (2,1,1,'Processing SMC data',1)

	THRUDT = E_DATE		;CCYYMMDD
	PSTDAT = THRUDT
	STDAT = PSTDAT
	STDAT(7,8) = 01

	COMPRS = 'Y'

	ERROR = 1	;this will be cleared if success

	CALL OPENS
	IF (.NOT. OPNOK)
		BEGIN
		CALL CLOSE
		XRETURN
		END

PROCES,
	GJSRCE(3,4) = 'IN'
	SAVTYP = -1
	SAVACT = 0
	SAVDAT = 0
	POSTNG = 0
	HSHADD = 0

	GO TO APFACE
FNDACT,
	XCALL SERCH(5,GLAIDX,KEY,1,7,BSEND,BSMID,SRCCTL,4,18,22,0,0,0,0)
	GO TO (NODESC), SRCCTL
	LOKCTL = 1
	XCALL IO (4,GLAMAS,IRC031,READ,LOKCTL)
	GJDESC = DESCR
	RETURN
NODESC,
	GJDESC = '*** ACCOUNT NOT ON FILE ***'
	RETURN
;------------------
APFACE,
	DSTCNT = 0
STRTAP,
	LOKCTL = 1
	XCALL IO (2,APDIST,1,READ,LOKCTL)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; 11-4-15 ssq: don't care
;;;	IF (INTFLG.NE.1) GO TO NOINTF
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	DSTREC = REC016
	RECNO = 1
RDNXT2,
	INCR RECNO
	IF (RECNO.GT.DSTREC) GO TO END2
	LOKCTL = 1
	XCALL IO (2,APDIST,RECNO,READ,LOKCTL)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; 11-4-15 ssq: don't care
;;;	IF (GFLAG.EQ.1) GO TO RDNXT2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	TRXDAT = GDATE
	IF (TRXDAT.GT.PSTDAT) GO TO RDNXT2
	IF (COMPRS.EQ.'Y') GO TO CMPRS2
	IF (GACCT.NE.SAVACT.AND.POSTNG) GO TO APACCT
	IF (POSTNG) GO TO WRITE2
	INCR DSTCNT
	GO TO RDNXT2
APACCT,
	KEY = GACCT, KEYMSK
	CALL FNDACT
	SAVACT = GACCT
WRITE2,
	GJACCT = GACCT
;;;	GJDATE = GDATE
	GJDATE = TRXDAT
	GJAMT = GTRXAM
	SAVTYP = GTYPE
	GFLAG = 1
	CALL CHKTP2
	HSHADD = HSHADD + GJAMT
	CALL WRITE
	GO TO RDNXT2
CMPRS2,
	GFLAG = 1
	IF (POSTNG) CALL WRITED
	IF (GTYPE.NE.SAVTYP) GO TO NEWTP2
	IF (GACCT.NE.SAVACT) GO TO NEWAC2
	IF (GDATE.NE.SAVDAT) GO TO NEWDT2
CNTNU2,
	IF (POSTNG) DATTOT = DATTOT + GTRXAM
	GO TO RDNXT2
NEWDT2,
	IF (SAVTYP.EQ.-1) GO TO FSTDT2
	IF (POSTNG) CALL WRTAPX
FSTDT2,
	IF (ENDFLG.EQ.1) RETURN
	SAVDAT = GDATE
	DATTOT = 0
	IF (GTYPE.NE.SAVTYP.OR.GACCT.NE.SAVACT) RETURN
	IF (POSTNG.EQ.0) INCR DSTCNT
	GO TO CNTNU2
NEWAC2,
	CALL NEWDT2
	IF (ENDFLG.EQ.1) RETURN
	KEY = GACCT, KEYMSK
	IF (POSTNG) CALL FNDACT
	SAVACT = GACCT
	IF (GTYPE.NE.SAVTYP) RETURN
	IF (POSTNG.EQ.0) INCR DSTCNT
	GO TO CNTNU2
NEWTP2,
	CALL NEWAC2
	IF (ENDFLG.EQ.1) RETURN
	SAVTYP = GTYPE
	IF (POSTNG.EQ.0) INCR DSTCNT
	GO TO CNTNU2
END2,
	ENDFLG = 1
	IF (COMPRS.EQ.'Y') CALL NEWTP2
	IF (POSTNG) GO TO ENDAP
	IF (DSTCNT.EQ.0) GO TO NODIST
	TRXCNT = TRXCNT + DSTCNT
	IF (TRXCNT.GT.MAXCNT) GO TO NOROOM
	SAVTYP = -1
	SAVACT = 0
	SAVDAT = 0
	DATTOT = 0
	POSTNG = 1
	ENDFLG = 0
	GO TO STRTAP
WRTAPX,
	GJACCT = SAVACT
	KEY = GJACCT, KEYMSK
	CALL FNDACT
	GJDATE = SAVDAT
	GJAMT = DATTOT
	CALL CHKTP2
	HSHADD = HSHADD + GJAMT
	CALL WRITE
	RETURN
CHKTP2,
	IF (SAVTYP.EQ.1.OR.SAVTYP.EQ.2.OR.SAVTYP.EQ.3) GJAMT = GJAMT * (-1)
	GJSRCE (1,2) = 'AP'
	GJREF (1,3) = 'AP-'
;;;	GJREF (4,11) = TODAY, DTMASK
	GJREF (4,11) = TDATE, DTMASK
	GJREF (12,12) = '-'
	IF (SAVTYP.EQ.1) GJREF (13,25) = 'A/P ADDED'
	IF (SAVTYP.EQ.2) GJREF (13,25) = 'CASH DISBURSD'
	IF (SAVTYP.EQ.3) GJREF (13,25) = 'DISC TAKEN'
	IF (SAVTYP.EQ.4) GJREF (13,25) = 'A/P PAID'
	IF (SAVTYP.EQ.6) GJREF (13,25) = 'EXPENSE'
	RETURN
ENDAP,
	HASH2 = HASH2 + HSHADD
	LOKCTL = 1
	XCALL IO (1,DUMGLW,1,WRITE,LOKCTL)

	CLEAR ERROR
	GOTO ENDOFF

WRITE,
	IF (ENDFLG.NE.1) CALL WRITED
	IF (GJAMT.EQ.0) RETURN
	INCR REC034
	LOKCTL = 1
	XCALL IO (1,GLWORK,REC034,WRITE,LOKCTL)
	RETURN
WRITED,
	LOKCTL = 1
;11-3-15 not yet..
;;;	XCALL IO (2,APDIST,RECNO,WRITE,LOKCTL)
	RETURN
DONMSG,
	XCALL OUTPT(10,15,2,'INTERFACE FROM A/P HAS BEEN COMPLETED.',V)
	XCALL OUTPT(12,15,0,'THE INTERFACED TRX MAY NOW BE EDITED OR POSTED',V)
	XCALL OUTPT(14,15,0,'USING THE G/L TRX ENTRY & EDITING APPLICATION.',V)
	XCALL MESAG (' ',2)
	XCALL WATE(3,V)
	GO TO ENDOFF
;------------------

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK

	SWITCH = 1
	XCALL FILES (1,'U',34,SWITCH)	;OPEN & PROTECT FILE # 34 -- GLWORK FILE
	IF (SWITCH.EQ.9) RETURN
	CHN034 = 1

	SWITCH = 1
	XCALL FILES(4,'I',31,SWITCH)
	IF (SWITCH.EQ.9) RETURN
	CHN031 = 4

	SWITCH = 1
	XCALL FILES(5,'I',32,SWITCH)
	IF (SWITCH.EQ.9) RETURN
	CHN032 = 5

	LOKCTL = 1
	XCALL IO (4,GLAMAS,1,READ,LOKCTL)
	BSEND = ORG031

	LOKCTL = 1
	XCALL IO (1,DUMGLW,1,READ,LOKCTL)
	TRXCNT = REC034
	MAXCNT = MAX034

	SWITCH = 1
	XCALL FILES (2,'U',16,SWITCH)	;OPEN FILE # 16 -- APDIST FILE
	IF (SWITCH.EQ.9) RETURN
	CHN016 = 2

	OPNOK = 1

	RETURN
;------------------------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (CHN016) XCALL FILES (CHN016,'U',016,4)
	IF (CHN031) XCALL FILES (CHN031,'I',031,4)
	IF (CHN032) XCALL FILES (CHN032,'I',032,4)
	IF (CHN034) XCALL FILES (CHN034,'I',034,4)
	RETURN
;------------------------------------------------------


NODIST,
	CLEAR ERROR	;NO DIST, NO ERROR...
	GOTO ENDOFF

NOROOM,
	CALL CLOSE
	XCALL OUTPT(10,15,2,'INTERFACE FROM A/R CANNOT BE CARRIED OUT',V)
	XCALL OUTPT(12,15,0,'BECAUSE THE "GLWORK" FILE NEEDS MORE ROOM.',V)
	TRXCNA = TRXCNT, 'ZZ,ZZX'
	XCALL OUTPT(14,15,0,'PLEASE EXPAND THE "GLWORK" FILE TO AT LEAST',V)
	XCALL OUTPT(16,15,0,EXPAND,V)
	XCALL MESAG (' ',1)
	XRETURN

ENDOFF,
	CALL CLOSE
	XRETURN
;=============================================================

INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
ANYCNG,
	CNGCTL = 2
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (PROCES,BEGIN,BEGIN), CNGCTL + 1
END

