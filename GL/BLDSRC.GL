;  BLDSRC / GL 
;
;
;
RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CC/YY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR


RECORD GLAMAS		; 
		.INCLUDE 'DEF:RD031A.DEF'
RECORD DUMGLA		; 
		.INCLUDE 'DEF:RD031B.DEF'
RECORD MASTER		; 
		.INCLUDE 'DEF:RD070A.DEF'
RECORD YTDGLT
		.INCLUDE 'DEF:RD033A.DEF'
RECORD,X
		.INCLUDE 'DEF:RD033B.DEF'
RECORD SRCIDX		; 
		.INCLUDE 'DEF:RD035A.DEF'
RECORD
		.INCLUDE 'DEF:RD035S.DEF'
RECORD SNDMSG
		,A3,'GL:'
	PRGNAM	,A6,'SRCREF'
	SRTREC	,D5
	ORGREC	,D5,00001
		,D3,035
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD
	ACCPRD	,D2
	ALPHA	,A2
	CNGCTL	,D1
	DSPDAT	,A10
	ENTDAT	,D8
	ENTRY	,A8
	ENDDAT	,D8
	INXCTL	,D1
	SWITCH	,D1,1
	MASK	,A8,'XX/XX/XX'
	MSKEND	,A10
	MSKSTD	,A10
	PRFCTR	,D3
	RECCNT	,D4
	SIZE	,D5
	STARDT	,D8
	STREND	,D8
	V	,D1
	WHATNO	,D1
	YES	,D1,	1
	YTRXD2	,D8
	YTRCNO	,D5
RECORD
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1

PROC 
	XCALL TERID (V)
	XCALL OUTPT (1,1,2,'PRINT SOURCE CROSS REFERENCE',V)
	SWITCH = 1
	XCALL FILES (1,'I',70,SWITCH)		;FILE # 070 -- MASTER FILE
	IF (SWITCH.EQ.9) GOTO END
	LOKCTL = 1
	XCALL IO (1,MASTER,1,READ,LOKCTL)
	XCALL FILES (1,'I',70,4)
	IF (MNOPRD.EQ.0) GOTO NOPRDS
	SWITCH = 3
	XCALL FILES (5,'O',35,SWITCH)		;FILE # 035 -- SRCIDX FILE
	IF (SWITCH.EQ.9) GOTO END
	SWITCH = 1
	XCALL FILES (4,'I',33,SWITCH)		;FILE # 033 -- YTDGLT FILE
	IF (SWITCH.EQ.9) GOTO END1
	LOKCTL = 1
	XCALL IO (4,YTDGLT,1,READ,LOKCTL)
	SIZE = (REC033*(SIZ035+2))/512 + 1
	XCALL OFILE (5,35,SIZE,SIZ035,SWITCH)
	IF (SWITCH.EQ.1) GO TO NOROOM
	SWITCH = 1
	XCALL FILES (6,'U',31,SWITCH)		;FILE # 031 -- GLAMAS FILE
	IF (SWITCH.EQ.9) GOTO END2
	LOKCTL = 1
	XCALL IO (6,DUMGLA,1,READ,LOKCTL)
BEGIN,
	XCALL OUTPT (4,20,0,'PLEASE ENTER SELECTION PARAMETERS',V)
	XCALL OUTPT (5,25,0,'1. ACCOUNTING PERIOD #',V)
	XCALL OUTPT (6,25,0,'2. FROM              TO          ',V)
	XCALL OUTPT (7,25,0,'3. ONE PROFIT CENTER (OR "ALL")',V)
ACTPRD,
	CTL = '05,49,02,00,#E'
	CALL INPUT
	GO TO (BEGIN,END3), INXCTL
	ACCPRD = ENTRY (1,2)
	IF (ACCPRD.LT.0.OR.ACCPRD.GT.MNOPRD)GO TO ACTPRD
	IF (ACCPRD.NE.0) GO TO FINDAT
	IF (MCSTNO.NE.0.AND.MCENNO.EQ.MCSTNO) CALL DSPPER

;;;	STARDT (1,2) = MCSTDT (5,6)
;;;	STARDT (3,6) = MCSTDT (1,4)
;;;	ENDDAT (1,2) = MCENDT (5,6)
;;;	ENDDAT (3,6) = MCENDT (1,4)

	STARDT = MCSTDT
	ENDDAT = MCENDT

	XCALL DATE8(MCSTDT, D_OUT, D_OUTR, MSKSTD, D_SW)
	XCALL DATE8(MCENDT, D_OUT, D_OUTR, MSKEND, D_SW)
;;;	MSKSTD = MCSTDT,MASK
;;;	MSKEND = MCENDT,MASK
	SCSTDT = MCSTDT
	SCENDT = MCENDT
	GO TO CONTON
NOPRDS,
	XCALL MESAG('MUST ENTER PERIODS FIRST',1)
	GO TO END
DSPPER,
	ALPHA = MCSTNO, 'XX'
	XCALL OUTPT (5,49,0,ALPHA,V)
	RETURN
FINDAT,
	STARDT = MSTDTS(ACCPRD)
	ENDDAT = MENDTS(ACCPRD)
	XCALL DATE8(MCSTDT, D_OUT, D_OUTR, MSKSTD, D_SW)
	XCALL DATE8(MCENDT, D_OUT, D_OUTR, MSKEND, D_SW)

;;;	MSKSTD = STRSTD,MASK
;;;	MSKEND = STREND,MASK
	SCSTDT = STARDT
	SCENDT = ENDDAT

;;;	STARDT(1,2)=STRSTD(5,6)
;;;	STARDT(3,6)=STRSTD(1,4)
;;;	ENDDAT(1,2)=STREND(5,6)
;;;	ENDDAT(3,6)=STREND(1,4)
	GO TO CONTON
ENTRDT,
	XCALL OUTPT (5,49,0,'  ',V)
	CTL = '06,34,08,05,D '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	STARDT = ENTRY(1,8)
	XCALL DATE8(STARDT, D_OUT, D_OUTR, MSKSTD, D_SW)

;;;	ENTDAT=ENTRY(1,8)
;;;	SCSTDT = ENTDAT
;;;	MSKSTD = SCSTDT,MASK
;;;	STARDT(1,2)=SCSTDT(5,6)
;;;	STARDT(3,6)=SCSTDT(1,4)

	COL = 48
	CALL INPUT
	GO TO (ENTRDT), INXCTL
	ENDDAT = ENTRY(1,8)
	XCALL DATE8(ENDDAT, D_OUT, D_OUTR, MSKEND, D_SW)

;;;	ENTDAT=ENTRY(1,6)
;;;	SCENDT = ENTDAT
;;;	MSKEND = SCENDT,MASK
;;;	ENDDAT(1,2)=SCENDT(5,6)
;;;	ENDDAT(3,6)=SCENDT(1,4)

CONTON,
	XCALL OUTPT (6,34,0,MSKSTD,V)
	XCALL OUTPT (6,50,0,MSKEND,V)
	GO TO (CHANGE), CNGCTL
PROFCT,
	CTL = '07,58,03,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (ENTRY.EQ.'    ') 	XCALL OUTPT (7,58,0,'ALL',V)
	IF (ENTRY(1,3).EQ.'ALL') ENTRY =
	ON ERROR INVNUM
	PRFCTR = ENTRY (1,3)
	OFF ERROR
CHANGE,
	CNGCTL = 
	XCALL ANYCN (CNGCTL,WHATNO)      
	IF (WHATNO.GT.3) GO TO CHANGE
        GO TO (FILES,CNGBR,BEGIN), CNGCTL + 1
FILES,
	XCALL WATE(3,V)
	LOKCTL = 1
	XCALL IO (6,DUMGLA,1,WRITE,LOKCTL)
	XCALL FILES (6,'U',31,4)
	GO TO PROCES
INVNUM,
	XCALL MESAG (' ',3)
	GO TO PROFCT
CNGBR,
	GO TO (ACTPRD,ENTRDT,PROFCT), WHATNO
PROCES,
	XCALL OUTPT (4,41,0,'\',V)
	XCALL OUTPT (3,0,0,'BUILD INDEX',V)
	XCALL WATE (4,V)
	CALL WRTIDX
	YTRCNO = 1
READ,
	LOKCTL = 1
	XCALL IOS (4,YTDGLT,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO EOF
	IF (YTDGLT.EQ.']]]]]]') GO TO EOF
	INCR YTRCNO
	IF (PRFCTR.EQ.0) GO TO CHKDAT
	IF (YACTNO(5,7).NE.PRFCTR) GO TO READ
CHKDAT,
;;;	YTRXD2(1,2) = YTRXDT(5,6)
;;;	YTRXD2(3,6) = YTRXDT(1,4)
	IF (YTRXDT.LT.STARDT) GO TO READ
	IF (YTRXDT.GT.ENDDAT) GO TO READ
WRITE,
	SISRCE = YSRCE
	SIRCNO = YTRCNO
	CALL WRTIDX
	GO TO READ
WRTIDX,
	LOKCTL = 1
	XCALL IOS (5,SRCIDX,WRITE,LOKCTL)
	IF (LOKCTL.EQ.3) GO TO NOROOM
	INCR RECCNT
	RETURN
EOF,
	CLOSE 5
	XCALL FILES (5,'U',35,5)
	LOKCTL = 1
	XCALL IO (5,SRCIDX,1,READ,LOKCTL)
	SISRCE = PRFCTR
	SIRCNO = RECCNT
	LOKCTL = 1
	XCALL IO (5,SRCIDX,1,WRITE,LOKCTL)
	CLOSE 5
	XCALL FILES (4,'I',33,4)
	SRTREC = RECCNT
	XCALL WATE(4,V)
	SWITCH = 5
	XCALL SNMSG (SNDMSG,SWITCH)
	XCALL PGCHN ('GL:SRTSRC',1)
END3,
	XCALL FILES (6,'U',31,4)
END2,
	XCALL FILES (4,'I',33,4)
END1,
	XCALL FILES (5,'O',35,4)
END,
	XCALL WATE (3,V)
	XCALL PGCHN ('GL:GLMENU',1)
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
NOROOM,
	XCALL MESAG ('NO ROOM ON DEVICE FOR TEMPORARY INDEX',2)
	GO TO END2
END
