SUBROUTINE INPTK ; (ROW,COL,INMAX,MIN,INTYPE,ENTRY,INXCTL,V,F_KEY)
;
;
;		STANDARD ROUTINE TO INPUT & EDIT
;		DATA FROM THE VIDEO TERMINAL
;
	ROW	,D	; SCREEN ROW
	COL	,D	; SCREEN COLUMN
	INMAX	,D	; MAXIMUM # OF CHARACTERS ALLOWED
	MIN	,D	; MINIMUM # OF CHARACTERS ALLOWED
	INTYPE	,A	; TYPE OF DATA INPUT (SEE BELOW)
	ENTRY	,A	; FIELD DATA IS PASSED BACK IN
	INXCTL	,D	; CONTROLS POST EXECUTION BRANCH
	V	,D	; VT50/52 CONTROL
	F_KEY	,D	; FUNCTION KEY
RECORD DOTS
		,A50,	'..................................................'
		,A30,	'..............................'
RECORD	TEST
	DEC3	,D3
RECORD			; WORK FIELDS
	CHAR	,D2
	COL2	,D2
	DECMAL	,D18
	TCHAR	,D3
	DCHAR	,D3
	ACHAR	,A1
	ESCSEQ	,A20
	I	,D2
	TTWAIT	,D1
	TYPE	,A2
	MAX	,D2
	SAVMAX	,D2
	SYSTEM	,D1

			; ***** TYPE CODES *****
			;	"A " = ALPHANUMERIC
			;	"L " = ALPHANUMERIC UPPER AND LOWER CASE
			;	"D " = DATE, EDITED FOR VALID DAY & MONTH
			;	       & REDISPLAYED IN MM/DD/YY FORMAT
			;	"# ' = NUMERIC, POSITIVE ONLY
			;	"#-" = NUMERIC, POSITIVE OR NEGATIVE
			;	"#N" = NUMERIC, DISPLAY ONLY 1 BLANK AFTER DOTS
			;	"N " = SAME AS # BUT DOESN'T DISPLAY DEFAULT 0 VALUE
			;	"NN" = SAME AS N BUT DISPLAY ONLY 1 BLANK AFTER DOTS
			;	"C " = ACCEPT CR ONLY - SETS MAX TO 0
			;	"$ " = DOLLAR FIELD, POSITIVE ONLY
			;	"$-" = DOLLAR FIELD, POSITIVE OR NEGATIVE
			;	       BOTH $ TYPES DISPLAYED IN
			;	       FORMAT "ZZ,ZZZ,ZZZ,ZZZ.XX"
			;	"H " = HOURS FIELD, PROCESSED SAME AS $ FIELD
			;	"?E" = WHEN "E" IS SECOND CHARACTER OF ANY TYPE,
			;	       THAT FIELD WILL TAKE "END"
			;	"?T" = ALLOWS TAB FOR TERM CHAR & SETS INXCTL = 3
			;	"?X" = ALLOWS TAB OR END AS IN ?E AND ?T ABOVE
			;	"YN" = YES/NO ANSWERS, ACCEPTS ONLY "Y" OR "N"
			;	"YE" = YES/NO/END ANSWERS, ALLOWS END IN Y/N
			;	"YY" = YES/NO ANSWERS, DEFAULT TO "Y" ON CR

			; ***** INXCTL RETURN CODES *****
			;	0 = INPUT OK, NO MESSAGE
			;	1 = "Y" ANSWER TO YES/NO TYPE FIELD OR ABORT RECORD
			;	2 = "N" ANSWER TO YES/NO TYPE FIELD, OR
			;	    "END" HAS BEEN TYPED IF "?E" TYPE FIELD
			;	3 = TAB KEY USED TO DEFAULT ON "?T" TYPE FIELD
PROC
	TYPE = INTYPE			; REASSIGN TO VARIABLE SO A LITERAL CAN BE PASSED IN
	if (%passed(f_key)) clear f_key
	IF (TYPE(1,1).EQ.'L') XCALL FLAGS (00000010,1)
	SAVMAX = INMAX
;;;	XCALL ENVRN (SYSTEM)
	system = 0	;envrn.man conflicts w/ synergy envrn
	IF (SYSTEM.GE.1) SYSTEM = 1
	SYSTEM = 0
CLRLIN,
	MAX = SAVMAX
	IF (SYSTEM.NE.1) GO TO NOTTSX
;;;	DISPLAY (15,29,'F')
;;;	DISPLAY (15,29,'Q',MAX+1,29,'E')
				; 29 = TSX LEAD-IN CHARACTER
				; 'F' = TURN OFF CHARACTER ECHOING
				; 'Q' = ACTIVATE ON FIELD-WIDTH
				; 'E' = TURN ON CHARACTER ECHOING
NOTTSX,
	XCALL OUTPT (ROW,COL,0,DOTS(1,MAX),V)
	XCALL OUTPT (0,0,0,' ',V)
	IF (TYPE.NE.'#N'.AND.TYPE.NE.'NN') XCALL OUTPT (0,0,0,'  ',V)
	XCALL OUTPT (ROW,COL,0,'\',V)
	IF (TYPE.EQ.'C') MAX = 0
	ENTRY =
	INXCTL =
	CHAR =
INPUT1,
	INCR CHAR
INPUT2,
	ACCEPT (15,TCHAR)		; INPUT 1 DECIMAL CHARACTER AT A TIME
;;;	IF (TCHAR.EQ.127) GO TO DELETE	; DELETE KEY
	IF (TCHAR.EQ.8) GO TO DELETE	; DELETE KEY (BACKSPACE)
	IF (TCHAR.EQ.21) GO TO CLRLIN	; CTRL/U - ERASE LINE
	IF (TCHAR.EQ.23) GO TO RESTRT	; CTRL/W - ABORT RECORD
	IF (TCHAR.EQ.13) GO TO ACPTLF	; CARRIAGE RETURN
	IF (TCHAR.EQ.9) GO TO DEFALT	; TAB DEFAULT OPTION
;;;	IF (TCHAR.EQ.8) GO TO ENDFLD	; BACK SPACE OPTION = 'END'
	IF (TCHAR.EQ.27) GO TO ENDFLD	; ESCAPE OPTION = 'END'
	IF (TCHAR.EQ.0) GO TO ESCAPE	; PC KEYS
	IF (TCHAR.LT.32.OR.TCHAR.GT.122) GO TO INPUT2	; IGNORES INVALID CHARACTERS
	IF (TCHAR.EQ.45.AND.TYPE(2,2).EQ.'-'.AND.SAVMAX.EQ.MAX) MAX = MAX + 1 ;TEST FOR MINUS
	IF (CHAR.GT.MAX) GO TO TOOLNG
	XCALL ASCII (TCHAR,ENTRY(CHAR,CHAR))	; CONVERTS CHARACTERS TO ASCII
	GO TO INPUT1
ESCAPE,
	CLEAR DEC3
	XCALL FLAGS (10000,1)
	XCALL TTSTS (TTWAIT)
	IF (TTWAIT)	ACCEPT (15,DEC3)
	IF (%PASSED(F_KEY) )F_KEY = DEC3
	IF (DEC3.EQ.133) TCHAR = 27		;<F11>
	IF (DEC3.EQ.79)  TCHAR = 27		;<END>	
	XCALL FLAGS (10000,0)
	GOTO ENDFLD

DELETE,					; ERASES 1 CHARACTER ON SCREEN & IN CORE
	IF (CHAR.EQ.1) GO TO INPUT2
	CHAR = CHAR-1
	IF (ENTRY(CHAR,CHAR).EQ.'-') MAX = SAVMAX
	ENTRY(CHAR,CHAR) =
	DISPLAY (15,$SCR_MOV(0,-1),".",$SCR_MOV(0,-1) )
;;;	DISPLAY (15,8,'.',8)
	GO TO INPUT2
RESTRT,					; SETS INXCTL TO 1 FOR ABORT/RESTART
	IF (TYPE(1,1).EQ.'Y') GO TO BADANS
	INXCTL = 1
	IF (ROW*V.NE.24) XCALL MESAG ('NOT PROCESSED',2)
	IF (ROW*V .EQ. 24) XCALL BEEP	;SSQ 2-28-01
	GO TO RETRN
ACPTLF,
	IF (SYSTEM.NE.1) ACCEPT (15,TCHAR)
ENDFLD,					; BRANCH FOR EDITING AFTER CR
	IF (TCHAR.EQ.27.AND.TYPE(2,2).NE.'E'.AND.TYPE(2,2).NE.'X') GO TO INPUT2
	IF (TCHAR.EQ.27.AND.(TYPE(2,2).EQ.'E'.OR.TYPE(2,2).EQ.'X')) INXCTL = 2


	IF ((TYPE(2,2).EQ.'E'.OR.TYPE(2,2).EQ.'X').AND.INXCTL.EQ.2)
&		XCALL OUTPT (ROW,COL,0,'END',V)
	IF (INXCTL.EQ.2) GO TO RETRN
	IF (CHAR-1.LT.MIN) GO TO TOSHRT	; TEST FOR TOO SHORT
	IF (TYPE(1,1).EQ.'Y') GO TO TSTANS
	IF (TYPE.EQ.'#'.OR.TYPE.EQ.'N') GO TO TSTNUM
	IF (TYPE.EQ.'D') GO TO TSTDTE
	IF (TYPE.EQ.'$'.OR.TYPE.EQ.'H') GO TO TSTDLR
	GO TO RETRN
DEFALT,			; SETS INXCTL = 3 WHEN TERM CHAR IS TAB & TYPE = "?T"
	IF (ENTRY.NE.'   '.OR.(TYPE(2,2).NE.'T'.AND.
&		TYPE(2,2).NE.'X')) GO TO INPUT2
	INXCTL = 3
	GO TO RETRN
TOOLNG,					; ENTRY TOO LONG
	IF (TYPE.EQ.'YN'.OR.TYPE.EQ.'YY') GO TO BADANS
	IF (ROW*V.NE.24.AND.MAX.NE.0) XCALL MESAG ('TOO LONG',1)
	IF (ROW*V .EQ. 24) XCALL BEEP	;SSQ 2-28-01
	COL2 = COL + CHAR - 1
	XCALL OUTPT (ROW,COL2,0,' ',V)

	DISPLAY (15,$SCR_MOV(0,-1) )
;;;	DISPLAY (15,8)
	GO TO CLRLIN
TOSHRT,					; ENTRY TOO SHORT
	IF (ROW*V.NE.24) XCALL MESAG ('TOO SHORT',1)
	IF (ROW*V .EQ. 24) XCALL BEEP	;SSQ 2-28-01
	GO TO CLRLIN
TSTNUM,					; NUMERIC EDITING
	ON ERROR BADNUM
	DECMAL = ENTRY(1,MAX)
	IF (DECMAL.EQ.0.AND.TYPE.NE.'N') XCALL OUTPT (ROW,COL,0,'0',V)
;;;	IF (TYPE(2,2).EQ.'-') GO TO RETRN
	IF (TYPE(2,2).EQ.'-'.OR.TYPE(2,2).EQ.'T') GO TO RETRN	;;;
	IF (DECMAL.LT.0) GO TO NOTPOS
	GO TO RETRN
BADNUM,
	IF (ROW*V.NE.24) XCALL MESAG ('MUST BE NUMERIC',1)
	IF (ROW*V .EQ. 24) XCALL BEEP	;SSQ 2-28-01
	GO TO CLRLIN
NOTPOS,
	IF (ROW*V.NE.24) XCALL MESAG ('NEGATIVE NOT ALLOWED',1)
	IF (ROW*V .EQ. 24) XCALL BEEP	;SSQ 2-28-01
	GO TO CLRLIN
TSTDTE,					; EDITING FOR VALID DATE
	IF (ENTRY(1,3).EQ.'   ') GO TO RETRN
	ON ERROR BADDTE
	DECMAL(1,6) = ENTRY(1,6)
	IF (DECMAL(1,2).LT.1.OR.DECMAL(1,2).GT.12) GO TO BADDTE
	IF (DECMAL(3,4).LT.1.OR.DECMAL(3,4).GT.31) GO TO BADDTE
	IF (DECMAL(1,6).LT.0) GO TO BADDTE
	XCALL DSPLY (MAX,ROW,COL,DECMAL,2,V)
	GO TO RETRN
BADDTE,
	XCALL MESAG ('USE FORMAT MMDDYY',1)
	IF (ROW*V .EQ. 24) XCALL BEEP	;SSQ 2-28-01
	GO TO CLRLIN
TSTDLR,					; EDITING FOR DOLLAR FIELD
	ON ERROR BADDLR			; REDISPLAYS FORMATTED
	DECMAL = ENTRY(1,MAX)
	IF (TYPE(2,2).NE.'-'.AND.TYPE(2,2).NE.'T'.AND.DECMAL.LT.0) GO TO NOTPOS
	XCALL DSPLY (MAX,ROW,COL,DECMAL,3,V)
	GO TO RETRN
BADDLR,
	XCALL MESAG (' ',3)
	IF (ROW*V .EQ. 24) XCALL BEEP	;SSQ 2-28-01
	GO TO CLRLIN
TSTANS,					; EDITING FOR "Y" OR "N" ANSWER
	IF (ENTRY.EQ.' '.AND.TYPE.EQ.'YY') ENTRY = 'Y'
	IF (ENTRY.EQ.' ') ENTRY = 'N'
	IF (ENTRY.EQ.'Y'.OR.ENTRY.EQ.'y') INXCTL = 1
	IF (ENTRY.EQ.'N'.OR.ENTRY.EQ.'n') INXCTL = 2
	IF (INXCTL.EQ.0) GO TO BADANS
	XCALL OUTPT (ROW,COL,0,ENTRY(1,1),V)
	GO TO RETRN
BADANS,
	DISPLAY (15,7)
	XCALL BEEP		;9-16-98 SSQ
	GO TO CLRLIN
RETRN,
	IF (TYPE(1,1).EQ.'L') XCALL FLAGS (00000010,0)
	RETURN
END
