SUBROUTINE ANYFK
;
;
	CNGCTL	,D	; BRANCH & EXECUTION CONTROL VARIABLE (SEE BELOW)
	WHATNO	,D	; # OF FIELD TO BE CHANGED
	F_KEY	,D
	F_DESC	,A

RECORD
	DIGITS	,D2
	SAVCTL	,D1
	INXCTL	,D1	; PARAMETERS
	ALPHA   ,A4	; USED IN INPUT
	TCHAR	,D3
	TYPE	,A2	; USED IN INPUT
	SYSTEM	,D1
	V	,D1,1	;DUMMY VARIABLE FOR VT50/52 CONTROL
 
			; ***** CNGCTL CODES *****
			;     OUTGOING:
			;      -1 = "END" FROM INCOMING VALUE OF 4 OR 6
			;	0 = NO CHANGE
			;	1 = CHANGE MODE
			;     INCOMING:
			;	0 = NORMAL CHANGE MODE
			;	1 = NORMAL CHANGE MODE
			;	2 = DON'T GET WHAT #
			;	3 = DISPLAY ERROR MESSAGE
			;	4 = ALLOW "END" INPUT AT "ANY CHANGE ?"
			;	5 = ALLOW "0" WHATNO
			;	6 = ALLOW "END" INPUT AT "FIELD # TO CHANGE"
PROC
;;;	XCALL ENVRN (SYSTEM)
	system = 0	;envrn.man conflicts w/ synergy envrn
	IF (SYSTEM.GT.1) SYSTEM = 1	;MAINTAIN TSX+ = 1
	SAVCTL = CNGCTL
ANYCNG,
	IF (CNGCTL.EQ.3) GO TO BADCNG	; INCOMING CODE TO DISPLAY ERROR MESSAGE
	IF (CNGCTL.NE.2.AND.CNGCTL.NE.4) GO TO WHTNUM
	XCALL OUTPT (24,1,1,'ANY CHANGE ?',1)
	TYPE = 'YN'
	IF (CNGCTL.EQ.4) TYPE = 'YE'
	XCALL INPUT (24,15,1,0,TYPE,ALPHA,INXCTL,1)	; ASKS FOR YES/NO ANSWER
	GO TO (NONUM),INXCTL		; BRANCH IF INXCTL = 1 ("Y")
NOCNG,
	XCALL OUTPT (24,1,1,'\',1)
	CNGCTL =			; RETURN CODE FOR NO CHANGE
	IF (ALPHA.EQ.'  '.AND.INXCTL.EQ.2) CNGCTL = -1
					; BACKSPACE WAS ENTERED TO END
	RETURN
WHTNUM,
	TYPE = 'A '
	IF (CNGCTL.EQ.6) TYPE = 'AE'
	CNGCTL = 1			; SET FOR CHANGE MODE
	XCALL OUTPT (24,1,1,'FIELD # TO CHANGE',1)
	XCALL OUTPT (24,31,0,F_DESC,1)

	clear f_key
	XCALL INPTK (24,20,2,0,TYPE,ALPHA,INXCTL,1,F_KEY)	; GET # OF FIELD
;;;	XCALL INPUT (24,20,2,0,TYPE,ALPHA,INXCTL,1)	; GET # OF FIELD

	GO TO (WHTNUM), INXCTL
	IF (ALPHA.EQ.'  '.OR.INXCTL.EQ.2) GO TO NOCNG
	ON ERROR BADCNG
	DIGITS = ALPHA
	OFF ERROR
	WHATNO = ALPHA					; TO BE CHANGED
	IF (WHATNO.EQ.0.AND.SAVCTL.NE.5) GO TO ANYCNG
	RETURN
BADCNG,
	OFF ERROR
	XCALL OUTPT (24,1,1,'INVALID SELECTION',1)
	XCALL OUTPT (24,67,0,'PRESS RETURN',1)
	CALL ACPTCR
	CNGCTL =
	GO TO ANYCNG
ACPTCR,
	XCALL FLAGS (00001000,1)
	ACCEPT (15,TCHAR)
	IF (TCHAR.NE.13) GO TO ACPTCR
	IF (SYSTEM.NE.1) ACCEPT (15,TCHAR)
	XCALL FLAGS (00001000,0)
	RETURN
NONUM,
	CNGCTL = 1			; SET FOR CHANGE MODE
	XCALL OUTPT (24,1,1,'\',1)
	RETURN
END

