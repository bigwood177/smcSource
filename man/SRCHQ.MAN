SUBROUTINE SRCHQ; (CHANEL,REDREC,KEY,STPOS,ENPOS,BSEND,BSMID,SRCCTL,
;			RCNOST,RCNOEN,ARKEYS,ARRECS,ARMAX)
;  SRCHQ / MAN 
;
;
;		::PCPYMAN.DEF::
;*****************************************************************************
;		PACKAGE SUBROUTINES - DIBOL FOR RT-11
;		
;		RELEASED: JANUARY 1, 1985
;*****************************************************************************
;
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984,
;		1985, MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;
;		THIS IS A VERSION OF THE SUBROUTINE "SERCH"
;		WHICH TRIES TO OPTIMIZE SEARCHING BY STORING KEY VALUES
;		AND RELATIVE RECORD NUMBERS IN AN EXTERNAL IN-MEMORY ARRAY.
;
	CHANEL	,D	; CHANNEL ON WHICH FILE IS TO BE READ
	REDREC	,A	; PARAMETER IN WHICH FOUND RECORD IS PASSED BACK
	KEY	,A	; KEY YOU'RE LOOKING FOR
	STPOS	,D	; STARTING POSITION OF KEY FIELD IN RECORD
	ENPOS   ,D	; ENDING POSITION OF KEY FIELD IN RECORD
	BSEND	,D	; COUNT OF SORTED RECORDS IN FILE
	BSMID	,D	; MID POINT (RECORD READ)
	SRCCTL	,D	; SPECIAL INCOMING VALUES:
			;  NOT "2" = RECORDS USE ZEROES IN THE DELETE FIELD
			;      "2" =     "    "  ]]]DEL  "  "     "     "
			; POST EXECUTION VALUES (OUT-GOING):
			;	0 = RECORD FOUND
			;	1 = RECORD NOT FOUND
	RCNOST	,D	; START POSITION OF FIELD WHERE RECORD IS
			; FLAGGED FOR DELETION.
	RCNOEN	,D	; END POSITION OF FIELD WHERE RECORD IS
			; FLAGGED FOR DELETION.
	ARKEYS	,A	; ARRAY OF KEYS THAT CORRESPOND TO "FENCED OFF" AREAS
			; OF THE FILE.
	ARRECS	,D	; ARRAY OF RELATIVE RECORD NUMBERS CORRESPONDING TO
			; EACH OF THE ABOVE KEY VALUES.
	ARMAX	,D	; THE UPPER LIMIT OF THE ARRAY (ARRAY SIZE)

		;************************************************************
		; PLEASE NOTE:
		;	"ARKEYS", "ARRECS", AND "ARMAX" ARE DEFINED
		;	WITHIN YOUR MAIN PROGRAM AND PASSED ALONG THROUGH
		;	THE XCALL TO THIS ROUTINE.  THE ARRAY SIZE SHOULD BE
		;	EQUAL TO A POWER OF TWO PLUS ONE:
		;
		;	(2 to the "n") + 1 = array size
		;	  where "n" is greater than zero
		;
		;	ARRAY SIZE SHOULD BE A MINIMUM OF "3"
		;
		;	EXAMPLE:
		;		Array size of 9 (2 to the 3rd + 1)
		;
		;		Calling program has these defined in its'
		;		Data Division:
		;
		;			ARKEYS	,9A15
		;			ARRECS	,9D5
		;			ARMAX	,D1	,9
		;
		;		and the call looks like this:
		;
		;	XCALL SRCHQ (1,ITMIDX,KEY,1,15,BSEND,BSMID,SRCCTL,
		;		     16,20,ARKEYS,ARRECS,ARMAX)
		;
		;***********************************************************


RECORD
	BSHI	,D6	; HIGH VALUE FOR SEARCH
	BSLO	,D6	; LOW VALUE FOR SEARCH
	BSMKEY	,A50	; KEY OF RECORD READ
	SUB1	,D3	; WORK INDEX #1
	SUB2	,D3	; WORK INDEX #2
	DELETD	,A6	; LITERAL VALUE OF DELETED FIELD
	ERR	,D3	; ERROR # ARGUMENT FOR XCALL ERROR
	ERL	,D5	; ERROR LINE ARGUMENT FOR XCALL ERROR
	ABORT	,D1	; RECORD LOCKED ABORT SWITCH
	RDCNTR	,D1	; NUMBER OF TRIES ON RECORD LOCKED CONDITION
	ENTRY	,A6	; WORK FIELD FOR INPUT ROUTINE
	INXCTL	,D1	; WORK FIELD FOR INPUT ROUTINE
	BLANKS	,A50	; COMPARISON FIELD FOR BLANKS TESTING
	HITPTR	,D3	; POINTER TO CURRENT HIT OF THE INTERNAL ARRAY
	FENCE	,D6	; VALUE TO SKIP
	BRACKS	,A50	,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
PROC
	DELETD = '000000'
	IF (SRCCTL.EQ.2.OR.SRCCTL.EQ.4) DELETD = ']]]DEL'
	ABORT =
	IF (SRCCTL.EQ.3.OR.SRCCTL.EQ.4) ABORT = 1
	BSMKEY =
	SRCCTL =
	RDCNTR =
	IF (ARKEYS(1).EQ.BLANKS) CALL SETARY
				;
	BSLO = 1		; INITIAL LOW BINARY SEARCH POINT
	BSHI = BSEND		;    "    HIGH   "     "      "
	HITPTR = 0
PLUS8,
	HITPTR = HITPTR + 8
	IF (HITPTR.GT.ARMAX) GOTO BACKUP
	IF (ARKEYS(HITPTR).LT.KEY(1,ENPOS-STPOS+1)) GOTO PLUS8
BACKUP,
	HITPTR = HITPTR - 8
PLUS1,
	INCR HITPTR
	IF (HITPTR.GT.ARMAX) GOTO SETBSV
	IF (ARKEYS(HITPTR).LT.KEY(1,ENPOS-STPOS+1)) GOTO PLUS1
SETBSV,
	IF (HITPTR.GT.1) BSLO = ARRECS(HITPTR-1)
	IF (HITPTR.LE.ARMAX) BSHI = ARRECS(HITPTR)
MIDPT,
	BSMID = (BSHI+BSLO+1)/2
	CALL READ
	GOTO (SEXIT), SRCCTL - 1
	IF (BSMKEY.EQ.KEY(1,ENPOS-STPOS+1)) GOTO GTFRST
	IF (BSMID.EQ.BSHI.OR.BSMID.EQ.BSLO) GOTO BSNOM
	IF (BSMKEY.GT.KEY(1,ENPOS-STPOS+1)) BSHI = BSMID
	IF (BSMKEY.LT.KEY(1,ENPOS-STPOS+1)) BSLO = BSMID
	GO TO MIDPT
BSNOM,				; START OF SEQUENTIAL SEARCH OF OVERFLOW AREA
	BSMID = BSEND
	INCR BSMID
SEQSCH,
	CALL READ
	GOTO (SEXIT,SEXIT), SRCCTL
	IF (BSMKEY.EQ.KEY(1,ENPOS-STPOS+1).AND.
&	   REDREC(RCNOST,RCNOEN).NE.DELETD) GO TO SEXIT
	INCR BSMID
	GO TO SEQSCH
GTFRST,
	BSMID = BSMID - 1
	IF (BSMID.EQ.0) GOTO FORWRD
	CALL READ
	GOTO (SEXIT), SRCCTL - 1
	IF (BSMKEY.EQ.KEY(1,ENPOS-STPOS+1)) GOTO GTFRST
FORWRD,
	INCR BSMID
	CALL READ
	GOTO (SEXIT), SRCCTL - 1
	IF (BSMKEY.NE.KEY(1,ENPOS-STPOS+1)) GOTO BSNOM
	IF (REDREC(RCNOST,RCNOEN).EQ.DELETD) GOTO FORWRD
	GOTO SEXIT
POSITN,
	IF (BSMID.EQ.BSLO.OR.BSMID.LE.1) INCR BSMID
	GOTO SEXIT
SEXIT,
	RETURN
READ,
	ONERROR RDERR
	READ (CHANEL,REDREC,BSMID)
	UNLOCK CHANEL
	IF (REDREC.EQ.']]]]]]') GO TO NOMACH
	BSMKEY = REDREC(STPOS,ENPOS)
	GO TO RDEXIT
RDERR,
	XCALL ERROR (ERR,ERL)
	IF (ERR.NE.40) GOTO BADERR
	INCR RDCNTR
	IF (RDCNTR.LT.9) GOTO SLEEP
	RDCNTR =
	IF (ABORT.EQ.0) GOTO READ
	XCALL OUTPT (24,1,1,'RECORD TEMPORARILY IN USE - WILL YOU WAIT ?',1)
	XCALL INPUT (24,46,01,01,'YN',ENTRY,INXCTL,1)
	XCALL OUTPT (24,1,1,'\',1)
	IF (ENTRY(1,1).EQ.'N') GOTO ABORT
SLEEP,
	SLEEP 2
	GO TO READ
ABORT,
	SRCCTL = 2
	GOTO RDEXIT
NOMACH,
	SRCCTL = 1
	GOTO RDEXIT
BADERR,
	CLOSE 15
	OPEN (15,I,'TT:')
	ENTRY(1,2) = ERR, 'ZX'
	XCALL OUTPT (15,1,1,'SRCHQ-F-FATAL DIBOL ERROR ',1)
	XCALL OUTPT (15,27,0,ENTRY(1,2),1)
	ENTRY(1,2) = CHANEL, 'ZX'
	XCALL OUTPT (16,1,1,'CHANNEL NUMBER ',1)
	XCALL OUTPT (16,27,0,ENTRY(1,2),1)
	ENTRY(1,6) = BSMID, 'ZZZZZX'
	XCALL OUTPT (17,1,1,'RECORD NUMBER ',1)
	XCALL OUTPT (17,27,0,ENTRY(1,2),1)
	XCALL OUTPT (18,1,1,'SEARCHING FOR ',1)
	XCALL OUTPT (18,27,0,KEY(1,ENPOS-STPOS+1),1)
	XCALL OUTPT (19,1,1,'CURRENT KEY   ',1)
	XCALL OUTPT (19,27,0,BSMKEY(1,ENPOS-STPOS+1),1)
	STOP
RDEXIT,
	RETURN
SETARY,
	ARRECS(1) = BSEND
	ARKEYS(1) = BRACKS
	FENCE = BSEND / (ARMAX+1)
	HITPTR = 0
SETNXT,
	INCR HITPTR
	IF (HITPTR.GT.ARMAX) GOTO SETEXT
	BSMID = HITPTR * FENCE
	IF (BSMID.EQ.0) GOTO SETEXT
	IF (BSMID.GT.BSEND) BSMID = BSEND
	CALL READ
	ARRECS (HITPTR) = BSMID
	ARKEYS (HITPTR) = BSMKEY
	GOTO SETNXT
SETEXT,
	RETURN
;*************************************************************************
END
