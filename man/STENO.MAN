SUBROUTINE STENO; (STRTNO,ENDNO,STNFLD,MAX,STXCTL,V)
;
;  STENO / MAN 
;
;
;		::PCPYMAN.DEF::
;*****************************************************************************
;		PACKAGE SUBROUTINES - DIBOL FOR RT-11
;		
;		RELEASED: JANUARY 1, 1985
;*****************************************************************************
;
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984,
;		1985, MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;
;	PATCHED AS PER MCBA PATCH UT6-RT		FEB 21, 1986
;
;		ROUTINE TO INPUT & EDIT STARTING AND
;		ENDING #S FOR SELECTIVE ITEM PRINT PROGRAMS
;
	STRTNO  ,A			; STARTING #
	ENDNO	,A			; ENDING # - MAXIMUM NUMBER SIZE IS 15
	STNFLD	,A			; FIELD NAME TO BE DISPLAYED UP
					; TO A MAX OF 25 CHARACTERS
	MAX	,D			; MAX SIZE OF STARTING/ENDING #S
	STXCTL	,D			; BRANCH CONTROL VARIABLE (SEE BELOW)
	V	,D			; VT50/52 CONTROL
RECORD
	DECMAL	,D15			; DECIMAL WORK FIELD
	MASK	,A15,	'XXXXXXXXXXXXXXX'	; MASK FOR EDITING NUMERIC DATA
	COL	,D2
	ROW	,D2
	ENTRY	,A16			; PARAMETERS
	INXCTL	,D1			; FOR INPUT
	BLANKS	,A15
	CNGCTL	,D1			; PARAMETERS
	WHATNO	,D1			; FOR ANYCN
	COUNT	,D2
	TEST	,A26
	LIT	,A13,	'PLEASE ENTER '
	SAVSTR	,A15
	SUB	,D2
	TYPE	,A2

				; ***** STXCTL CODES *****
				;     INCOMING:
				;	0 = ALPHANUMERIC FIELD
				;	1 = NUMERIC FIELD
				;	2 = DATE FIELD
				;	3 = ALPHA - RIGHT JUSTIFY NUMBERS
				;	    ONLY IF NUMBERS DO NOT CONTAIN
				;	    '-','+',' ' WITHIN THE STRING
				;	    (SAME LOGIC AS IN SUBROUTINE FRMAT)
				;     OUTGOING:
				;	0 = DATA OK, CONTINUE
				;	1 = END OF INPUT

PROC
	COUNT =
	TEST = STNFLD
LOOP,
	INCR COUNT
	IF (COUNT.GT.25) GO TO ENDLP
	IF (TEST(COUNT,COUNT+1).NE.BLANKS) GO TO LOOP
ENDLP,
	INXCTL =
	ROW = 12
	COL = 43 + COUNT
	XCALL OUTPT(12,1,2,'\',1)
	XCALL OUTPT(12,20,0,LIT,1)
	DISPLAY (15,'STARTING ',STNFLD)
	XCALL OUTPT(14,20,0,LIT,1)
	DISPLAY (15,'ENDING ',STNFLD)
	TYPE = 'AE'
	IF (STXCTL.EQ.2) TYPE = 'DE'
	IF (STXCTL.EQ.1) TYPE = '#E'
	XCALL INPUT (12,COL,MAX,0,TYPE,ENTRY,INXCTL,1)	; INPUT DATA
	GO TO (ENDLP,END), INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO ALL
	IF (STXCTL.EQ.3) CALL JSTIFY
	STRTNO = ENTRY (1,MAX)
	SAVSTR = ENTRY (1,MAX)
	GO TO (ENDNUM,NUM1,ENDNUM,ENDNUM), STXCTL + 1
NUM1,
	DECMAL = ENTRY (1,MAX)
	STRTNO (1,MAX) = DECMAL, MASK
ENDNUM,
	ROW = 14
	TYPE = 'A '
	IF (STXCTL.EQ.1) TYPE = '# '
	IF (STXCTL.EQ.2) TYPE = 'D '
	XCALL INPUT (14,COL,MAX,0,TYPE,ENTRY,INXCTL,1)
	GO TO (ENDLP), INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO ONLY1	; ONLY START # INPUT
	IF (STXCTL.EQ.3) CALL JSTIFY
	ENDNO = ENTRY (1,MAX)
	GO TO (ISITOK,NUM2,ISITOK,ISITOK), STXCTL + 1
NUM2,
	DECMAL = ENTRY(1,MAX)
	ENDNO(1,MAX) = DECMAL,MASK
;------ UT6-RT --------------------------------------------------------------
	GOTO ISITOK

;	IF (ENDNO(1,MAX) .GE. STRTNO(1,MAX)) GO TO ISITOK
;	XCALL MESAG ('ENDING VALUE MUST NOT BE LESS THAN STARTING VALUE',1)
;	GO TO ENDLP
;---------------------------------------------------------------------------

ALL,
	XCALL OUTPT(12,COL,1,'ALL',1)
	STRTNO =			; IF "ALL" TYPED, SET STRTNO TO BLANKS
	ENDNO = '[[['			; & ENDNO TO LEFT BRACKETS
	GO TO ISITOK
ONLY1,
	ENDNO = STRTNO		; IF NO ENDNO TYPED IN, SET IT = TO STRTNO
	IF (STXCTL.EQ.2) GO TO ONEDAT
	XCALL OUTPT (14,COL,0,SAVSTR(1,MAX),1)
	GO TO ISITOK
ONEDAT,
	DECMAL (1,MAX) = SAVSTR (1,MAX)
	SAVSTR (1,MAX+2) = DECMAL (1,MAX), 'XX/XX/XX'
	XCALL OUTPT (14,COL,0,SAVSTR(1,MAX+2),1)

ISITOK,
;------ UT6-RT ---------------------------------------------------------------
	IF (ENDNO(1,MAX).LT.STRTNO(1,MAX))
	   BEGIN
	 	XCALL MESAG
&		('INPUT ERROR - STARTING VALUE MUST BE LESS THAN ENDING VALUE',1)
		GOTO ENDLP
	   END
;-----------------------------------------------------------------------------
	CNGCTL = 2
	XCALL ANYCN (CNGCTL,WHATNO)	; CHECK IF ANY CHANGES
	GO TO (ENDLP), CNGCTL		; CNGCTL = 1 MEANS THERE IS A CHANGE
	STXCTL =
	RETURN
END,
	STXCTL = 1				; NO MORE INPUT
	RETURN
JSTIFY,
	SUB = MAX + 1
LOOP1,
	SUB = SUB - 1
	IF (ENTRY(SUB,SUB).NE.' ') GO TO LOOP2	;SCAN OFF LEADING SPACES
						;BEFORE INITIATING CHECK FOR
						;NON-NUMERIC '-','+',' '
	IF (SUB.EQ.1) GO TO ALPHA
	GO TO LOOP1
LOOP2,
	IF (ENTRY(SUB,SUB).EQ.'-' .OR.
&		ENTRY(SUB,SUB).EQ.'+' .OR.
&		ENTRY(SUB,SUB).EQ.' ') GO TO ALPHA
						;CHECK FOR '-','+',' '
						;THESE ARE (HERE) NON-NUMERIC
	SUB = SUB - 1
	IF (SUB.EQ.0) GO TO DECCHK
	GO TO LOOP2
DECCHK,
	ON ERROR ALPHA
	DECMAL = ENTRY (1,MAX)
	ENTRY (1,MAX) = DECMAL (16-MAX,15)	;SUBSCRIPT TO REMOVE LEADING 0'S
ALPHA,
	OFF ERROR
	XCALL OUTPT (ROW,COL,1,ENTRY(1,MAX),1)
	RETURN
END
