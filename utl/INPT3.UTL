SUBROUTINE INPT3 ; (ROW,COL,MAX,MIN,INTYPE,ENTRY,INXCTL)
;
;  INPT3 / UTL 
;
;
;		::PCPYUTL.DEF::
;*****************************************************************************
;		SECURITY SYSTEM UTILITIES AND SUBROUTINES 
;		DIBOL FOR RT-11
;		
;		RELEASED: JANUARY 1, 1985
;*****************************************************************************
;
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984,
;		1985, MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;
;		AN ABBREVIATED VERSION OF THE
;		STANDARD "INPUT" SUBROUTINE
;
;		SPECIAL INPUT ROUTINE TURNS OFF CHARACTER ECHO
;		TO THE TERMINAL AND DISPLAYS AN '*' FOR EACH CHARACTER
;		ENTERED.
;
	ROW	,D	; SCREEN ROW
	COL	,D	; SCREEN COLUMN
	MAX	,D	; MAXIMUM # OF CHARACTERS ALLOWED (15 IS MAX)
	MIN	,D	; MINIMUM # OF CHARACTERS ALLOWED
	INTYPE	,A	; TYPE OF DATA INPUT (SEE BELOW)
	ENTRY	,A	; FIELD DATA IS PASSED BACK IN
	INXCTL	,D	; CONTROLS POST EXECUTION BRANCH
COMMON
	SYSTM	,D1
	CTRLC	,D1
RECORD MESAG
	MESSGE	,A32
		,A35
		,A12,	'PRESS RETURN'
RECORD
	ALPHA	,A8
	BLANKS	,A15
	CHAR	,D2			; WORK
	DOTS	,A15,'...............'
	DECMAL	,D15			; FIELDS
	TCHAR	,D3
	DCHAR	,D3
	TYPE	,A2

			; ***** TYPE CODES *****
			;	"A " = ALPHANUMERIC
			;	"# " = NUMERIC, POSITIVE ONLY
			;	"?E" = WHEN "E" IS 2ND CHARACTER OF ANY TYPE,
			;	       THAT FIELD WILL TAKE "END"
			; ***** INXCTL RETURN CODES *****
			;	0 = INPUT OK, NO MESSAGE
			;	2 = "END" HAS BEEN TYPED IF "?E" TYPE FIELD
			;
PROC
	TYPE = INTYPE	; REASSIGN TO VARIABLE SO A LITERAL CAN BE PASSED IN
CLRLIN,
	XCALL OUTPT (ROW,COL,0,DOTS(1,MAX))
	XCALL OUTPT (0,0,0,' ')
	XCALL OUTPT (ROW,COL,0,'\')
	ENTRY =
	INXCTL =
	CHAR =
	IF (SYSTM.EQ.1) DISPLAY (15,29,'F')	;TURN OFF CHARACTER ECHO
INPUT1,
	INCR CHAR
INPUT2,
	IF (SYSTM.EQ.1) DISPLAY (15,29,'Q',1)	;SET ACTIVATION ON EACH CHAR.
	ACCEPT (15,TCHAR)		; INPUT 1 DECIMAL CHARACTER AT A TIME
	IF (TCHAR.EQ.127) GO TO DELETE	; DELETE KEY
	IF (TCHAR.EQ.21) GO TO CLRLIN	; CTRL/U - ERASE LINE
	IF (TCHAR.EQ.13) GO TO ENDFLD	; CARRIAGE RETURN
	IF (TCHAR.EQ.8) GO TO ENDNOW	; BACKSPACE = 'END'
	IF (TCHAR.EQ.27) GO TO ESCAPE	; MAP PC KEYS
	IF (TCHAR.LT.32.OR.TCHAR.GT.122) GO TO INPUT2	; IGNORES INVALID CHARS.
	XCALL ASCII (TCHAR,ENTRY(CHAR,CHAR))	;CONVERTS CHARACTER TO ASCII
	IF (CHAR.GT.MAX) GO TO TOOLNG
	DISPLAY (15,'*')
	GO TO INPUT1
ESCAPE,
	XCALL FLAGS (10000,1)
	XCALL TTSTS (TCHAR)
	IF (TCHAR.EQ.0) 
	BEGIN
	  TCHAR = 8
	  DCHAR = 53
	  GOTO E
	END
	IF (TCHAR) ACCEPT (15,TCHAR)
	IF (TCHAR.EQ.27) GOTO ESCAPE
	IF (TCHAR.NE.91) GOTO PURBUF
	XCALL TTSTS (TCHAR)
	IF (TCHAR) ACCEPT (15,DCHAR)
	IF (DCHAR.GT.54.OR.DCHAR.LT.52) GOTO PURBUF
	XCALL TTSTS (TCHAR)
	IF (TCHAR) ACCEPT (15,TCHAR)
	IF (TCHAR.EQ.126) 
	BEGIN
	  IF (DCHAR.EQ.54) TCHAR = 9
	  IF (DCHAR.EQ.53) TCHAR = 8
	  IF (DCHAR.EQ.52) TCHAR = 127
E,
	  XCALL FLAGS (10000,0)
	  GOTO (DELETE,ENDFLD,PURBUF), DCHAR-51
	END
PURBUF,
	XCALL TTSTS (TCHAR)
	IF (TCHAR) ACCEPT (15,TCHAR)
	IF (TCHAR) GOTO PURBUF
	XCALL FLAGS (10000,0)
	GOTO INPUT1
DELETE,					; ERASES 1 CHARACTER ON SCREEN & IN CORE
	IF (CHAR.EQ.1) GO TO INPUT2
	CHAR = CHAR-1
	ENTRY (CHAR,CHAR) =
	XCALL OUTPT (0,0,-1,'DELETE')
	GO TO INPUT2
ENDNOW,					; SETS INXCTL FOR ENDING
	IF (TYPE(2,2).NE.'E') GO TO INPUT2
	XCALL OUTPT (ROW,COL,0,'END')
	IF (MAX.GE.4) XCALL OUTPT (0,0,0,BLANKS(4,MAX))
	INXCTL = 2
	GO TO RETRN
ENDFLD,					; BRANCH FOR EDITING AFTER CR
	IF (SYSTM.NE.1) ACCEPT (15,TCHAR)
	IF (CHAR-1.LT.MIN) GO TO TOSHRT	; TEST FOR TOO SHORT
	IF (TYPE(1,1).EQ.'#') GO TO TSTNUM
	GO TO RETRN
;*********************ERROR MESSAGES**********************************
TOOLNG,					; ENTRY TOO LONG
	MESSGE = '?UT-TOO MANY CHARACTERS ENTERED'
	GO TO MESSAG
TOSHRT,
	MESSGE = '?UT-ENTRY TOO SHORT'
	GO TO MESSAG
NOTNUM,
	MESSGE = '?UT-MUST BE NUMERIC'
	GO TO MESSAG
NOTPOS,
	MESSGE = '?UT-NEGATIVE NOT ALLOWED'
	GO TO MESSAG
MESSAG,
	XCALL OUTPT (24,1,4,MESAG)
	DISPLAY (15,7)
ACCRLF,
	ACCEPT (15,TCHAR)
	IF (TCHAR.NE.13) GO TO ACCRLF
	IF (SYSTM.NE.1) ACCEPT (15,TCHAR)
	XCALL OUTPT (24,1,1,'\')
	GO TO CLRLIN
;***********************************************************
TSTNUM,					; NUMERIC EDITING
	ON ERROR NOTNUM
	DECMAL = ENTRY(1,MAX)
	IF (DECMAL.LT.0) GO TO NOTPOS
	GO TO RETRN
RETRN,
	IF (SYSTM.EQ.1) DISPLAY (15,29,'E')
	RETURN
END
