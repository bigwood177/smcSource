SUBROUTINE TERID
;
;  TERID / UTL 
;
;
;
;		SUBROUTINE TO SET UP COMMON DATA AREAS, DETERMINE TERMINAL
;		TYPES AND OPEN DEVICE.DDF
;		****CHANNELS OPENED AND LEFT OPEN:****
;		15 - "TT:"
;		14 - UT:DEVICE.DDF IN UPDATE MODE
;
RECORD ERRA
	ERR	,D3
RECORD MESARA
		.INCLUDE 'DEF:MES001.DEF'
RECORD,X
		.INCLUDE 'DEF:MES002.DEF'
RECORD SECURE,X
		.INCLUDE 'DEF:SEC002.DEF'
RECORD,X
		.INCLUDE 'DEF:SEC003.DEF'
COMMON
		.INCLUDE 'DEF:COM001.DEF'
RECORD
	DSPTRM	,A3
	FILE	,A13
	LINE	,D3
	SYSTEM	,D1
	TERMNO	,D2
	SYTTNO	,D3
	MCTTNO	,D2
	TTNOSW	,D1
PROC
	CLOSE 15
	OPEN (15,I,'TT:')
;;;	XCALL ENVRN (SYSTEM)
	system = 0
	SYSTM = SYSTEM
	IF (SYSTM.GE.1) SYSTM = 1	;MAINTAIN TSX,TSX+=1
	XCALL TTNO (SYTTNO,MCTTNO,TTNOSW)
	TERMNO = MCTTNO
	TNMBR = TERMNO + 1		;TNMBR will be 1 less than record
					;number in MESARA. Maintains compat-
					;ibility with earlier methods. It will
					;be incremented by 1 before reading 
					;MESARA in calling programs
	ON ERROR BADOPN
	CLOSE 14
	FILE = 'UT:MESARA.DDF'
	OPEN (14,I,FILE)
	READ (14,MESARA,1)
	IF (MAXTER.LT.TNMBR+1) GO TO BADMFL	;TERMINAL NUMBER TOO LARGE
	READ (14,MESARA,TNMBR+1)
	CTRLC = CNTRLC
	TERID = TERMID
	DEVLP = DEVLOP

	IF (CNPOS.EQ.-2) GO TO NOTLOG
	IF (SECREC.LE.0 .AND. CNPOS.LT.0) GO TO CHKORG
			;IN UTILITY PROGRAMS ONLY, CNPOS = -1. 
			;THIS ALLOWS A CHECK TO SEE
			;IF LOGON IS NEEDED. IF NEEDED, CNPOS REMAINS -1 ON
			;RETURN. IF NOT, CNPOS IS SET TO CMPPOS FROM MESARA.
			;UTILITY PROGRAMS (SECMNT, ORGSEC, SRTSEC, ETC) DO NOT
			;REQUIRE THE USER TO BE LOGGED ON SO THIS ALLOWS 
			;BYPASS OF THIS REQUIREMENT
			; CNPOS = -2 ALLOWS ONLY THOSE UTILITIES WHICH
			; REORGANIZE SECURITY TO RUN WHEN THE REORG FLAG
			; IN SECURE IS SET (VALID PROGRAMS ARE ORGSEC, SRTSEC
			; CLRSEC)

	IF (SECREC.LE.0) GO TO LOGERR
	CMNME = CMPCOD
	CNPOS = CMPPOS
CHKORG,
	CLOSE 14
	FILE = 'UT:SECURE.DDF'
	OPEN (14,I,FILE)
	ON ERROR BADLOG
	READ (14,SECURE,1)
	IF (ORGFLG) GO TO PROT
	IF (SECREC.LE.0 .AND. CNPOS.LT.0) GO TO NOTLOG
	READ (14,SECURE,SECREC)
	ACCES (1,200) = WACCES
NOTLOG,
	CLOSE 14
	FILE = 'UT:DEVICE.DDF'
	ON ERROR BADOPN
	OPEN (14,U,FILE)		;OPEN DEVICE for use in calling prgs.
	XCALL FLAGS (00000000)
	IF (SYSTM.NE.1) XCALL FLAGS (00010000,1);SUPPRESS CHARACTER ECHO
	IF (CTRLC) XCALL FLAGS (10000000,1)	;CONTROL/C TRAP ENABLED
	IF (SYSTM.EQ.1) DISPLAY (15,29,'B',29,'D',8,29,'D',9,29,'D',10,
&		29,'D',13,29,'D',21,29,'D',23,29,'D',127,29,'K')

				; 29 = TSX LEAD-IN CHARACTER
				; 'B' = ENABLE ESCAPE LETTER ACTIVATION
				; 'K' = ENABLE DEFERRED CHARACTER ECHO
				; 'D' = DEFINE ACTIVATION CHARACTER
				; 8 = BACKSPACE ('END' KEY)
				; 9 = TAB KEY
				; 10 = LINE-FEED
				; 13 = CARRIAGE RETURN
				; 21 = CTRL/U
				; 23 = CTRL/W
				; 27 = ESCAPE ($)
				; 127 = DELETE

	OFF ERROR
;;;	xcall cid(cmpcod)	;ssq 12-31-03
	RETURN
BADOPN,
	XCALL ERROR (ERR,LINE)
	IF (ERR.NE.18) GO TO BADERR
	DISPLAY (15,13,10,
&	'?UT-FATAL ERROR - FILE ',FILE,' NOT FOUND',7)
	STOP
BADERR,
	DISPLAY (15,13,10,
&	'?UT-FATAL DIBOL ERROR # ',ERRA,' ON FILE ',FILE,7)
	STOP
BADMFL,
	DSPTRM = TNMBR
	DISPLAY (15,13,10,
&	'?UT-FATAL ERROR - FILE UT:MESARA.DDF NOT GENERATED LARGE ENOUGH',
&	13,10,'TO SUPPORT THIS TERMINAL NUMBER (',DSPTRM,').',7,7)
	STOP
PROT,
	DISPLAY (15,13,10,
&	'?UT-SECURITY FILE PROTECTED DURING REORGANIZATION - EXITING',7,13,10)
	STOP
BADLOG,
	XCALL ERROR (ERR,LINE)
	IF (ERR.NE.28) GO TO BADERR
LOGERR,
	DISPLAY (15,13,10,
&	'?UT-TERMINAL NOT LOGGED INTO SECURITY SYSTEM - RUN UT:MSMENU',7)
	STOP
END
