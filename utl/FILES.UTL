SUBROUTINE FILES ; (CHANEL,MODE,FILNUM,SWITCH)
;
;  FILES / UTL 
;
;
;
;		SUBROUTINE TO OPEN AND CLOSE FILES AND
;		PROVIDE FILE PROTECTION (FOR ALL SYSTEMS)
;
;
	CHANEL	,D		;CHANNEL ON WHICH TO OPEN OR CLOSE FILE
	MODE	,A		;'I' = INPUT, 'O' = OUTPUT, 'U' = UPDATE
				; 'SI'=ISAM INPUT, AND  'SU' = ISAM UPDATE
	FILNUM	,D		;RECORD NUMBER ON DEVICE FILE
	SWITCH	,D		;INCOMING CODES:
				;***************SIGNED CODES***********
				;	+ VALUES INDICATE CHECK FOR USER ACCESS
				;		BEFORE PERFORMING OPERATION
				;		(EXCEPT CLOSE/DELETE OPERATIONS)
				;	- VALUES INDICATE DO NOT CHECK FOR
				;		ACCESS PRIVILEGE BEFORE
				;		PERFORMING OPERATION (EXCEPT
				;		WHEN THERE IS NO ACCESS
				;****************************************
				;	(-)1 - OPEN AND INCREMENT USER COUNT
				;	(-)2 - OPEN AND PROTECT - NO MESSAGE IF
				;		IN USE
				;	(-)3 - PROTECT W/O OPENING
				;	   4 - CLOSE AND UNPROTECT/DECREMENT
				;	(-)5 - OPEN W/O CHANGING STATUS
				;	(-)6 - INCREMENT USER COUNT W/O OPENING
				;		FILE
				;	   7 - CLOSE, DECREMENT/UNPROTECT, AND
				;		DELETE
				;	(-)8 - OPEN AND PROTECT - DISPLAY
				;		MESSAGE IF IN USE
				;OUTGOING CODES:
				;	0 - ACTION SUCCESSFUL
				;	9 - ACTION UNSUCCESSFUL -
				;	    FILE IN USE, UNAVAILABLE
				;	    OR ERROR OCCURRED
COMMON
			.INCLUDE 'DEF:COM001.DEF'
RECORD DEVICE
			.INCLUDE 'DEF:DEV001.DEF'
RECORD REDFIL
	REDDEV	,A3
		,A1	,':'
	RDFILE	,A6
		,A1	,'.'
	REDEXT	,A3
RECORD UNAV
		,A12,	' UNAVAILABLE'
		,A40
		,A12,	'PRESS RETURN'
RECORD
	ANSWER	,D3
	BLANKS	,A3
	CNT1	,D2
	CNT2	,D2
	ERR	,D3
	ERRA	,A3
	INUS	,A29,	' IN USE - WILL YOU WAIT ?  . '
	LINE	,D5
	LOCKED	,D1
	MESGE	,A78
	PROT	,A32,	' PROTECTED - WILL YOU WAIT ?  . '
	SAVSWT	,D1
	SAVFIL	,A14
PROC
BEGIN,
	ON ERROR REDERR
	SAVSWT = SWITCH
REDDEV,
	READ (14,DEVICE,FILNUM)
	OFF ERROR
	IF (LOCKED) XCALL OUTPT (24,1,1,'\')
	LOCKED =
FINDCO,
	IF (DEVNAM(CNPOS).EQ.BLANKS) GO TO UNAVBL
	IF (ACCES(FILNUM).EQ.' ') GO TO UNAVBL	;NO ACCESS PRIVILEGE FOR FILE
	IF (SAVSWT.LT.0) GO TO ACESOK		;NEGATIVE VALUES-DO NOT CHECK
						;FOR ACCESS PRIVILEGE
	IF (SAVSWT.EQ.4 .OR. SAVSWT.EQ.7) GO TO ACESOK
	IF (ACCES(FILNUM).EQ.'I' .AND.
&		(MODE.EQ.'U'.OR.MODE.EQ.'O'.OR.MODE.EQ.'SU')) GO TO UNAVBL
ACESOK,
	IF (SAVSWT.LT.0) SAVSWT = -SAVSWT
	GO TO (OPENIT,PROTEC,PROTEC,CLOSE,EXIT,OPENIT,CLOSE,PROTEC), SAVSWT
OPENIT,
	IF (STATUS(CNPOS).GE.98) GO TO INUSE
	INCR STATUS (CNPOS)
	GO TO EXIT
PROTEC,
	IF (STATUS(CNPOS).GT.0) GO TO INUSE
	STATUS(CNPOS) = 99
	GO TO EXIT
CLOSE,
	IF (STATUS(CNPOS).LT.99 .AND. STATUS(CNPOS).GT.0)
&		STATUS(CNPOS) = STATUS(CNPOS) - 1
	IF (STATUS(CNPOS).EQ.99) STATUS(CNPOS) = 0
	CLOSE CHANEL
EXIT,
	IF (SAVSWT.EQ.3 .OR. SAVSWT.EQ.4 .OR. SAVSWT.EQ.6) GO TO WRTDEV
	REDDEV = DEVNAM (CNPOS)
	RDFILE = FILNAM
	REDEXT = CMNME
	if (mode(1,1) .eq. 'S') redext(3,3) = 'M'	;ssq 12-31-03
	CALL SQUEZ		;SQUEEZE OUT SPACES FROM FILE SPEC. (DEVICE)
	ON ERROR NOTFND
	IF (SAVSWT.EQ.7) GO TO DELETE
	IF (MODE.EQ.'O') OPEN (CHANEL,O,SAVFIL)
	IF (MODE.EQ.'U') OPEN (CHANEL,U,SAVFIL)
	IF (MODE.EQ.'I') OPEN (CHANEL,I,SAVFIL)
	IF (MODE.EQ.'SU') OPEN (CHANEL,SU,SAVFIL)
	IF (MODE.EQ.'SI') OPEN (CHANEL,SI,SAVFIL)
WRTDEV,
	WRITE (14,DEVICE,FILNUM)
	OFF ERROR
RETURN,
	RETURN
DELETE,
	XCALL DELET (CHANEL,SAVFIL)
	GO TO WRTDEV
SQUEZ,
	CNT1 =
	CNT2 =
	SAVFIL =
SQZLUP,
	IF (CNT1.GE.14) RETURN
	INCR CNT1
	IF (REDFIL(CNT1,CNT1).EQ.BLANKS) GO TO SQZLUP
	INCR CNT2
	SAVFIL (CNT2,CNT2) = REDFIL (CNT1,CNT1)
	GO TO SQZLUP
INUSE,
	UNLOCK 14
	IF (SAVSWT.EQ.2) GO TO EREXIT		;DON'T DISPLAY PROTECT MESSAGE
						;IN THIS CASE BUT ALLOW IT TO
						;BE HANDLED BY MAIN PROGRAM
	XCALL OUTPT (24,1,2,'\')
	CALL ACPTON
	IF (STATUS(CNPOS).EQ.99) GO TO PROTMS
        XCALL OUTPT (24,1,4,'?UT-FILE ')
	XCALL OUTPT (0,0,4,FILNAM)
	XCALL OUTPT (0,0,4,INUS)
	DISPLAY (15,8,8,7)
	GO TO YESNO
PROTMS,
	XCALL OUTPT (24,1,4,'?UT-FILE ')
        XCALL OUTPT (0,0,4,FILNAM)
	XCALL OUTPT (0,0,4,PROT)
	DISPLAY (15,8,8,7)
YESNO,
	ACCEPT (15,ANSWER)
	IF (ANSWER.EQ.89) GO TO TRYAGN		;'Y' = 089  IN ASCII
	IF (ANSWER.EQ.78) XCALL OUTPT (0,0,4,'N')
	IF (ANSWER.EQ.78) GO TO ACCEPT		;'N' = 078  IN ASCII
	GO TO INUSE
TRYAGN,
	XCALL OUTPT (0,0,4,'Y')
	CALL ACPTCR
	XCALL OUTPT (24,1,1,'PLEASE WAIT ...')
	CALL ACPOFF
	SLEEP 15
	GO TO BEGIN
ACPTON,				;SUPPRESS CHARACTER ECHO AND ENABLE SINGLE
				;CHARACTER ACTIVATION
	IF (SYSTM.EQ.1) DISPLAY (15,29,'F',29,'S')
	RETURN
ACPOFF,
	XCALL OUTPT (24,1,0,'\')
	IF (SYSTM.EQ.1) DISPLAY (15,29,'T',29,'E')
	RETURN
ACCEPT,
	CALL ACPTCR
	CALL ACPOFF
	XCALL OUTPT (24,1,1,'\')
EREXIT,
	SWITCH = 9
	GO TO RETURN
ACPTCR,
	ACCEPT (15,ANSWER)
	IF (ANSWER.NE.13) GO TO ACPTCR
	IF (SYSTM.NE.1) ACCEPT (15,ANSWER)
	RETURN
UNAVBL,
	CALL ACPTON
	UNLOCK 14
	XCALL OUTPT (24,1,4,'?UT-FILE ')
        XCALL OUTPT (0,0,4,FILNAM)
	XCALL OUTPT (0,0,4,UNAV)
	DISPLAY (15,7)
	GO TO ACCEPT
REDERR,
	XCALL ERROR (ERR,LINE)
	IF (ERR.EQ.40) GO TO LOCKED
	CALL ACPTON
	ERRA = ERR
	MESGE = '?UT-FATAL
& READ ERROR #     ON UT:DEVICE.DDF RECORD #              PRESS RETURN'
	MESGE (24,26) = ERRA
	MESGE (54,56) = FILNUM
	XCALL OUTPT (24,1,4,MESGE)
	DISPLAY (15,7)
	GO TO ACCEPT
LOCKED,
	XCALL OUTPT (24,1,4,'?UT-DEVICE.DDF RECORD LOCKED - PLEASE WAIT')
	SLEEP 2
	GO TO REDDEV
NOTFND,
	UNLOCK 14
	XCALL ERROR (ERR,LINE)
	CALL ACPTON
	ERRA = ERR
	MESGE = '?UT-FATAL
& ERROR #     ON FILE                (FILE NOT FOUND)     PRESS RETURN'
	MESGE (19,21) = ERRA
	MESGE (31,44) = SAVFIL
	XCALL OUTPT (24,1,4,MESGE)
	DISPLAY (15,7)
	GO TO ACCEPT
END
