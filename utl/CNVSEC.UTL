;  CNVSEC / UTL 
;
;
;		::PCPYUTL.DEF::
;*****************************************************************************
;		SECURITY SYSTEM UTILITIES AND SUBROUTINES 
;		DIBOL FOR RT-11
;		
;		RELEASED: JANUARY 1, 1985
;*****************************************************************************
;
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984,
;		1985, MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;
;		PROGRAM TO TRANSFER SECURE.DDF FROM 6.1 TO 7.0 FORMAT
;		THIS INCLUDES ENCODING PASSWORDS AND ADDING A NEW RECORD #2
;		WHICH CONTAINS THE PACKAGE CODES.
;		ALSO CONVERTS THE 6.1 DEVICE.DDF TO 7.0 FORMAT 
RECORD
	,A64,'THIS MATERIAL CONTAINS THE VALUABLE PROPERTIES AND TRADE SECRETS'
	,A62,'OF MCBA, EMBODYING CONFIDENTIAL INFORMATION AND IDEAS, NO PART'
	,A56,'OF WHICH MAY BE USED AND/OR DISCLOSED WITHOUT MCBAs DULY'
	,A55,'AUTHORIZED LICENSE AGREEMENT AND/OR WRITTEN PERMISSION.'
	,A61,'COPYRIGHT (C) MCBA, AN UNPUBLISHED WORK. ALL RIGHTS RESERVED.'
;
RECORD SPWORD
	WPWORD	,9A1
;
RECORD SECURE
		.INCLUDE 'DEF:SEC001.DEF'
;
RECORD,X
		.INCLUDE 'DEF:SEC002.DEF'
;
RECORD,X
		.INCLUDE 'DEF:SEC003.DEF'
;
RECORD,X
		.INCLUDE 'DEF:SEC004.DEF'
;
RECORD,X
		.INCLUDE 'DEF:SEC005.DEF'
;
RECORD DEVFIL
		.INCLUDE 'DEF:DEV003.DEF'
;
RECORD DEVICE
	FLNAM	,A6
	DEVIC	,A24
		,A72
;
RECORD PAKCOD				;PACKAGE CODES FOR DISTRIBUTED DEVICE
		,A50,	'AAAAAAAAAAFFFFFFFFFFGGGGGGGGGGBBBBBBBB CCCCEEEEEEA'
		,A50,	'EECAECEEEE QQQQQLAEBHHH  HHF  HHHHHJFEGGDDD FOAGPP'
		,A50,	'IIIOOIIIIIIIIIIIGGGGLLLLLLFOOCCKKKOMM   MMMMMMMMMJ'
		,A50,	'NNNNNJJJJJJJJJJ JJAAEEA                           '
;
RECORD
		,A30,	' !"#$%&''()*+,-./0123456789:;<='
		,A35,	'>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`'
;
RECORD,X
	DECODE	,65A1
;
RECORD
		,A30,	'VHA. WIB/!XJC0"YKD1#ZLE2$[MF3%'
		,A35,	'\NG4&]O5''^P6(_Q7)`R8*S9+T:,U;-<=>?@'
;
RECORD,X
	CODE	,65A1
;
RECORD
	BLANKS	,A9
	BRACKS	,A12,	']]]]]]]]]]]]'
	DECMAL	,D3
	DELETE	,A6,	']]]DEL'
	FILCNT	,D5
	LBRACK	,A12,	'[[[[[[[[[[[['	;SORTS DELETED (BRACKET) RECORDS
					;TO BOTTOM OF THE RECORD COUNT
	RECCNT	,D5
	DELCNT	,D3
	SUB	,D3
	ANS	,A1
	ANS1	,A1
	DSPERR	,A3
	ERR	,D3
	LINE	,D3
	SIZE	,D3
;
;
PROC
	OPEN (15,U,'TT:')
	DISPLAY (15,27,'[',1,';',1,'H')
	DISPLAY (15,27,'[0J')
	DISPLAY (15,27,72)
	DISPLAY (15,27,74)
	DISPLAY (15,27,66)
	DISPLAY (15,27,66)
	DISPLAY (15,13,10,10,'THIS PROGRAM CONVERTS SECURE.DDF'
&	' AND DEVICE.DDF FROM REL 6.1/1.1 TO REL 7.0')
	DISPLAY (15,13,10,10,'ARE YOU SURE YOU WISH TO CONTINUE <N> ')
	READS (15,ANS)
	IF (ANS.NE.'Y') GOTO END
	DISPLAY (15,13,10,10,'  ',
&	13,10,'After running this program you must manually add the new ',
&	13,10,'files to DEVICE.DDF.See conversion proc in yur user manual')
	DISPLAY (15,13,10,10,'  ',
&	13,10,'Please ensure that all users have logged off'
&	' before running this program.')
	DISPLAY (15,13,10,10,'     ')
	DISPLAY (15,13,10,10,'HAVE YOU BACKED UP YOUR FILES <N> ')
	READS (15,ANS1)
	IF (ANS1.NE.'Y') GOTO END
	DISPLAY (15,13,10,10,'PROCESSING SECURE.DDF...PLEASE WAIT')
	ON ERROR NOSEC
	OPEN (2,U,'UT:SECURE.DDF')
	ON ERROR BADSEC
	READ (2,SECURE,2)
	IF (PASWRD.EQ.BLANKS) GO TO CNVDUN
	READ (2,SECURE,1)
	INCR RECSEC
	RECCNT = RECSEC
	DELCNT =
	READ (2,SECURE,2)
	WRITE (2,SECURE,RECCNT)
	SECURE =
	WACCES = PAKCOD
	PSWCPY (12,12) = '!'	;MAKES SURE IT IS SORTED AFTER CONTROL RECORD
	WRITE (2,SECURE,2)
	FILCNT = 2
PROCES,
	IF (FILCNT.GE.RECCNT) GO TO DONE
	INCR FILCNT
	READ (2,SECURE,FILCNT)
	IF (PASWRD.EQ.BRACKS) GO TO DELREC     ;PASSWORD DELETED WITH BRACKETS
	CALL CODE
	PASWRD = SPWORD
WRTSEC,
	WRITE (2,SECURE,FILCNT)
	GO TO PROCES
DELREC,
	SECURE =
	DFLSEC = DELETE			;SET DELETE RECORD TO ']]]DEL'
					;SO SORT AND SEARCH WILL WORK
	PSWCPY = LBRACK			;LEFT BRACKETS - SORTS DELETED
					;RECORDS TO BOTTOM OF FILE FOR REORG
	INCR DELCNT
	GO TO WRTSEC
;
OPNDEV,					; CONVERT SECURE.DDF
	OFF ERROR
	DISPLAY (15,13,10,10,'PROCESSING DEVICE.DDF ... PLEASE WAIT')
	ON ERROR NODEVC
	OPEN (3,I,'UT:DEVICE.DDF')
	ON ERROR ALREDY
	READ (3,DEVICE,1)
	XCALL RSTAT (SIZE,ANS)
	IF (SIZE.NE.102) GOTO ALREDY
	ON ERROR ERROR
	OPEN (4,O,'UT:DEVICE.NEW')
	SUB = 0
CNVDEV,
	IF (SUB.GE.200) GO TO RENDEV
	INCR SUB
	READ (3,DEVICE,SUB)
	FILNAM = FLNAM
	DEVNAM = DEVIC
	STATUS = 0
	WRITE (4,DEVFIL,SUB)
	GO TO CNVDEV
;
RENDEV,
	CLOSE 3
	CLOSE 4
	XCALL DELET (3,'UT:DEVICE.DDF')
	XCALL RENAM (4,'UT:DEVICE.DDF','UT:DEVICE.NEW')
	GOTO ENDDEV
;
CNVDUN,
	DISPLAY (15,13,10,10,
&	'?UT-FATAL ERROR - SECURITY FILE ALREADY CONVERTED',13,10,7)
	CLOSE 2
	GOTO OPNDEV
NOSEC,
	DISPLAY (15,13,10,10,'?UT-FATAL ERROR - UT:SECURE.DDF FILE NOT FOUND',
&	13,10,7)
	GOTO OPNDEV
BADSEC,
	XCALL ERROR (ERR,LINE)
	DSPERR = ERR
	DISPLAY (15,13,10,10,
&	'?UT-FATAL DIBOL ERROR # ',DSPERR,' ON UT:SECURE.DDF',13,10,10,7)
	GOTO OPNDEV
DONE,
	READ (2,SECURE,1)
	DELSEC = DELCNT
	RECSEC = RECCNT
	ORGSEC = 2
	WRITE (2,SECURE,1)
	CLOSE 2
	DISPLAY (15,13,10,'CONVERSION OF SECURE.DDF COMPLETE',13,10)
	GOTO OPNDEV
CODE,
	SUB =
	SPWORD = PASWRD
CODELP,
	IF (SUB.GE.9) RETURN
	INCR SUB
	XCALL DECML (WPWORD(SUB),DECMAL)
	DECMAL = DECMAL - 31
	WPWORD (SUB) = CODE (DECMAL)
	GO TO CODELP
ALREDY,
	DISPLAY (15,13,10,10,7,
&	'?UT- NEW DEVICE HAS BEEN CREATE OR OLD DEVICE HAS ILLEGAL FORMATT')
	STOP
ERROR,
	XCALL ERROR (ERR,LINE)
	DSPERR = ERR
	DISPLAY (15,13,10,10,
&	'?UT- FATAL DIBOL ERROR - NUMBER ',DSPERR,'.',7)
	STOP
NODEVC,
	DISPLAY (15,13,10,10,
&	'?UT- FATAL ERROR - OLD DEVICE NOT FOUND ON UT:',7)
	STOP
ENDDEV,
	DISPLAY (15,13,10,'CONVERSION OF DEVICE.DDF COMPLETE')
	CLOSE 1
	CLOSE 2
	CLOSE 3
	CLOSE 4
END,
	STOP
	END
