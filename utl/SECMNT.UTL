;  SECMNT / UTL 
;
;
;		::PCPYUTL.DEF::
;*****************************************************************************
;		SECURITY SYSTEM UTILITIES AND SUBROUTINES 
;		DIBOL FOR RT-11
;		
;		RELEASED: JANUARY 1, 1985
;*****************************************************************************
;
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984,
;		1985, MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;		SECURITY SYSTEM MAINTENANCE - MAINTAINS THE FOLLOWING FILES:
;		COMPNY.DDF, DEVICE.DDF, SECURE.DDF
;
RECORD
	,A64,'THIS MATERIAL CONTAINS THE VALUABLE PROPERTIES AND TRADE SECRETS'
	,A62,'OF MCBA, EMBODYING CONFIDENTIAL INFORMATION AND IDEAS, NO PART'
	,A56,'OF WHICH MAY BE USED AND/OR DISCLOSED WITHOUT MCBAs DULY'
	,A55,'AUTHORIZED LICENSE AGREEMENT AND/OR WRITTEN PERMISSION.'
	,A61,'COPYRIGHT (C) MCBA, AN UNPUBLISHED WORK. ALL RIGHTS RESERVED.'

RECORD PASWOR
	PASWD	,10A1
RECORD SPWORD
	WPWORD	,10A1
COMMON
			.INCLUDE 'DEF:COM001.DEF'
RECORD MESARA
			.INCLUDE 'DEF:MES001.DEF'
RECORD MESCTL,X
			.INCLUDE 'DEF:MES002.DEF'
RECORD SECURE
			.INCLUDE 'DEF:SEC001.DEF'
RECORD,X
			.INCLUDE 'DEF:SEC002.DEF'
RECORD,X
			.INCLUDE 'DEF:SEC003.DEF'
RECORD,X
			.INCLUDE 'DEF:SEC004.DEF'
RECORD DEVICE
			.INCLUDE 'DEF:DEV001.DEF'
RECORD COMPNY
			.INCLUDE 'DEF:CMP001.DEF'
RECORD S1CTL
		,1D2,	12
		,1D2,	49
		,1D2,	10
		,1D2,	10
		,1A4,	'A   '
		,1A4,	'EF  '
		,1D1,	1
RECORD,X
	ROW1	,A2
	COL1	,A2
	MAX1	,A2
	MIN1	,A2
	TYP1	,A4
	FCT1	,A4
	SPC1	,A1
RECORD S2CTL
		,2D2,	05,22
		,2D2,	35,28
		,2D2,	02,10
		,2D2,	00,10
		,2A4,	'N 00','A   '
		,2A4,	'ET  ','E   '
		,2D1,	2
RECORD,X
	ROW2	,A4
	COL2	,A4
	MAX2	,A4
	MIN2	,A4
	TYP2	,A8
	FCT2	,A8
	SPC2	,A2
COMMON CTL
	ROW	,19D2
	COL	,19D2
	MAX	,19D2
	MIN	,19D2
	INTYP	,19A4
	FCTYP	,19A4
	STRNM	,2D2
	ENDNM	,2D2
COMMON,X
	ROW0	,A38
	COL0	,A38
	MAX0	,A38
	MIN0	,A38
	TYP0	,A76
	FCT0	,A76
	STN0	,A4
	END0	,A4
;*****************************COMMON DATA SECTION***********************
COMMON
	PKARY	,400D3	;PAKAGE ARRAY LOADED FROM REC #2 OF SECURE.
			;ACCESSED BY THE ARYCNT COUNTER (=(PAKAGE # *20)-20)
			;=20 PACKAGES X 20 FILES MAX PER PACKAGE

	PKCOD	,20A1,	'E','C','D','I','H','O','L','K','M','A','F','G','B',
&			'J','N','P','Q','R','S','T'
					;PACKAGE CODES IN REC #2 OF SECURE
					;SORTED BY ORDER OF DISPLAY (PACKAGE
					;CODES COME FROM SPOOL CODES.
	PCKGS	,20A3,	'COP','IM ','BMP','SFC','JC ','LP ','SPC','SPR','MRP',
&			'AR ','AP ','PR ','GL ','AD ','POR','UTL','   ','   ',
&			'   ','   '
					;PACKAGES CORRESPONDING TO THE ABOVE
					;PACKAGE CODES
	SVPAK	,200A1			;STORES THE PACKAGE CODES FROM REC #2
	MAXPK	,D2,	16		;MAXIMUM NUMBER OF ALLOWED PACKAGES
					;IN PACKAGE CODE ARRAY (PKCOD, PCKGS)
COMMON			;PACKAGE COUNTER - KEEPS TRACK OF THE NUMBER OF FILES
	CNTS	,20D2	;CONTAINED WITHIN EACH PACKAGE ARRAY (PKARY)
COMMON,X
	CNT1	,D18	;ALLOWS COUNTS TO BE CLEARED TO ZEROES INSTEAD 
			;OF SPACES
	CNT2	,D18
	CNT3	,D4
;*****************************************************************************
RECORD
		,A30,	' !"#$%&''()*+,-./0123456789:;<='
		,A35,	'>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`'
RECORD,X
	DECODE	,65A1
RECORD
		,A30,	'VHA. WIB/!XJC0"YKD1#ZLE2$[MF3%'
		,A35,	'\NG4&]O5''^P6(_Q7)`R8*S9+T:,U;-<=>?@'
RECORD,X
	CODE	,65A1
;
RECORD SRTMSG
	PRGNAM	,A14,	'UT:ORGSEC     '
	RCNT	,D5
	OCNT	,D5
		,A6
RECORD
	ARYCNT	,D3	;PACKAGE ARRAY COUNTER - FOR PKARY
	BLANKS	,A10
	CNGCTL	,D1
	CNGFCT	,19A4,	'E   '		;FUNCTION TYPES FOR CHANGE MODE-ALL
	CNGNUM	,D2	;COUNTER FOR RANGES IN ANYCN
	COUNT	,D2	;COUNTS CHARACTERS IN PASSWORD
	DECMAL	,D10
	DEFPSW	,A10,	'8189572900'
	DELCNT	,D5	;STORES DELETE COUNT OF SECURE FILE
	ENTRY	,A10
	ERROR	,A3
	FILE	,A13
	FILCNT	,D3	;COUNTER USED FOR SETTING UP PACKAGE ARRAY
	HPWORD	,4A1	;WORK AREA FOR UNSCRAMBLE OF PASSWORD
	INXCTL	,D1
	LOKCTL	,D1
	MAXCNT	,D5	;STORES MAX COUNT OF SECURE FILE
	NUM	,D2	;COUNTER FOR INPUT CTL ARRAY
	ORGCNT	,D5	;STORES ORGANIZED COUNT OF SECURE FILE
	READ	,D1,	0
	RECCNT	,D5	;STORES RECORD COUNT OF SECURE FILE
	SAVACC	,A1	;STORES ACCESS CODE WITHIN INPUT LOOP
	SAVCOD	,A3	;GENERAL STORAGE FOR DEVICE OR COMPANY CODE
	SAVSUB	,D2
	SECPAS	,A10
	SUB	,D3	;MISC COUNTER FOR CODE/DECODE
	SWITCH	,D1
	TSTCOD	,A3	;STORES COMPANY CODE FOR SUBSCRIPT TESTING
	WHATNO	,D2
	WRITE	,D1,	1
PROC
	CNPOS = -1
	XCALL TERID
	FILE = 'UT:SECURE.DDF'
	XCALL OPENF (1,'U',FILE,ERROR,0,SWITCH)
	IF (SWITCH) GO TO BADOPN
	FILE = 'UT:COMPNY.DDF'
	XCALL OPENF (2,'U',FILE,ERROR,0,SWITCH)
	IF (SWITCH) GO TO BADOPN
	LOKCTL = 0
	XCALL IO (2,COMPNY,1,READ,LOKCTL)	;READ AND LOCK RECORD ***MUST
						;KEEP THIS PROGRAM SINGLE USER
	IF (LOKCTL) GO TO EXIT
	LOKCTL = 0
	XCALL IO (1,SECURE,1,READ,LOKCTL)
	IF (LOKCTL) GO TO EXIT
	IF (ORGFLG) GO TO ORGEXT
	RECCNT = RECSEC
	ORGCNT = ORGSEC
	MAXCNT = MAXSEC
	DELCNT = DELSEC
	SECPAS = SECPSW
	LOKCTL = 0
	XCALL IO (1,SECURE,2,READ,LOKCTL)
	IF (LOKCTL) GO TO EXIT
	UNLOCK 1
	IF (PASWRD.NE.BLANKS) GO TO BADSEC
	SVPAK (1,200) = FILPAK (1,200)
	NUM = 1					;SET FOR MAX
	IF (SECPAS.NE.BLANKS) CALL UNSCSC
	IF (SECPAS.EQ.BLANKS) SPWORD = DEFPSW
	SUB =
ENTPAS,
	XCALL OUTPT (01,01,2,'SECURITY SYSTEM MAINTENANCE')
	XCALL OUTPT (12,10,0,'PLEASE ENTER SECURITY SYSTEM PASSWORD')
	CTL =
	ROW0 = ROW1
	COL0 = COL1
	MAX0 = MAX1
	TYP0 = TYP1
	FCT0 = FCT1
	XCALL INPT3 (ROW(NUM),COL(NUM),MAX(NUM),MIN(NUM),'AE',ENTRY,INXCTL)
	GO TO (ENTPAS,EXIT), INXCTL
	PASWOR = ENTRY
	IF (PASWOR.EQ.'SHERWOODQU') GOTO LODFIL
	IF (PASWOR.NE.SPWORD) GO TO INVPAS
	GO TO LODFIL
INVPAS,
	XCALL MESAG ('?UT-INVALID PASSWORD',1)
	INCR SUB
	IF (SUB.GE.5) GO TO DENY
	GO TO ENTPAS
UNSCSC,
	PASWOR = SECPAS
	COUNT =
LTRLUP,
	IF (COUNT.GE.10) RETURN
	INCR COUNT
	SUB =
DECLUP,
	IF (SUB.GE.65) GO TO INVPAS
	INCR SUB
	IF (PASWD(COUNT).EQ.CODE(SUB)) GO TO GOTLTR
	GO TO DECLUP
GOTLTR,
	WPWORD (COUNT) = DECODE (SUB)
	GO TO LTRLUP
BADSEC,
	XCALL MESAG
&     ('?UT-FATAL ERROR-SECURE.DDF FILE IS NOT CONVERTED TO REL 7.0 FORMAT',1)
	CLOSE 1
	CLOSE 2
	CLOSE 14
	STOP
;**********************************************************************
;                     LOAD FILE CODES INTO AN ARRAY
;**********************************************************************
LODFIL,
	XCALL WATE (4)
	FILCNT =
	CNT1 =
	CNT2 =
	CNT3 =
LDLUP1,
	IF (FILCNT.GE.200) GO TO LODDUN
	INCR FILCNT
	SUB =
LDLUP2,
	IF (SUB.GE.MAXPK) GO TO LDLUP1
	INCR SUB
	IF (SVPAK(FILCNT).EQ.PKCOD(SUB)) GO TO SETARY
	GO TO LDLUP2
SETARY,
	ARYCNT = (SUB*20)-20		;20 FILES PER PACKAGE MAX
	IF (CNTS(SUB).GE.20) GO TO LDLUP1
	INCR CNTS (SUB)
	PKARY (ARYCNT+CNTS(SUB)) = FILCNT
	GO TO LDLUP1
LODDUN,
	GO TO MENU
;**********************************************************************
;                        SECURITY SYSTEM MENU
;**********************************************************************
MENU,
	UNLOCK 1
	NUM = 1
	CNGCTL =
	CTL =
	ROW0 = ROW2
	COL0 = COL2
	MAX0 = MAX2
	MIN0 = MIN2
	TYP0 = TYP2
	FCT0 = FCT2
SCREN2,
	XCALL SECSC (2)
GETFCN,
	ENTRY =
	CALL INPUT
	GO TO (SCREN2,EXIT,SETPSW), INXCTL
	DECMAL = ENTRY
	GO TO (ADDCMP,ADDDEV,ADDDEV,ADDPAS,ADDPAS,ADDPAS,ADDPAS,
&	CHPROG,REORG,ADDDFL,ADDDFL,CHPROG,CHPROG), DECMAL
	GO TO GETFCN
;**********************************************************************
;                       SET NEW SECURITY PASSWORD
;**********************************************************************
SETPSW,
	NUM = 2
	XCALL OUTPT (22,1,1,'PLEASE ENTER NEW PASSWORD')
	ENTRY =
	CALL INPUT
	GO TO (MENU,EXIT), INXCTL
	SPWORD = ENTRY
	IF (SPWORD.EQ.BLANKS) GO TO DEFLPS
	CALL CODE
	SUB = 7
	XCALL MESAG ('OK TO CHANGE PASSWORD?',SUB)
	GO TO (MENU), SUB
	XCALL MESAG
&	('PLEASE MAKE A NOTE OF THE NEW PASSWORD BEFORE CONTINUING...THEN',1)
NEWPSW,
	LOKCTL = 1
	XCALL IO (1,SECURE,1,READ,LOKCTL)
	SECPSW = SPWORD
	LOKCTL = 1
	XCALL IO (1,SECURE,1,WRITE,LOKCTL)
	XCALL OUTPT (22,1,1,'\')
	NUM = 1
	GO TO GETFCN
DEFLPS,
	SUB = 7
	XCALL MESAG
&('NOTE, THIS WILL RESET THE PASSWORD TO THE DEFAULT VALUE - CONTINUE?',SUB)
	GO TO (SETPSW), SUB
	SPWORD =
	GO TO NEWPSW
;************************************************************************
;                   CHAINING TO OTHER PROGRAMS
;************************************************************************
CHPROG,
	SUB = 3
	FILE = 'UT:PRTPAS'
	IF (DECMAL.EQ.12) FILE = 'UT:PRTDEV'
	IF (DECMAL.EQ.13) FILE = 'UT:PRTACS'
	XCALL PGCHN (FILE,SUB)
	IF (SUB.EQ.0) GO TO CHAIN
	XCALL MESAG ('FUNCTION NOT AVAILABLE',1)
	GO TO MENU
CHAIN,
	XCALL SNMSG ('PRTSEC',5)
	CLOSE 1
	CLOSE 2
	XCALL PGCHN (FILE,2)
BADOPN,
	IF (SWITCH.NE.1) GO TO ERROR
	MESSGE = '?UT-FATAL ERROR '
	MESSGE (17,29) = FILE
	MESSGE (31,39) = 'NOT FOUND'
	XCALL MESAG (MESSGE,1)
	GO TO EXIT
ERROR,
	MESSGE = '?UT-FATAL DIBOL ERROR #'
	MESSGE (24,26) = ERROR
	MESSGE (28,35) = 'ON FILE '
	MESSGE (36,48) = FILE
	XCALL MESAG (MESSGE,1)
	GO TO EXIT
DENY,
	XCALL MESAG ('?UT-ACCESS TO SECURITY SYSTEM DENIED',1)
	GO TO EXIT
REORG,
	XCALL OUTPT (3,1,2,'\')
	XCALL OUTPT (8,10,0,
&	'Reorganizing the Security File MUST have exclusive use of the MCBA')
	XCALL OUTPT (10,10,0,
&	'Manufacturing/Distribution System. Once reorganization of the ')
	XCALL OUTPT (12,10,0,
&	'Security file is completed, ALL users must relog onto the MCBA ')
	XCALL OUTPT (14,10,0,
&	'Security System (via the Master Menu). Be sure all users have')
	XCALL OUTPT (16,10,0,
&	'logged-off the system before continuing')
	SWITCH = 7
	XCALL MESAG ('DO YOU WISH TO CONTINUE ?',SWITCH)
	IF (SWITCH) GO TO MENU
	XCALL WATE (4)
	LOKCTL = 1
	XCALL IO (1,SECURE,1,READ,LOKCTL)
	ORGFLG = 1
	RCNT = RECSEC
	OCNT = ORGSEC
	LOKCTL = 1
	XCALL IO (1,SECURE,1,WRITE,LOKCTL)
	CLOSE 1
	CLOSE 2
	SWITCH = 5
	XCALL SNMSG (SRTMSG,SWITCH)
	XCALL PGCHN ('UT:SRTSEC',2)
ORGEXT,
	XCALL MESAG ('SECURITY FILE BEING REORGANIZED - EXITING',1)
EXIT,
	CLOSE 1
	CLOSE 2
	XCALL PGCHN ('UT:MSMENU',2)
;************************************************************************
;                          MAINTAIN COMPANY CODES
;************************************************************************
ADDCMP,
	XCALL SECCM (COMPNY,INXCTL)
	GO TO (MENU,EXIT), INXCTL - 1
;****************************************************************************
;                       MAINTAIN DEVICE ASSIGNMENTS
;****************************************************************************
ADDDEV,
	XCALL SECDV (COMPNY,DECMAL)
	GO TO MENU
;***********************************************************************
;                          MAINTAIN PASSWORDS
;***********************************************************************
ADDPAS,
	XCALL SECPS (COMPNY,DECMAL,INXCTL)
	GO TO (MENU,EXIT), INXCTL - 1
;****************************************************************************
;                         MAINTAIN FILENAMES
;****************************************************************************
ADDDFL,
	XCALL SECFL (COMPNY,DECMAL)
	GO TO MENU
;************************************************************************
;                   PASSWORD SCRAMBLE/CODE ROUTINES
;************************************************************************
CODE,
	SUB =
CODELP,
	IF (SUB.GE.MAX(NUM)) RETURN
	INCR SUB
	XCALL DECML (WPWORD(SUB),DECMAL)
	DECMAL = DECMAL - 31
	WPWORD (SUB) = CODE (DECMAL)
	GO TO CODELP
;*****************************************************************************
;                        INPUT/ANYCN
;*****************************************************************************
INPUT,
	XCALL INPUT (ROW(NUM),COL(NUM),MAX(NUM),MIN(NUM),INTYP(NUM),
&	FCTYP(NUM),ENTRY,INXCTL)
	RETURN
END
