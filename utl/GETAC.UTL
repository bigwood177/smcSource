SUBROUTINE GETAC ; (IROW,ICOL,GLACNT,GFCTYP,INXCTL)
;
;  GETAC / UTL 
;
;
;		::PCPYUTL.DEF::
;*****************************************************************************
;		SECURITY SYSTEM UTILITIES AND SUBROUTINES 
;		DIBOL FOR RT-11
;		
;		RELEASED: JANUARY 1, 1985
;*****************************************************************************
;
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984,
;		1985, MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;
;		HANDLES INPUT OF GL ACCOUNT NUMBER
;
	IROW	,D	; SCREEN ROW (1,24)
	ICOL	,D	; SCREEN COLUMN TO BEGIN ENTRY OF NUMBER (1-80)
	GLACNT	,D	; INCOMING INITIAL VALUE OF GL ACCT # AND ALSO
			; 	RETURNING VALUE OF GL ACCT #
	GFCTYP	,A	; FUNCTION TYPES TO ENABLE DURING ENTRY
			; SAME AS INPUT FUNCTION TYPES (MAY BE THE SAME FIELD)
	INXCTL	,D	; CONTROL FLAG - TREATED THE SAME AS INPUT'S INXCTL
			;	(MAY EVEN BE THE SAME FLAG)
			; 0 = INPUT OK
			; 1 = ABORT
			; 2 = END
			; 3 = TAB
			; 4 = UP ARROW
			; 5 = DOWN ARROW
			; 6 = PF1 KEY
			; 7 = PF2 KEY
RECORD CTL
	ROW	,3D2
	COL	,3D2
	MAX	,3D2,	00,04,03
	MIN	,3D2
	INTYPE	,3A4,	'C   ','# 00','# 00'
	FCTYPE	,3A6
RECORD SAVFCN			;STORES ADJUSTED FUNCTIONS FOR USE IN INPUT
	SAVFCT	,6A1
RECORD STRFCN
	STRFCT	,6A1		;STORES INITIAL FUNCTIONS
RECORD
	SAVACT	,D7
RECORD,X
	SAVAC1	,D4
	SAVAC2	,D3
RECORD
	BLANKS	,A8
	DASH	,A1,	'-'
	DSHCOL	,D2
	DSPACT	,A8
	ENTRY	,A4
	DFLAG	,D1		;DOWN ARROW ENABLED ON INCOMING FCN TYPES
	UFLAG	,D1		;UP ARROW ENABLED ON INCOMING FCN TYPES
	FFLAG	,D1		;FORCE ENTRY AND DO NOT DISPLAY DEFAULT
	TFLAG	,D1		;TAB KEY ENABLED ON INCOMING FCN TYPES
	NUM	,D1		;KEEPS TRACK OF GL LEVELS INPUT
	SUB	,D1		;KEEPS TRACK OF ACTUAL GL LEVELS
				;ALSO(SEPARATELY)TRACKS NUMBER OF FUNCTION TYPES
	SAVSUB	,D1		;ACCUMULATES VALUE OF SUB AND SAVES IT
PROC
	SAVACT = GLACNT
	NUM =
;***********************SET UP FUNCTIONS FOR INPUT********************
NUMLUP,
	INCR NUM
	ROW (NUM) = IROW
	COL (NUM) = ICOL
	IF (NUM.EQ.3) GO TO SET3
	GO TO NUMLUP
SET3,
	COL (NUM) = ICOL + 5
	DSHCOL = COL (NUM) - 1
FCNFLG,
	SUB =
	FFLAG =
	TFLAG =
	DFLAG =
	UFLAG =
	SAVFCN = GFCTYP
FLUP1,
	IF (SUB.GE.6) GO TO SETFC1
	INCR SUB
	IF (SAVFCT(SUB).EQ.'F') FFLAG = 1
	IF (SAVFCT(SUB).EQ.'T') TFLAG = 1
	IF (SAVFCT(SUB).EQ.'D') DFLAG = 1
	IF (SAVFCT(SUB).EQ.'U') UFLAG = 1
	IF (SAVFCT(SUB).EQ.'U' .OR. SAVFCT(SUB).EQ.'D') GO TO MRGFCT
	IF (SAVFCT(SUB).EQ.' ') GO TO SETFC1
	GO TO FLUP1
MRGFCT,
	IF (SUB.GE.5) GO TO MRGFC1
	SAVFCN (SUB,5) = SAVFCN (SUB+1,6)
	SAVFCT (6) =
	SUB = SUB - 1
	GO TO FLUP1
MRGFC1,
	IF (SUB.GE.6) GO TO MRGFC2
	SAVFCT (5) = SAVFCT (6)
	SAVFCT (6) =
	SUB = SUB - 1
	GO TO FLUP1
MRGFC2,
	SAVFCT (6) =
	SUB = SUB - 1
SETFC1,
	NUM = 1
	STRFCN = SAVFCN
	IF (FFLAG .OR. SAVACT.EQ.0) GO TO NONUM1
	SAVSUB = SUB
	IF (FFLAG) ROW (1) =			;DON'T DISPLAY DEFAULT IF "F"
	IF (TFLAG.EQ.0) STRFCT (SUB) = 'T'	;TAB FUNCTION FOR INIT VALUE
	IF (TFLAG.EQ.0) INCR SUB		;RELOAD 'U' AND 'D' FOR FIRST
	IF (UFLAG) STRFCT (SUB) = 'U'		;ENTRY ONLY
	IF (UFLAG) INCR SUB			;LOAD OTHER LEVELS SEPARATELY
	IF (DFLAG) STRFCT (SUB) = 'D'
	FCTYPE (NUM) = STRFCN
	STRFCN = SAVFCN
FCNLUP,
	IF (NUM.GE.3) GO TO INPUT
	INCR NUM
	SUB = SAVSUB
	SAVFCN = STRFCN
	IF (NUM.EQ.3) SAVFCT (SUB) = 'U'
	IF (NUM.EQ.2) SAVFCT (SUB) = 'D'
				;ENABLE ARROW KEYS FOR STEPPING BETWEEN
				;THE TWO LEVELS
	FCTYPE (NUM) = SAVFCN
	GO TO FCNLUP
NONUM1,
	ROW (NUM) =
	GO TO FCNLUP
;******************** INPUT OF ACCOUNT NUMBER **********************
INPUT,
	NUM =
INPLUP,
	IF (NUM.GE.3) GO TO RETURN
	INCR NUM
	IF (ROW(NUM).EQ.0) GO TO INPLUP
INPUT2,
	INXCTL =
	GO TO (SETINT), NUM
	IF (NUM.EQ.2) ENTRY = SAVAC1
	IF (NUM.EQ.3) ENTRY = SAVAC2
SPECIL,
	XCALL INPUT (ROW(NUM),COL(NUM),MAX(NUM),MIN(NUM),
&			INTYPE(NUM),FCTYPE(NUM),ENTRY,INXCTL)

	IF (NUM.GT.1)
&	GO TO (SPKEY,SPKEY,SPKEY,UP,DSPAC1,SPKEY,SPKEY), INXCTL
	IF (INXCTL) GO TO SPKEY
	GO TO (CHKENT), NUM
	IF (NUM.EQ.2) SAVAC1 = ENTRY
	IF (NUM.EQ.3) SAVAC2 = ENTRY
	GO TO (INPLUP,DSPAC1,DSPAC2), NUM
DSPAC1,
	DSPACT (1,4) = SAVAC1, 'XXXX'
	DSPACT (5,5) = DASH
	XCALL OUTPT (ROW(NUM),COL(NUM),0,DSPACT(1,5))
	GO TO INPLUP
DSPAC2,
	DSPACT (6,8) = SAVAC2, 'XXX'
	XCALL OUTPT (ROW(NUM),COL(NUM),0,DSPACT(6,8))
	GO TO INPLUP
UP,
	XCALL OUTPT (ROW(NUM),DSHCOL,0,BLANKS(1,4))
	NUM = NUM - 1
	GO TO INPUT2
SETINT,
	DSPACT = SAVACT , 'XXXX-XXX'
	XCALL OUTPT (IROW,ICOL,0,DSPACT)
	XCALL OUTPT (23,1,1,
&	'"TAB" = ACCEPT DEFAULT    "RETURN" = EDIT NUMBER')
	GO TO SPECIL
CHKENT,
	XCALL OUTPT (23,1,1,'\')
	XCALL OUTPT (ROW(NUM),COL(NUM),0,BLANKS)
	GO TO INPLUP
SPKEY,
	SAVACT = GLACNT
	GO TO RETURN
RETURN,
	GLACNT = SAVACT
	XCALL OUTPT (23,1,1,'\')
	RETURN
END
