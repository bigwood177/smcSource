SUBROUTINE ANYCN ; (CNGCTL,WHATNO,RSTRT1,REND1,RSTRT2,REND2)
;
;  ANYCN / UTL 
;
;
;		::PCPYUTL.DEF::
;*****************************************************************************
;		SECURITY SYSTEM UTILITIES AND SUBROUTINES 
;		DIBOL FOR RT-11
;		
;		RELEASED: JANUARY 1, 1985
;*****************************************************************************
;
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984,
;		1985, MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;
;		ROUTINE THAT ASKS IF THERE IS ANY CHANGE IN THE DATA INPUT
;		AND RETURNS A CODED ANSWER WITH THE # OF THE FIELD TO BE CHANGED
;
;		COMPARES REQUESTED CHANGE NUMBER WITH UP TO 2 RANGES OF VALID
;		CHANGE NUMBERS AND DISPLAYS INVALID MESSAGE ON INVALID RANGE
;
;		SUPPORTS "ABORT", "END", AND "PF1" KEYS
;
	CNGCTL	,D	; BRANCH & EXECUTION CONTROL VARIABLE (SEE BELOW)
	WHATNO	,D	; # OF FIELD TO BE CHANGED AND ALSO INCOMING FIELD
			; FOR INVALID SELECTION
	RSTRT1	,D	; STARTING NUMBER OF VALID CHANGE RANGE # 1
			; 0 IN THIS FIELD DISABLES ALL RANGE TESTING
	REND1	,D	; ENDING NUMBER OF VALID CHANGE RANGE # 1
	RSTRT2	,D	; STARTING NUMBER OF VALID CHANGE RANGE # 2
			; 0 IN THIS FIELD DISABLES RANGE #2 TESTING
	REND2	,D	; ENDING NUMBER OF VALID CHANGE RANGE # 2
			;
			; ***** CNGCTL CODES *****
			;     OUTGOING:
			;      -1 = "END" KEY PRESSED
			;	0 = NO CHANGE
			;	1 = CHANGE MODE
			;	2 = "ABORT" KEY PRESSED
			;	3 = "PF1" KEY PRESSED
			;
			;     INCOMING:
			;	0 = NORMAL "FIELD # TO CHANGE"
			;	1 = NORMAL "FIELD # TO CHANGE"
			;	2 = ALLOW "END" INPUT AT "FIELD # TO CHANGE"
			;	3 = ALLOW "PF1" KEY AT "FIELD # TO CHANGE"
			;	4 = ALLOW "END" AND "PF1" KEY AT "FIELD # TO CH"
			;
			;	5 = "ANY CHANGE" WITH YES/NO ANSWER "N" DEFAULT
			;	6 = ALLOW "END" INPUT AT "ANY CHANGE ?"
			;	7 = ALLOW "PF1" KEY AT "ANY CHANGE ?"
			;	8 = ALLOW "END" AND "PF1" AT "ANY CHANGE ?"
			;
			; **** WHATNO CODE *****
			;	INCOMING:
			;	-1 = INVALID CHANGE FROM CALLING PROGRAM
COMMON
	SYSTM	,D1
	CTRLC	,D1
RECORD MESAG
		,A21,	'?UT-INVALID SELECTION'
		,A46
		,A12,	'PRESS RETURN'
RECORD
	DIGITS	,D2
	SAVCTL	,D1
	INXCTL	,D1	; PARAMETERS
	ALPHA   ,A2	; USED IN INPUT
	TCHAR	,D3
	TYPE	,A2	; USED IN INPUT
	FCODE	,A2	;	"
PROC
	SAVCTL = CNGCTL
ANYCNG,
	CNGCTL = SAVCTL
	IF (WHATNO.EQ.-1) GO TO BADCNG	; INCOMING CODE TO DISPLAY ERROR MESSAGE
	IF (CNGCTL.LE.4) GO TO WHTNUM
	XCALL OUTPT (24,1,1,'ANY CHANGE ?')
	TYPE = 'YN'
	FCODE =
	IF (CNGCTL.EQ.6) FCODE = 'E '
	IF (CNGCTL.EQ.7) FCODE = '1 '
	IF (CNGCTL.EQ.8) FCODE = 'E1'
	XCALL INPUT (24,15,1,0,TYPE,FCODE,ALPHA,INXCTL); ASKS FOR YES/NO ANSWER
NOCNG,
	XCALL OUTPT (24,1,1,'\')
	CNGCTL =			; RETURN CODE FOR NO CHANGE
	IF (ALPHA.EQ.'Y') CNGCTL = 1
	IF (WHATNO.NE.0) CNGCTL = 1
	IF (INXCTL.EQ.1) CNGCTL = 2	; ABORT KEY PRESSED
	IF (INXCTL.EQ.2) CNGCTL = -1	; END KEY PRESSED
	IF (INXCTL.EQ.6) CNGCTL = 3	; PF1 KEY PRESSED
	RETURN
WHTNUM,
	TYPE = 'A '
	FCODE =
	IF (CNGCTL.EQ.2) FCODE = 'E '
	IF (CNGCTL.EQ.3) FCODE = '1 '
	IF (CNGCTL.EQ.4) FCODE = 'E1'
	CNGCTL = 1			; SET FOR CHANGE MODE
	ALPHA =
	XCALL OUTPT (24,1,1,'FIELD # TO CHANGE  ')
	XCALL INPUT (24,20,2,0,TYPE,FCODE,ALPHA,INXCTL); GET # OF FIELD
	IF (INXCTL) GO TO NOCNG
	ON ERROR BADCNG
	WHATNO = ALPHA					; TO BE CHANGED
	OFF ERROR
	IF (ALPHA.EQ.'  ') GO TO NOCNG
	IF (RSTRT1.EQ.0 .AND. REND1.EQ.0) RETURN	;TESTS FOR VALID RANGE
	IF (WHATNO.GE.RSTRT1.AND.WHATNO.LE.REND1) RETURN
	IF (RSTRT2.EQ.0 .AND. REND2.EQ.0) GO TO BADCNG
	IF (WHATNO.GE.RSTRT2.AND.WHATNO.LE.REND2) RETURN
BADCNG,
	OFF ERROR
	XCALL OUTPT (24,1,1,'\')
	XCALL OUTPT (0,0,4,MESAG)
	XCALL OUTPT (0,0,-1,'BELL')
	CALL ACPTCR
	WHATNO =
	GO TO ANYCNG
ACPTCR,
	ACCEPT (15,TCHAR)
	IF (TCHAR.NE.13) GO TO ACPTCR
	IF (SYSTM.NE.1) ACCEPT (15,TCHAR)
	RETURN
END
