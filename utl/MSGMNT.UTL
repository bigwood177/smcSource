;  MSGMNT / UTL 
;
;
;		MAINTAINS DATA STORED IN THE UT:MESARA.DDF FILE
;

RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A4
		,A1
	FCTYPE	,A4
COMMON
			.INCLUDE 'DEF:COM001.DEF'
RECORD MESARA
			.INCLUDE 'DEF:MES001.DEF'
RECORD ,X
			.INCLUDE 'DEF:MES002.DEF'
RECORD
	ALPHA	,A2
	COL2	,D2
	DSPTER	,A2
	ERROR	,D3
	PLINE	,A132
	PGCNT	,D3
	LINCNT	,D3
	LPSW	,D2
	MSKTER	,A2,	'ZX'
	ROW2	,D2
	RPTNUM	,D4
	SPLFIL	,A14
	PRTCTL	,A1
	ENTRY	,A51
	INXCTL	,D1
	SAVTER	,D2
	SUB	,D2
	SELECT	,D1
	CLRALL	,D1
	TERMNO	,D2
	CNGCTL	,D1
	WHATNO	,D2
	RECPOS	,D3
	FTERNO	,D2
	TTERNO	,D2
	BLANKS	,A236
	MSGHLD	,A236
	MESAGE	,A40,	'SPECIAL FORMS FLAG FOR PRINTER   CLEARED'
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1
	SWITCH	,D1
	WRTCNT	,D2
PROC
	CNPOS = -1
	XCALL TERID
	XCALL OPENF (1,'U','UT:MESARA.DDF',ERROR,0,SWITCH)
	IF (SWITCH) GO TO ENDOFF
	LOKCTL = 0
	XCALL IO (1,MESARA,1,READ,LOKCTL)
	IF (LOKCTL) GO TO ENDOFF
	SAVTER = MAXTER - 1
	DSPTER = SAVTER, MSKTER
MAINMU,
	UNLOCK 1
	CNGCTL =
	XCALL OUTPT (1,1,2,'MESSAGE FILE MAINTENANCE')
	XCALL OUTPT (1,61,0,'THIS TERMINAL IS ')
	ALPHA = TNMBR, MSKTER
	XCALL OUTPT (0,0,0,ALPHA)
	XCALL OUTPT (6,20,0,'PLEASE SELECT APPLICATION')
	XCALL OUTPT (8,25,0,'1. CLEAR MESSAGES')
	XCALL OUTPT (10,25,0,'2. CHANGE/INQUIRE MESSAGES')
	XCALL OUTPT (12,25,0,'3. TRANSFER MESSAGES')
	XCALL OUTPT (14,25,0,'4. PRINT MESSAGE FILE')
	XCALL OUTPT (16,25,0,'5. SET PACKAGE LOGICAL ASSIGNMENTS')
	XCALL OUTPT (18,25,0,'6. SET TERMINAL CHARACTERISTICS')
	XCALL OUTPT (20,25,0,'7. SET SORT METHOD')
	XCALL OUTPT (22,25,0,'8. CLEAR SPECIAL FORMS FLAG')
APLSEL,
	CTL = '06,47,01,01,#   ,FE  '
	CALL INPUT
	GO TO (APLSEL,ENDOFF), INXCTL
	SELECT = ENTRY
	GO TO (CLRMES,CHGMES,CPYMES,PRTMES,ASNLOG,TRMCHR,SRTMTH,SPCFRM), SELECT
	GO TO APLSEL
ENDOFF,
	XCALL WATE (3)
	CLOSE 1
	XCALL PGCHN ('UT:MSMENU',2)
;**************
;CLEAR MESSAGES
;**************
CLRMES,
	CLRALL =
	XCALL OUTPT (2,1,2,'CLEAR MESSAGES')
	XCALL OUTPT (10,10,0,
&	'DO YOU WANT TO CLEAR MESSAGES FOR ALL TERMINALS ?')
	CTL = '10,67,01,00,YN  ,E   '
	CALL INPUT
	GO TO (CLRMES,MAINMU), INXCTL
	IF (ENTRY.EQ.'Y') CLRALL = 1
	IF (CLRALL) GO TO ANYCN1
	XCALL OUTPT (12,10,0,'ENTER THE NUMBER OF THE TERMINAL')
	XCALL OUTPT (0,0,0,' TO BE CLEARED (1 - ')
	DISPLAY (15,DSPTER,')')

CLRME1,
	XCALL OUTPT (24,1,1,'\')
;	ENTRY = TNMBR
;	CTL = '12,67,02,01,#   ,E  '
; ABOVE LINES DELETED AS PER MCBA PATCH UT3-RT-1	FEB 21, 1986
;	
	CTL = '12,67,02,00,#   ,FE'
;
; ABOVE 1 LINE ADDED AS PER MCBA PATCH UT3-RT-1		FEB 21, 1986
;

	CALL INPUT
	GO TO (CLRMES,MAINMU), INXCTL
	IF ( ENTRY.EQ.'00 ' ) ENTRY = TNMBR
;
; ABOVE 1 LINE ADDED AS PER MCBA PATCH UT3-RT-1		FEB 21, 1986
;

	TERMNO = ENTRY
	XCALL DSPLY( ROW,COL,MAX,TERMNO,5,0 )
;
; ABOVE 1 LINE ADDED AS PER MCBA PATCH UT3-RT-1		FEB 21, 1986
;
;
	IF (TERMNO.LT.1.OR.TERMNO.GT.SAVTER) GO TO CLRME1
	TERMNO = TERMNO + 1
ANYCN1,
	CNGCTL = 5
	XCALL ANYCN (CNGCTL,WHATNO,0,0,0,0)
	XCALL WATE (3)
	GO TO (CLRMES,CLRMES), CNGCTL
	IF (CLRALL) GO TO CLRALL
	LOKCTL = 1
	XCALL IO (1,MESARA,TERMNO,READ,LOKCTL)
	MESSGE (1) =
	MESSGE (2) =
	MESSGE (3) =
	MESSGE (4) =
	LOKCTL = 1
	XCALL IO (1,MESARA,TERMNO,WRITE,LOKCTL)
	GO TO CLRME1
CLRALL,
	RECPOS = 1
CLRAL1,
	INCR RECPOS
	IF (RECPOS.GT.SAVTER+1) GO TO MAINMU
	LOKCTL = 1
	XCALL IO (1,MESARA,RECPOS,READ,LOKCTL)
	MESSGE (1) =
	MESSGE (2) =
	MESSGE (3) =
	MESSGE (4) =
	LOKCTL = 1
	XCALL IO (1,MESARA,RECPOS,WRITE,LOKCTL)
	GO TO CLRAL1
;***********************
;CHANGE/INQUIRE MESSAGES
;***********************
CHGMES,
	CNGCTL =
	XCALL OUTPT (2,1,2,'CHANGE/INQUIRE MESSAGES')
	XCALL OUTPT (4,10,0,'1. TERMINAL NUMBER (1 - ')
	DISPLAY (15,DSPTER,')')
	XCALL OUTPT (6,6,0,'MESSAGES')
	XCALL OUTPT (7,10,0,'2. MESSAGE 1')
	XCALL OUTPT (8,10,0,'3. MESSAGE 2')
	XCALL OUTPT (9,10,0,'4. MESSAGE 3')
	XCALL OUTPT (10,10,0,'5. MESSAGE 4')
	XCALL OUTPT (12,6,0,'PROGRAM RE-START FUNCTIONS')
	XCALL OUTPT (13,10,0,'6. LAST PROGRAM')
	XCALL OUTPT (14,10,0,'7. NEXT PROGRAM')
	XCALL OUTPT (15,10,0,'8. RESTART SWITCH')
	XCALL OUTPT (16,10,0,'9. DISABLE PROGRAM ABORT')
	XCALL OUTPT (18,6,0,'PRINTER/SPOOLER FUNCTIONS')
	XCALL OUTPT (19,9,0,'10. DEFAULT PRINTER')
	XCALL OUTPT (20,9,0,'11. SPOOLING OPTION')
	XCALL OUTPT (21,9,0,'12. SPOOLER WORK DEVICE')
	XCALL OUTPT (22,9,0,'13. SPOOL FILE BLOCK SIZE')
TERMNO,
;	ENTRY = TNMBR
;	CTL = '04,38,02,00,#   ,E   '
;
; ABOVE 2 LINES DELETED AS PER MCBA PATCH UT3-RT-1		FEB 21, 1986
;

	CTL = '04,38,02,00,#   ,FE '
;
; ABOVE 1 LINE ADDED AS PER MCBA PATCH UT3-RT-1		FEB 21, 1986
;

	CALL INPUT
	GO TO (CHGMES,MAINMU), INXCTL
	IF ( ENTRY.EQ.'00' ) ENTRY = TNMBR
;
; ABOVE 1 LINE ADDED AS PER MCBA PATCH UT3-RT-1		FEB 21, 1986
;

	TERMNO = ENTRY
	IF (TERMNO.LT.1.OR.TERMNO.GT.SAVTER) GO TO TERMNO
	XCALL DSPLY (ROW,COL,MAX,TERMNO,5,0)
	TERMNO = TERMNO + 1
	LOKCTL = 0
	XCALL IO (1,MESARA,TERMNO,READ,LOKCTL)
	IF (LOKCTL) GO TO TERMNO
	XCALL OUTPT (7,28,0,MESSGE(1))
	XCALL OUTPT (8,28,0,MESSGE(2))
	XCALL OUTPT (9,28,0,MESSGE(3))
	XCALL OUTPT (10,28,0,MESSGE(4))
	XCALL OUTPT (13,38,0,LASTPG)
	XCALL OUTPT (14,38,0,NEXTPG)
	ENTRY(1,1) = RESTRT, 'X'
	XCALL OUTPT (15,38,0,ENTRY(1,1))
	IF (CNTRLC.EQ.0) ENTRY = 'N'
	IF (CNTRLC.EQ.1) ENTRY = 'Y'
	XCALL OUTPT (16,38,0,ENTRY(1,1))
	XCALL DSPLY (19,38,1,DEFPTR,1,0)
	ENTRY (1,1) = SPOOLS
	XCALL OUTPT (20,38,0,ENTRY(1,1))
	XCALL OUTPT (21,38,0,SPOLDV)
	XCALL DSPLY (22,38,5,SPLSZE,5,0)
ANYCN2,
	CNGCTL = 2
	XCALL ANYCN (CNGCTL,WHATNO,2,13,0,0)
	GO TO (PROCS2,PROCS2,CNGBR2,CHGMES), CNGCTL + 2
BADCN2,
	WHATNO = -1
	GO TO ANYCN2
CNGBR2,
	GO TO (BADCN2,MESS1,MESS2,MESS3,MESS4,
&	 LASTPG,NEXTPG,RESTRT,CNTRLC,DFPRT,SPSW,SPWRK,SPBLK), WHATNO
	GO TO BADCN2
PROCS2,
	LOKCTL = 1
	XCALL IO (1,MESARA,TERMNO,WRITE,LOKCTL)
	GO TO (MAINMU), CNGCTL + 2
	GO TO CHGMES
MESS1,
	ENTRY = MESSGE (1)
	CTL = '07,28,50,00,A   '
	CALL INPUT
	GO TO (CHGMES), INXCTL
	MESSGE(1) = ENTRY
	GO TO ANYCN2
MESS2,
	ENTRY = MESSGE (2)
	CTL = '08,28,50,00,A   '
	CALL INPUT
	GO TO (CHGMES), INXCTL
	MESSGE(2) = ENTRY
	GO TO ANYCN2
MESS3,
	ENTRY = MESSGE (3)
	CTL = '09,28,50,00,A   '
	CALL INPUT
	GO TO (CHGMES), INXCTL
	MESSGE(3) = ENTRY
	GO TO ANYCN2
MESS4,
	ENTRY = MESSGE (4)
	CTL = '10,28,50,00,A   '
	CALL INPUT
	GO TO (CHGMES), INXCTL
	MESSGE(4) = ENTRY
	GO TO ANYCN2
LASTPG,
	ENTRY = LASTPG
	CTL = '13,38,10,00,A   '
	CALL INPUT
	GO TO (CHGMES), INXCTL
	LASTPG = ENTRY
	GO TO ANYCN2
NEXTPG,
	ENTRY = NEXTPG
	CTL = '14,38,10,00,A   '
	CALL INPUT
	GO TO (CHGMES), INXCTL
	NEXTPG = ENTRY
	GO TO ANYCN2
RESTRT,
	CTL = '15,38,01,00,#   ,F   '
	CALL INPUT
	GO TO (CHGMES), INXCTL
	RESTRT = ENTRY
	GO TO ANYCN2
CNTRLC,
	CTL = '16,38,01,00,YY  ,    '
	CALL INPUT
	GO TO (CHGMES), INXCTL
	IF (ENTRY.EQ.'Y') CNTRLC = 1
	IF (ENTRY.EQ.'N') CNTRLC = 0
	GO TO ANYCN2
DFPRT,
	XCALL OUTPT (24,1,1,
&	'(enter 1 - 4; "LP","LQ","LR","LS", or 0 for no default)')
	ENTRY  = DEFPTR
	CTL = '19,38,01,00,# 00'
	CALL INPUT
	GO TO (CHGMES), INXCTL
	DEFPTR = ENTRY
	IF (DEFPTR.GT.4) GO TO DFPRT
	XCALL OUTPT (24,1,1,'\')
	GO TO ANYCN2
SPSW,
	ENTRY = SPOOLS
	CTL = '20,38,01,01,# 00'
	XCALL OUTPT (24,1,1,
&'0=no spooling, 1=optional spooling only, 2=auto-spool audit trail reports')
	CALL INPUT
	GO TO (CHGMES), INXCTL
	SPOOLS = ENTRY
	IF (SPOOLS.GT.2) GO TO SPSW
	XCALL OUTPT (24,1,1,'\')
	GO TO ANYCN2
SPWRK,
	ENTRY = SPOLDV
	CTL = '21,38,03,02,A   '
	CALL INPUT
	GO TO (CHGMES), INXCTL
	SPOLDV = ENTRY
	SUB =
SPWRK2,
	INCR SUB
	IF (SUB.GT.3) GO TO ANYCN2
	IF ((SUB.LE.2.AND.ENTRY(SUB,SUB).EQ.BLANKS) .OR. ENTRY(SUB,SUB).EQ.':')
&		GO TO SPWBAD
	GO TO SPWRK2
SPWBAD,
	XCALL MESAG ('Enter 2-3 character device name without blanks or ":"',1)
	GO TO SPWRK
SPBLK,
	ENTRY = SPLSZE
	CTL = '22,38,05,00,N 00'
	CALL INPUT
	GO TO (CHGMES), INXCTL
	SPLSZE = ENTRY
	IF (SPLSZE.LE.0) GO TO SPBLK
	GO TO ANYCN2
;*************
;TRANSFER MESSAGES
;*************
CPYMES,
	XCALL OUTPT (2,1,2,'TRANSFER MESSAGES')
	XCALL OUTPT (10,20,0,'FROM TERMINAL NUMBER')
	XCALL OUTPT (12,20,0,'TO TERMINAL NUMBER')
FTERNO,
	CTL = '10,42,02,00,#   ,FE  '
	CALL INPUT
	GO TO (CPYMES,MAINMU), INXCTL
	FTERNO = ENTRY
	ALPHA = FTERNO, MSKTER
	XCALL OUTPT (10,42,0,ALPHA)
	IF (FTERNO.LT.0.OR.FTERNO.GT.SAVTER) GO TO FTERNO
	FTERNO = FTERNO + 1
TTERNO,
	CTL = '12,42,02,00,#   ,F   '
	CALL INPUT
	GO TO (CPYMES), INXCTL
	TTERNO = ENTRY
	ALPHA = TTERNO, MSKTER
	XCALL OUTPT (12,42,0,ALPHA)
	IF (TTERNO.LT.0.OR.TTERNO.GT.SAVTER) GO TO TTERNO
	TTERNO = TTERNO + 1
	CNGCTL = 5
	XCALL ANYCN (CNGCTL,WHATNO,0,0,0,0)
	GO TO (CPYMES,CPYMES), CNGCTL
	LOKCTL = 0
	XCALL IO (1,MESARA,FTERNO,READ,LOKCTL)
	IF (LOKCTL) GO TO FTERNO
	MSGHLD = MESARA
	MESARA (1,221) =
	LOKCTL = 1
	XCALL IO (1,MESARA,FTERNO,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IO (1,MESARA,TTERNO,READ,LOKCTL)
	MESARA (1,221) = MSGHLD (1,221)
	LOKCTL = 1
	XCALL IO (1,MESARA,TTERNO,WRITE,LOKCTL)
	XCALL MESAG ('Messages transferred.',2)
	GO TO CPYMES
;**************
;PRINT MESSAGES
;**************
PRTMES,
	XCALL OUTPT (2,1,2,'PRINT MESSAGES')
	LPSW = 1
	SPLFIL (5,6) = 'UT'	;UTILITIES NAME
	XCALL LPON (LPSW,SPLFIL)
	GO TO (MAINMU), LPSW + 1
	XCALL WATE (2)
	PGCNT =
	LINCNT = 0
	RECPOS = 1
	PLINE = 'PRINTOUT OF MESSAGE FILE'
	CALL PRINT
	XCALL LINFD (2)
	LINCNT = LINCNT + 2
PRTLUP,
	INCR RECPOS
	IF (RECPOS.GT.SAVTER+1) GO TO PRTDUN
	IF (LINCNT.GE.50) XCALL LINFD (0)
	IF (LINCNT.GE.50) LINCNT = 0
	LOKCTL = 1
	XCALL IO (1,MESARA,RECPOS,READ,LOKCTL)
	PLINE =
	PLINE(60,73) = 'MESSAGE STATUS'
	CALL PRINT
	PLINE (5,12) = 'TERMINAL'
	PLINE (16,25) = 'MESSAGE #1'
	PLINE (69,78) = 'MESSAGE #2'
	CALL PRINT
	PLINE (8,9) = RECPOS - 1, MSKTER
	PLINE (16,65) = MESSGE (1)
	PLINE (69,118) = MESSGE (2)
	CALL PRINT
	PLINE (16,25) = 'MESSAGE #3'
	PLINE (69,78) = 'MESSAGE #4'
	CALL PRINT
	PLINE (16,65) = MESSGE (3)
	PLINE (69,118) = MESSGE (4)
	CALL PRINT
	PLINE (16,28) = 'LAST PROGRAM:'
	PLINE (30,39) = LASTPG
	PLINE (43,55) = 'NEXT PROGRAM:'
	PLINE (57,66) = NEXTPG
	PLINE (69,86) = 'RE-START SWITCH = '
	PLINE (88,88) = RESTRT, 'X'
	PLINE (91,113) = 'DISABLE PROGRAM ABORT ?'
	IF (CNTRLC.EQ.0) ENTRY = 'N'
	IF (CNTRLC.EQ.1) ENTRY = 'Y'
	PLINE (115,115) = ENTRY
	CALL PRINT
	PLINE (16,40) = 'DEFAULT PRINTER NUMBER = '
	PLINE (41,41) = DEFPTR, 'X'
	PLINE (45,55) = 'SPOOLING ?'
	ENTRY(1,1) = 'N'
	IF (SPOOLS) ENTRY(1,1) = 'Y'
	PLINE (56,56) = ENTRY(1,1)
	PLINE (59,78) = 'SPOOLER WORK DEVICE'
	PLINE (80,82) = SPOLDV
	PLINE (86,109) = 'SPOOL FILE BLOCK SIZE = '
	PLINE (110,115) = SPLSZE, '-ZZZZX'
	CALL PRINT
	XCALL LINFD (2)
	LINCNT = LINCNT + 2
	GO TO PRTLUP
PRTDUN,
	XCALL LPOFF (LPSW,SPLFIL,PGCNT)
	GO TO MAINMU
PRINT,
	XCALL LPOUT (LINCNT,PGCNT,PLINE,'NO TITLE',
&	 'NO HDR',' ',' ','NO LEGEND',' ',' ',0,132,0,0,LPSW,RPTNUM,PRTCTL)
	RETURN
;***********************
;ASSIGN PROGRAM LOGICALS
;***********************
ASNLOG,
	XCALL OUTPT (2,1,2,'SET PACKAGE LOGICAL ASSIGNMENTS')
	XCALL OUTPT (6,56,0,'PAK  SYS       PAK  SYS')
	XCALL OUTPT (7,56,0,'LOG  LOG       LOG  LOG')
	XCALL OUTPT (5,7,0,'Legend of Package logical names currently used:')
	XCALL OUTPT (6,9,0,'CP - Customer Order Processing')
	XCALL OUTPT (7,9,0,'IM - Inventory Management')
	XCALL OUTPT (8,9,0,'BM - Bill of Material Processor')
	XCALL OUTPT (9,9,0,'SF - Shop FLoor Control')
	XCALL OUTPT (10,9,0,'JC - Job Costing')
	XCALL OUTPT (11,9,0,'LB - Labor Performance')
	XCALL OUTPT (12,9,0,'SC - Standard Product Costing')
	XCALL OUTPT (13,9,0,'SR - Standard Product Routings')
	XCALL OUTPT (14,9,0,'MR - Material Requirements Planning')
	XCALL OUTPT (15,9,0,'AR - Accounts Receivable')
	XCALL OUTPT (16,9,0,'AP - Accounts Payable')
	XCALL OUTPT (17,9,0,'PR - Payroll')
	XCALL OUTPT (18,9,0,'GL - General Ledger')
	XCALL OUTPT (19,9,0,'AD - Assets and Depreciation')
	XCALL OUTPT (20,9,0,'PO - Purchase Order')
	XCALL OUTPT (21,9,0,'RW - Report Writer')
	XCALL OUTPT (22,9,0,'UT - System Utility Programs')
	LOKCTL = 0
	XCALL IO (1,MESARA,1,READ,LOKCTL)
	IF (LOKCTL) GO TO MAINMU
	CALL DSPASN
	GO TO ASNANC
ASNCHG,
	SUB = WHATNO
	CTL = '00,00,02,00,A   ,F   '
	ROW = SUB - (((SUB-1)/14)*14) + 08
	COL = ((((SUB-1)/14)+1)*15)+38+4
	XCALL OUTPT (ROW,COL,0,BLANKS(1,7))
	LOGASS (SUB) =
	PHYASS (SUB) =
	CALL INPUT
	GO TO (ASNLOG), INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO ASNANC
	LOGASS(SUB) = ENTRY(1,2)
	COL = COL + 4
	MIN = 01
	MAX = 03
	CALL INPUT
	GO TO (ASNCHG), INXCTL
	PHYASS(SUB) = ENTRY
ASNANC,
	IF (INXCTL.NE.0) CALL DSPASN
	CNGCTL = 2
	XCALL ANYCN (CNGCTL,WHATNO,1,27,0,0)
	GO TO (ASNCHG,ASNLOG), CNGCTL
ASNEND,
	LOKCTL = 1
	XCALL IO (1,MESARA,1,WRITE,LOKCTL)
	GO TO MAINMU
;****************************************
DSPASN,
	SUB =
DSPAS1,
	INCR SUB
	IF (SUB.GT.27) GO TO DSPAS2
	ROW = SUB - (((SUB-1)/14)*14) + 08
	COL = ((((SUB-1)/14)+1)*15)+38
	ENTRY(1,4) = SUB, 'ZX. '
	XCALL OUTPT (ROW,COL,0,ENTRY(1,4))
	XCALL OUTPT (0,0,0,LOGASS(SUB))
	XCALL OUTPT (0,0,0,'  ')
	XCALL OUTPT (0,0,0,PHYASS(SUB))
	GO TO DSPAS1
DSPAS2,
	RETURN
;*****************************
;SET TERMINAL CHARACTERISTICS
;*****************************
TRMCHR,
	XCALL OUTPT (2,1,2,'SET TERMINAL CHARACTERISTICS')
	XCALL OUTPT (4,07,0,'1. TERMINAL NUMBER (1-')
	DISPLAY (15,DSPTER,')')
	XCALL OUTPT (4,38,0,'2. TERMINAL TYPE')
	XCALL OUTPT (6,20,0,'Terminals currently supported:')
	XCALL OUTPT (8,10,0,'1 = DEC VT52')
	XCALL OUTPT (9,10,0,'2 = DEC VT52  with printer')
	XCALL OUTPT (10,10,0,'3 = DEC VT100 (in VT52 mode)')
	XCALL OUTPT (11,10,0,'4 = DEC VT100 (in VT52 mode)')
	XCALL OUTPT (12,10,0,'     with AVO')
	XCALL OUTPT (13,10,0,'5 = DEC VT100 (in VT52 mode)')
	XCALL OUTPT (14,10,0,'     with AVO & local printer')
	XCALL OUTPT (15,10,0,'6 = DEC VT100 (in ANSI mode)')
	XCALL OUTPT (16,10,0,'7 = DEC VT100 (in ANSI mode)')
	XCALL OUTPT (17,10,0,'     with AVO')
	XCALL OUTPT (18,10,0,'8 = DEC VT100 (in ANSI mode)')
	XCALL OUTPT (19,10,0,'     with AVO & local printer')
TTNO,
	XCALL OUTPT (4,55,1,'\')
;	ENTRY = TNMBR
;	CTL = '04,33,02,00,#   ,E   '
;
; ABOVE 2 LINES DELETED AS PER MCBA PATCH UT3-RT-1		FEB 21, 1986
;
	CTL = '04,33,03,00,#   ,FE  '
; 
; ABOVE 1 LINE ADDED AS PER MCBA PATCH UT3-RT-1		FEB 21, 1986
;

	CALL INPUT
	GO TO (TTNO,ENDTT), INXCTL
	IF ( ENTRY.EQ.'00' ) ENTRY = TNMBR
;
; ABOVE 1 LINE ADDED AS PER MCBA PATCH UT3-RT-1		FEB 21, 1986
;

	TERMNO = ENTRY
	XCALL DSPLY (ROW,COL,MAX,TERMNO,5,0)
	IF (TERMNO.LT.1.OR.TERMNO.GT.SAVTER) GO TO TTNO
	TERMNO = TERMNO + 1
	LOKCTL = 0
	XCALL IO (1,MESARA,TERMNO,READ,LOKCTL)
	IF (LOKCTL) GO TO MAINMU
	XCALL DSPLY (4,55,2,TERMID,5,0)
TTANYC,
	CNGCTL = 6
	XCALL ANYCN (CNGCTL,WHATNO,0,0,0,0)
	GO TO (TERID,TRMCHR), CNGCTL
	LOKCTL = 1
	XCALL IO (1,MESARA,TERMNO,WRITE,LOKCTL)
	GO TO (MAINMU), CNGCTL + 2
	GO TO TTNO
TERID,
;	ENTRY = TERMID
;	CTL = '04,55,01,01,N   '
;
; ABOVE 2 LINES DELETED AS PER MCBA PATCH UT3-RT		FEB 21, 1986
;
	CTL = '04,55,01,00,N   ,F   '
;
; ABOVE 1 LINE ADDED AS PER MCBA PATCH UT3-RT			FEB 21, 1986
;

	CALL INPUT
	GO TO (TRMCHR), INXCTL
	IF ( ENTRY.EQ.'0' ) ENTRY = TERMID
;
; ABOVE 1 LINE ADDED AS PER MCBA PATCH UT3-RT			FEB 21, 1986
;
	TERMID = ENTRY
	IF (TERMID.LE.0 .OR. TERMID.GT.8) GO TO TERID
	XCALL DSPLY( ROW,COL,MAX,TERMID,5,0 )
;
;  ABOVE 1 LINE ADDED AS PER MCBA PATCH UT3-RT			FEB 21, 1986
;

	GO TO TTANYC
ENDTT,
	GO TO MAINMU
;**************************************
; SET SORT METHOD
;**************************************
SRTMTH,
	XCALL OUTPT (2,1,2,'SET SORT METHOD')
	XCALL OUTPT (8,20,0,'DEFAULT SORT TYPE')
	XCALL OUTPT (10,25,0,'1. MCBA DIBOL SORT')
	XCALL OUTPT (12,25,0,'2. CTS-300 SORT UTILITY')
	XCALL OUTPT (14,25,0,'3. RTSORT')
	LOKCTL = 0
	XCALL IO (1,MESARA,1,READ,LOKCTL)
	IF (LOKCTL) GO TO MAINMU
SRTMT1,
	ENTRY = SRTTYP + 1
	CTL = '08,38,01,01,N   ,E'
	CALL INPUT
	GO TO (SRTMTH,ENDSRT), INXCTL
	IF (ENTRY.EQ.'2' .AND. SYSTM.EQ.1) GO TO CTSERR
	IF (ENTRY.EQ.'3' .AND. SYSTM.NE.1) GO TO TSXERR
	IF (ENTRY.LE.'0' .OR. ENTRY.GT.'3') GO TO SRTMT1
	CNGCTL = 5
	XCALL ANYCN (CNGCTL,WHATNO,0,0,0,0)
	GO TO (SRTMT1,SRTMTH), CNGCTL
ENDSRT,
	ON ERROR TRYTSD
	CLOSE 2
	IF (ENTRY.EQ.'2') OPEN (2,I,'SY:SORT.SAV')
	ON ERROR NOSRT
	IF (ENTRY.EQ.'3') OPEN (2,I,'SY:RTSORT.SAV')
SRTOK,
	CLOSE 2
	OFF ERROR
	SRTTYP = ENTRY
	SRTTYP = SRTTYP - 1
	LOKCTL = 1
	XCALL IO (1,MESARA,1,WRITE,LOKCTL)
	GO TO MAINMU
TRYTSD,
	ON ERROR NOSRT
	OPEN (2,I,'SY:SORT.TSD')
	CLOSE 2
	OFF ERROR
	GO TO SRTOK
TSXERR,
	XCALL MESAG
&	  ('?UT-RTSORT MAY ONLY BE RUN WITH TSX-PLUS OPERATING SYSTEM',1)
	GO TO SRTMTH
CTSERR,
	XCALL MESAG
&	  ('?UT-CTS-300 SORT MAY NOT BE RUN WITH TSX-PLUS OPERATING SYSTEM',1)
	GO TO SRTMTH
NOSRT,
	XCALL MESAG
&	  ('?UT-CANNOT SELECT THIS SORT METHOD - SORT NOT FOUND ON "SY:"',1)
	GO TO SRTMTH
;*****************************************
; CLEAR SPECIAL FORMS FLAG
;*****************************************
SPCFRM,
	XCALL OUTPT (2,1,2,'CLEAR SPECIAL FORMS FLAG')
	XCALL OUTPT (8,15,0,
&		'RUNNING THIS FUNCTION WILL ALLOW ALL USERS TO')
	XCALL OUTPT (10,15,0,
&		'ACCESS THE PRINTER SELECTED, EVEN IF THAT')
	XCALL OUTPT (12,15,0,
&		'PRINTER IS CURRENTLY PRINTING SPECIAL FORMS.')
	XCALL OUTPT (16,15,0,
&		'CLEAR SPECIAL FORMS FLAG - ARE YOU SURE ?')
	CTL = '16,59,01,00,YN  '
	CALL INPUT
	IF (ENTRY.EQ.'N') GO TO MAINMU
SELSPC,
	XCALL OUTPT (18,15,0,'ENTER PRINTER NUMBER TO CLEAR')
	CTL = '18,59,01,00,#   ,E   '
	CALL INPUT
	GO TO (MAINMU,MAINMU), INXCTL
	TERMNO = ENTRY
;;;	IF (TERMNO.LT.1 .OR. TERMNO.GT.4) GO TO SELSPC
	IF (TERMNO.LT.1 .OR. TERMNO.GT.7) GO TO SELSPC
	LOKCTL = 0
	XCALL IO (1,MESARA,1,READ,LOKCTL)
	IF (LOKCTL) GO TO MAINMU
	SPCFRM (TERMNO,TERMNO) =
	FRMTRM (2*TERMNO-1,2*TERMNO) =
	LOKCTL = 1
	XCALL IO (1,MESARA,1,WRITE,LOKCTL)
	MESAGE (32,32) = TERMNO
	XCALL MESAG (MESAGE,1)
	GO TO SELSPC
;*************************************************************************
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,FCTYPE,ENTRY,INXCTL)
	RETURN
;*************************************************************************
END
