SUBROUTINE SECPS	;(COMPN,SELECT,INXCTL)
;
;  SECPS / UTL 
;
;
;		::PCPYUTL.DEF::
;*****************************************************************************
;		SECURITY SYSTEM UTILITIES AND SUBROUTINES 
;		DIBOL FOR RT-11
;		
;		RELEASED: JANUARY 1, 1985
;*****************************************************************************
;
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984,
;		1985, MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;
;	SECURITY SYSTEM - PASSWORD MAINTENANCE
;
	COMPN	,A
	SELECT	,D
	INXCTL	,D

RECORD SECURE
			.INCLUDE 'DEF:SEC001.DEF'
RECORD,X
			.INCLUDE 'DEF:SEC002.DEF'
RECORD,X
			.INCLUDE 'DEF:SEC003.DEF'
RECORD,X
			.INCLUDE 'DEF:SEC004.DEF'
RECORD SAVSEC
			.INCLUDE 'DEF:SEC005.DEF'
RECORD COMPNY
			.INCLUDE 'DEF:CMP001.DEF'
RECORD DEVICE
			.INCLUDE 'DEF:DEV001.DEF'
RECORD S8CTL
		,1D2,	10
		,1D2,	35
		,1D2,	01
		,1D2,	00
		,1A4,	'N 00'
		,1A4,	'E   '
		,1D1
RECORD,X
	ROW8	,A2
	COL8	,A2
	MAX8	,A2
	MIN8	,A2
	TYP8	,A4
	FCT8	,A4
RECORD S9CTL
	,19D2,	04,04,06,07,08,09,10,11,12,13,14,15,16,17,18,19,20,21,22
	,19D2,	23,49,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59
	,19D2,	09,03,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01,01
	,19D2,	09,03,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00,00
	,19A4,	'A   ','A   ','A   ','A   ','A   ','A   ','A   ','A   ',
&		'A   ','A   ','A   ','A   ','A   ','A   ','A   ','A   ',
&		'A   ','A   ','A   '
	,19A4,	'E   ','EU  ','D   ','UD  ','UD  ','UD  ','UD  ','UD  ',
&		'UD  ','UD  ','UD  ','UD  ','UD  ','UD  ','UD  ','UD  ',
&		'UD  ','UD  ','U   '
	,2D2,	01
	,2D2,	17
RECORD,X
	ROW9	,A38
	COL9	,A38
	MAX9	,A38
	MIN9	,A38
	TYP9	,A76
	FCT9	,A76
	STN9	,A4
	END9	,A4
RECORD S10CTL
		,3D2,	10,10,12
		,3D2,	25,51,45
		,3D2,	09,03,01
		,3D2,	09,03,00
		,3A4,	'A   ','A   ','A   '
		,3A4,	'E   ','U   ','TU  '
		,2D2
		,2D2
RECORD,X
	ROW10	,A6
	COL10	,A6
	MAX10	,A6
	MIN10	,A6
	TYP10	,A12
	FCT10	,A12
	STN10	,A4
	END10	,A4
RECORD S11CTL
		,3D2,	10,10,12
		,3D2,	29,55,29
		,3D2,	09,03,09
		,3D2,	09,03,09
		,3A4,	'A   ','A   ','A   '
		,3A4,	'E   ','U   '
		,D2
		,D2
RECORD,X
	ROW11	,A6
	COL11	,A6
	MAX11	,A6
	MIN11	,A6
	TYP11	,A12
	FCT11	,A12
	STN11	,A2
	END11	,A2
RECORD S12CTL
		,D2,	10
		,D2,	30
		,D2,	01
		,D2,	00
		,A4,	'N 00'
		,A4,	'E   '
RECORD,X
	ROW12	,A2
	COL12	,A2
	MAX12	,A2
	MIN12	,A2
	TYP12	,A4
	FCT12	,A4
RECORD S14CTL
		,4D2,	10,10,12,12
		,4D2,	25,51,37,45
		,4D2,	09,03,06,01
		,4D2,	09,03,04,00
		,4A4,	'A   ','A   ','A   ','A   '
		,4A4,	'E   ','U   ','E   ','EU  '
		,2D2
		,2D2
RECORD,X
	ROW14	,A8
	COL14	,A8
	MAX14	,A8
	MIN14	,A8
	TYP14	,A16
	FCT14	,A16
	STN14	,A4
	END14	,A4
RECORD S15CTL
		,2D2,	12,12
		,2D2,	25,51
		,2D2,	09,03
		,2D2,	09,03
		,2A4,	'A   ','A   '
		,2A4,	'E   ','U   '
RECORD,X
	ROW15	,A4
	COL15	,A4
	MAX15	,A4
	MIN15	,A4
	TYP15	,A8
	FCT15	,A8
COMMON CTL
	ROW	,19D2
	COL	,19D2
	MAX	,19D2
	MIN	,19D2
	INTYP	,19A4
	FCTYP	,19A4
	STRNM	,2D2
	ENDNM	,2D2
COMMON,X
	ROW0	,A38
	COL0	,A38
	MAX0	,A38
	MIN0	,A38
	TYP0	,A76
	FCT0	,A76
	STN0	,A4
	END0	,A4
;*****************************COMMON DATA SECTION***********************
COMMON
	PKARY	,400D3	;PAKAGE ARRAY LOADED FROM REC #2 OF SECURE.
			;ACCESSED BY THE ARYCNT COUNTER (=(PAKAGE # *20)-20)
			;=20 PACKAGES X 20 FILES MAX PER PACKAGE
	MAXPK	,D2			;MAXIMUM NUMBER OF ALLOWED PACKAGES
					;IN PACKAGE CODE ARRAY (PKCOD, PCKGS)
COMMON			;PACKAGE COUNTER - KEEPS TRACK OF THE NUMBER OF FILES
	CNTS	,20D2	;CONTAINED WITHIN EACH PACKAGE ARRAY (PKARY)
;*****************************************************************************
RECORD PASWOR
	PASWD	,10A1
RECORD SPWORD
	WPWORD	,10A1
RECORD
		,A30,	' !"#$%&''()*+,-./0123456789:;<='
		,A35,	'>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`'
RECORD,X
	DECODE	,65A1
RECORD
		,A30,	'VHA. WIB/!XJC0"YKD1#ZLE2$[MF3%'
		,A35,	'\NG4&]O5''^P6(_Q7)`R8*S9+T:,U;-<=>?@'
RECORD,X
	CODE	,65A1
RECORD WRKAC
	WRKACC	,200A1	;WORKING STORAGE FOR ACCESS CODES
RECORD
	ARYCNT	,D3	;PACKAGE ARRAY COUNTER - FOR PKARY
	NUM	,D2	;COUNTER FOR INPUT CTL ARRAY
	BLANKS	,A10
	CNGCTL	,D1
	CNGFCT	,20A4,	'E   '		;FUNCTION TYPES FOR CHANGE MODE-ALL
	CNGNUM	,D2	;COUNTER FOR RANGES IN ANYCN
	COUNT	,D2	;COUNTS CHARACTERS IN PASSWORD
	DECMAL	,D5
	DELCNT	,D5	;STORES DELETE COUNT OF SECURE FILE
	ENTRY	,A10
	FILCNT	,D3	;COUNTER USED FOR SETTING UP PACKAGE ARRAY
	HPWORD	,4A1	;WORK AREA FOR UNSCRAMBLE OF PASSWORD
	LOKCTL	,D1
	MAXCNT	,D5	;STORES MAX COUNT OF SECURE FILE
	ORGCNT	,D5	;STORES ORGANIZED COUNT OF SECURE FILE
	PAKACC	,20A1	;STORED ACCESS CODES BY PACKAGE IN ORDER BY SCREEN 
	READ	,D1,	0
	RECCNT	,D5	;STORES RECORD COUNT OF SECURE FILE
	SAVACC	,A1	;STORES ACCESS CODE WITHIN INPUT LOOP
	SAVCOD	,A3	;GENERAL STORAGE FOR DEVICE OR COMPANY CODE
	SAVREC	,D5	;SAVES RECORD COUNT AFTER SEARCHES
	SAVSUB	,D2
	SECPAS	,A10
	SRCCTL	,D1	;SEARCH CONTROL FLAG (0=FOUND,1=NOT FOUND)
	SUB	,D3	;MISC COUNTER FOR CODE/DECODE
	WHATNO	,D2
	WRITE	,D1,	1
PROC
	COMPNY = COMPN
	LOKCTL = 1
	XCALL IO (1,SECURE,1,READ,LOKCTL)
	RECCNT = RECSEC
	ORGCNT = ORGSEC
	MAXCNT = MAXSEC
	DELCNT = DELSEC
	GO TO (ADDPAS,CNGPAS,CNGFAC,DELPAS), SELECT - 3
ADDPAS,
	CTL =
	NUM = 1
	ROW0 = ROW8
	COL0 = COL8
	MAX0 = MAX8
	MIN0 = MIN8
	TYP0 = TYP8
	FCT0 = FCT8
	XCALL SECSC (8)
	CALL INPUT
	GO TO (ADDPAS,RETURN), INXCTL
	SELECT = ENTRY
	GO TO (ADDPAK,ADDFIL), SELECT
	GO TO ADDPAS
;***************************************************************************
;                 ADD PASSWORDS - SET FILE ACCESS BY PACKAGE
;***************************************************************************
ADDPAK,
	CTL =
	CNGCTL =
	XCALL OUTPT (02,01,2,'ADD PASSWORDS - SET FILE ACCESS BY PACKAGE')
	ROW0 = ROW9
	COL0 = COL9
	MAX0 = MAX9
	MIN0 = MIN9
	TYP0 = TYP9
	FCT0 = FCT9
	STN0 = STN9
	END0 = END9
	PAKACC (1,20) =
	CALL SCREN9
	CALL PASWD9
	GO TO (ADDPAK,RETURN), INXCTL
	GO TO INPSC9
PASWD9,				;CALLED BY BOTH PACKAGE AND FILE SECTIONS
	ENTRY =
	NUM = 1
	CALL INPUT
	IF (INXCTL) RETURN
	SPWORD = ENTRY
	CALL SCRMBL
	CALL CODE
PASCD9,
	NUM = 2
	ENTRY =
	CALL INPUT
	GO TO (PASWD9), INXCTL - 3
	IF (INXCTL) RETURN
	IF (ENTRY(1,3).EQ.'XXX') GO TO BADCM9
	SUB =
CMPLP9,
	IF (SUB.GE.8) GO TO BADCM9
	INCR SUB
	IF (ENTRY(1,3).NE.COMCOD(SUB)) GO TO CMPLP9
	CALL PASRCH
	GO TO (PASWD9), SRCCTL + 1
	SECURE =
	PASWRD = ENTRY (1,9)
	COMPNM = ENTRY (10,12)
	RETURN
BADCM9,
	XCALL MESAG ('?UT-INVALID COMPANY CODE',1)
	GO TO PASCD9
INPSC9,
	IF (NUM.GE.18) GO TO CNGSC9
	INCR NUM
INPLP9,
	ENTRY = PAKACC (NUM-2)
	IF (ENTRY.EQ.BLANKS) ENTRY = SAVACC
	CALL INPUT
	GO TO (ADDPAK,RETURN,RETURN,UP9,DN9), INXCTL
	IF (ENTRY.NE.' ' .AND. ENTRY.NE.'I' .AND. ENTRY.NE.'U') GO TO INPLP9
	PAKACC (NUM-2) = ENTRY
	SAVACC = ENTRY
	GO TO (INPSC9,CNGSC9), CNGCTL + 1
UP9,
	XCALL OUTPT (ROW(NUM),COL(NUM),0,PAKACC(NUM-2))
	NUM = NUM - 1
	GO TO INPLP9
DN9,
	XCALL OUTPT (ROW(NUM),COL(NUM),0,PAKACC(NUM-2))
	GO TO INPSC9
CNGB9,
	NUM = WHATNO + 1
	IF (NUM.LE.2) NUM = 1
	IF (NUM.NE.1) GO TO INPLP9
	IF (NUM.EQ.1) CALL PASWD9
	GO TO (ADDPAK,RETURN), INXCTL
CNGSC9,
	FCT0 = CNGFCT
	CNGCTL = 2
	CALL ANYCNG
	GO TO (CNGB9,ADDPAK), CNGCTL
PRCC9,
	INXCTL =
	XCALL WATE (4)
	NUM =
	WACCES =
	WRKAC =
PRCLP9,					;STEP THRU SET OF PAKAGE ACES CDES.
	IF (NUM.GE.MAXPK) GO TO ADDSEC
	INCR NUM
	IF (PAKACC(NUM).EQ.' ') GO TO PRCLP9	;ARRAY IS ALREADY SPACES
	ARYCNT = (NUM-1)*20
	SUB =
PRLUP9,					;STEP THRU SET OF FILE #'S BY PACKAGE
	IF (SUB.GE.CNTS(NUM)) GO TO PRCLP9
	INCR SUB
	IF (PKARY(ARYCNT+SUB).EQ.0) GO TO PRCLP9
	WRKACC (PKARY(ARYCNT+SUB)) = PAKACC (NUM)
	GO TO PRLUP9
ADDSEC,
	INCR RECCNT
	IF (RECCNT.GT.MAXCNT) GO TO FULL
	WACCES = WRKAC
	LOKCTL = 1
	XCALL IO (1,SECURE,RECCNT,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IO (1,SECURE,1,READ,LOKCTL)
	RECSEC = RECCNT
	LOKCTL = 1
	XCALL IO (1,SECURE,1,WRITE,LOKCTL)
	GO TO (RETURN), CNGCTL + 2
	GO TO ADDPAK
PASRCH,
	SRCCTL = 2
	ENTRY (10,12) = ENTRY (1,3)
	ENTRY (1,9) = SPWORD
	XCALL SERCH (1,SECURE,ENTRY(1,12),1,12,ORGCNT,DECMAL,SRCCTL,1,13,18,
&		0,0,0,0)
	IF (SRCCTL) RETURN
	XCALL MESAG ('?UT-PASSWORD ALREADY EXISTS FOR THIS COMPANY',1)
	RETURN
SCREN9,
	XCALL SECSC (9)
	RETURN
;*************************************************************************
;              ADD PASSWORDS - SET FILE ACCESS BY FILE
;*************************************************************************
ADDFIL,
	XCALL OUTPT (02,01,2,'ADD PASSWORDS - SET FILE ACCESS BY FILE')
	CTL =
	CNGCTL =
	ROW0 = ROW10
	COL0 = COL10
	MAX0 = MAX10
	MIN0 = MIN10
	TYP0 = TYP10
	FCT0 = FCT10
	CALL SCRN10
CNGP10,
	CALL PASWD9	;PREVIOUS SECTION ALREADY HANDLES PASSWORD ENTRY
	GO TO (ADDFIL,RETURN), INXCTL
	GO TO (CNGS10), CNGCTL
INPS10,
	NUM = 3
	SAVACC =
	SUB =
	WRKAC =
INPL10,
	IF (SUB.GE.200) GO TO CNGS10
	INCR SUB
IN1L10,
	LOKCTL = 1
	XCALL IO (14,DEVICE,SUB,READ,LOKCTL)
	IF (FILNAM.EQ.BLANKS) GO TO INPL10
IN2L10,
	UNLOCK 14
	XCALL OUTPT (ROW(NUM),37,1,FILNAM)
	ENTRY = SAVACC
	CALL INPUT
	GO TO (ADDFIL,RETURN,DEFL10,UP10), INXCTL
DEFL10,
	IF (ENTRY.NE.' ' .AND. ENTRY.NE.'U' .AND. ENTRY.NE.'I') GO TO IN1L10
	WRKACC (SUB) = ENTRY
	SAVACC = ENTRY
	GO TO INPL10
UP10,
	IF (SUB.LE.1) GO TO IN1L10
	SUB = SUB - 1
	LOKCTL = 1
	XCALL IO (14,DEVICE,SUB,READ,LOKCTL)
	IF (DEVICE.EQ.BLANKS) GO TO UP10
	GO TO IN2L10
CNGS10,
	CNGCTL = 6
	CALL ANYCNG
	GO TO (CNGP10,ADDFIL), CNGCTL
PRCC10,
	INCR RECCNT
	IF (RECCNT.GT.MAXCNT) GO TO FULL
	WACCES = WRKAC
	LOKCTL = 1
	XCALL IO (1,SECURE,RECCNT,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IO (1,SECURE,1,READ,LOKCTL)
	RECSEC = RECCNT
	LOKCTL = 1
	XCALL IO (1,SECURE,1,WRITE,LOKCTL)
	GO TO (RETURN), CNGCTL + 2
	GO TO ADDFIL
SCRN10,
	XCALL SECSC (10)
	RETURN
;************************************************************************
;                     CHANGE PASSWORDS
;************************************************************************
CNGPAS,
	CTL =
	CNGCTL =
	ROW0 = ROW11
	COL0 = COL11
	MAX0 = MAX11
	MIN0 = MIN11
	TYP0 = TYP11
	FCT0 = FCT11
	XCALL SECSC (11)
	CALL PASW11
	GO TO (CNGPAS,RETURN), INXCTL
	GO TO INPS11
PASW11,				;CALLED BY BOTH SEVERAL CHANGE SCREENS
	NUM = 1
	ENTRY =
	CALL INPUT
	IF (INXCTL) RETURN
	SPWORD = ENTRY
	CALL SCRMBL
	CALL CODE
PASC11,
	NUM = 2
	ENTRY =
	CALL INPUT
	GO TO (PASW11), INXCTL - 3
	IF (INXCTL) RETURN
	CALL PSRCH1
	GO TO (PASW11), SRCCTL
	SAVREC = DECMAL
	RETURN
INPS11,
	NUM = 3
	ENTRY =
	CALL INPUT
	GO TO (CNGPAS,RETURN), INXCTL
	SPWORD = ENTRY
	CALL SCRMBL
	CALL CODE
	ENTRY (1,3) = COMPNM
	CALL PASRCH			;SEARCH FOR DUPLICATE PASSWORD/COMP.
	GO TO (INPS11), SRCCTL + 1
CNGS11,
	CNGCTL = 6
	CALL ANYCNG
	GO TO (INPS11,CNGPAS), CNGCTL
PRCC11,
	INCR RECCNT
	IF (RECCNT.GT.MAXCNT) GO TO FULL
	INCR DELCNT				;ACTUALLY DELETE OLD PASSWORD
	LOKCTL = 1
	XCALL IO (1,SECURE,SAVREC,READ,LOKCTL)
	SAVSEC = SECURE
	DFLSEC = ']]]DEL'			;RATHER THAN UNSORT THE FILE,
	LOKCTL = 1
	XCALL IO (1,SAVSEC,SAVREC,WRITE,LOKCTL)	;DELETE THE RECORD
	PASWRD = SPWORD
	LOKCTL = 1
	XCALL IO (1,SECURE,RECCNT,WRITE,LOKCTL)	;AND ADD THE NEW PASSWORD
	LOKCTL = 1
	XCALL IO (1,SECURE,1,READ,LOKCTL)
	RECSEC = RECCNT
	DELSEC = DELCNT
	LOKCTL = 1
	XCALL IO (1,SECURE,1,WRITE,LOKCTL)
	GO TO (RETURN), CNGCTL + 2
	GO TO CNGPAS
PSRCH1,				;SEARCH FOR MATCH TO PASSWORD AFTER SCRAMBLING
	SRCCTL = 2
	ENTRY (10,12) = ENTRY (1,3)
	ENTRY (1,9) = SPWORD
	XCALL SERCH (1,SECURE,ENTRY(1,12),1,12,ORGCNT,DECMAL,SRCCTL,1,13,18,
&		0,0,0,0)
	IF (SRCCTL.EQ.0) RETURN
	XCALL MESAG ('?UT-PASSWORD/COMPANY CODE COMBINATION NOT FOUND',1)
	RETURN
;***************************************************************************
;                  CHANGE PASSWORD FILE ACCESS
;***************************************************************************
CNGFAC,
	CTL =
	ROW0 = ROW12
	COL0 = COL12
	MAX0 = MAX12
	MIN0 = MIN12
	TYP0 = TYP12
	FCT0 = FCT12
	XCALL SECSC (12)
	NUM = 1
	ENTRY =
	CALL INPUT
	GO TO (CNGFAC,RETURN), INXCTL
	SELECT = ENTRY
	GO TO (CNGPAK,CNGFIL), SELECT
	GO TO CNGFAC
;************************************************************************
;                  CHANGE PASSWORD FILE ACCESS BY PACKAGE
;************************************************************************
CNGPAK,			;USES SAME SCREEN AS '9' AD PASSWORDS
			;AND SAME PASSWORD SEARCH AS '11' CHANGE PASSWORDS
	CTL =
	CNGCTL = 1
	XCALL OUTPT (02,01,2,'CHANGE PASSWORD FILE ACCESS BY PACKAGE')
	ROW0 = ROW9
	COL0 = COL9
	MAX0 = MAX9
	MIN0 = MIN9
	TYP0 = TYP9
	FCT0 = CNGFCT
	STRNM (1) = 2
	END0 = END9
	PAKACC (1,48) =
	CALL SCREN9
	CALL PASW11
	GO TO (CNGPAK,RETURN), INXCTL
	LOKCTL = 1
	XCALL IO (1,SECURE,SAVREC,READ,LOKCTL)
	GO TO CNGS13
INPS13,
	ENTRY = PAKACC (NUM-2)
	IF (ENTRY.EQ.BLANKS) ENTRY = SAVACC
	CALL INPUT
	GO TO (ADDPAS,RETURN), INXCTL
	IF (ENTRY.NE.' ' .AND. ENTRY.NE.'I' .AND. ENTRY.NE.'U') GO TO INPS13
	PAKACC (NUM-2) = ENTRY
	IF (ENTRY.EQ.' ') PAKACC (NUM-2) = 'X'	;SET 'X' TO LATER BE CONVERTED
						;TO ' '
	SAVACC = ENTRY
	GO TO CNGS13
CNGB13,
	NUM = WHATNO + 1
	GO TO INPS13
CNGS13,
	CNGCTL = 2
	CALL ANYCNG
	GO TO (CNGB13,CNGPAK), CNGCTL
PRCC13,
	NUM =
PRCL13,					;STEP THRU SET OF PAKAGE ACES CDES.
	IF (NUM.GE.MAXPK) GO TO CNGSEC
	INCR NUM
	IF (PAKACC(NUM).EQ.' ') GO TO PRCL13	;NO CHANGES REQUESTED
	IF (PAKACC(NUM).EQ.'X') PAKACC (NUM) =	;BLANK OUT PREVIOUS ACCESS
	ARYCNT = (NUM-1)*20
	SUB =
PRLU13,					;STEP THRU SET OF FILE #'S BY PACKAGE
	IF (SUB.GE.CNTS(NUM)) GO TO PRCL13
	INCR SUB
	IF (PKARY(ARYCNT+SUB).EQ.0) GO TO PRCL13
	ACCESS (PKARY(ARYCNT+SUB)) = PAKACC (NUM)
	GO TO PRLU13
CNGSEC,
	LOKCTL = 1
	XCALL IO (1,SECURE,SAVREC,WRITE,LOKCTL)
	GO TO (RETURN), CNGCTL + 2
	GO TO CNGPAK
;************************************************************************
;
;************************************************************************
CNGFIL,
	XCALL OUTPT (02,01,2,'CHANGE PASSWORD FILE ACCESS BY FILE')
	CALL SCRN10			;SAME SCREEN AS "ADD PAS. SET BY FILE"
	CTL =
	ROW0 = ROW14
	COL0 = COL14
	MAX0 = MAX14
	MIN0 = MIN14
	TYP0 = TYP14
	FCT0 = FCT14
	CALL PASW11			;SAME PASSWORD LOOKUP AS CHANGE PASS.
	GO TO (CNGFIL,RETURN), INXCTL
	LOKCTL = 1
	XCALL IO (1,SECURE,SAVREC,READ,LOKCTL)
INPS14,
	NUM = 3
	XCALL OUTPT (ROW(NUM),COL(NUM),1,'\')	;CLEAR OUT PREVIOUS SETTINGS
	ENTRY =
	CALL INPUT
	GO TO (CNGFIL,PRCC14), INXCTL
	CALL SRCH14
	GO TO (INPS14), SRCCTL
IN1S14,
	NUM = 4
	ENTRY = ACCESS (FILCNT)
	CALL INPUT
	GO TO (CNGFIL,PRCC14,PRCC14,INPS14), INXCTL
	IF (ENTRY.NE.' ' .AND. ENTRY.NE. 'I' .AND. ENTRY.NE.'U') GO TO IN1S14
	ACCESS (FILCNT) = ENTRY
	GO TO INPS14
PRCC14,
	SUB = 7
	XCALL MESAG ('DO YOU WISH TO KEEP CHANGES MADE?',SUB)
	GO TO (CNGFIL), SUB
	LOKCTL = 1
	XCALL IO (1,SECURE,SAVREC,WRITE,LOKCTL)
	GO TO CNGFIL
SRCH14,
	SRCCTL =
	FILCNT = 1
	XCALL SERCH (14,DEVICE,ENTRY(1,6),1,6,200,FILCNT,SRCCTL,7,1,6,0,0,0,0)
	IF (SRCCTL.EQ.0) RETURN
	XCALL MESAG ('?UT-FILENAME NOT FOUND',1)
	RETURN
;****************************************************************************
;                           DELETE PASSWORDS
;****************************************************************************
DELPAS,
	CTL =
	ROW0 = ROW15
	COL0 = COL15
	MAX0 = MAX15
	MIN0 = MIN15
	TYP0 = TYP15
	FCT0 = FCT15
	XCALL SECSC (13)
	CALL PASW11		;SAME PASSWORD LOOKUP LOGIC AS CHANGE PASWDS.
	GO TO (DELPAS,RETURN), INXCTL
	LOKCTL = 1
	XCALL IO (1,SECURE,SAVREC,READ,LOKCTL)
	SUB = 7
	XCALL MESAG ('OK TO DELETE THIS PASSWORD?',SUB)		;Y/N ANSWER
	GO TO (DELPAS), SUB
	SAVSEC = SECURE
	DFLSEC = ']]]DEL'
	LOKCTL = 1
	XCALL IO (1,SAVSEC,SAVREC,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IO (1,SECURE,1,READ,LOKCTL)
	RECCNT = RECSEC
	ORGCNT = ORGSEC
	MAXCNT = MAXSEC
	INCR DELSEC
	DELCNT = DELSEC
	LOKCTL = 1
	XCALL IO (1,SECURE,1,WRITE,LOKCTL)
	XCALL MESAG ('PASSWORD DELETED',1)
	GO TO DELPAS
;************************************************************************
;                   PASSWORD SCRAMBLE/CODE ROUTINES
;************************************************************************
SCRMBL,
	HPWORD(1) = WPWORD(1)
	HPWORD(2) = WPWORD(3)
	HPWORD(3) = WPWORD(5)
	HPWORD(4) = WPWORD(7)
	WPWORD(1) = WPWORD(2)
	WPWORD(3) = WPWORD(4)
	WPWORD(5) = WPWORD(6)
	WPWORD(7) = WPWORD(8)
	WPWORD(2) = HPWORD(1)
	WPWORD(4) = HPWORD(2)
	WPWORD(6) = HPWORD(3)
	WPWORD(8) = HPWORD(4)
	HPWORD(1) = WPWORD(1)
	HPWORD(2) = WPWORD(2)
	WPWORD(1) = WPWORD(8)
	WPWORD(2) = WPWORD(9)
	WPWORD(8) = HPWORD(1)
	WPWORD(9) = HPWORD(2)
	RETURN
CODE,
	SUB =
CODELP,
	IF (SUB.GE.MAX(NUM)) RETURN
	INCR SUB
	XCALL DECML (WPWORD(SUB),DECMAL)
	DECMAL = DECMAL - 31
	WPWORD (SUB) = CODE (DECMAL)
	GO TO CODELP
;*****************************************************************************
;                        INPUT/ANYCN
;*****************************************************************************
RETURN,
	INXCTL = 2
	RETURN
EXIT,
	INXCTL = 3
	RETURN
INPUT,
	XCALL INPUT (ROW(NUM),COL(NUM),MAX(NUM),MIN(NUM),INTYP(NUM),
&	FCTYP(NUM),ENTRY,INXCTL)
	RETURN
ANYCNG,
	XCALL ANYCN (CNGCTL,WHATNO,STRNM(1),ENDNM(1),0,0)
	RETURN
FULL,
	XCALL OUTPT
&	(22,1,4,'PASSWORD NOT ADDED. SECURE.DDF FILE FULL.')
	XCALL OUTPT (23,1,4,
&   'THE MAXIMUM NUMBER OF ALLOWABLE PASSWORDS (INCLUDING DELETIONS) IS 200.')
	XCALL MESAG
&	('IF PASSWORDS HAVE BEEN DELETED, REORGANIZE FILE AND TRY AGAIN',1)
	GO TO EXIT
END
