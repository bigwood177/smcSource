;R_IN.CP
;
;	ROCKFORD: log into job
;

	.include 'wnd:windows.def'

RECORD	R_JOB
	.INCLUDE 'DEF:RD076A.DEF'

RECORD	RJ_HEADER
	.INCLUDE 'DEF:RD076B.DEF'

RECORD	ORDHDR
	.INCLUDE 'DEF:RD044A.DEF'

RECORD	ORDLIN
	.INCLUDE 'DEF:RD045A.DEF'

RECORD	DUCACC
	.INCLUDE 'DEF:RD175A.DEF'

RECORD	SALMAN
	.INCLUDE 'DEF:RD054A.DEF'

RECORD	COPTBL
	.INCLUDE 'DEF:RD182A.DEF'

RECORD	DPTSTS
	.INCLUDE 'DEF:RD193A.DEF'


RECORD	POP
	.INCLUDE 'DEF:POP1.DEF'


RECORD	CHANNEL
	CHN044	,D2
	CHN045	,D2
	CHN054	,D2
	CHN076	,D2
	CHN175	,D2
	CHN182	,D2
	CHN193	,D2

RECORD	WN_NAME
		,A5,	'JOBIN'
	WN_TNMBR,D4

RECORD	HLINE
	,A*,'DATE ENTERED  SALESMAN   EXT  PO NUMBER  JOB NUMBER  SHIP VIA'

RECORD	WARS
	W_ID	,D4
	WND_1	,D4

RECORD	VARS
	OPNOK	,D1
	DT	,A20
	ACHAR	,A1
	XFLAG	,A1
	TSTAT	,D1
	SAVRFA	,A6
	XEMP	,A3	;INITIALS
	XORD	,D6
	XDAT4	,D4
	XDATE	,D8
	GOTP	,D1
	GOTO	,D1
	I	,D6
	N_SEQ	,D8
	DEPT	,D8
	ENTRY	,A30
	INXCTL	,D1
	WHATNO	,D1
	CNGCTL	,D1
	LOKCTL	,D1
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	DELETE	,D1,3

	SWITCH	,D1
	V	,D1
;
PROC
	XCALL TERID (V)
	CALL INIT_WINDOW
	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF

DISPLA,

;;;	GET INIT'S
;;;	READ COPTBL "EI"
;;;	IF EMP CURRENTLY LOGGED INTO A JOB, DON'T PROCEED

	CLEAR CNGCTL

	XCALL W_DISP(W_ID, WD_CLEAR)
	XCALL W_DISP(W_ID, WD_POS, 1, 1, 'ORDER STATUS')
	XCALL W_DISP(W_ID, WD_POS, 3, 4, 'EMPLOYEE:')
	XCALL W_DISP(W_ID, WD_POS, 4, 4, 'ORDER   :')
	
EMP,
	XCALL WINPT(W_ID, 3, 16, 03, 01, 'AE', ENTRY, INXCTL)
	GOTO (DISPLA, ENDOFF),INXCTL
	XEMP = ENTRY(1,3)

	CLEAR TBLKEY
	TBLCOD = 'EI'
	TBLKEY = XEMP
	XCALL ISIO (CHN182, COPTBL, TBL_KEY, READ, LOKCTL)
	IF (LOKCTL .NE. 0)
		BEGIN
		XCALL OLMSG (W_ID, 23, 'EMPLOYEE NOT FOUND', 1)
		GOTO DISPLA
		END
	XCALL W_DISP(W_ID, WD_POS, 3, 21, EI_NAME)

XORD,
	XCALL WINPT(W_ID, 4, 16, 06, 00, '#E', ENTRY, INXCTL)
	GOTO (DISPLA, ENDOFF), INXCTL
	XORD = ENTRY(1,6)
	
	CALL GETORD
	IF (LOKCTL) GOTO DISPLA

	CALL GETDPT			;POP

	IF (I .EQ. 0) 
		BEGIN
		XCALL WNMSG('No Departments for this Order')
		GOTO DISPLA
		END

	NUMARA = I


	DO BEGIN
	  XCALL TTSTS (TSTAT)
	  IF (TSTAT) xcall w_disp(wnd_1,wd_accept,achar)
	END UNTIL (TSTAT.EQ.0)

	DLINE = 'DPT STATUS    COMMENTS                 '
	XCALL POP1 (POP)

	USING P_ACTION SELECT
	(1),	BEGIN
		SAVRFA = PARRFA(PI)
		READ (CHN193, DPTSTS, RFA:SAVRFA) [ERR=DISPLA]
		UNLOCK CHN193
		END
	(),	GOTO DISPLA		;NEXT ORDER
	ENDUSING


	IF (S_STRT) DLINE(5,13) = 'STARTED'

	USING S_STAT SELECT
	(0),	DLINE(5,13) = 'OPEN '
	(1),	DLINE(5,13) = 'COMPLETED'
	(),	DLINE(5,13) = 
	ENDUSING

	IF (S_PACK) DLINE(5,13) = 'PACKED'

	DLINE(15,34) = S_COMM
	DLINE(36,38) = S_INT

	XDAT4(1,2) = S_DATE(1,2)	;MM
	XDAT4(3,4) = S_DATE(7,8)	;YY
	DLINE(40,44) = XDAT4,	'XX/XX'
	DLINE(46,50) = S_TIME,	'ZX:XX'
	
	XCALL W_DISP(W_ID, WD_POS, 8,5, DLINE)
	XCALL W_DISP(W_ID, WD_POS, 10,5,'<CR> = NO ACTION')
	XCALL W_DISP(W_ID, WD_POS, 11,5,'S = STARTED')
	XCALL W_DISP(W_ID, WD_POS, 12,5,'C = COMPLETED')
	XCALL W_DISP(W_ID, WD_POS, 13,5,'P = PACKED')
ASK,
	XCALL WINPT (W_ID, 9,5,01,00,'A ',ENTRY,INXCTL)
	GOTO (DISPLA),INXCTL

	DT = %DATETIME
	XDATE(1,4)  = DT(5,8)
	XDATE(5,8) = DT(1,4)

	XFLAG = ENTRY(1,1)
	USING XFLAG SELECT
	(' '),	GOTO DISPLA
	('S'),	BEGIN
		READ (CHN193, DPTSTS, RFA:SAVRFA) [ERR=DISPLA]
		S_STRT = 1	;COMPLETED
		S_DATE = XDATE
		S_TIME = DT(9,12)
		WRITE (CHN193, DPTSTS, RFA:SAVRFA) [ERR=DISPLA]
		END
	('C'),	BEGIN
		READ (CHN193, DPTSTS, RFA:SAVRFA) [ERR=DISPLA]
		S_STAT = 1	;COMPLETED
		S_DATE = XDATE
		S_TIME = DT(9,12)
		WRITE (CHN193, DPTSTS, RFA:SAVRFA) [ERR=DISPLA]
		END
	('P'),	BEGIN
		READ (CHN193, DPTSTS, RFA:SAVRFA) [ERR=DISPLA]
		S_PACK = 1	;PACKED
		S_DATE = XDATE
		S_TIME = DT(9,12)
		WRITE (CHN193, DPTSTS, RFA:SAVRFA) [ERR=DISPLA]
		END
	(),	GOTO ASK
	ENDUSING

	
;;;	SELECT DEPT
;;;	OK?
;;;	TIME/DATE STAMP, STORE RECORD

RD_HEADER,
	CLEAR RH_KEY
	READ (CHN076, RJ_HEADER, RH_KEY) [LOCK=H_LOCK]
	N_SEQ = RH_SEQ
	INCR RH_SEQ
	WRITE (CHN076, RJ_HEADER, RH_KEY)

	CLEAR R_JOB
	R_INIT = XEMP
	R_SEQ = N_SEQ
	R_ORDR = XORD
	R_DEPT = S_DEPT

;;;	DT = %DATETIME		;set above
	R_DATE = DT(1,8)
	R_TIME = DT(9,12)
	R_FLAG = XFLAG
	STORE (CHN076, R_JOB, R_KEY)
	GOTO ENDOFF

H_LOCK,
	SLEEP 1
	GOTO RD_HEADER

ENDOFF,
	CALL CLOSE
	xcall u_finish
	XCALL FLAGS (7000000)
	STOP


GETORD,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL ISIO (CHN044, ORDHDR, XORD, READ, LOKCTL)
	IF (LOKCTL)
		BEGIN
		XCALL OLMSG (W_ID, 23,'ORDER NOT ON FILE',1)
		RETURN
		END

	XCALL IO (CHN054, SALMAN, OSLMAN, READ, LOKCTL)
	IF (LOKCTL) CLEAR SALMAN

	XCALL W_DISP (W_ID, WD_POS, 4,21, OCUSNM)
	XCALL W_DISP (W_ID, WD_POS, 6,1, HLINE)

	XDATE(1,4) = OORDDT(5,8)
	XDATE(5,8) = OORDDT(1,4)
	ENTRY(1,10) = XDATE,	'XX/XX/XXXX'
	XCALL W_DISP (W_ID, WD_POS, 7,3, ENTRY(1,10))

	XCALL W_DISP(W_ID, WD_POS, 7,15,SLSNM(1,10))
	ENTRY(1,3) = SLSTNO,'XXX'
	XCALL W_DISP(W_ID, WD_POS, 7,26,ENTRY(1,3))

	XCALL W_DISP(W_ID, WD_POS,7,31,OPONO)
	XCALL W_DISP(W_ID, WD_POS,7,42,OJOBNO)
	
	TBLCOD = 'SC'
	SC_SCAC = OSCAC
	XCALL ISIO (CHN182, COPTBL, TBL_KEY, READ, LOKCTL)
	IF (LOKCTL) SC_NAME = '* NOT ON FILE *'
	XCALL W_DISP(W_ID, WD_POS, 7,54,SC_NAME)
	XCALL W_UPDT

	RETURN
;---------------------------------------------------------

GETDPT,

	CLEAR GOTP, GOTO
	READ (CHN175, DUCACC, OORDNO) [ERR=FNDDUC]
FNDDUC,
	WHILE (DUCTOR .EQ. OORDNO)
		BEGIN
		USING STY SELECT
		(1,4,5),	GOTP=1
		(2,3,6),	GOTO=1
		ENDUSING
		READS(CHN175, DUCACC, EOF_FDD)
		END
EOF_FDD,	
	CLEAR DPTSTS
	S_ORDN = OORDNO
	IF(GOTP)
		BEGIN
		S_DEPT(1,1) = 'P'
		XCALL ISIO (CHN193, DPTSTS, S_KEY, STORE, LOKCTL)
		END

	IF(GOTO)
		BEGIN
		S_DEPT(1,1) = 'O'
		XCALL ISIO (CHN193, DPTSTS, S_KEY, STORE, LOKCTL)
		END

FNDLIN,
	FIND (CHN045, ORDLIN, OORDNO) [ERR=NXTLIN]
NXTLIN,
	XCALL IOS (CHN045, ORDLIN, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO EOF_LIN
	IF (LORDNO .NE. OORDNO) GOTO EOF_LIN
	IF (LTYPE .EQ. 'M') GOTO NXTLIN		;SKIP MEMOS

; create a DPTSTS record for every dept in order.  If there are
; already records in DPTSTS file, they will not be over-written.
	CLEAR DPTSTS
	S_ORDN = LORDNO
	S_DEPT(1,1) = LDEPT(1,1)
	XCALL ISIO (CHN193, DPTSTS, S_KEY, STORE, LOKCTL)
	GOTO NXTLIN

EOF_LIN,
	CLEAR I
	FIND (CHN193, DPTSTS, OORDNO) [ERR=NXTDPT]
NXTDPT,
	READS (CHN193, DPTSTS, GETRFA:SAVRFA) [ERR=EOF_DPT]
	IF (S_ORDN .NE. OORDNO) GOTO EOF_DPT
	IF (S_DEPT .EQ. '**') GOTO NXTDPT		;HEADER 6-21-17
	DLINE (2,2) = S_DEPT

	USING S_STAT SELECT
	(0),	DLINE(5,13) = 'OPEN '
	(1),	DLINE(5,13) = 'COMPLETED'
	(3),	DLINE(5,13) = 'PACKED'
	(),	DLINE(5,13) = 
	ENDUSING

	DLINE(15,34) = S_COMM
	DLINE(36,38) = S_INT

	XDATE(1,2) = S_DATE(1,2)	;MM
	XDATE(3,4) = S_DATE(7,8)	;YY
	DLINE(40,44) = XDATE,	'XX/XX'
	DLINE(46,50) = S_TIME,	'ZX:XX'

	INCR I
	PARRY(I) = DLINE
	PARRFA(I) = SAVRFA

;DPT STATUS    COMMENTS                 
; A  COMPLETED AAAAAAAAAAAAAAAAAAAA AAA XX/XX XX:XX
;12345678901234567890123456789012345678901234567890
;         1         2         3         4         5
	GOTO NXTDPT

EOF_DPT,
	RETURN
;--------------------------------------

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	
	CLEAR OPNOK
	SWITCH = 5

	XCALL FILES (1,'SU',076,SWITCH)		;76-JOBLOG.ISM
	IF (SWITCH .EQ. 9) RETURN
	CHN076 = 1

	XCALL FILES (2,'SU',193,SWITCH)		;193-DPTSTS.ISM
	IF (SWITCH .EQ. 9) RETURN
	CHN193 = 2

	XCALL FILES (3,'SI',182,SWITCH)		;182-COPTBL.ISM
	IF (SWITCH .EQ. 9) RETURN
	CHN182 = 3

	XCALL FILES (4,'SI',044,SWITCH)		;044-ORDHDR.ISM
	IF (SWITCH .EQ. 9) RETURN
	CHN044 = 4

	XCALL FILES (5,'SI',045,SWITCH)		;;045-ORDLIN.ISM
	IF (SWITCH .EQ. 9) RETURN
	CHN045 = 5

	XCALL FILES (6,'I',054,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN054 = 6

	XCALL FILES (7,'SI',175,SWITCH)		;175-DUCACC
	IF (SWITCH .EQ. 9) RETURN
	CHN175 = 7

	OPNOK = 1
	RETURN
;---------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	IF (CHN044) CLOSE CHN044
	IF (CHN045) CLOSE CHN045
	IF (CHN054) CLOSE CHN054
	IF (CHN076) CLOSE CHN076
	IF (CHN193) CLOSE CHN193
	IF (CHN182) CLOSE CHN182
	IF (CHN175) CLOSE CHN175
	RETURN
;---------------------------------------


INIT_WINDOW,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	xcall u_start(,,,,,,,99)

	XCALL TNMBR (WN_TNMBR)
;;;	XCALL W_INIT(POOLSIZE,WNDCHNL,MAXWINS)
	XCALL W_PROC(WP_FIND,WND_1,WN_NAME)
	IF (WND_1.EQ.0)
		BEGIN
		XCALL W_PROC(WP_CREATE,WND_1,WN_NAME,22,78)
		END
	XCALL W_BRDR(WND_1,WB_TITLE,'Job-in',
&			WB_TPOS,WBT_TOP,WBT_CENTER)
	XCALL W_PROC(WP_PLACE,WND_1,2,2)	
	XCALL W_DISP(WND_1,WD_CLEAR)

	W_ID = WND_1
;; POP info...

	MAXARA = 20
	PLEN = 70
	NUMROW = 15
	WX = 12
	WY = 4
	POP_WID(1,5) = "JJPOP"
	POP_WID(6,8) = WN_TNMBR,	'XXX'
	POP_TITLE = "Departments"
	RETURN
;-----------------------------------------------------------------

