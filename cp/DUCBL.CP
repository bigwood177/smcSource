SUBROUTINE DUCBL
;
;
;
	OORDNO	,D
	ODISC	,D
	RUNTOT	,D
	TAXTOT	,D
	WHLORD	,D
	TAXFLG	,A

EXTERNAL FUNCTION
	TRN3	,D

GLOBAL DUCK
		.INCLUDE 'DEF:RD175D.DEF'
ENDGLOBAL
;;;GLOBAL PAR	
RECORD PARAM
	.INCLUDE 'DEF:PARAM.DEF'
;;;ENDGLOBAL

record	coptbl
	.include 'def:rd182a.def'

GLOBAL CPCHAN
RECORD	CHANNEL
	CHN001	,D2
	CHN002	,D2
	CHN007	,D2
	CHN041	,D2
	CHN042	,D2
	CHN044	,D2
	CHN045	,D2
	CHN054	,D2
	CHN060	,D2
	CHN169	,D2
	CHN170	,D2
	CHN171	,D2
	CHN172	,D2
	CHN174	,D2
	CHN175	,D2
	CHN178	,D2
	CHN182	,D2
	CHN066	,D2		;SSQ 5-24-05
	CHN101	,D3		;MISCUS 12-9-19
	CHN102	,D3		;MISSHP 12-9-19
ENDGLOBAL

;;;RECORD PITEM
;;;	.INCLUDE 'DEF:RD041W.DEF'

RECORD DUCFIL	; Table of all parameters necessary
	.INCLUDE 'DEF:RD174A.DEF'

RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD DUCKEY
	KDUCTOR	,D6	; Order number ---
	KDUTYPE	,D1	; Type of duct 1-GALV,2-ALUM,3-STAIN STEEL,4-OTHER(0)
	KSTY	,D1	; Style 1-SLIP/DRIVE,2-TDC,3-NEXUS,4-OTHER	(1)
	KLINER	,D1	; Liner 1-					(2)
	KSEAM	,D1	; Seam  1-SNAP/LOCK,2-PITTSBURG			(3)
	KSEAL	,D1	; Sealnant 1-YES,2-NO				(4)
	KGAUGE	,D2	; Gauge ( 26,24,22,20,18 )			(5)
	KSIZE3	,D2	; LENGTH					(6)
	KSIZE1	,D6	; SLIP						(7)
	KSIZE2	,D6	; DRIVE
	KCAT	,D1	; CATEGORY
	KTHICK	,D3	; Dec. Thickness .024-24g .032-22g .040-20g .050-18g

RECORD	VARS
	I	,D6
	SZ1	,D3
	SZ2	,D3
	X_WGHT	,D8		;SSQ 9-16-98
	TGAGE	,A21		;SSQ 8-1-97
	MASK2	,A9,'ZZZZ,ZZX-'
	KEYC	,D1
	ENTRY	,A20
	ALPHA	,A20
	J	,D2
	V	,D1,	1
	DEC	,D10
	CNGCTL	,D1
	INXCTL	,D1
	LOKCTL	,D1
	WHATNO	,D2
	DECMAL	,D18
	OLDAMT	,D18
	SUB	,D1
	READ	,D1,	0
	WRITE	,D1,	1
	STORE	,D1,	2
	DELETE	,D1,	3
	BSMID	,D5
	BSEND	,D5
	SRCCTL	,D1
	DEC1	,D18
	DEC2	,D18
	DEC3	,D18
	DEC4	,D18
	KEY	,A15
	CNGACC	,D1
	CNGSLP	,D1
	CNGTDC	,D1
	CNGSTY	,D1
	OLDACC	,D1
	DSUB	,D5
	DEFLT	,D1,0
	ORGINV	,D5
	BLANKS	,A15
	FILENM	,A14
	SWITCH	,D1
PROC

	call read_liner

	GOTO BEGIN

FNDDUC,
;;;	KEY175 = DUCKEY(1,18)
	KEY175 = DUCKEY(1,21)
	LOKCTL = 1
	XCALL ISIO (CHN175,DUCACC,KEY175,READ,LOKCTL)
	IF (LOKCTL.NE.0) GOTO NOFIND
	IF (KEY175.NE.DUCKEY(1,21)) GOTO NOFIND
	IF ((DUTYPE.EQ.1.OR.DUTYPE.EQ.4).AND.GAUGE.EQ.KGAUGE.AND.
&	SIZE1.EQ.KSIZE1.AND.SIZE2.EQ.KSIZE2.AND.SIZE3.EQ.KSIZE3) GOTO DSPDUC
	IF ((DUTYPE.EQ.2.OR.DUTYPE.EQ.3).AND.THICK.EQ.KTHICK.AND.
&	SIZE1.EQ.KSIZE1.AND.SIZE2.EQ.KSIZE2.AND.SIZE3.EQ.KSIZE3) GOTO DSPDUC
NXTDUC,
	INXCTL =
	CNGCTL =
	LOKCTL = 1
	XCALL IOS (CHN175,DUCACC,READ,LOKCTL)
	IF (LOKCTL.NE.0) GOTO NOMORE
	IF (KEY175.NE.DUCKEY(1,21)) GOTO NOMORE
	IF ((DUTYPE.EQ.1.OR.DUTYPE.EQ.4).AND.GAUGE.EQ.KGAUGE.AND.
&	SIZE1.EQ.KSIZE1.AND.SIZE2.EQ.KSIZE2.AND.SIZE3.EQ.KSIZE3) GOTO DSPDUC
	IF ((DUTYPE.EQ.2.OR.DUTYPE.EQ.3).AND.THICK.EQ.KTHICK.AND.
&	SIZE1.EQ.KSIZE1.AND.SIZE2.EQ.KSIZE2.AND.SIZE3.EQ.KSIZE3) GOTO DSPDUC
	GOTO NXTDUC
NOMORE,
;;;	XCALL MESAG ('NO MORE DUCT RECORDS FOR THIS ORDER',2)
	GOTO BEGIN
NOFIND,
	XCALL MESAG ('NO DUCT RECORDS FOUND FOR THIS ORDER',2)
	GOTO BEGIN
DSPDUC,
;--
	XCALL OUTPT (3,1,2,'\',1)
	XCALL OE10
		; Get the parameter information for that gauge
	LOKCTL = 1
	XCALL IO (CHN174,DUCFIL,GAUGE,READ,LOKCTL)

	XCALL DSPDU 

	XCALL OUTPT (24,1,1,'BILL THIS DUCT TRANSACTION <Y> ? ',1)
	CTL = '24,34,01,00,YY'
	CALL INPUT
	IF (INXCTL.EQ.2) 
		BEGIN
		FLG175 =
		GOTO NOBILL
		END
	CALL COMPUTE_DECMAL			;ORIGINAL EXTENDED AMT
	OLDAMT = DECMAL
	GOTO ANYCNG
;=========================================
EXIT,
	RETURN
;=========================================
;--
BEGIN,
	XCALL OUTPT (3,1,2,'\',V)

	XCALL OE10
			; display the ductwork screen 

	CNGSTY =
	CNGSLP =
	CNGTDC =
	OLDACC =
	KEYC =
	GOTO(NXTDUC),CNGCTL
	CNGCTL =
	KDUCTOR = OORDNO
TYPE,
	CTL = '03,19,01,00,#E'
	for i from 1 thru 7	XCALL OUTPT (ROW+I-1,65,0,DTYPE(I),V)
	CALL INPUT
;;;	GOTO (SELECT,SELECT), INXCTL
	GOTO (BEGIN,EXIT),INXCTL
	DUTYPE = ENTRY
	IF (DUTYPE.EQ.0) DUTYPE = 1
	IF (DUTYPE.LT.1.OR.DUTYPE.GT.7) GOTO TYPE
	ALPHA =
	ALPHA (1,1) = DUTYPE,'X'
	ALPHA (5,19) = DTYPE(DUTYPE)
	CALL OUTP1
	J = 7
	CALL CLRTAG
	IF (CNGCTL.EQ.0) 
		BEGIN
		KDUTYPE = DUTYPE
		GOTO CAT
		END
	GOTO (GAUGE), CNGCTL

CAT,
	CTL = '04,19,01,00,# '
	for i from 1 thru 5	XCALL OUTPT (ROW+I-1,65,0,DCAT(I),V)
	CALL INPUT
	GOTO (BEGIN), INXCTL
	CAT = ENTRY
	IF (CAT.EQ.0) CAT = 1
	IF (CAT.LT.1.OR.CAT.GT.5) GOTO CAT
	ALPHA =
	ALPHA (1,1) = CAT,'X'
	ALPHA (5,19) = DCAT(CAT)
	CALL OUTP1
	J = 5
	CALL CLRTAG
	IF (CNGCTL.EQ.0) 
		BEGIN
		KCAT = CAT
		GOTO STY
		END
	GOTO (ANYCNG), CNGCTL
STY,
	CTL = '05,19,01,00,# '
	for i from 1 thru 6	XCALL OUTPT (ROW+I-1,65,0,DSTY(I),V)
	CALL INPUT
	GOTO (BEGIN), INXCTL
	STY = ENTRY
	IF (STY.EQ.0) STY = 1
	IF (STY.LT.1.OR.STY.GT.6) GOTO STY
	ALPHA =
	ALPHA (1,1) = STY,'X'
	ALPHA (5,19) = DSTY(STY)
	CALL OUTP1
	J = 6
	CALL CLRTAG
	IF (CNGCTL.EQ.0) 
		BEGIN
		KSTY = STY
		GOTO SEAM
		END
	GOTO (ANYCNG), CNGCTL

SEAM,
	CTL = '06,19,01,00,# '
	for i from 1 thru 2	XCALL OUTPT (ROW+I-1,65,0,DSEAM(I),V)
	CALL INPUT
	GOTO (BEGIN), INXCTL
	SEAM = ENTRY
	IF (SEAM.EQ.0) SEAM = 1
	IF (SEAM.LT.1.OR.SEAM.GT.2) GOTO SEAM
	ALPHA =
	ALPHA (1,1) = SEAM,'X'
	ALPHA (5,19) = DSEAM(SEAM)
	CALL OUTP1
	J = 2
	CALL CLRTAG
	IF (CNGCTL.EQ.0) 
		BEGIN
		KSEAM = SEAM
		GOTO SEAL
		END
	GOTO (ANYCNG), CNGCTL

SEAL,
	CTL = '07,19,01,00,# '
	for i from 1 thru 2 XCALL OUTPT (ROW+I-1,65,0,DSEAL(I),V)
	CALL INPUT
	GOTO (BEGIN), INXCTL
	SEAL = ENTRY
	IF (SEAL.EQ.0) SEAL = 1
	IF (SEAL.LT.1.OR.SEAL.GT.2) GOTO SEAL
	ALPHA =
	ALPHA (1,1) = SEAL,'X'
	ALPHA (5,19) = DSEAL(SEAL)
	CALL OUTP1
	J = 2
	CALL CLRTAG
	IF (CNGCTL.EQ.0) 
		BEGIN
		KSEAL = SEAL
		GOTO SIZE1
		END
	GOTO (ANYCNG), CNGCTL

JOINT,
	CTL = '08,19,06,00,#-'
	CALL INPUT
	GOTO (BEGIN), INXCTL
	JOINT = ENTRY
	IF (JOINT.EQ.0) GOTO JOINT
	GOTO (RECALC), CNGCTL

SIZE1,
	CTL = '09,19,07,00,# '
	CALL INPUT
	GOTO (BEGIN), INXCTL
	XCALL DEC3(ENTRY,SIZE1)
	SZ1=%TRN3(SIZE1)
;;;	SIZE1 = ENTRY
	IF(SIZE1.LE.0.OR.SIZE1.GT.999000) GOTO SIZE1
	ENTRY(1,7)=SIZE1,'ZZX.XXX'
	XCALL OUTPT(ROW,19,0,ENTRY(1,7),V)
	XCALL OUTPT (ROW,26,0,' X ',V)

SIZE2,
	CTL = '09,29,07,00,# '
	CALL INPUT
	GOTO (SIZE1), INXCTL
	XCALL DEC3(ENTRY,SIZE2)
	SZ2=%TRN3(SIZE2)
;;;	SIZE2 = ENTRY
	IF (SIZE2.LE.0.OR.SIZE2.GT.999000) GOTO SIZE2
	ENTRY(1,7)=SIZE2,'ZZX.XXX'
	XCALL OUTPT(ROW,29,0,ENTRY(1,7),V)
	XCALL OUTPT (ROW,36,0,' X ',V)

SIZE3,
	CTL = '09,39,02,00,# '
	CALL INPUT
	GOTO (SIZE1), INXCTL
	SIZE3 = ENTRY
	IF (SIZE3.LE.0) GOTO SIZE3
	IF (SIZE3.LT.4.OR.SIZE3.GT.6) GOTO SIZE3	;4,5 OR 6 feet only
	IF (CNGCTL.EQ.0) 
	BEGIN
	  KSIZE1 = SIZE1
	  KSIZE2 = SIZE2
	  KSIZE3 = SIZE3
	  GOTO GAUGE
	END
	IF (SIZE3.EQ.6 .AND. GAUGE.EQ.26) GOTO GAUGE	;SSQ 10-21-98
	GOTO (RECALC), CNGCTL	; If the size of the thing has changed, 
				; must recalc the square feet, and pounds.

GAUGE,
	TGAGE = DGAGE
	IF (SIZE3 .EQ. 6) TGAGE(3,4) = 
	GAUGE = 
	THICK =
	IF (DUTYPE.NE.2.AND.DUTYPE.NE.3)
	BEGIN
	  CTL = '10,19,02,00,# '
	  XCALL OUTPT (ROW,63,1,'\',V)
	  XCALL OUTPT (ROW,62,0,TGAGE,V)
	  CALL INPUT
	  GOTO (BEGIN), INXCTL
	  GAUGE = ENTRY
	  IF (GAUGE.EQ.0) GAUGE = 26
	  IF (	GAUGE.NE.26.AND.
&		GAUGE.NE.24.AND.
&		GAUGE.NE.22.AND.
&		GAUGE.NE.20.AND.
&		GAUGE.NE.18		) GOTO GAUGE

	  IF (SIZE3.EQ.6 .AND. GAUGE.EQ.26) GOTO GAUGE	;SSQ 8-1-97
	  ALPHA =
	  ALPHA (1,2) = GAUGE,'XX'
	  ALPHA (8,19) = 'Gauge'
	  CALL OUTP1
	  XCALL OUTPT (ROW,62,1,'\',V)
	END

	IF (DUTYPE.EQ.2.OR.DUTYPE.EQ.3)
	BEGIN
	  CTL = '10,19,03,00,# '
	  XCALL OUTPT (ROW,59,0,DTHICK(DUTYPE-1),V)
	  CALL INPUT
	  GOTO (BEGIN), INXCTL
	  THICK = ENTRY
	  IF (THICK.EQ.0) THICK = 024

	  IF (DUTYPE.EQ.2) CASE THICK OF
	  BEGINCASE
	  024:	GAUGE = 24	;ALUMINUM
	  032:	GAUGE = 22	;ALUMINUM
	  040:	GAUGE = 20	;ALUMINUM
	  050:	GAUGE = 18	;ALUMINUM
	  ENDCASE ELSE GOTO ANYCNG

	  IF (DUTYPE.EQ.3) CASE THICK OF
	  BEGINCASE
	  024:	GAUGE = 24	;STAINLESS
	  030:	GAUGE = 22	;STAINLESS
	  036:	GAUGE = 20	;STAINLESS
	  ENDCASE ELSE GOTO ANYCNG

	  ALPHA =
	  ALPHA (1,4) = THICK,'.XXX'
	  ALPHA (8,19) = 'Thickness'
	  CALL OUTP1
	  XCALL OUTPT (ROW,59,1,'\',V)
	END
	IF (CNGCTL.EQ.0) 
	BEGIN
	  KGAUGE = GAUGE
	  KTHICK = THICK
	  GOTO LINER
	END


RECALC,
		; Get the parameter information for that gauge
	XCALL FFILE (174,FILENM,SWITCH)
	OPEN (8,I,FILENM)
	LOKCTL = 1
	XCALL IO (8,DUCFIL,GAUGE,READ,LOKCTL)
	CLOSE 8	

		; Calculate the square feet
	DEC1 =
	DEC2 =
	DEC3 =
	DEC4 =
	SQFEET =
	DEC4 = SIZE3 * 12
		; Get the length in inches

	DEC1 = ( ( SIZE1 * DEC4 ) * 2 )
		; DEC1 = square feet of 2 slip sides in inches

	DEC2 = ( ( SIZE2 * DEC4 ) * 2 )
		; DEC2 = Square feet of 2 drive sides in inches

	DEC3 = ( DEC1 + DEC2 ) * JOINT
		; Total square feet, is slip sides, plus drive sides
		; times the number of joints

	SQFEET = ( ( DEC3 * 10 ) / 144 )
		; Convert to square feet
;
	IF (SQFEET(6,6).EQ.0) 
	THEN SQFEET = SQFEET / 10
	ELSE BEGIN
	  IF (SQFEET.GT.0) SQFEET = SQFEET(1,5) + 1
	  IF (SQFEET.LT.0) SQFEET = (SQFEET(1,5) * -1) - 1
	END

	ALPHA =
	ALPHA(1,11) = 'Duct   Sqft'
	ALPHA(12,20) =  SQFEET,MASK2
	XCALL OUTPT (9,40,0,ALPHA(1,20),V)

		;  Calculate the pounds of sheet metal, seam allowance, 
		;  and waste factor.
	DEC1 = 
	DEC2 =
	DEC3 =
	POUNDS =

	DEC1 = ( DUCLBS * SQFEET )
		;  Calculate the total actual number of pounds

	DEC3 = ( DUCSEA * ( SIZE3 * JOINT ) )
	IF ((SIZE1+SIZE2).GE.120) DEC3 = ( ( DUCSEA * 2 )*( SIZE3 * JOINT ) )
		; Calculate the seam allowance, by the foot, from total length
		; If size1+size2 .ge.120 then add seam allow twice

	DEC2 = ( DUCWAS * (DEC1+DEC3) ) #5
		; Calculate the total waste pounds, based on above acutal #
		; Round back 5 digts cuz of decimal places.
		; Changed to figure waste last cuz waste was not figured on
		; seam allowance and it should be

	POUNDS = ( DEC1 + DEC3 + DEC2 ) #3
		; The total pounds, is the actual number of pounds
		; plus the seam allowance
		; plus the waste
	X_WGHT = POUNDS
	IF (DUTYPE.EQ.2) POUNDS = ( ( DEC1 + DEC3 + DEC2 ) / 3 ) #3
		; Aluminum pounds is 1/3 galvanized

	ALPHA =
	ALPHA(1,11) = 'Duct Pounds'
	ALPHA(12,20) =  POUNDS,MASK2
	XCALL OUTPT (10,40,0,ALPHA(1,20),V)

	IF (CNGCTL) CALL CALLIN			; Recalc liner if changes

	IF (WHATNO.EQ.8) GOTO (GPRICE), CNGCTL	
	GOTO (ANYCNG), CNGCTL			;;;	ADDED   10/27/92

LINER,
	CTL = '11,19,01,00,# '
	XCALL OUTPT (ROW,63,1,'\',V)
	for i from 1 thru 8	XCALL OUTPT (ROW+I-1,65,0,DLINER(I),V)
	CALL INPUT
	GOTO (BEGIN), INXCTL
	LINER = ENTRY
	IF (LINER.EQ.0) LINER = 1
	IF (LINER.LT.1.OR.LINER.GT.8) GOTO LINER
	ALPHA =
	ALPHA (1,1) = LINER,'X'
	ALPHA (5,19) = DLINER(LINER)
	CALL OUTP1
	J = 8
	CALL CLRTAG

	IF (CNGCTL.EQ.0) 
	BEGIN
	  KLINER = LINER
	  GOTO FNDDUC
	END

	CALL CALLIN		; Calculate the number of square feet of liner
	GOTO (LINPRC),CNGCTL	;;;

	GOTO ANYCNG

GPRICE,
	CTL = '10,73,06,00,#N'
	CALL INPUT
	GOTO (BEGIN), INXCTL
	GPRICE = ENTRY
	ALPHA (1,7) = GPRICE,'ZZZ.XXX'
	XCALL OUTPT (ROW,COL,0,ALPHA(1,7),V)
	GOTO (ANYCNG), CNGCTL
LINPRC,
	CTL = '11,73,06,00,#N'
	CALL INPUT
	GOTO (BEGIN), INXCTL
	LINPRC = ENTRY
	ALPHA (1,7) = LINPRC,'ZZZ.XXX'
	XCALL OUTPT (ROW,COL,0,ALPHA(1,7),V)
	GOTO (ANYCNG), CNGCTL

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; don't need any acc stuff...
	GOTO ANYCNG
NOKEYC,
	XCALL MESAG ('CANNOT CHANGE KEY - DELETE DUCT RECORD AND REENTER',2)
	GOTO ANYCNG
BADCNG,
BC,
	CNGCTL = 3
ANYCNG,
	XCALL ANYCN (CNGCTL,WHATNO)

	IF (CNGCTL)
	BEGIN
	 GOTO(BADCNG,NOKEYC,CAT,NOKEYC,NOKEYC,NOKEYC,JOINT,SIZE1,NOKEYC,NOKEYC,
&	 GPRICE,LINPRC), WHATNO
	 GOTO BADCNG
	END

CHANGE,
	RUNTOT = RUNTOT - OLDAMT	;FIRST SUBTRACT OUT THE ORIGINAL AMT
	TAXTOT = TAXTOT - OLDAMT

	CALL COMPUTE_DECMAL

	OLDAMT = DECMAL			;SAVE INCASE CHANGED AGAIN.

	RUNTOT = RUNTOT + DECMAL
;;;	IF (TAXFLG.NE.'   ') TAXTOT = TAXTOT + DECMAL
	TAXTOT = TAXTOT + DECMAL			;;;10/14/93 force taxable
	FLG175 = 1		;SET BILLING SELECT FLAG IN DUCACC
NOBILL,
	LOKCTL = 1
	XCALL ISIO (CHN175,DUCACC,KEY175,WRITE,LOKCTL)
	GOTO NXTDUC


COMPUTE_DECMAL,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	DECMAL = (POUNDS*GPRICE)#1
	IF (LINER.GT.0.AND.LINER.LE.8) DECMAL = DECMAL + (SQFLIN*LINPRC)#1
	RETURN
;-------------------------------------------------------

OUTP1,
	XCALL OUTPT (ROW,19,0,ALPHA,V)
	RETURN
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	RETURN

CALLIN,
		; Calculate the number of square feet of liner for this item
	DEC1 = 
	DEC2 =
	DEC3 =
	SQFLIN =

	DEC1 = ( DLINE * SQFEET ) #2
		; DLINE is a overage % of square feet ( SEE DUCMNT.COP )

	DEC1 = ( DEC1 + 500 ) #3

	SQFLIN = DEC1 + SQFEET
		; Calculate the waste, and add square feet of duct

	ALPHA =
	ALPHA(1,11) = 'Liner  Sqft'
	IF (LINER.EQ.5) SQFLIN =
	ALPHA(12,20) =  SQFLIN, 'ZZZZ,ZZX-' 
	XCALL OUTPT (11,40,0,ALPHA(1,20),V)
	
	RETURN


CLRTAG,
	for i from 1 thru j XCALL OUTPT (ROW+I-1,65,1,'\',V)
	RETURN

READ_LINER,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; GET LINER DESCRIPTIONS FROM LINER PRICE TABLE
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CLEAR COPTBL
	TBLCOD = 'LP'
	FOR I FROM 1 THRU 9
		BEGIN
		LP_KEY = I
		XCALL ISIO (CHN182, COPTBL, TBL_KEY, READ, LOKCTL)
		IF (TBLCOD .NE. 'LP') EXITLOOP
		DLINER(I) = lp_liner
		END

	RETURN
;--------------------------------------------------

END

