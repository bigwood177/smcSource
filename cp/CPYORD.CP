;CPYORD.CP
;
;	CREATE NEW ORDER FROM EXISTING ORDER
;

;	10-11-05 ssq: credit card info.


RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR

RECORD	ORDCM2
	.INCLUDE 'DEF:RD135A.DEF'

RECORD	CCINFO
	.INCLUDE 'DEF:RD137A.DEF'

RECORD	CCTRAN
	.INCLUDE 'DEF:RD138A.DEF'

RECORD	TMPCUS
	.INCLUDE 'DEF:RD139A.DEF'


RECORD	ORDHDR
	.INCLUDE 'DEF:RD044A.DEF'

RECORD	ORDLIN
	.INCLUDE 'DEF:RD045A.def'
RECORD,X
	.INCLUDE 'DEF:RD045D.def'

RECORD	COPCTL
	.INCLUDE 'DEF:RD060A.DEF'

RECORD	COPTBL
	.INCLUDE 'DEF:RD182A.DEF'

RECORD	DUCACC
	.INCLUDE 'DEF:RD175A.DEF'

RECORD	ITMMAS
	.INCLUDE 'DEF:RD041A.def'

RECORD	ITMKEY
	.INCLUDE 'DEF:RD041K.DEF'

;;;RECORD,X
;;;	.INCLUDE 'DEF:RD041B.DEF'
;;;RECORD	ITMIDX
;;;	.INCLUDE 'DEF:RD042A.DEF'

RECORD	SNMSG
		,A2,	'CO'	;ID'S THIS PGM
	S_ORD	,D6

RECORD	ITMMSG
	ITM_ITM	,A15
		,A*,	' IS NOT IN ITMMAS FILE'

RECORD	ORDMSG
		,A*,	'ORDER NUMBER: '
	ORD_ORD	,D6
		,A*,	' HAS JUST BEEN CREATED'

RECORD	PRINT
	U_LINE	,A80
	TITLE	,A*,	'NO TITLE'
	HD	,A6,	'NO HDR'
	LG	,A9,	'NO LEGEND'
	PLINE	,A80
	PRNTON	,D1
	LINCNT	,D2,60
	PGCNT	,D6
	LPSW	,D2
	SPLFIL	,A14
	RPTNUM	,D3
	PRTTYP	,A1
	PRTCTL	,D3,080
	LPARG	,D1
	PRNTSW	,D1
	PRTCTR	,D1

RECORD	HLINE0
		,A65
		,A6,	'ORDER:'
		,A1
	HL0_ORD	,A8

RECORD	HLINE
	,A*,'DATE ENTERED  SALESMAN    EXT PO NUMBER  JOB NUMBER  SHIP VIA'

RECORD	ORDFMT
	OF_ORD	,A6
		,A1,	'.'
	OF_NUM	,D1

RECORD	CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
	
RECORD	ERRMSG
		,A*,	'Error storing order: '
	ERR_ORD	,D6

RECORD	CHANNEL
	CHN041	,D2
	CHN042	,D2
	CHN044	,D2
	CHN045	,D2
	CHN060	,D2
	CHN135	,D3
;;;	CHN136	,D3
	CHN137	,D2
	CHN138	,D2
	CHN139	,D2
	CHN175	,D2
	CHN182	,D2
	CHN184	,D2	;SLHHDR
	CHN185	,D2	;SLHLIN
	CHN186	,D2	;SLHDUC

RECORD	VARS
	GOT_CM2	,D1
	YR	,D2
	OPNOK	,D1
	PASS	,D2
	HDRHST	,A14
	LINHST	,A14
	DUCHST	,A14
	COMHST	,A14
	KEY	,A15
	BSEND	,D5
	BSMID	,D5
	SRCCTL	,D1
	ALPHA	,A8
	DECMAL	,D18
	OPTION	,D1
	LNAM	,A25
	SNAM	,A12
	SINT	,A3
	SEXT	,D3
	ABORT	,D1
	I	,D5
	BLANKS	,A30
	XDATE	,D8
	LSTDTE	,D8
	TDATE	,D6
	DCHAR	,D3
	TCHAR	,D3
	XORD	,D6
	ENTRY	,A30
	INXCTL	,D1
	CNGCTL	,D1
	WHATNO	,D2
	LOKCTL	,D1

	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	SWITCH	,D1
	V	,D1

.PROC
	XCALL TERID (V)

	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF

	XCALL RDATE (TDATE)
	XCALL DATE8(TDATE, D_OUT, LSTDTE, D_FMT, D_SW)
	YR = TDATE(5,6)
	YR = YR - 1
DISPLA,
	CLEAR CNGCTL
	XCALL OUTPT (1,1,2,'COPY ORDER',1)
	XCALL OUTPT (2,4,0,'ORDER #',1)
	XCALL INPUT (2, 16, 06, 00 , '#E', ENTRY, INXCTL, 1)
	GOTO (DISPLA, ENDOFF), INXCTL
	XORD = ENTRY(1,6)

	CALL GETORD
	IF (ABORT) GOTO DISPLA

	CALL COPY_HEADER
	GOTO (ENDOFF),ABORT

	CALL COPY_LINE
	CALL COPY_DUCT

	CALL COPY_CC

	CALL END_ORDER
;=====================================================	

ENDOFF,
	CALL CLOSE
	IF(S_ORD)
		BEGIN
		XCALL SNMSG(SNMSG,5)
	;;;	XCALL PGCHN('CP:ORDSSQ',1)
		XCALL PGCHN('CP:ORDmnt',1)
		END

	XCALL PGCHN ('cp:OEMNU',1)
	STOP
;=====================================================	

COPY_HEADER,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	LOKCTL = 1
	XCALL IO (CHN060, COPCTL, 1, READ, LOKCTL)
	IF(LSTORD .EQ. 999999) LSTORD = 100000
	INCR LSTORD
	LOKCTL = 1
	XCALL IO (CHN060, COPCTL, 1, WRITE, LOKCTL)

	OORDNO = LSTORD

	CLEAR OINVNO, OINVDT, OFLAG, DSAMT, DSCODE, OPRTF, OSHDTE, OSHTIM
	CLEAR OSALE, OMISC, DSAMT, DSCODE
	CLEAR OCCRD				;9-24-14

	OORDDT = LSTDTE		;TODAY
	OKEYDT = LSTDTE		;TODAY

	XCALL ISIO (CHN044, ORDHDR, OORDNO, STORE, LOKCTL)
	IF (LOKCTL .NE. 0)
		BEGIN
		ERR_ORD = OORDNO
		XCALL MESAG (ERRMSG,1)
		ABORT = 1
		END

	IF (GOT_CM2)
		BEGIN
		C2_ORD = OORDNO
		XCALL ISIO (CHN135, ORDCM2, C2_KEY, STORE, LOKCTL)
		END
	RETURN
;-----------------------------------------------------
COPY_LINE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	FIND (CHN185, ORDLIN, XORD) [ERR=CL_LOOP]
CL_LOOP,
	XCALL IOS (CHN185, ORDLIN, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO CL_EOF
	IF (LORDNO .NE. XORD) GOTO CL_EOF

	IF(LTYPE .EQ. 'M') GOTO WRTLIN
	
	CLEAR LQTYSH, LQTYBO, LCOMPS, LFLAG

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; ssq 8-21-03 these fields now filler
;;;	LEXSDT = OORDDT
;;;	LPRMDT = OORDDT
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CALL COMMIT

WRTLIN,
	LORDNO = OORDNO
	XCALL ISIO (CHN045, ORDLIN, ORDKEY, STORE, LOKCTL)
	GOTO CL_LOOP
CL_EOF,
	RETURN
;--------------------------------------------------

COMMIT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; COMMIT INVENTORY
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; read itmmas based on partial key for matching items below...
	USING LITMNO SELECT
;;;	  ('X','CD'),		BEGIN
	  ('X'),		BEGIN
				KEY = LITMNO(1,3)
				KEY(4,4) = '0'
				END
	  ('CM'),		KEY = LITMNO(1,3)
	  ('CR0' thru 'CR9'),	KEY = LITMNO(1,4)
	  ('EDS0' THRU 'EDS9'),	KEY = LITMNO(1,9)
	  (),			KEY = LITMNO
	ENDUSING

	CLEAR ITMKEY
	K_ITEM = KEY
	K_F1 = LF1,	'XXX'
	K_F2 = LF2,	'XXX'
	K_F3 = LF3,	'XXXXX'

	READ (CHN041, ITMMAS, ITMKEY, KEYNUM:1) [ERR=I_LOCKED]
	GOTO I_OK
I_LOCKED,
	ITM_ITM = KEY
	XCALL MESAG (ITMMSG,1)
	RETURN
I_OK,

	IF (STOCK.NE.'S')	RETURN

	QTYCOM = QTYCOM + LQTYOR

	LOKCTL = 1
	XCALL ISIO (CHN041, ITMMAS, KEY, WRITE, LOKCTL)
	RETURN
;-----------------------------------------------------

COPY_DUCT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	FIND (CHN186, DUCACC, XORD) [ERR=CD_LOOP]
CD_LOOP,
	XCALL IOS (CHN186, DUCACC, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO CD_EOF
	IF (DUCTOR .NE. XORD) GOTO CD_EOF

	CLEAR RST175, FLG175, DCOMPS

	DUCTOR = OORDNO
	XCALL ISIO (CHN175, DUCACC, DUCTOR, STORE, LOKCTL)
	GOTO CD_LOOP

CD_EOF,
	RETURN
;-----------------------------------------------------


COPY_CC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	XCALL ISIO (CHN138, CCTRAN, XORD, READ, LOKCTL)
	IF (LOKCTL .NE. 0) RETURN

	CLEAR CT_SUB, CT_FRT, CT_TAX
	CT_ORDER = OORDNO
	XCALL ISIO (CHN138, CCTRAN, OORDNO, STORE, LOKCTL)


	XCALL ISIO (CHN139, TMPCUS, XORD, READ, LOKCTL)
	IF (LOKCTL.NE.0) RETURN

	T_CUSNO = OORDNO
	XCALL ISIO (CHN139, TMPCUS, OORDNO, STORE, LOKCTL)

	RETURN
;-----------------------------------------------------


END_ORDER,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	S_ORD = OORDNO
	ORD_ORD = OORDNO
	XCALL MESAG (ORDMSG,1)
	RETURN
;-----------------------------------------------------

GET_SCAC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; READ SCAC FROM COPTBL
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR TBL_KEY
	TBLCOD = 'SC'
	TBLKEY = OSCAC
	XCALL ISIO (CHN182,COPTBL,TBL_KEY,READ,LOKCTL)
	IF (LOKCTL .NE. 0)
		BEGIN
		CLEAR COPTBL
		SC_NAME = "* NOT ON FILE *"
		END
	RETURN
;--------------------------------------------------------


GETORD,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR ABORT, LOKCTL, PASS
RE_TRY,
	XCALL ISIO (CHN184, ORDHDR, XORD, READ, LOKCTL)
	IF (LOKCTL)
		BEGIN
		USING PASS SELECT
		(0),	BEGIN	; look in current years history...
			SWITCH = 5
			CLOSE CHN184
			CLOSE CHN185
			CLOSE CHN186
;;;			CLOSE CHN136
			XCALL FILES (24, 'SI', 184, SWITCH)	;184 - SLHHDR
			XCALL FILES (25, 'SI', 185, SWITCH)	;185 - SLHLIN
			XCALL FILES (26, 'SI', 186, SWITCH)	;186 - SLHDUC
;;;			XCALL FILES (27, 'SI', 136, SWITCH)	;136 - ORDCM2
			INCR PASS
			GOTO RE_TRY
			END
		(1),	BEGIN	; prior years history...
			CLOSE CHN184
			CLOSE CHN185
			CLOSE CHN186
;;;			CLOSE CHN136
			HDRHST(9,10) = YR,'XX'	;;;>'01'
			LINHST(9,10) = YR,'XX'	;;;>'01'
			DUCHST(9,10) = YR,'XX'	;;;>'01'
			COMHST(9,10) = YR,'XX'
			HDRHST(14,14) = 'M'
			LINHST(14,14) = 'M'
			DUCHST(14,14) = 'M'
			COMHST(14,14) = 'M'
			OPEN (24,SI,HDRHST)
			OPEN (25,SI,LINHST)
			OPEN (26,SI,DUCHST)
;;;			OPEN (27,SI,COMHST)
			INCR PASS
			GOTO RE_TRY
			END
		ENDUSING

		XCALL MESAG ('ORDER NOT ON FILE',1)

		SWITCH = 5
		CLOSE CHN184
		CLOSE CHN185
		CLOSE CHN186
;;;		CLOSE CHN136

		XCALL FILES (24, 'SI', 044, SWITCH)	;ordhdr
		XCALL FILES (25, 'SI', 045, SWITCH)	;ordlin
		XCALL FILES (26, 'SI', 175, SWITCH)	;ducacc
;;;		XCALL FILES (27, 'SI', 136, SWITCH)	;ordcm2
		GOTO ABORT
		END
DISPL1,
	IF (OLOC .EQ. 'E')
		BEGIN
		XCALL MESAG ('This is an estimate! - but go ahead',2)
	;;;	XCALL MESAG ('This is an estimate!',2)
	;;;	GOTO ABORT
		END
		
	XCALL OE1(DSTFLG,V)

	OF_ORD = OORDNO,	'ZZZZZX' [LEFT]
	IF(OPRTF.LE.0)OPRTF=0
	OF_NUM = OPRTF
	CTL = '02,16'
	XCALL OUTPT(ROW, COL, 0, ORDFMT, V)

	CTL = '02,38'
	DECMAL(1,8) = OORDDT
	CALL DSPDTE
	CTL = '02,68'
	IF (OLOC.EQ.'E')  
	THEN BEGIN
	  XCALL OUTPT (4,53,0,'EST DEL DAYS   ',1)
	  DECMAL = OPROMD
	  CALL DSPNUM
	  XCALL OUTPT (23,3,1,'21. ATTN:',1)
	  XCALL OUTPT (23,14,0,OATTN,1)
	END
	ELSE BEGIN
	  DECMAL(1,8) = OPROMD
	  CALL DSPDTE
	END
	CTL = '03,16,06'
	DECMAL = OCUSNO
	CALL DSPNUM
	XCALL OUTPT (3,24,0,OCUSNM,V)

	CTL = '04,16,02'
	DECMAL = OSLMAN
	CALL DSPNUM

	XCALL SREP(OSLMAN,LNAM,SNAM,SINT,SEXT)
	XCALL OUTPT(9,9,0,SNAM,1)

	XCALL OUTPT (4,35,0,OLOC,V)

	XCALL OUTPT (8,53,0,OSCAC,1)
	CALL GET_SCAC
	XCALL OUTPT (9,53,0,SC_NAME,1)

	XCALL OUTPT (4,69,0,OPONO,V)
	CTL = '05,16,02'
	DECMAL = ODISC
	CALL DSPNUM

	XCALL OUTPT (10,33,0,OTERMS,1)

TERMOK,
	XCALL OUTPT (10,53,0,OCLPPD,1)
	XCALL OUTPT (5,69,0,OJOBNO,V)
DSPADD,
	ALPHA (1,4) = OSHPTO,'ZZZZ'
	XCALL OUTPT (6,16,0,ALPHA(1,4),V)
	XCALL OUTPT (13,13,0,OSHPNM,1)
	XCALL OUTPT (14,13,0,OSHAD1,1)
	XCALL OUTPT (15,13,0,OSHAD2,1)
	XCALL OUTPT (16,13,0,OSHAD3,1)
	
	XCALL OUTPT (20,19,0,OCOMNT(1),1)
	XCALL OUTPT (21,19,0,OCOMNT(2),1)

	CLEAR ORDCM2
	C2_ORD = OORDNO
	C2_SEQ = 0

	LOKCTL = 0
;;;	XCALL ISIO (CHN136, ORDCM2, C2_KEY, READ, LOKCTL)
	XCALL ISIO (CHN135, ORDCM2, C2_KEY, READ, LOKCTL)
	IF (LOKCTL .NE. 0) 
	THEN	BEGIN
		GOT_CM2 = 0
		CLEAR ORDCM2
		END
	ELSE	GOT_CM2 = 1

	XCALL OUTPT (22,19,0,C2_COM,1)

;;;	IF (DSTFLG.NE.'Y') RETURN
;;;	ALPHA = OARACT, 'XXXX-XXX'
;;;	XCALL OUTPT (10,73,0,ALPHA,V)

	XCALL OUTPT (24,1,1,'RIGHT ORDER?',1)
	XCALL INPUT (24,16,01,01,'YY',ENTRY,INXCTL,1)
	IF(INXCTL .EQ. 2) GOTO ABORT

	XCALL OUTPT (24,1,1,'DO YOU WANT TO COPY THIS ORDER?',1)
	XCALL INPUT (24,34,01,01,'YN',ENTRY,INXCTL,1)
	IF(INXCTL .EQ. 2) GOTO ABORT
	RETURN
;---------------------------------------------------------

ABORT,
	ABORT = 1
	RETURN
;---------------------------------------------------------

PRINT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	IF (PRNTON .EQ. 0) CALL PRNTON
	XCALL LPOUT(LINCNT,PGCNT,PLINE,TITLE,HD,HD,HD
&		,LG,LG,LG,0,080,PRTCTL,0,LPSW,RPTNUM,PRTTYP)
	RETURN
;-------------------------------------------------------------
PRTHDR,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	LINCNT = 2
	PLINE = HLINE0
	CALL PRINT
	CALL PRINT

	PLINE(10,40) = OCUSNM
	PLINE(42,42) ='/'
	PLINE(44,74) = OSHAD1
	CALL PRINT
	CALL PRINT

	PLINE = HLINE
	CALL PRINT
	CALL PRINT

	XDATE(1,4) = OORDDT(5,8)
	XDATE(5,8) = OORDDT(1,4)
	PLINE(3,12) = XDATE,	'XX/XX/XXXX'
	PLINE(14,25)= SNAM
	PLINE(27,29)= SEXT,	'XXX'
	PLINE(31,40)= OPONO
	PLINE(42,51)= OJOBNO
	
	TBLCOD = 'SC'
	SC_SCAC = OSCAC
	XCALL ISIO (CHN182, COPTBL, TBL_KEY, READ, LOKCTL)
	IF (LOKCTL) SC_NAME = '* NOT ON FILE *'

	PLINE(54,80) = SC_NAME
	CALL PRINT
	CALL PRINT

	RETURN
;------------------------------------------------


DSPNUM,
	OPTION = 1
	GOTO CALDSP
DSPDTE,
	XCALL DATE8(DECMAL(1,8), D_OUT, D_OUTR, D_FMT, D_SW)
	XCALL OUTPT (ROW, COL, 0, D_FMT, V)
	RETURN
DSPDLR,
	OPTION = 3
CALDSP,
	XCALL DSPLY(MAX,ROW,COL,DECMAL,OPTION,V)
	RETURN

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK

	SWITCH = 1
	XCALL FILES (1, 'SU', 041, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN041 = 1

;;;	XCALL FILES (2, 'I', 042, SWITCH)
;;;	IF (SWITCH .EQ. 9) RETURN
;;;	CHN042 = 2

	SWITCH = 5
	XCALL FILES (4, 'SU', 044, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN044 = 4

	XCALL FILES (5, 'SU', 045, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN045 = 5

	XCALL FILES (7, 'SU', 175, SWITCH)
	IF(SWITCH .EQ. 9) RETURN
	CHN175 = 7

	SWITCH = 5
	XCALL FILES (35, 'SU', 135, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN135 = 35

	XCALL FILES (8, 'SI',  182, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN182 = 8 

	XCALL FILES (9, 'U', 060, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN060 = 9

	XCALL FILES (24, 'SI', 044, SWITCH)	;current orders first
	IF (SWITCH .EQ. 9) RETURN
	CHN184 = 24

	XCALL FILES (25, 'SI', 045, SWITCH)	;current lines
	IF (SWITCH .EQ. 9) RETURN
	CHN185 = 25

	XCALL FILES (26, 'SI', 175, SWITCH)	;current ductwork
	IF (SWITCH .EQ. 9) RETURN
	CHN186 = 26

;;;	SWITCH = 5
;;;	XCALL FILES (27, 'SI', 136, SWITCH)	; current comments
;;;	IF (SWITCH .EQ. 9) RETURN
;;;	CHN136 = 27
	
; credit card files:
	XCALL FILES (47, 'SU', 137, SWITCH)	;CCINFO
	IF (SWITCH .EQ. 9) RETURN
	CHN137 = 47

	XCALL FILES (48, 'SU', 138, SWITCH)	;CCTRAN
	IF (SWITCH .EQ. 9) RETURN
	CHN138 = 48

	XCALL FILES (49, 'SU', 139, SWITCH)	;TMPCUS
	IF (SWITCH .EQ. 9) RETURN
	CHN139 = 49


; get files names...
	XCALL FFILE (184,HDRHST,SWITCH)		;SLHHDR
	XCALL FFILE (185,LINHST,SWITCH)		;SLHLIN
	XCALL FFILE (186,DUCHST,SWITCH)		;SLHDUC
;;;	XCALL FFILE (136,COMHST,SWITCH)		;ORDCHS

	OPNOK = 1
	RETURN
;---------------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	IF (CHN041) XCALL FILES (CHN041, 'SU', 041, 4)
;;;	IF (CHN042) XCALL FILES (CHN042, 'U', 042, 4)

	IF (CHN044) CLOSE CHN044
	IF (CHN045) CLOSE CHN045
	IF (CHN060) CLOSE CHN060
	IF (CHN175) CLOSE CHN175
	IF (CHN182) CLOSE CHN182
	IF (CHN184) CLOSE CHN184
	IF (CHN185) CLOSE CHN185
	IF (CHN186) CLOSE CHN186

	IF (CHN137) CLOSE CHN137
	IF (CHN138) CLOSE CHN138
	IF (CHN139) CLOSE CHN139

	IF (CHN135) CLOSE CHN135
;;;	IF (CHN136) CLOSE CHN136

	RETURN
;---------------------------------------------
.END


