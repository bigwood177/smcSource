;JOBRCV.CP
;
;	12-3-18 ssq: change status of job (JHSTS) to received (R) - 
;		assume no multiple reciepts for the same ticket

;	9-16-19 ssq: update datlbs.ism
;	10-28-19 ssq: use xcom.cp to relieve component inventory

RECORD	DATLBS
	.INCLUDE 'DEF:RD063A.DEF'

RECORD	DPTSTS
	.INCLUDE 'DEF:RD193A.DEF'

RECORD	JOBHDR
	.INCLUDE 'DEF:RD071A.DEF'

RECORD	JOBLIN
	.INCLUDE 'DEF:RD072A.DEF'

RECORD	ITMMAS
	.INCLUDE 'DEF:RD041A.DEF'
RECORD	ITMKEY
	.INCLUDE 'DEF:RD041K.DEF'

RECORD	RECTRX
	.INCLUDE 'DEF:RD191A.DEF'
RECORD	DUMREC
	.INCLUDE 'DEF:RD191B.DEF'

RECORD	COPTBL
	.INCLUDE 'DEF:RD182A.DEF'

RECORD	TMPLT
	T_NUM	,A3
		,A2
	T_ITEM	,A15
		,A2
	T_DESC	,A30
		,A2
	T_QTY	,A6
		,A2

RECORD	CHANNEL
	CHN041	,D2
	CHN071	,D2
	CHN072	,D2
	CHN182	,D2
	CHN191	,D2
	CHN193	,D2
	CHN063	,D2
	CHN162	,D2
	CHN163	,D2
;
RECORD	VARS
	XLBS	,D8
	XDATE	,D8
	TODAY	,D8
	OPNOK	,D1
	NEXT	,D6
	JOB	,D6
	I	,D6
	ROW	,D2
	NUM	,D2
	NUMITM	,D2
	LRFA	,A6
	RFA	,20A6
	QTYS	,20D6
	A6	,A6
	A10	,A10
	ENTRY	,A30
	INXCTL	,D1
	CNGCTL	,D1
	WHATNO	,D2
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	LOKCTL	,D1
	SWITCH	,D1
	V	,D1
;
PROC
	XCALL TERID (V)
	XCALL OUTPT (1,1,2,'FAB TICKETS RECEIPTS',1)
	XCALL RDAT8 (TODAY)

	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF

	CALL CLRARA

DISPLA,
	XCALL OUTPT (1,1,2,'FAB TICKETS RECEIPTS',1)
	CLEAR CNGCTL
	XCALL OUTPT (2,01,0, '1. TICKET #',1)
	XCALL OUTPT (2,21,0, '2. DEPT',1)
	XCALL OUTPT (2,34,0, '3. DUE DATE',1)
	XCALL W_UPDT
JHNUM,
	XCALL INPUT (02, 13, 06, 00, '#E' ,ENTRY, INXCTL,1)
	GOTO (DISPLA, ENDOFF), INXCTL
	JOB = ENTRY(1,6)
	IF (JOB .LE. 0) GOTO JHNUM

	LOKCTL = 1
	XCALL ISIO (CHN071, JOBHDR, JOB, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO JHNUM

	A6 = JHNUM,	'ZZZZZX' [LEFT]
	XCALL OUTPT (2, 13, 0, A6,1)

	XCALL OUTPT (2, 29, 0, JHDEPT, 1)

	XDATE(1,4) = JHSHDT(5,8)
	XDATE(5,8) = JHSHDT(1,4)
	A10 = XDATE,	'XX/XX/XXXX'
	XCALL OUTPT (2, 46, 0, A10, 1)
	XCALL OUTPT (24,1,1, 'RIGHT TICKET?      <Y>',1)
	XCALL INPUT (24,16,01,00,'YY',ENTRY,INXCTL,1)
	GOTO (DISPLA),INXCTL-1

	ROW = 4
	FIND (CHN072, JOBLIN, JHNUM) [ERR=LINLOP]
LINLOP,
	CLEAR CNGCTL
	READS (CHN072, JOBLIN, ENDLIN, GETRFA:LRFA) [ERR=ENDLIN]
	IF (JLNUM .NE. JHNUM) GOTO ENDLIN
;;;	IF (JLSTS .NE. 'P') GOTO LINLOP	;ssq 11-17-14
	IF (JLSTS .EQ. 'R') GOTO LINLOP	;ssq 11-17-14

	INCR ROW
	NUM = ROW-4
	RFA(NUM) = LRFA

	T_NUM = NUM,	'ZX.'
	T_ITEM = JLITM
	T_DESC = JLDES
	T_QTY = JLQTY,	'ZZZZZX' 
	XCALL OUTPT (ROW, 1, 0, TMPLT, 1)
ASK,
	XCALL INPUT (ROW, 63, 06, 00, '#E', ENTRY, INXCTL, 1)
	GOTO (ASK, DISPLA),INXCTL
	QTYS(NUM) = ENTRY(1,6)
	GOTO (ANYCNG), CNGCTL

	CNGCTL = 2
	XCALL ANYCN(CNGCTL,WHATNO)
	GOTO (ASK),CNGCTL

	IF (ROW .LT. 20) GOTO LINLOP
ENDLIN,
	IF (NUM .LT. 1) GOTO DISPLA
	NUMITM = NUM

ANYCNG,
	XCALL ANYCN (CNGCTL, WHATNO)
	GOTO (PROCES, CNGBR),CNGCTL+1
CNGBR,
	IF (WHATNO .GT. NUMITM)	GOTO ANYCNG
	NUM = WHATNO
	ROW = WHATNO + 4
	GOTO ASK
PROCES,
	XLBS = 0			;9-16-19

	RH_KEY = '!!!!!!'
	READ (CHN191, DUMREC, RH_KEY)  
	NEXT = RH_NEXT

	FOR I FROM 1 THRU NUMITM
		BEGIN
		READ (CHN072, JOBLIN, RFA:RFA(I)) [ERR=BAD_READ]
		CLEAR RECTRX

		INCR NEXT
		R_SEQ = NEXT
		R_ITEM = JLITM
		R_QTY = QTYS(I)
		R_ORD = JLQTY	;QTY ORDERED
		R_DATE = TODAY
		R_PONO = JLNUM
		R_F1 = JLIF1
		R_F2 = JLIF2
		R_F3 = JLIF3
		
		STORE (CHN191, RECTRX, R_SEQ)

		JLRCV = QTYS(I)
		JLSTS = 'R'
		JLRCDT = TODAY		;2-24-11
		XCALL ISIO (CHN072, JOBLIN, JLKEY, WRITE, LOKCTL)
		XLBS = XLBS + (JLRCV*JLWGT)	;9-16-19
		CALL UPDITM			;10-28-19
		END

	RH_KEY = '!!!!!!'
	READ (CHN191, DUMREC, RH_KEY)  
	RH_NEXT = NEXT
	WRITE (CHN191, DUMREC, RH_KEY)

	JHRCDT = TODAY		;2-24-11
	JHSTS = 'R'		;12-3-18
	LOKCTL = 1		;2-24-11

	XCALL ISIO (CHN071, JOBHDR, JOB, WRITE, LOKCTL)	;12-19-13
	CALL CLRARA

	IF (XLBS .GT. 0) CALL UPD_DATLBS		;9-16-19

	GOTO DISPLA

BAD_READ,
ENDOFF,
	CALL CLOSE
	xcall pgchn ('cp:jobmnu',1)
;;;	xcall pgchn ('cp:immenu',1)
	STOP
	
CLRARA,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR NUM, NUMITM
	FOR I FROM 1 THRU 20
		BEGIN
		CLEAR RFA(I)
		CLEAR QTYS(I)
		END

	RETURN
;------------------------------------------------------------

UPDITM,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


	XCALL XCOM(JLITM, JLIF1, JLIF2, JLIF3, JLQTY, JLRCV, 2, CHN162, CHN163, CHN041)

; 11-5-19: this happens in recepts entry & editing...
;;;	CLEAR ITMKEY
;;;	K_ITEM = JLITM
;;;	K_F1 = JLIF1
;;;	K_F2 = JLIF2
;;;	K_F3 = JLIF3
;;;	READ (CHN041,ITMMAS,ITMKEY,KEYNUM:1) [ERR=NO_ITM] ;KRF = 2
;;;	QTYONO = QTYONO - JLQTY	
;;;	QTYONH = QTYONH + JLRCV
;;;	WRITE (CHN041, ITMMAS, ITEMNO)
;;;	RETURN
;;;NO_ITM,
;;;	XCALL MESAG ("Can't Update Item",1)

	RETURN
;-------------------------------------------------------

UPD_DATLBS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; UPDATE POUNDS FOR CLOSED JOBS
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;	CLEAR DPTSTS
;;;	S_ORDN = JHNUM
;;;	S_DEPT = JHDEPT(1,1)
;;;	XCALL ISIO (CHN193, DPTSTS, S_KEY, READ, LOKCTL)
;;;	IF (LOKCTL .EQ. 0) XDATE = S_DATE		;DATE CLOSED
;;;	IF (XDATE .LE. 0) XDATE = JHRCDT		;DATE RECEIVED

	XDATE = JHRCDT

	CLEAR DATLBS
	CL_DATE = XDATE
	CL_DEPT = JHDEPT(1,1)
	CL_ORD = JHNUM
	XCALL ISIO (CHN063, DATLBS, LDA_KEY, READ, LOKCTL)
	IF (LOKCTL .EQ. 0) RETURN			;DON'T ALLOW 2ND UPDATE

	CLEAR DATLBS
	CL_DATE = XDATE
	CL_DEPT = JHDEPT(1,1)		
	CL_ORD = JHNUM
	CL_LBS = XLBS#2
	CL_JOB = 'J'
	XCALL ISIO (CHN063, DATLBS, LDA_KEY, STORE, LOKCTL)

	RETURN
;===================================================



OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CLEAR OPNOK
	
	SWITCH = 5
	XCALL FILES (1, 'SU', 071, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN071 = 1

	SWITCH = 5
	XCALL FILES (2, 'SU', 072, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN072 = 2

	SWITCH = 5
	XCALL FILES (17, 'SI', 182, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN182 = 17

	SWITCH = 5
	XCALL FILES (4, 'SU', 041, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN041 = 4

	SWITCH = 5
	XCALL FILES (9, 'SU', 191, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN191 = 9

	SWITCH = 5
	XCALL FILES (23,'SI',193, SWITCH)	;193 - DPTSTS
	IF (SWITCH .EQ. 9) RETURN
	CHN193 = 23

	SWITCH = 5
	XCALL FILES (24,'SU',063, SWITCH)	;63 - DATLBS
	IF (SWITCH .EQ. 9) RETURN
	CHN063 = 24
	
	SWITCH = 5
	XCALL FILES (62, 'SU', 162, SWITCH)	;162 - PARENT
	IF (SWITCH .EQ. 9) RETURN
	CHN162 = 62

	SWITCH = 5
	XCALL FILES (63, 'SU', 163, SWITCH)	;163 - CHILDX
	IF (SWITCH .EQ. 9) RETURN
	CHN163 = 63

	OPNOK = 1

	RETURN
;-------------------------------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (CHN041) CLOSE CHN041
	IF (CHN071) CLOSE CHN071
	IF (CHN072) CLOSE CHN072
	IF (CHN182) CLOSE CHN182
	IF (CHN191) CLOSE CHN191
	IF (CHN193) CLOSE CHN193	;9-16-19
	IF (CHN063) CLOSE CHN063	;9-16-19
	IF (CHN162) CLOSE CHN162	;10-28-19
	IF (CHN163) CLOSE CHN163	;10-28-19

	RETURN
;-------------------------------------------------------------

END

