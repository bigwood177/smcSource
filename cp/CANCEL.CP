;  CANCEL / COP isam
;
;	5/22/02 ssq: added CANHDR, CANLIN, & CANDUC.ISM

RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR



RECORD SKEY
	XCUSNO	,D6
	SHPNO	,D4

RECORD	ORDCM2
	.INCLUDE 'DEF:RD135A.DEF'

RECORD SHIPTO
		.INCLUDE 'DEF:RD171A.DEF'
RECORD SHPCTL	,X
		.INCLUDE 'DEF:RD171B.DEF'

RECORD ORDHDR
		.INCLUDE 'DEF:RD044A.DEF'
RECORD ORDLIN
		.INCLUDE 'DEF:RD045A.def'
RECORD	,X
		.INCLUDE 'DEF:RD045D.def'
RECORD CANCTL
		.INCLUDE 'DEF:RD177B.DEF'
RECORD DUCACC
		.INCLUDE 'DEF:RD175A.DEF'

RECORD ITMMAS
		.INCLUDE 'DEF:RD041A.def'
RECORD	ITMKEY
	.INCLUDE 'DEF:RD041K.DEF'

;;;RECORD ,X
;;;		.INCLUDE 'DEF:RD041B.DEF'
;;;RECORD ITMIDX
;;;		.INCLUDE 'DEF:RD042A.DEF'

RECORD COPCTL
		.INCLUDE 'DEF:RD060A.DEF'
RECORD ARTERM
		.INCLUDE 'DEF:RD170A.DEF'
RECORD ARTCTL
		.INCLUDE 'DEF:RD170B.DEF'


RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD	CHANNEL
	CHN144	,D2
	CHN145	,D2
	CHN146	,D2
	CHN135	,D3

RECORD	VARS
	a15	,a15
	itmrfa	,a6
	vanrfa	,a6
	ivflag	,d1
	vanflg	,d1

	LITEM	,A15
	CNGCTL	,D1
	WHATNO	,D2
	TCHAR	,D1
	SAVV	,D1
	OPNOK	,D1
	L	,2D1
	OPTION	,D1
	ENTRY	,A35
	INXCTL  ,D1
	DECMAL	,D18
	MASK	,A6,'XXXXXX'
	RECNO	,D5
	ITMMAX	,D5
	KEY   	,A15
	BSEND	,D5
	BSMID	,D5
	SRCCTL	,D1
	BLANKS	,A25
	ALPHA	,A8
	ORGINV	,D5
	SWITCH	,D1
	CTR	,D2
	LOCTNS	,D2
	SAVTYP	,D1
	BADBIL	,D1
	V	,D1
	READ	,D1,	0
	WRITE	,D1,	1
	STORE	,D1,	2
	DELETE	,D1,	3
	LOKCTL	,D1

PROC
	XCALL TERID (V)

	SWITCH = 1
	XCALL FILES (4,'SU',44,SWITCH)		;FILE # 44 -- ORDHDR FILE
	IF (SWITCH.NE.9) GO TO OPEN5
	CALL CLOSE1
	XCALL PGCHN ('CP:OEMNU',1)
OPEN5,
	SWITCH = 5
	XCALL FILES (35, 'SU', 135, SWITCH)
	CHN135 = 35

	SWITCH = 1
	XCALL FILES (5,'SU',45,SWITCH)		;FILE # 45 -- ORDLIN FILE
	IF (SWITCH.NE.9) GO TO OPEN1
	CALL CLOSE2
	XCALL PGCHN ('CP:OEMNU',1)
OPEN1,
	SWITCH = 1
	XCALL FILES (1,'SU',41,SWITCH)		;FILE # 41 -- ITMMAS FILE
	XCALL FILES (6,'SU',175,SWITCH)		;;;FILE # 175 -- DUCACC FILE
	IF (SWITCH.NE.9) GO TO OPEN3
	CALL CLOSE3
	XCALL PGCHN ('CP:OEMNU',1)
OPEN3,
	SWITCH = 1
	XCALL FILES (3,'I',60,SWITCH)		;FILE # 60 -- COPCTL FILE
	IF (SWITCH.NE.9) GO TO RDCTL
	CALL CLOSE4
	XCALL PGCHN ('CP:OEMNU',1)
RDCTL,
;;;	LOKCTL = 1
;;;	XCALL IO (1,ITMMAS,1,READ,LOKCTL)
;;;	ORGINV = ORG041

	UNLOCK 1
	LOKCTL = 1
	XCALL IO (3,COPCTL,1,READ,LOKCTL)
	IF (SAVTYP.LE.2) GO TO OPEN9
OPEN2,
OPEN9,
OPEN10,
	SWITCH = 1
	XCALL FILES (10,'I',170,SWITCH)		;FILE #170 -- ARTERM
	IF (SWITCH.NE.9) GO TO DISPLA
	CALL CLOSE7
	XCALL PGCHN ('CP:OEMNU',1)
DISPLA,
	UNLOCK 4
	UNLOCK 5
	UNLOCK 6
	UNLOCK 1
	LOKCTL = 1
	XCALL IO (10,ARTCTL,1,READ,LOKCTL)


	XCALL OE1 (DSTFLG,V)
	XCALL OUTPT (2,1,0,'CANCEL',1)
	XCALL OUTPT (2,3,0,'*',V)
	XCALL OUTPT (2,50,0,'3. CANCELED DATE',V)

ORDNUM,
	CTL = '02,16,06,01,#E'
	CALL INPUT
	GO TO (ORDNUM,END), INXCTL
	OORDNO = ENTRY
	IF (OORDNO.EQ.0) GO TO ORDNUM
SRCH,
	LOKCTL = 1
	XCALL ISIO (4,ORDHDR,OORDNO,READ,LOKCTL)
	IF (LOKCTL) GO TO NOFIND

	CTL = '02,38'
	DECMAL(1,8) = OORDDT
	CALL DSPDTE
	CTL = '03,16,06'
	DECMAL = OCUSNO
	CALL DSPNUM
	XCALL OUTPT (3,24,0,OCUSNM,V)
	CTL = '04,16,02'
	DECMAL = OSLMAN
	CALL DSPNUM
	XCALL OUTPT (4,33,0,OLOC,V)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL OUTPT (8,53,0,OSCAC,1)


	XCALL OUTPT (4,70,0,OPONO,V)
	CTL = '05,16,02'
	DECMAL = ODISC
	CALL DSPNUM
	XCALL OUTPT (10,18,0,'%',1)
	SRCCTL = 2
	BSEND = ORG170
	XCALL SERCH (10,ARTERM,OTERMS,1,1,BSEND,BSMID,SRCCTL,1,2,7,0,0,0,0)
	XCALL OUTPT (10,33,0,OTERMS,1)
	GO TO (TRMNFD), SRCCTL
	XCALL OUTPT (11,33,0,ARTRDS,1)
	GO TO TERMOK
TRMNFD,
	XCALL OUTPT (11,33,0,'TERM NOT ON FILE',1)
TERMOK,
	XCALL OUTPT (10,53,0,OCLPPD,1)
	XCALL OUTPT (5,70,0,OJOBNO,V)
DSPADD,
	ALPHA (1,4) = OSHPTO,'ZZZZ'
	XCALL OUTPT (6,16,0,ALPHA(1,4),V)
	XCALL OUTPT (13,13,0,OSHPNM,1)
	XCALL OUTPT (14,13,0,OSHAD1,1)
	XCALL OUTPT (15,13,0,OSHAD2,1)
	XCALL OUTPT (16,13,0,OSHAD3,1)
	XCALL OUTPT (10,19,0,OCOMNT(1),V)
	XCALL OUTPT (11,19,0,OCOMNT(2),V)
;;;	IF (DSTFLG.NE.'Y') GO TO RIGHT1
	IF (DSTFLG.NE.'Y') GO TO ANYCNG
	ALPHA = OARACT, 'XXXX-XXX'
	XCALL OUTPT (11,73,0,ALPHA,V)
;-
	GOTO ANYCNG
;-----------------------------------------------------
OPROMD,
	CTL = '02,68,08,00,D '
	CALL INPUT
	GOTO (DISPLA), INXCTL
	OPROMD = ENTRY
	GOTO ANYCNG

PONUM,
	CTL = '04,70,10,00,AT'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	IF(INXCTL .EQ. 3)	;<TAB>
		BEGIN
		CALL OMETRO		;GET METRO PROJ #
		IF(CNGCTL.EQ.0)GOTO PONUM
		ENTRY = OPONO
		XCALL OUTPT(4,70,0,OPONO,V)
		END

	OPONO = ENTRY
	GO TO ANYCNG

JOBNUM,
	CTL = '05,70,10,00,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	OJOBNO = ENTRY
	GOTO ANYCNG

;-
SHIPTO,
	XCALL OUTPT (13,12,1,'\',1)
	XCALL OUTPT (14,12,1,'\',1)
	XCALL OUTPT (15,12,1,'\',1)
	XCALL OUTPT (16,12,1,'\',1)
	CTL = '06,16,04,00,N '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	OSHPTO = ENTRY
	IF (ENTRY.EQ.BLANKS) GO TO DFBLTO
	IF (OSHPTO.EQ.9999) GO TO SHIPNM

	SWITCH = 5
	XCALL FILES (8,'SI',171,SWITCH)

	XCUSNO = OCUSNO
	SHPNO = OSHPTO
	XCALL ISIO (8,SHIPTO,SKEY,READ,LOKCTL)
	CLOSE 8
	IF (LOKCTL .NE. 0) GOTO BADSHP

	OSHPNM = SHTONA
	OSHAD1 = SHTOAD(1)
	OSHAD2 = SHTOAD(2)
	OSHAD3 = SHTOAD(3)
	OTAXFL = SHTOTC		;SSQ 4/24/02
	CALL DSPSHP
	GO TO ANYCNG

DFBLTO,
;;;	IF (NAME.NE.OCUSNM) CALL GETCUS
;;;	OSHPNM = NAME
;;;	OSHAD1 = ADD1
;;;	OSHAD2 = ADD2
;;;	TMPCTY = CITY
;;;	TMPSTA = STATE
;;;	TMPZIP = ZIP
;;;	OSHAD3 = TMPAD3
	CALL DSPSHP
	GO TO ANYCNG
SHIPNM,
	CTL = '13,12,30,00,A '
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	GO TO (DISPLA), INXCTL
	OSHPNM = ENTRY
	OSHFLG = 'C'		;USER CHANGED SHIP TO
	IF (OSHPTO.NE.9999) GO TO ANYCNG
SHIPA1,
	CTL = '14,12,30,00,A '
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	GO TO (DISPLA), INXCTL
	OSHAD1 = ENTRY
	OSHFLG = 'C'		;USER CHANGED SHIP TO
	IF (OSHPTO.NE.9999) GO TO ANYCNG
SHIPA2,
	CTL = '15,12,30,00,A '
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	GO TO (DISPLA), INXCTL
	OSHAD2 = ENTRY
	OSHFLG = 'C'		;USER CHANGED SHIP TO
	IF (OSHPTO.NE.9999) GO TO ANYCNG
SHIPA3,
	CTL = '16,12,30,00,A '
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	GO TO (DISPLA), INXCTL
	OSHAD3 = ENTRY
	OSHFLG = 'C'		;USER CHANGED SHIP TO
	GO TO ANYCNG
DSPSHP,
	XCALL OUTPT (13,12,0,OSHPNM,1)
	XCALL OUTPT (14,12,0,OSHAD1,1)
	XCALL OUTPT (15,12,0,OSHAD2,1)
	XCALL OUTPT (16,12,0,OSHAD3,1)
	RETURN
BADSHP,
	XCALL MESAG('SHIP-TO NUMBER NOT FOUND',1)
	GO TO SHIPTO
;-
	
	
COMENT,
	XCALL OUTPT (11,19,0,BLANKS,V)
	CTL = '10,19,35,00,AT'
	CALL INPUT
	GO TO (DISPLA,DEFCOM,DEFCOM), INXCTL
	OCOMNT(1) = ENTRY
	ROW = 11
	CALL INPUT
	GO TO (DISPLA), INXCTL
	OCOMNT(2) = ENTRY
	GO TO ANYCNG
defcom,
;;;	ocomnt(1) = ordcom(1)
;;;	ocomnt(2) = ordcom(2)

	XCALL OUTPT (20,19,0,OCOMNT(1),1)
	XCALL OUTPT (21,19,0,OCOMNT(2),1)

	GO TO ANYCNG
OMETRO,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; GET METRO PROJ. NO.
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL OUTPT(7,58,0,'METRO:',1)
	CTL = '07,66,12,00,A '

	IF (OMETRO .NE. BLANKS)GOTO OM_DISP

	SAVV = V
	V = 1
	CALL INPUT
	V = SAVV
	GOTO (OM_ABORT),INXCTL
	OMETRO = ENTRY(1,12)
	GOTO OM_ABORT

OM_DISP,
	XCALL OUTPT (ROW,COL,1,OMETRO,1)

	CALL ACCEPT		
	USING TCHAR SELECT
	(21),	BEGIN			;^U
		OMETRO =
		GOTO OMETRO
		END
	(13),	GOTO OM_ABORT		;<CR>
	ENDUSING
	GOTO OM_DISP

OM_ABORT,
	RETURN
;------------------------------------------
ACCEPT,
	XCALL FLAGS (00010000)			;DISABLE CHARACTER ECHOING
	XCALL OUTPT(ROW,COL+13,0,' ',1)
	ACCEPT (15,TCHAR)
	XCALL FLAGS (00000000)			;RE-ENABLE CHARACTER ECHOING
	RETURN

;-----------------------------------------------------
ANYCNG,
	XCALL ANYCN (CNGCTL, WHATNO)
	GOTO (UPDAT, CNGBR), CNGCTL + 1
CNGBR,
	GOTO (NOC,NOC,OPROMD,NOC,NOC,NOC,NOC,PONUM,NOC,NOC,
&	      NOC,JOBNUM,SHIPTO,SHIPNM,SHIPA1,SHIPA2,SHIPA3,
&	      COMENT,NOC,NOC,NOC), WHATNO
NOC,
	XCALL BEEP
	GOTO ANYCNG
UPDAT,
	LOKCTL = 1
	XCALL ISIO (4,ORDHDR,OORDNO,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL ISIO (4,ORDHDR,OORDNO,READ,LOKCTL)
RIGHT1,
;-
	XCALL OUTPT (12,1,1,'OK TO CANCEL ?',V)
	CTL = '12,17,01,01,YN'
	CALL INPUT
	GO TO (PROCES), INXCTL
	UNLOCK 4
	GO TO DISPLA
NOFIND,
	XCALL MESAG('ORDER NOT FOUND',1)
	GO TO DISPLA
PROCES,
	XCALL WATE(3,V)

	CALL SAVE_ORDER			;SAVE CANCELLED ORDER
	IF (.NOT. OPNOK)
		BEGIN
		XCALL MESAG ('COULD NOT SAVE DATA, ORDER NOT CANCELLED!',1)
		GOTO DISPLA
		END

	SWITCH = 1
	XCALL FILES (7,'U',177,SWITCH)
	IF (SWITCH.EQ.9) 
	BEGIN
	  XCALL MESAG ('CANLOG FILE IS BUSY - CHECK FILE STATUS',2)
	  GOTO NOCAN2
	END
	LOKCTL = 1
	XCALL IO (7,CANCTL,1,READ,LOKCTL)
	INCR REC177

;-------------------------------------------------------------
;;;	IF (REC177.GE.MAX177)
;;;	BEGIN
;;;	  XCALL MESAG ('CANLOG FILE IS FULL - PLEASE EXPAND',2)
;;;	  GOTO NOCANDO
;;;	END
;-------------------------------------------------------------
	LOKCTL = 1
	XCALL IO (7,CANCTL,1,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IO (7,ORDHDR,REC177,WRITE,LOKCTL)
	XCALL FILES (7,'U',177,4)

	LOKCTL = 1
	XCALL ISIO (4,ORDHDR,OORDNO,DELETE,LOKCTL)
	LOKCTL = 1
	LORDNO = OORDNO
	LINSEQ =
	XCALL OUTPT (24,1,1,'Cancelling line items',1)
	XCALL ISIO (5,ORDLIN,ORDKEY,READ,LOKCTL)
;;;	IF (LOKCTL.EQ.3) GO TO CANCLD
;;;	IF (LOKCTL.EQ.2 .AND. LORDNO.NE.OORDNO) GO TO CANCLD
	IF (LOKCTL.EQ.3) GO TO CANDUC				;;;
	IF (LOKCTL.EQ.2 .AND. LORDNO.NE.OORDNO) GO TO CANDUC	;;;
	GO TO ADJUST
NOCANDO,
	UNLOCK 7
	XCALL FILES (7,'U',177,4)
NOCAN2,
	XCALL MESAG ('CANNOT CANCEL ORDER',2)
	GOTO END
NXTLIN,
	LOKCTL = 1
	XCALL IOS (5,ORDLIN,READ,LOKCTL)
;;;	IF (LOKCTL.EQ.2) GO TO CANCLD
;;;	IF (LORDNO.NE.OORDNO) GO TO CANCLD
	IF (LOKCTL.EQ.2) GO TO CANDUC		;;;
	IF (LORDNO.NE.OORDNO) GO TO CANDUC	;;;
	GO TO ADJUST
CANDUC,
	XCALL OUTPT (24,1,1,'Cancelling duct and accessory items',1)
	DUCTOR = OORDNO
	XCALL ISIO (6,DUCACC,DUCTOR,READ,LOKCTL)
	IF (LOKCTL.EQ.3) GOTO CANCLD
	IF (LOKCTL.EQ.2.AND.DUCTOR.NE.OORDNO) GOTO CANCLD
	GOTO DELDUC
NXTDUC,
	LOKCTL = 1
	XCALL IOS (6,DUCACC,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GOTO CANCLD
	IF (DUCTOR.NE.OORDNO) GOTO CANCLD
DELDUC,
	LOKCTL = 1
	XCALL ISIO (6,DUCACC,KEY175,DELETE,LOKCTL)
	GOTO NXTDUC
CANCLD,
	XCALL MESAG('ORDER CANCELLED',2)

	clear ordcm2
	c2_ord = oordno
	c2_seq = 0

	lokctl = 0
	xcall isio (chn135, ordcm2, c2_key, read, lokctl)
	if (lokctl .EQ. 0) xcall isio (chn135, ordcm2, c2_key, delete, lokctl)

	GO TO DISPLA
ADJUST,
	LOKCTL = 1
	XCALL ISIO (5,ORDLIN,ORDKEY,DELETE,LOKCTL)
;-------------------------------------------------------
;-----------------------------------------------------------------
	LITEM = LITMNO
	IF (LCFGIM .NE. A15) LITEM = LCFGIM	;use item input if not blank

	USING LITEM SELECT
	('CR0' thru 'CR9'),	KEY = LITEM(1,4)
	('CM'),			KEY = LITEM(1,3)
	('EDS0' THRU 'EDS9'),	KEY = LITEM(1,9)
	('JEB0' THRU 'JEB9'),	KEY = LITEM(2,15)	;SKIP THE "J"
	('JEF0' THRU 'JEF9'),	KEY = LITEM(2,15)	;SKIP THE "J"
	('JEFI'),		KEY = LITEM(2,3) + LITEM(5,15)
	('EFI'),		KEY = LITEM(1,2) + LITEM(4,15)
;;;	('JEFI0' THRU 'JEFI9'),	KEY = LITEM(2,15)	;SKIP THE "J"
	('JJG'),		KEY = LITEM(2,15)	;SKIP THE "J"
	('JTG'),		KEY = LITEM(2,15)	;SKIP THE "J"
	(),			KEY = LITEM
	ENDUSING

	xcall gtitm (key, lf1, lf2, lf3, itmrfa, ivflag, vanflg, vanrfa)

re_read,
	read (1, itmmas, rfa:itmrfa) [lock=i_lock, err=i_err]
	

;;;	USING LITEM SELECT
;;;	('CD506' THRU 'CD548'),	CD5QTY = CD5QTY + LQTYSH*2	;conduit locks
;;;	('CD701' THRU 'CD799'),	CD7QTY = CD7QTY + LQTYSH*2	;conduit locks
;;;	ENDUSING

	IF (STOCK.EQ.'S') 
	BEGIN
	  QTYCOM = QTYCOM - LQTYOR
	  IF (QTYCOM.LE.0) QTYCOM = 
	END

	LOKCTL = 1
	WRITE (1, itmMAS, ITMKEY)		;DEBUG
I_ERR,
	GO TO NXTLIN

i_lock,
	sleep (5)
	goto re_read

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	IF (LSTOKT.NE.'S'.OR.LLOC.EQ.'E') GO TO NXTLIN		;;;
;;;	BSEND = ORGINV
;;;	USING LITMNO SELECT
;;;	('X'),			BEGIN
;;;				KEY = LITMNO(1,3)
;;;				KEY(4,4) = '0'
;;;				END
;;;	('CR0' thru 'CR9'),	KEY = LITMNO(1,4)
;;;	('CM'),			KEY = LITMNO(1,3)
;;;	('EDS0' THRU 'EDS9'),	KEY = LITMNO(1,9)
;;;	(),			KEY = LITMNO
;;;	ENDUSING
;;;
;;;
;;;	CLEAR ITMKEY
;;;	K_ITEM = KEY
;;;	K_F1 = LF1,	'XXX'
;;;	K_F2 = LF2,	'XXX'
;;;	K_F3 = LF3,	'XXXXX'
;;;
;;;	READ (1, ITMMAS, ITMKEY, KEYNUM:1) [ERR=I_LOCKED]
;;;	GOTO I_OK
;;;I_LOCKED,
;;;	GOTO NXTLIN
;;;I_OK,
;;;
;;;	QTYCOM = QTYCOM - LQTYOR		;;;
;;;	IF (QTYCOM.LT.0) QTYCOM =		;;;
;;;
;;;	LOKCTL = 1
;;;	XCALL ISIO (1,ITMMAS,ITMKEY,WRITE,LOKCTL)
;;;	xcall comlg(litmno, itemno, -lqtyor, lordno, lloc, "scrn2")
;;;	GO TO NXTLIN
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	  

END,
	XCALL WATE(3,V)
	CALL CLOSE8
	xcall flags(7000000)
	stop
	XCALL PGCHN ('CP:OEMNU',1)

SAVE_ORDER,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK

	SWITCH = 5
	XCALL FILES (7,'SU',144,SWITCH)		;CANHDR
	IF (SWITCH .EQ. 9) GOTO FINI_SO
	CHN144 = 7

	SWITCH = 5
	XCALL FILES (8,'SU',145,SWITCH)		;CANLIN
	IF (SWITCH .EQ. 9) GOTO FINI_SO
	CHN145 = 8

	SWITCH = 5
	XCALL FILES (9,'SU',146,SWITCH)		;CANDUC
	IF (SWITCH .EQ. 9) GOTO FINI_SO
	CHN146 = 9

	OPNOK = 1

	XCALL ISIO (CHN144, ORDHDR, OORDNO, STORE, LOKCTL)

	FIND (5, ORDLIN, OORDNO) [ERR=SO_LLOP]
SO_LLOP,
	XCALL IOS (5, ORDLIN, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO SO_DUCT
	IF (LORDNO .NE. OORDNO) GOTO SO_DUCT
	XCALL ISIO (CHN145, ORDLIN, ORDKEY, STORE, LOKCTL)
	GOTO SO_LLOP
SO_DUCT,
	FIND (6, DUCACC, OORDNO) [ERR=SO_DLOP]
SO_DLOP,
	XCALL IOS (6, DUCACC, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO FINI_SO
	IF (DUCTOR .NE. OORDNO) GOTO FINI_SO
	XCALL ISIO (CHN146, DUCACC, DUCTOR, STORE, LOKCTL)
	GOTO SO_DLOP
FINI_SO,

	IF (CHN144) CLOSE CHN144
	IF (CHN145) CLOSE CHN145
	IF (CHN146) CLOSE CHN146

	RETURN
;------------------------------------------------------


INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
DSPNUM,
	OPTION = 1
	GO TO CALDSP
DSPDTE,
	XCALL DATE8(DECMAL(1,8), D_OUT, D_OUTR, D_FMT, D_SW)
	XCALL OUTPT (ROW, COL, 0, D_FMT, V)
	RETURN
;;;	OPTION = 2
CALDSP,
	XCALL DSPLY(MAX,ROW,COL,DECMAL,OPTION,V)
	RETURN
CLOSE8,
	XCALL FILES (9,'I',170,4)
CLOSE7,
	XCALL FILES (9,'I',172,4)
CLOSE6,
;;;	IF (SAVTYP.LE.2) GO TO CLOSE5
;;;	XCALL FILES (12,'I',91,4)
CLOSE5,
	XCALL FILES (3,'I',60,4)
CLOSE4,
	XCALL FILES (1,'SU',41,4)
	XCALL FILES (6,'U',175,4)	;;;
CLOSE3,
	XCALL FILES (5,'U',45,4)
CLOSE2,
	XCALL FILES (4,'U',44,4)
CLOSE1,
;;;	XCALL FILES (2,'I',42,4)
	RETURN
END
