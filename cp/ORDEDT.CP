;  ORDEDT / COP  isam
;
;
;		PGM TO PRINT ORDER EDIT LIST
; 5-30-18 ssq: make cusmas isam
;	1-18-21 ssq: ordhdr.odisc has been removed.
;
;
;
RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR



GLOBAL DUCK,	INIT
		.INCLUDE 'DEF:RD175D.DEF'
ENDGLOBAL
;
RECORD PARAM
	.INCLUDE 'DEF:PARAM2.DEF'
RECORD
	QTY	,D5
	ITM	,A15
	DES	,A30
	PRC	,D7
	ACCUOM	,A2
RECORD ACCREC
	ACCQTY	,D5	;ACCESSORY QUANTITY
	ACCITM	,A15	;ACCESSORY ITEM NUMBER
	ACCDES	,A30	;ACCESSORY DESCRIPTION
	ACCPRC	,D7	;ACCESSORY PRICE PER UNIT
		,A5
RECORD ORDCM2
		.INCLUDE 'DEF:RD135A.DEF'

RECORD ORDHDR   	
		.INCLUDE 'DEF:RD044A.DEF'
RECORD CUSMAS   	
		.INCLUDE 'DEF:RD001A.DEF'
RECORD DUMCUS  ,X	
		.INCLUDE 'DEF:RD001B.DEF'
;;;RECORD CUSIDX   	
;;;		.INCLUDE 'DEF:RD002A.DEF'
RECORD COPCTL
		.INCLUDE 'DEF:RD060A.DEF'
RECORD ARTERM
		.INCLUDE 'DEF:RD170A.DEF'
RECORD ARTCTL	,X
		.INCLUDE 'DEF:RD170B.DEF'

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
RECORD	COPTBL
	.INCLUDE 'DEF:RD182A.DEF'

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

RECORD TITLE
		,A15,'ORDER EDIT LIST'
RECORD LEGEND
		,A7,'LEGEND:'
		,A2
		,A18,'B/O = BACK-ORDERED'
		,A6
		,A18,'O/S = OUT-OF-STOCK'
RECORD DASHES
		,A50,'--------------------------------------------------'
		,A50,'--------------------------------------------------'
		,A32,'--------------------------------'
RECORD SUBHDR
		,A50,'    ITEM NUMBER  ITEM DESCRIPTION               SE'
		,A50,'Q NUM   QTY  B/O-O/S QTY-ALLOC  UNIT PRICE   UOM  '
		,A32,'  EXT-PRICE   DISC %  NET-PRICE '
RECORD PBUF
	PLINE	,A132

RECORD	VARS
	CHN182	,D2
	CHN135	,D2
	WHATNO	,D2
	CNGCTL	,D1
	S_VIA	,A1
	X_SCAC	,A4
	SCAC	,A4
	ADCNT2	,D4
	SPLFIL	,A14
	LPARG	,D1
	LOKCTL	,D1
	DECMAL	,D10
	TOTSAL	,D10
	DUCTOT	,D7	;;;
	LINTOT	,D7	;;;
	ACCTOT	,D7	;;;
	TOTVAL	,D10
	TOTQTY	,D6
	LINCNT	,D2,60
	PGCNT	,D6
	MSKNUM	,A8,'ZZZZZZX-'
	MSKDLR	,A12,'ZZZZ,ZZZ.XX-'
	MSK3DP	,A13,'Z,ZZZ,ZZZ.XXX'	;;;
	MASK	,A13,'Z,ZZZ,ZZZ.XX-'
	MASK1	,A6, 'ZZZZZX'
	PAGENO	,D2
	PRTCTL	,D2
	SHIPTO	,4A27
	SOLDTO	,4A27
	KEY   	,A6
	ORGSHV	,D5		;;;
	ORGART	,D5		;;;
	BSEND	,D5
	BSND2	,D5
	BSMID	,D5
	SRCCTL	,D1
	ENTRY	,A30
	INXCTL	,D1
	STRTNA	,A6
	ENDNA	,A6
	STRTNO	,D6
	ENDNO	,D6
	STXCTL	,D1
	BLANKS	,A25
	RPTNUM	,D3
	PRTTYP	,A1
	SWITCH	,D1
	LPSW	,D2
	V	,D1
	SBSND	,D5			;COP27
	DATWRK	,D6
	READ	,D1	,0
	WRITE	,D1	,1
;;;	JUST	,D1
	PRNTSW	,D1
	STATUS	,D1	;;;
	ORLFIL	,A14	;;;
	SHVFIL	,A14	;;;
	ARTFIL	,A14	;;;
	DUCFIL	,A14	;;;
	ORDEST	,A1	;;;
PROC
	XCALL TERID (V)
	SWITCH = 1
;;;	XCALL FILES (2,'I',02,SWITCH)		;FILE # 02 -- CUSIDX FILE
;;;	IF (SWITCH.EQ.9) GO TO EXIT
	SWITCH = 6
	XCALL FILES (5,'SI',45,SWITCH)		;FILE # 45 -- ORDLIN FILE
	IF (SWITCH.EQ.9) GO TO CLOSE1
	XCALL FFILE (45,ORLFIL,SWITCH)
	ORLFIL(14,14) = 'M'
	SWITCH = 1
	XCALL FILES (4,'SI',44,SWITCH)		;FILE # 44 -- ORDHDR FILE
	IF (SWITCH.EQ.9) GO TO CLOSE2
	SWITCH = 1
	XCALL FILES (3,'I',60,SWITCH)		;FILE # 60 -- COPCTL FILE
	IF (SWITCH.EQ.9) GO TO CLOSE3


	SWITCH = 5
	XCALL FILES (9,'SI',182,SWITCH)		;COPTBL
	CHN182 = 9
	IF (SWITCH.EQ.9) GO TO CLOSE4

	SWITCH = 1
	XCALL FILES (10,'I',170,SWITCH)		;FILE #170 -- ARTERM
	IF (SWITCH.EQ.9) GO TO CLOSE5
	LOKCTL = 1
	XCALL IO (10,ARTCTL,1,READ,LOKCTL)
	ORGART = ORG170
	CLOSE 10
	XCALL FFILE (170,ARTFIL,SWITCH)
	SWITCH = 6
	XCALL FILES (5,'SI',175,SWITCH)		;FILE # 175 -- DUCACC
	IF (SWITCH.EQ.9) GOTO CLOSE6
	XCALL FFILE (175,DUCFIL,SWITCH)
	DUCFIL(14,14) = 'M'

	SWITCH = 5
	XCALL FILES (35, 'SI', 135, SWITCH)	;FILE # 135 -- ORDCM2
	CHN135 = 35	

OPEN1,
	SWITCH = 5
	XCALL FILES (1,'SI',1,SWITCH)		;FILE # 01 -- CUSMAS FILE
;;;	LOKCTL = 1
;;;	XCALL IO (1,CUSMAS,1,READ,LOKCTL)
;;;	SBSND = ORG001

	LOKCTL = 1
	XCALL IOS (3,COPCTL,READ,LOKCTL)
	TOTVAL =
BEGIN,
	CNGCTL =
	STRTNA =
	ENDNA =
	XCALL OUTPT (1,1,2,'ORDER ENTRY & EDITING',V)
	XCALL OUTPT (2,1,0,'ORDER EDIT LIST',1)
	XCALL OUTPT ( 6,5,0,'1. START ORDER #',1)
	XCALL OUTPT ( 7,5,0,'2. END   ORDER #',1)
	XCALL OUTPT ( 9,5,0,'3. <E>STIMATES OR <O>RDERS <O> ?',1)
	XCALL OUTPT (11,5,0,'4. SHIP VIA CODE:',1)
STRTNO,
	XCALL INPUT (6,23,06,00,'#E',ENTRY,INXCTL,1)
	GOTO (BEGIN,GETOUT),INXCTL
	STRTNO = ENTRY(1,6)
	IF (STRTNO .EQ. 0)
		BEGIN
		ENDNO = 999999
		XCALL OUTPT ( 6,5,1,'1. START ORDER #  ALL',1)
		XCALL OUTPT ( 7,5,1,'2. END   ORDER #',1)
		GOTO (ANYCNG),CNGCTL
		GOTO ORDEST
		END
	GOTO (ANYCNG),CNGCTL
ENDNO,
	XCALL INPUT (7,23,06,00,'#E',ENTRY,INXCTL,1)
	GOTO (BEGIN,GETOUT),INXCTL
	ENDNO = ENTRY(1,6)
	IF (ENDNO .EQ. 0)
		BEGIN
		ENDNO = STRTNO
		ENTRY(1,6) = ENDNO,'ZZZZZX' [LEFT]
		XCALL OUTPT (7,23,1,ENTRY(1,6),1)
		END
	GOTO (ANYCNG),CNGCTL
ORDEST,
	XCALL INPUT (09,39,01,00,'A ',ENTRY,INXCTL,1)
	GOTO (BEGIN),INXCTL
	ORDEST = ENTRY(1,1)
	IF (ORDEST .EQ. ' ')
		BEGIN
		ORDEST = 'O'
		XCALL OUTPT (9,39,0,ORDEST,1)
		END
	IF (ORDEST.NE.'O' .AND. ORDEST.NE.'E') GOTO ORDEST
	GOTO (ANYCNG),CNGCTL
S_VIA,
	XCALL INPUT (11,24,04,00,'A ',ENTRY,INXCTL,1)
	GOTO (BEGIN),INXCTL
	X_SCAC = ENTRY(1,4)
	IF (X_SCAC .EQ. BLANKS)
	THEN	XCALL OUTPT (11,24,1,'ALL',1)
	ELSE	BEGIN
		SCAC = X_SCAC
		CALL GET_SCAC
		IF (LOKCTL .NE. 0) GOTO S_VIA
		END
ANYCNG,
	XCALL ANYCN(CNGCTL,WHATNO)
	GOTO (PROCES,CNGBR),CNGCTL+1
CNGBR,
	GOTO (STRTNO,ENDNO,ORDEST,S_VIA),WHATNO
	GOTO ANYCNG
PROCES,

	LOKCTL = 1
	OORDNO = STRTNO
	XCALL ISIO (4,ORDHDR,OORDNO,READ,LOKCTL)
	IF (LOKCTL.EQ.3) GO TO PRNTOF
	IF (LOKCTL.EQ.0 .OR. (LOKCTL.EQ.2 .AND. OORDNO.LE.ENDNO)) GO TO SETORD
	GO TO PRNTOF

RDHDR,
	LOKCTL = 1
	XCALL IOS (4,ORDHDR,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO ENDHDR
	IF (OORDNO.GT.ENDNO) GO TO ENDHDR
	IF (OLOC.NE.ORDEST) GOTO RDHDR
;;;	IF (OSHVIA .NE. S_VIA) GOTO RDHDR	;SSQ 10-01-96
SETORD,
	IF (X_SCAC.NE.BLANKS .AND. (OSCAC.NE.X_SCAC)) GOTO RDHDR
	PAGENO = 1
	SHIPTO (1) = OSHPNM
	SHIPTO (2) = OSHAD1
	SHIPTO (3) = OSHAD2
	SHIPTO (4) = OSHAD3
	
	XCALL ISIO (1, CUSMAS, OCUSNO, READ, LOKCTL)
	IF (LOKCTL .NE. 0) CALL NOCUST
	
;;;	KEY = OCUSNO,'XXXXXX'
;;;	BSEND = SBSND				;COP37
;;;	XCALL SERCH (2,CUSIDX,KEY,1,6,BSEND,BSMID,SRCCTL,4,7,11,0,0,0,0)
;;;	IF (SRCCTL.EQ.1) CALL NOCUST
;;;	LOKCTL = 1
;;;	IF (SRCCTL.EQ.0) XCALL IO (1,CUSMAS,IRC001,READ,LOKCTL)

	SOLDTO (1) = OCUSNM
	SOLDTO (2) = ADD1
	SOLDTO (3) = ADD2
	SOLDTO (82,96) = CITY
	SOLDTO (98,99) = STATE
	SOLDTO (101,110) = ZIP
	IF (OCUSNO.NE.999999) GOTO PRNTHD
	OCUSNM = SHIPTO(1)
	SOLDTO(1) = SHIPTO(1)
	SOLDTO(2) = SHIPTO(2)
	SOLDTO(3) = SHIPTO(3)
	SOLDTO(4) = SHIPTO(4)
	SHIPTO(1,120) =

PRNTHD,
	clear ordcm2
	c2_ord = oordno
	c2_seq = 0

	lokctl = 0
	xcall isio (chn135, ordcm2, c2_key, read, lokctl)
	if (lokctl .ne. 0) clear ordcm2

	TOTSAL =
	DUCTOT = 	;;;
	LINTOT =	;;;
	ACCTOT =	;;;
	IF (LINCNT.GT.45) LINCNT = 60
	CALL PRTHDR
	PBUF = SUBHDR
	CALL PRINT
	XCALL LINFD (1)
	INCR LINCNT
	GOTO FNDITM
NOCUST,
	CUSMAS =
	RETURN
PRTHDR,
	IF (PGCNT(4,6).NE.0) XCALL LINFD (2)
	IF (PGCNT(4,6).NE.0) LINCNT = LINCNT + 2
	PLINE (1,8) = 'ORDER #:'
	PLINE (10,15) = OORDNO, MASK1
	PLINE (20,27) = 'SOLD TO:'
	PLINE (59,66) = 'SHIP TO:'
	CALL BUFSLD
	CALL BUFSHP
	PLINE (29,56) = SOLDTO (1)
	PLINE (68,96) = SHIPTO (1)
	CALL PRINT
	PLINE (1,8) = ' CUST #:'
	PLINE (10,15) = OCUSNO
	PLINE (29,56) = SOLDTO (2)
	PLINE (68,96) = SHIPTO (2)
	CALL PRINT
	PLINE (29,56) = SOLDTO (3)
	PLINE (68,96) = SHIPTO (3)
	PLINE (1,8) = '   DATE:'

	XCALL DATE8(OORDDT, D_OUT, D_OUTR, D_FMT, D_SW)
	PLINE (10,19) = D_FMT
	CALL PRINT
	PLINE (29,56) = SOLDTO (4)
	PLINE (68,96) = SHIPTO (4)
	CALL PRINT
	XCALL LINFD (1)
	LINCNT = LINCNT + 1
	PLINE (23,30) = 'P.O. NO:'
	PLINE (32,41) = OPONO
	PLINE (47,55) = 'SALESMAN:'
	PLINE(57,58) = OSLMAN, MASK1
	PLINE (63,71) = 'SHIP-VIA:'

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	SCAC = OSCAC
	CALL GET_SCAC
	PLINE (73,87) = SC_NAME

;;;	OPEN (9,I,SHVFIL)
;;;	SRCCTL = 2
;;;	BSEND = ORGSHV
;;;	XCALL SERCH (9,SHPVIA,OSHVIA,1,1,BSEND,BSMID,SRCCTL,4,2,7,0,0,0,0)
;;;	CLOSE 9
;;;	GO TO (SHVNFD), SRCCTL
;;;	PLINE (73,87) = SHPVDS
;;;	GO TO SHVOK
;;;SHVNFD,
;;;	PLINE (73,87) = 'CODE NOT FOUND '
;;;SHVOK,
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;	PLINE (89,103) = 'ORDER DISCOUNT:'
;;;	PLINE (105,106) = ODISC
;;;	PLINE (107,107) = '%'

	IF (DSTFLG.NE.'Y') GO TO PRTHD1
	PLINE (111,121) = 'A/R-ACCT #:'
	PLINE (123,130) = OARACT, 'XXXX-XXX'
PRTHD1,
	CALL PRINT
	PLINE (24,30) = 'JOB NO:'
	PLINE (32,41) = OJOBNO
	PLINE (47,55) = 'ORD/EST: '
	PLINE (57,58) = OLOC
	PLINE (63,71) = 'PMT-TYPE:'
	IF (OCLPPD.EQ.'C') PLINE (73,79) = 'COLLECT'
	IF (OCLPPD.EQ.'P') PLINE (73,79) = 'PREPAID'
	PLINE (89,94) = 'TERMS:'
	OPEN (10,I,ARTFIL)
	SRCCTL = 2
	BSEND = ORGART
	XCALL SERCH (10,ARTERM,OTERMS,1,1,BSEND,BSMID,SRCCTL,4,2,7,0,0,0,0)
	CLOSE 10
	GO TO (TRMNFD), SRCCTL
	PLINE (96,110) = ARTRDS
	GO TO TERMOK
TRMNFD,
	PLINE (96,110) = 'TERM NOT FOUND '
TERMOK,
	CALL PRINT
	XCALL LINFD (2)
	LINCNT = LINCNT + 2
	TOTQTY =
	RETURN
BUFSLD,
	IF (SOLDTO(2).NE.BLANKS) GOTO BUFSL2
	SOLDTO (2) = SOLDTO (3)
	SOLDTO (3) =
BUFSL2,
	IF (SOLDTO (3).NE.BLANKS) RETURN
	SOLDTO (3) = SOLDTO (4)
	SOLDTO (4) =
	RETURN
BUFSHP,
	IF (SHIPTO(2).NE.BLANKS) GOTO BUFSH2
	SHIPTO (2) = SHIPTO (3)
	SHIPTO (3) =
BUFSH2,
	IF (SHIPTO (3).NE.BLANKS) RETURN
	SHIPTO (3) = SHIPTO (4)
	SHIPTO (4) =
	RETURN
FNDITM,
	OPEN (5,SI,ORLFIL)
	STATUS =
PRTLIN,

	XCALL PRTLI (OORDNO,PLINE,STATUS,TOTQTY,TOTSAL)

	IF (STATUS.EQ.9) GOTO GETDUC
	CALL PRINT
	INCR STATUS
	GOTO PRTLIN
;;;
GETDUC,
	CLOSE 5
	OPEN (5,SI,DUCFIL)
	STATUS =
	CLEAR DUCACC
	CLEAR DARR
PRTDU,
	XCALL PRTDU (OORDNO,PLINE,STATUS,DUCTOT,LINTOT,ACCTOT)

	IF (STATUS.EQ.9) GOTO ORDTOT
	CALL PRINT
	IF (STATUS.EQ.8) GOTO ORDTOT
	INCR STATUS
	GOTO PRTDU
;;;
PRINT,
	IF (PRNTSW.NE.1) CALL PRNTON
	XCALL LPOUT(LINCNT,PGCNT,PLINE,TITLE,'NO HDR',' ',' ',LEGEND,
&		DASHES,'NO LEGEND',0,0,132,0,LPSW,RPTNUM,PRTTYP)
	RETURN
;*************************************************************************
PRNTON,
	SPLFIL (5,6) = 'EA'
	LPSW = 1	; PRINT, SPOOL OR DISPLAY
	XCALL LPON (LPSW,SPLFIL)
	IF (LPSW.EQ.0) GO TO CLOSE1
	LPARG = 2
	IF (LPSW.EQ.2) LPARG = 4
	XCALL WATE (LPARG,V)
	PRNTSW = 1
	RETURN
LPOFF,
	XCALL LPOFF (LPSW,SPLFIL,PGCNT)
	PGCNT =
	LINCNT = 60
	PRNTSW =
	RETURN
;*************************************************************************
ORDTOT,
	CLOSE 5
	XCALL LINFD (1)
	INCR LINCNT
	PLINE = 'COMMENTS:'
	CALL PRINT
	PLINE (5,39) = OCOMNT(1)
	PLINE (104,116) = 'ORDER AMOUNT:'
	PLINE (119,131) = TOTSAL, MASK
	CALL PRINT

	PLINE (5,39) = OCOMNT(2)
	PLINE (104,116) = 'DUCT  AMOUNT:'
	PLINE (119,131) = DUCTOT, MASK
	CALL PRINT

	PLINE (5,39) = C2_COM
	PLINE (104,116) = 'LINER AMOUNT:'
	PLINE (119,131) = LINTOT, MASK
	CALL PRINT
	PLINE (104,116) = 'ACC   AMOUNT:'
	PLINE (119,131) = ACCTOT, MASK
	CALL PRINT
	PLINE (119,131) = DASHES
	CALL PRINT
	PLINE (104,116) = 'TOTAL AMOUNT:'
	DECMAL = TOTSAL + DUCTOT + LINTOT + ACCTOT
	PLINE (119,131) = DECMAL, MASK
	CALL PRINT
;;;
	PLINE = DASHES
	CALL PRINT
;;;	TOTVAL = TOTVAL + TOTSAL
	TOTVAL = TOTVAL + DECMAL
	GO TO RDHDR
ENDHDR,
	PLINE (82,116) = 'TOTAL $ VALUE OF THESE OPEN ORDERS:'
	PLINE (119,131) = TOTVAL, MASK
	CALL PRINT
	IF (ENDNA.NE.'[[[ ') GO TO PRNTOF
GETOUT,
	IF (PRNTSW) CALL LPOFF
	XCALL WATE (3,V)
	CLOSE 1
	XCALL FILES (6,'SI',175,4)
CLOSE6,
	XCALL FILES (10,'I',170,4)
CLOSE5,
	XCALL FILES (9,'I',172,4)
CLOSE4,
	XCALL FILES (3,'I',60,4)
CLOSE3,
	XCALL FILES (4,'SI',44,4)
CLOSE2,
	XCALL FILES (5,'SI',45,4)
CLOSE1,
;;;	XCALL FILES (2,'I',02,4)
	IF (CHN135) CLOSE CHN135

EXIT,
	XCALL PGCHN ('cp:OEMNU',1)
PRNTOF,
	LINCNT = 66
	IF (PRNTSW.EQ.0) XCALL MESAG ('NO RECORDS FIT THESE PARAMETERS',1)
	IF (PRNTSW.EQ.1) CALL LPOFF
	PRNTSW =
	PGCNT = 0
	GOTO BEGIN

GET_SCAC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; COP TABLE SCAC LOOK-UP
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR TBL_KEY
	TBLCOD = 'SC'
	TBLKEY = SCAC
	XCALL ISIO (CHN182,COPTBL,TBL_KEY,READ,LOKCTL)
	IF (LOKCTL .NE. 0)
		BEGIN
		CLEAR COPTBL
		SC_NAME = "* NOT ON FILE *"
		END
	RETURN
;-----------------------------------------------------


END

