;CCMAIN.DBL
;
;		CCINFO MAINT PGM (this pgm not hooked to menu)
;
;	5-29-18 ssq: make cusmas isam

EXTERNAL FUNCTION
	R1	,D

RECORD	CCINFO
	.INCLUDE 'DEF:RD137A.DEF'

RECORD	CCSAVE
	.INCLUDE 'DEF:RD137B.DEF'

RECORD	CUSMAS
	.INCLUDE 'DEF:RD001A.DEF'
RECORD,X
	.INCLUDE 'DEF:RD001B.DEF'

;;;RECORD	CUSIDX
;;;	.INCLUDE 'DEF:RD002A.DEF'

RECORD	PRINT
	TITLE	,A*,	'INVENTORY PRICE TABLE'
	HD	,A6,	'NO HDR'
	LG	,A9,	'NO LEGEND'
	PLINE	,A80
	PRNTON	,D1
	LINCNT	,D2,60
	PGCNT	,D6
	LPSW	,D2
	SPLFIL	,A14
	RPTNUM	,D3
	PRTTYP	,A1
	PRTCTL	,D3,080
	LPARG	,D1
	PRNTSW	,D1
	PRTCTR	,D1

RECORD	HD1
;;;		,A*,	'CUST #  CREDIT CARD NUMBER  TYPE  EXP DATE   ALPHA'
		,A*,	'CUST #  CREDIT CARD NUMBER    EXP DATE   CVV  BIL-ADR  ZIP   ALPHA'
;
RECORD	CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD	CHANNEL
	CHN001	,D2
	CHN002	,D2
	CHN137	,D2

RECORD	VARS
	OPNOK	,D1
	X_NUMBR	,D16		;WORKING VAR FOR CC#
	ST_CUST	,D6
	EN_CUST	,D6
	SAVCUS	,D6
	PGM	,D1
	ENTRY	,A30
	INXCTL	,D1
	CNGCTL	,D1
	LOKCTL	,D1
	WHATNO	,D2
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	DELETE	,D1,3
	BSEND	,D5
	BSMID	,D5
	SRCCTL	,D1
	BLANKS	,A30
	SWITCH	,D1
	V	,D1

PROC
	XCALL TERID(V)
	V = 1

	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF

MENU,
	XCALL OUTPT (1,1,2,'CREDIT CARD INFO MAINTENANCE',1)
	XCALL OUTPT (3,9,0,'PLEASE SELECT APPLICATION',1)
	XCALL OUTPT (5,15,0,'1. CREDIT CARD MAINTENANCE',1)
	XCALL OUTPT (6,15,0,'2. PRINT CREDIT CARD INFO',1)
MINPUT,
	XCALL INPUT (3,36,1,1,'#E',ENTRY,INXCTL,1)
	GOTO(MINPUT,ENDOFF),INXCTL
	PGM = ENTRY(1,1)
	GOTO (DISPLA,PRINT_CC),PGM
	GOTO MINPUT

DISPLA,
	CLEAR CNGCTL, CCINFO
	XCALL OUTPT (1,1,2,'CREDIT CARD INFO MAINTENANCE',1)

	XCALL OUTPT (06,4,0,'1. NUMBER',1)
	XCALL OUTPT (08,4,0,'2. CUST NO',1)
	XCALL OUTPT (10,4,0,'3. ALPHA',1)
	XCALL OUTPT (12,4,0,'4. EXP DATE',1)
	XCALL OUTPT (14,4,0,'5. SEC CODE',1)
	XCALL OUTPT (16,4,0,'6. BILL ADR',1)
	XCALL OUTPT (18,4,0,'7. ZIP CODE',1)

NUMBR,
	CTL = '06,20,16,00,#E'
	CALL INPUT
	GOTO (DISPLA,MENU),INXCTL
;;;	CI_NUMBR = ENTRY(1,16)
	X_NUMBR = ENTRY(1,16)
	CI_NUMBR = %R1 (X_NUMBR, 'E')	;ENCRYPTED VALUE
	read (chn137,ccinfo,ci_numbr,krf=1) [err=bad_card]

	CCSAVE = CCINFO
	CALL DSP_DATA
	GOTO ANYCNG
BAD_CARD,
	XCALL MESAG('Credit Card not on file',1)
	GOTO DISPLA

CUST,
	CTL = '08,20,06,00,# '
	CALL INPUT
	GOTO (DISPLA),INXCTL
	IF (ENTRY .EQ. BLANKS)
		BEGIN
		ENTRY(1,6) = CB_CUST,	'ZZZZZX' [LEFT]
		XCALL OUTPT (ROW,COL,1,ENTRY(1,6),1)
		END
	CI_CUST = ENTRY(1,6)

	XCALL ISIO (CHN001, CUSMAS, CI_CUST, READ, LOKCTL)
	IF (LOKCTL .NE. 0)
		BEGIN
		XCALL MESAG('Customer not on file',1)
		GOTO CUST
		END
	
;;;	XCALL SERCH (CHN002,CUSIDX,CI_CUST,1,6,BSEND,BSMID,SRCCTL,4,7,11,0,0,0,0)
;;;	IF (SRCCTL .NE. 0)
;;;		BEGIN
;;;		XCALL MESAG('Customer not on file',1)
;;;		GOTO CUST
;;;		END
;;;	LOKCTL = 1
;;;	XCALL IO (CHN001,CUSMAS,IRC001,READ,LOKCTL)

	CI_ALPH = NAME
	XCALL OUTPT (10,20,0,CI_ALPH,1)
	GOTO ANYCNG

ALPH,
	CTL = '10,20,25,00,A '
	CALL INPUT
	GOTO(DISPLA),INXCTL
	IF (ENTRY .EQ. BLANKS)
		BEGIN
		ENTRY = CB_ALPH
		XCALL OUTPT (ROW,COL,1,ENTRY,1)
		END
	CI_ALPH = ENTRY(1,25)
	GOTO ANYCNG

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;TYPE,
;;;	CTL = '12,20,01,00,A '
;;;	CALL INPUT
;;;	GOTO (DISPLA),INXCTL
;;;	IF (ENTRY .EQ. BLANKS)
;;;		BEGIN
;;;		ENTRY = CB_TYPE
;;;		XCALL OUTPT (ROW,COL,1,ENTRY,1)
;;;		END
;;;	CI_TYPE = ENTRY(1,1)
;;;	GOTO ANYCNG
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

EXDAT,
	CTL = '12,20,04,00,# '
	CALL INPUT
	GOTO(DISPLA),INXCTL
	IF (ENTRY .EQ. BLANKS)
		BEGIN
		ENTRY(1,5) = CB_EXDAT,	'XX/XX' 
		XCALL OUTPT (ROW,COL,1,ENTRY(1,5),1)
		ENTRY(1,4) = CB_EXDAT,	'XXXX'
		END
	CI_EXDAT = ENTRY(1,4)
	GOTO ANYCNG
CVV,
	CTL = '14,20,04,00,# '
	CALL INPUT
	GOTO (DISPLA),INXCTL
	IF (ENTRY .EQ. BLANKS)
		BEGIN
		ENTRY(1,4) = CB_CVV, 'ZZZX' [LEFT]
		XCALL OUTPT (ROW,COL,1,ENTRY(1,4),1)
		END

	CI_CVV = ENTRY(1,4)
	GOTO ANYCNG
BCD,
	CTL = '16,20,06,00,# '
	CALL INPUT
	GOTO (DISPLA),INXCTL
	IF (ENTRY .EQ. BLANKS)
		BEGIN
		ENTRY(1,6) = CB_ADDR, 'ZZZZZX' [LEFT]
		XCALL OUTPT (ROW,COL,1,ENTRY(1,6),1)
		END

	CI_ADDR = ENTRY(1,6)

	GOTO ANYCNG
ZIP,
	CTL = '18,20,05,00,# '
	CALL INPUT
	GOTO (DISPLA),INXCTL
	IF (ENTRY .EQ. BLANKS)
		BEGIN
		ENTRY(1,5) = CB_ZIP, 'XXXXX' 
		XCALL OUTPT (ROW,COL,1,ENTRY(1,5),1)
		END

	CI_ZIP = ENTRY(1,5)

	
ANYCNG,
	XCALL OUTPT (24,1,1,'FIELD # TO CHANGE            <TAB> = DELETE',1)
	XCALL INPUT (24,20,02,00,'#T',ENTRY,INXCTL,1)
	IF (INXCTL .EQ. 3)
		BEGIN
		XCALL OUTPT (24,1,1,'DELETE, ARE YOU SURE ?',1)
		XCALL INPUT (24,24,01,01,'YN',ENTRY,INXCTL,1)
		GOTO (ANYCNG),INXCTL-1
		XCALL ISIO (CHN137,CCINFO,CI_NUMBR,DELETE,LOKCTL)
		GOTO DISPLA
		END

	WHATNO = ENTRY(1,2)
	IF (WHATNO .EQ. 0)
	THEN 	CLEAR CNGCTL
	ELSE 	CNGCTL = 1

	GOTO (PROCES,CNGBR),CNGCTL+1
CNGBR,
	GOTO (NUMBR,CUST,ALPH,EXDAT,CVV,BCD,ZIP),WHATNO
	GOTO ANYCNG
PROCES,
	IF (CCINFO .EQ. CCSAVE) GOTO DISPLA
	XCALL ISIO (CHN137,CCSAVE,CB_NUMBR,DELETE,LOKCTL)
	IF (LOKCTL .NE. 0)
		BEGIN
		XCALL MESAG ('Error Deleting original record',1)
		GOTO DISPLA
		END
	XCALL ISIO (CHN137,CCINFO,CI_NUMBR,STORE,LOKCTL)
	IF (LOKCTL .NE. 0)
		BEGIN
		XCALL MESAG('Error Storing new record',1)
		GOTO DISPLA
		END
	GOTO DISPLA


;===================================================================
PRINT_CC,
	LINCNT = 66
	PGCNT  = 0
	PRNTON = 0
	
PDISP,
	CNGCTL = 
	XCALL OUTPT (1,1,2,'PRINT INVENTORY PRICE TABLE',1)
	XCALL OUTPT (4,4,0,'1. STARTING CUST #',1)
	XCALL OUTPT (6,4,0,'2. ENDING   CUST #',1)
ST_CUST,
	XCALL INPUT (4,25,06,00,'#E',ENTRY,INXCTL,1)
	GOTO (PDISP,PDONE),INXCTL
	ST_CUST = ENTRY(1,6)
	IF (ST_CUST .EQ. 0)
		BEGIN
		EN_CUST = 999999
		XCALL OUTPT (4,25,1,'ALL',1)
		XCALL OUTPT (6,25,1,' ',1)
		GOTO P_ANY
		END
	GOTO (P_ANY),CNGCTL
EN_CUST,
	XCALL INPUT (6,25,06,00,'# ',ENTRY,INXCTL,1)
	GOTO (PDISP),INXCTL
	EN_CUST = ENTRY(1,6)
	IF (EN_CUST .EQ. 0)
		BEGIN
		EN_CUST = ST_CUST
		ENTRY(1,6) = EN_CUST, 'ZZZZZX' [LEFT]
		XCALL OUTPT (6,25,0,ENTRY(1,6),1)
		END
P_ANY,
	XCALL ANYCN(CNGCTL,WHATNO)
	GOTO (P_PRINT,P_CNGBR),CNGCTL + 1
P_CNGBR,
	GOTO (ST_CUST,EN_CUST),WHATNO
	GOTO P_ANY

P_PRINT,
	find (chn137,ccinfo,^FIRST) [ERR=PLOOP]
PLOOP,
	XCALL IOS (CHN137,CCINFO,READ,LOKCTL)
	IF (LOKCTL .NE. 0) GOTO EOF
	IF (CI_CUST .LT. ST_CUST) GOTO PLOOP
	IF (CI_CUST .GT. EN_CUST) GOTO EOF

	IF (CI_CUST .NE. SAVCUS) CALL PRINT
	SAVCUS = CI_CUST
	PLINE(1,6) = CI_CUST,	'ZZZZZX'
	X_NUMBR = %R1 (CI_NUMBR, 'D')	;DECRYPT VALUE
	PLINE(9,27) = X_NUMBR,	'XXXX-XXXX-XXXX-XXXX'
;;;	PLINE(9,27) = CI_NUMBR,	'XXXX-XXXX-XXXX-XXXX'
;;;	PLINE(31,31) = CI_TYPE
	PLINE(31,35) = CI_EXDAT,	'XX/XX'
	PLINE(42,45) = CI_CVV,	'ZZZX'
	PLINE(48,53) = CI_ADDR,	'ZZZZZX'
	PLINE(56,60) = CI_ZIP,	'XXXXX'
	PLINE(62,80) = CI_ALPH


;ZZZZZX  XXXX-XXXX-XXXX-XXXX   XX/XX      ZZZX  ZZZZZX  XXXXX AAAAAAAAAAAAAAAAAAAAAAAAA 
;12345678901234567890123456789012345678901234567890123456789012345678901234567890
;         1         2         3         4         5         6         7         8
	CALL PRINT
	GOTO PLOOP

EOF,
	IF (PRNTON.EQ.1)  XCALL LPOFF(LPSW,SPLFIL,PGCNT)
PDONE,
	GOTO MENU

PRINT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (PRNTON .EQ. 0) CALL PRNTON
	XCALL LPOUT(LINCNT,PGCNT,PLINE,TITLE,HD1,HD,HD
&		,LG,LG,LG,0,080,PRTCTL,0,LPSW,RPTNUM,PRTTYP)
	RETURN
;-------------------------------------------------------------
PRNTON,
	SPLFIL (5,6) = 'EF'
	LPSW = 1		;PRINT,SPOOL, OR DISPLAY
	XCALL LPON (LPSW,SPLFIL)
	IF (LPSW.EQ.0) GOTO ENDOFF
	LPARG = 2
	IF (LPSW.EQ.2) LPARG = 4
	XCALL WATE (LPARG,V)
	PRNTON = 1
	RETURN
;-------------------------------------------------------------

ENDOFF,
	CALL CLOSE
	xcall flags(7000000)
	xcall pgchn ('cp:ccrmnu',1)
	STOP

;==============================================
DSP_DATA,
	ENTRY(1,6) = CI_CUST,	'ZZZZZX' [LEFT]
	XCALL OUTPT ( 8,20,0,ENTRY(1,6),1)
	XCALL OUTPT (10,20,0,CI_ALPH,1)

	ENTRY(1,5) = CI_EXDAT,	'XX/XX'
	XCALL OUTPT (12,20,0,ENTRY(1,5),1)

	ENTRY(1,4) = CI_CVV, 'ZZZX' [LEFT]
	XCALL OUTPT (14,20,0,ENTRY(1,4),1)

	ENTRY(1,6) = CI_ADDR, 'ZZZZZX' [LEFT]
	XCALL OUTPT (16,20,0,ENTRY(1,6),1)

	ENTRY(1,5) = CI_ZIP, 'XXXXX'
	XCALL OUTPT (18,20,0,ENTRY(1,5),1)

	RETURN
;--------------------------------------------------------

INPUT,
	XCALL INPUT(ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	RETURN
;--------------------------------------------------------

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK

	SWITCH = 5
	XCALL FILES (7,'SU',137,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN137 = 7

	SWITCH = 5
	XCALL FILES (1, 'SI', 001, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN001 = 1

	OPNOK = 1
	RETURN
;-----------------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (CHN137) CLOSE CHN137
	IF (CHN001) CLOSE CHN001

	RETURN
;-----------------------------------------------
;CUST #  CREDIT CARD NUMBER    EXP DATE   CVV  BIL-ADR  ZIP   ALPHA
;ZZZZZX  XXXX-XXXX-XXXX-XXXX   XX/XX      ZZZX  ZZZZZX  XXXXX AAAAAAAAAAAAAAAAAAAAAAAAA 
;12345678901234567890123456789012345678901234567890123456789012345678901234567890
;         1         2         3         4         5         6         7         8
