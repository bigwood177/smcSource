SUBROUTINE	PRWO2
	ORDNO	,D

RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR



GLOBAL DUCK	
	.INCLUDE 'DEF:RD175D.DEF'
ENDGLOBAL


RECORD	EJECT
	E_CHAR	,A1		;<ESC>
		,A4,	"&l0H"	;PAGE EJECT

RECORD	BOLD
	E_CHA2	,A1
		,A*,	"(s3B"

RECORD	MEDIUM
	E_CHA3	,A1
		,A*,	'(s0B'

RECORD	WRKFIL
		,A4,	'SPL:'
		,A1,	'W'
	WFORD	,A6
		,A4,	'.ISM'
RECORD	OUTFIL
		,A4,	'SPL:'
		,A1,	'X'
	OFORD	,A6
		,A4,	'.ISM'

RECORD	SPLFIL
		,A4,	'SPL:'
		,A1,	'S'
	SPORD	,A6
		,A4,	'.SPL'
	
RECORD	F_MEMOS
	.INCLUDE 'CPMEMO.DEF'
		
RECORD	ORDHDR
	.INCLUDE 'DEF:RD044A.DEF'

RECORD	ORDLIN
	.INCLUDE 'DEF:RD045A.DEF'
RECORD,X
	.INCLUDE 'DEF:RD045M.DEF'
RECORD,X
	.INCLUDE 'DEF:RD045D.DEF'

RECORD	ORDLIN1
	.INCLUDE 'DEF:RD045X.DEF'

RECORD	CUSMAS
	.INCLUDE 'DEF:RD001A.DEF'
RECORD	DUMCUS
	.INCLUDE 'DEF:RD001B.DEF'
RECORD	CUSIDX
	.INCLUDE 'DEF:RD002A.DEF'

RECORD	SALMAN
	.INCLUDE 'DEF:RD054A.DEF'

RECORD	COPTBL
	.INCLUDE 'DEF:RD182A.DEF'

RECORD	DEPTMNTS
	DPTS	,20A2
	MAXDPT	,D2,	20
	NUMDPT	,D2

RECORD PARAM
	.INCLUDE 'DEF:PARAM2.DEF'


RECORD
	MAXDUC	,D3,100
	QTY	,D5
	ITM	,A15
	DES	,A30
	PRC	,D7
	COMPA	,A15
	COMPB	,A15

RECORD ARRAYS
	SDUCRC	,100A32	;SUMMARIZED DUCT CONFIGURATIONS   (SEE DUCREC BELOW)
	LINSQF	,8D6	;SUMMARIZE LINER SQUARE FEET

RECORD DUCREC
	DUCCFG	,D7	;CONFIGURATION CODE
	DUCSQF	,D7	;SQ FEET OF MATERIAL
	DUCPND	,D7	;POUNDS OF MATERIAL
	DUCGPR	,D7	;GAUGE PRICE

RECORD ACCREC
	.INCLUDE 'DEF:ACCREC.DEF'


RECORD	LINE			
	WSEQ1	,D2		;reversed
	WSEQ2	,D2
	WSEQ3	,D2	
	WDEPT	,A2
	WSQNO	,A2
	WITEM	,A15
	WDESC	,A90
	WTYPE	,A1		;L=LINE, M=MEMO
	WQTY	,D5
	WUM	,A2
RECORD	MEMO,X
	MSEQ	,D6
	MDEPT	,A2
	MSQNO	,A2
	MITEM	,A15
	MMEMO	,3A30
		,A1
		,D5
		,A2
RECORD	,X
		,D2
		,D6
		,A2
		,A15
	M_LONG	,A63
		,A27
		,A1
		,D5
		,A2
RECORD,X
	W_KEY	,A55

RECORD,X
		,A2
	COMSEQ	,A4
		,a2		;not reversed
;---------------------------
RECORD	LINE2			
	WSEQ12	,D2		
	WSEQ22	,D2
	WSEQ32	,D2	;REVERSE
	WDEPT2	,A2
	WSQNO2	,A2
	WITEM2	,A15
	WDESC2	,A30
	WADD2	,A60	;FILLER
	WTYPE2	,A1		;L=LINE, M=MEMO
	WQTY2	,D5
	WUM2	,A2
RECORD,X
	W_KEY2	,A55

RECORD,X
		,A2
	COMSEQ2	,A4
		,a2		;not reversed
;---------------------------

RECORD	H_LINE
	,A*,	'DATE ENTERED    SLS-REP     PO NUMBER   JOB NUMBER'
	,A*,	'  SHIP VIA         SHIP DATE'

RECORD	H_LINE2
	,A*,	'   QTY  ITEM NUMBER     DESCRIPTION                     UM'

RECORD	CHANNEL
	CHN001	,D2
	CHN002	,D2
	CHN044	,D2
	CHN045	,D2
	CHN054	,D2
	CHN175	,D2
	CHN182	,D2
	CHNWRK	,D2
	CHNOUT	,D2

RECORD	PAGEOF
	P1	,A2
		,A4,	' OF '
	P2	,A2


RECORD	PVARS
	TEMP	,A2
	MEMO_ON	,D1
	MAXLIN	,D2,	57
	LINCNT	,D2
	PAG	,D2
	NPAG	,D2
	PLINE	,A80
	SAVLIN	,A80
	BLANKS	,A30
	BLANK90	,A90
	TMPDSC	,A56
	REM	,D2
	DASHES	,A30,	'------------------------------'
	UNDER	,A58
	DECMAL	,D18
	NUMASK	,A8,	'ZZZZZZX-'

RECORD
	TM2	,A90
	TM3	,A90
RECORD,X
	TM2A	,3A30
	TM3A	,3A30

RECORD	VARS
	FACT	,D4
	OPNOK	,D1
	FIRST_PAGE	,D1
	SV_NAME	,A15
	E_DATE	,A10		;DATE ENTERED
	S_DATE	,A10		;SHIP DATE
	CONFIG	,D7
	CSZ	,A30
	KEY	,A6
	BSMID	,D6
	BSEND	,D6
	SRCCTL	,D1
	ACCUOM	,A2
	J	,D5
	LL	,D2
	TL	,D2
	SEQNO	,D2
	SAVSEQ	,D2
	SAVSQ1	,D2
	SAVSQ2	,D2
	SAVSQ3	,D2
	SAVDPT	,A2
	SAVCOM	,A4
	SAVKEY	,A55
	SAVQTY	,D5
	MULTLINE	,D5
	SKIP_LINE	,D1		;SKIP THIS LINE IF BLOCK MEMO
	STAT	,D3
	READ	,D1,0
	WRITE	,D1,1
	LOKCTL	,D1
	SWITCH	,D1

PROC
	XCALL ASCII (27, E_CHAR)
	E_CHA2 = E_CHAR
	E_CHA3 = E_CHAR

	CLEAR BLANKS, BLANK90, ARRAYS
	FOR I FROM 1 THRU MAXDPT CLEAR DPTS(I)

	MEMO_ON = 1

	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF

	CALL LOAD_MEMOS
	CALL LOAD_WORK
	CALL CONSOLIDATE
	CALL GET_DEPTS

	FIRST_PAGE = 1
	CALL PRTHDR

;;; Add memos to output file...
	CLEAR SAVCOM, SAVSQ1, SAVDPT

	FIND (CHNWRK, LINE, ^FIRST) [ERR=EOF_BM]

BM_LOOP,
	READS (CHNWRK, LINE, EOF_BM)
	IF (WDEPT(1,1) .NE. SAVDPT(1,1)) CALL NEWDPT
	IF (WSEQ1 .NE. SAVSQ1) CALL NEWSQ1
	IF (COMSEQ .NE. SAVCOM) CALL NEWCOM

	GOTO BM_LOOP
EOF_BM,
	FIND (CHNWRK, LINE, ^FIRST) [ERR=EOF_FIN]
FIN_LOOP,
	READS (CHNWRK, LINE, EOF_FIN)
	STORE (CHNOUT, LINE, W_KEY)
	GOTO FIN_LOOP
EOF_FIN,
	CLOSE CHNWRK
	CALL WRTMEM		;INTERNAL ROUTINE TO WRITE WORKSHEETS
	CALL GETDUC		;PROCESS DUCTWORK

	CALL PRTSAC
	CALL PRTSDU

	CLOSE 14
	LPQUE (SPLFIL, copies:1, delete)

ENDOFF,
	CLOSE CHN045
	CLOSE CHNWRK

	RETURN

;================================================

NEWDPT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	SAVDPT = WDEPT
;;;	SAVSQ1 = 0
;;;	SAVCOM = 0
	RETURN
;------------------------------------------

NEWSQ1,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	SAVSQ1 = WSEQ1
	IF (WSEQ1 .LE. 0) RETURN
	CLEAR LINE2
	WSEQ12 = SAVSQ1
	CLEAR WSEQ22, WSEQ32	
	WITEM2 = '   F1'
	WTYPE2 = 'M'
	WDESC2 = F1_MEMOL(WSEQ12)
	WDEPT2 = SAVDPT
	STORE (CHNOUT, LINE2, W_KEY)

	RETURN
;------------------------------------------
NEWCOM,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; COMBINATION OF SEQ2 & SEQ3
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	SAVCOM = COMSEQ
	CLEAR TM2, TM3
	IF (WSEQ2 .NE. 0) TM2 = F2_MEMOL(WSEQ2)
	IF (WSEQ3 .NE. 0) TM3 = F3_MEMOL(WSEQ3)


	FOR J FROM 1 THRU 3
		BEGIN
		CLEAR LINE

		WSEQ1 = SAVSQ1
		COMSEQ = SAVCOM
	;;;	WITEM = '   MB'
		WITEM = 
		WTYPE = 'M'
		WDEPT = SAVDPT
		WDESC(1,30) = TM2A(J)
		WDESC(34,63) = TM3A(J)
		IF (WDESC .EQ. BLANK90) NEXTLOOP
		IF (TM2A(J).NE.BLANKS) WITEM(4,5) = 'F2'
		IF (TM3A(J).NE.BLANKS) 
			BEGIN
			WITEM(4,5) = 'F3'
			WDESC(32,32) = '*'
			END
		IF (TM2A(J).NE.BLANKS .AND. TM3A(J).NE.BLANKS) 
			BEGIN
			WITEM(4,8) = 'F2&F3'
			END
		WITEM (10,10) = J,'X'
		STORE (CHNOUT, LINE, W_KEY)
		END
		
		

	RETURN
;------------------------------------------

LOAD_MEMOS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; Read thru ordlin file, and
		;;; load memo arrays
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CLEAR F1_NUM, F2_NUM, F3_NUM
	FOR J FROM 1 THRU F_MAX
		BEGIN
		CLEAR F1_MEMOS(J)
		CLEAR F2_MEMOS(J)
		CLEAR F3_MEMOS(J)

		CLEAR F1_MEMOL(J)
		CLEAR F2_MEMOL(J)
		CLEAR F3_MEMOL(J)
		END

	FIND (CHN045, ORDLIN, ORDNO) [ERR=MLOOP]
MLOOP,
	READS (CHN045, ORDLIN, EOF_M)
	IF (LINSEQ .NE. 0) GOTO EOF_M
	IF (LMSQ1 .GT. 0) 
		BEGIN
		F1_MEMOS(LMSQ1) = M_SHORTD
		F1_MEMOL(LMSQ1) = M_LDESCR
		END
	IF (LMSQ2 .GT. 0) 
		BEGIN
		F2_MEMOS(LMSQ2) = M_SHORTD
		F2_MEMOL(LMSQ2) = M_LDESCR
		END
	IF (LMSQ3 .GT. 0) 
		BEGIN
		F3_MEMOS(LMSQ3) = M_SHORTD
		F3_MEMOL(LMSQ3) = M_LDESCR
		END
	GOTO MLOOP
EOF_M,
	RETURN
;-------------------------------------------------

LOAD_WORK,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; Move non-memo line items
		;;; into work file
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	FIND (CHN045, ORDLIN, ORDNO) [ERR=LOOP]
LOOP,
	READS (CHN045, ORDLIN, EOF)
	IF (LORDNO .NE. ORDNO) GOTO EOF
	IF (LTYPE .EQ. 'M') GOTO LOOP
;;;	IF (LQTYOR .EQ. 0) GOTO LOOP		;SSQ 3/24/00

	WTYPE = 'L'
;;;	WDEPT = LDEPT
	WSQNO = LSRTSQ
	WDEPT = LPRDCD(1,1)
	WSEQ1 = LMSQ1
	WSEQ2 = LMSQ2
	WSEQ3 = LMSQ3
	WITEM = LITMNO
	WDESC = LDESCR
	IF (LDAMPR) WITEM(10,15) = 'Damper'
	WQTY = LQTYOR
	WUM = LUOFM
	STORE (CHNWRK, LINE, W_KEY)
	GOTO LOOP

EOF,
	RETURN
;----------------------------------------------

CONSOLIDATE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; Consolidate line items for the
		;;; same part #
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	FIND (CHNWRK, LINE, ^FIRST) [ERR=EOF_CON]
	SAVKEY = '***'
CONLOOP,
	READS(CHNWRK, LINE, EOF_CON)
	IF (W_KEY .NE. SAVKEY)
	THEN	CALL NEWKEY
	ELSE	BEGIN
		INCR MULTLINE
		SAVQTY = SAVQTY + WQTY
		DELETE (CHNWRK)
		END
	GOTO CONLOOP

NEWKEY,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (SAVKEY .EQ. '***') GOTO OUTKEY
	IF (MULTLINE .EQ. 0) GOTO OUTKEY
	READ (CHNWRK, LINE, SAVKEY)
	WQTY = SAVQTY
	WRITE (CHNWRK, LINE, SAVKEY)
OUTKEY,
	SAVKEY = W_KEY
	SAVQTY = WQTY
	CLEAR MULTLINE
	RETURN
;-----------------------------------------------

EOF_CON,
	CALL NEWKEY
	RETURN
;-----------------------------------------------

WRTMEM,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; ROUTINE TO FORMAT AND PRINT WO'S
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLOSE CHNOUT
	OPEN (CHNOUT, SI, OUTFIL)
	XCALL FILL ('_', UNDER)
	SAVDPT = -1

W_LOOP,
	READS (CHNOUT, LINE, W_EOF)
	IF (WDEPT(1,1) .NE. SAVDPT(1,1)) CALL W_NEWDPT
	IF (WTYPE .EQ. 'M')
	THEN	BEGIN
		DISPLAY(14,BOLD)
		IF (MEMO_ON .EQ. 0)
			BEGIN
			CLEAR PLINE
			CALL PRINT
			MEMO_ON = 1
			END
		IF (MITEM.EQ.'   F1') 
		THEN	FOR J FROM 1 THRU 3
			BEGIN
			TMPDSC = MMEMO(J)
			CALL MAIN_MEMO
			PLINE (8,54) = TMPDSC
			IF (MMEMO(J) .NE. BLANKS) CALL PRINT
			END
		ELSE	BEGIN
			PLINE(8,70) = M_LONG
			CALL PRINT
			GOTO W_LOOP
			END

		END
	ELSE	BEGIN
		DISPLAY(14,MEDIUM)
		MEMO_ON = 0
		CLEAR PLINE
		PLINE(1,7) = WQTY,	'ZZ,ZZX-'
		PLINE(9,23) = WITEM
		PLINE(25,54) = WDESC
		PLINE(57,58) = WUM
		CALL PRINT
		END

	GOTO W_LOOP

;   QTY  ITEM NUMBER     DESCRIPTION                     UM
;ZZZZZZ  AAAAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA  AA
;1234567890123456789012345678901234567890123456789012345678901234567890
;         1         2         3         4         5         6         7
;====================================================
MAIN_MEMO,	;;;;;;;;;;;;;;;;;;;;;;;;;;
	TL = %TRIM(TMPDSC)
	REM = 46 - TL
	REM = REM/2
	IF (REM.GT.0)
		BEGIN
		CLEAR TMPDSC
		TMPDSC(1,REM) = DASHES
		TMPDSC(REM+1,REM+TL) = MMEMO(J)
		TMPDSC(REM+1+TL,46) = DASHES
		END
	RETURN
;-----------------------------------------
W_EOF,
	CLOSE CHNOUT
	CLOSE CHNWRK
;;;	XCALL DELET (WRKFIL)
;;;	XCALL DELET (OUTFIL)
	RETURN
;===============================================

W_NEWDPT,
;;;	LINCNT = 66
;;;	CLEAR PAG
;;;	CLEAR NPAG
	SAVDPT = WDEPT
	RETURN
;------------------------------------

GETDUC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; PROCESS DUCTWORK
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	WDEPT = 'O'		;DUCTWORK

	DUCTOR = ORDNO
	LOKCTL = 1
	XCALL ISIO (CHN175,DUCACC,DUCTOR,READ,LOKCTL)
	IF (LOKCTL.NE.0.OR.DUCTOR.NE.ORDNO) RETURN
;;;	CALL PRTHDR
;;;	IF (SAVDPT(1,1) .NE. WDEPT(1,1)) CALL PRTHDR

	IF ((LINCNT+3) .GE. MAXLIN) CALL PRTHDR

	CALL PRINT
	XCALL FILL ('=', PLINE(8,53))
	PLINE (26,35) = ' DUCTWORK '
	CALL PRINT

	CALL PRTDUC
	GOTO SUMDUC
NXTDUC,
	LOKCTL = 1
	XCALL IOS (CHN175,DUCACC,READ,LOKCTL)
	IF (LOKCTL.NE.0.OR.DUCTOR.NE.ORDNO) RETURN
	CALL PRTDUC
SUMDUC,
	CONFIG(1,3) = GAUGE
	IF (DUTYPE.EQ.2.OR.DUTYPE.EQ.3) CONFIG(1,3) = THICK
	CONFIG(4,4) = DUTYPE
	CONFIG(5,5) = CAT
	CONFIG(6,6) = STY
	CONFIG(7,7) = SEAM

		; Check to see if the configuration has all ready 
		; been on this order
	I =
	DO BEGIN
	  INCR I
	  DUCREC = SDUCRC(I)
	END
	UNTIL (DUCCFG.EQ.CONFIG.OR.DUCCFG.EQ.0.OR.I.GE.MAXDUC)
	IF (I.GE.MAXDUC) GOTO BADCON

	DUCCFG = CONFIG
	DUCSQF = DUCSQF + SQFEET
	DUCPND = DUCPND + POUNDS
	DUCGPR = GPRICE
	SDUCRC(I) = DUCREC

	IF (LINER.GE.1.AND.LINER.LE.8.AND.LINER.NE.4)
&		LINSQF(LINER) = LINSQF(LINER) + SQFLIN

		;Summarize accessories

	IF (ACC.EQ.2) GOTO NXTDUC

	IF (SLIPS)
	BEGIN
	  QTY = SLIPS
	  ITM = SLPITM
	  PRC = SLPPRC
	  DES = SLPDES
	  CALL SUMACC
	END
	IF (DRIVES)
	BEGIN
	  QTY = DRIVES
	  ITM = DRVITM
	  PRC = DRVPRC
	  DES = DRVDES
	  CALL SUMACC
	END
	IF (TCORN)
	BEGIN
	  QTY = TCORN
	  ITM = CORITM
	  PRC = CORPRC
	  DES = CORDES
	  CALL SUMACC
	END
	IF (TNBQTY)
	BEGIN
	  QTY = TNBQTY
	  ITM = TNBITM
	  PRC = TNBPRC
	  DES = TNBDES
	  CALL SUMACC
	END
	IF (TGAQTY)
	BEGIN
	  QTY = TGAQTY
	  ITM = TGAITM
	  PRC = TGAPRC
	  DES = TGADES
	  CALL SUMACC
	END
	IF (TCLQTY)
	BEGIN
	  QTY = TCLQTY
	  ITM = TCLITM
	  PRC = TCLPRC
	  DES = TCLDES
	  CALL SUMACC
	END
	IF (TBAQTY)
	BEGIN
	  QTY = (JOINT * 4)
	  ITM = TBAITM
	  ITM (10,13) = SIZE1,'ZZX"'
	  PRC = TBAPRC
	  DES = TBADES
	  CALL SUMACC
	  QTY = (JOINT * 4)
	  ITM = TBAITM
	  ITM (10,13) = SIZE2,'ZZX"'
	  PRC = TBAPRC
	  DES = TBADES
	  CALL SUMACC
	END
	IF (TBNQTY)
	BEGIN
	  QTY = TBNQTY
	  ITM = TBNITM
	  PRC = TBNPRC
	  DES = TBNDES
	  CALL SUMACC
	END

	GOTO NXTDUC

SUMACC,
		; Check to see if the accessories have all ready 
		; been on this order
	I =
	DO BEGIN
	  INCR I
	  ACCREC = SACCRC(I)
	END
	UNTIL (ACCITM.EQ.ITM.OR.ACCITM.EQ.BLANKS.OR.I.GE.MAXACC)
	IF (I.GE.MAXACC) GOTO BADACC

	ACCQTY = ACCQTY + QTY
	ACCITM = ITM
	ACCPRC = PRC
	ACCDES = DES
	SACCRC(I) = ACCREC

	RETURN
;------------------------------------------

BADCON,
	FORMS (14,2)
	PLINE (32,60) = 'DUCT INFORMATION IS '	
	CALL PRINT
	GOTO ERRMSG
BADACC,
	FORMS (14,2)
	PLINE (32,60) = 'ACCESSORY INFORMATION IS'	
	CALL PRINT
ERRMSG,
	PLINE (32,60) = 'PRESENTLY OVERFLOWING THE'
	CALL PRINT
	PLINE (32,60) = 'ARRAY BOUNDARIES.  PLEASE CALL'
	CALL PRINT
	PLINE (32,60) = 'SOFTWARE SUPPORT TO CORRECT THE'
	CALL PRINT
	PLINE (32,60) = 'PROBLEM'
	CALL PRINT
	RETURN
;---------------------------------------------------

PRTDUC,		;Print duct record

	IF ((LINCNT+3).GT.MAXLIN) CALL PRTHDR
;;;	INCR LINCNT		;SSQ 12-4-96

	PLINE (1,7) = JOINT,NUMASK
	PLINE (8,9) = 'JT'
	IF (DUTYPE.NE.2.AND.DUTYPE.NE.3)
	BEGIN
	  PLINE (13,14) = GAUGE,'XX'
	  PLINE (15,16) = 'GA'
	END
	IF (DUTYPE.EQ.2.OR.DUTYPE.EQ.3)
	BEGIN
	  PLINE (13,16) = THICK,'.XXX'
	END
	PLINE (18,20) = SIZE1,'ZZX'
	PLINE (21,21) = 'X'
	PLINE (22,24) = SIZE2,'ZZX'
	PLINE (25,25) = 'X'
	PLINE (26,27) = SIZE3,'ZX'
	PLINE (31,34) = DTYPE(DUTYPE)
	PLINE (36,41) = DCAT(CAT)
	PLINE (43,45) = DSTY(STY)
	PLINE (48,50) = DSEAM(SEAM)
	IF (SEAL.EQ.1) PLINE (52,55) = 'SEAL'
;;;	PLINE (65,66) = 'LB'
	CALL PRINT

	PLINE (  1,7  ) = POUNDS,NUMASK
	PLINE (  8,8  ) = '#'
	PLINE ( 12,17 ) = SQFLIN,NUMASK
	PLINE ( 19,23 ) = 'SQ FT'
	PLINE (30,44) = '     NO LINER '
	IF (LINER.GE.1.AND.LINER.LE.8.AND.LINER.NE.4)
	BEGIN
	  PLINE (31,37) = DLINER( LINER )
	  PLINE (38,42) = 'LINER'
	END
	PLINE (43,54) = LOCAT
;;;	PLINE (56,63) = LINPRC,'ZZZ.XXX-'
;;;	PLINE (65,66) = 'SF'
	CALL PRINT

	IF (ACC.EQ.1)
&	DECMAL = ( ( SLIPS  * SLPPRC ) # 1 ) +
&		 ( ( DRIVES * DRVPRC ) # 1 ) +
&		 ( ( TCORN  * CORPRC ) # 1 ) +
&		 ( ( TNBQTY * TNBPRC ) # 1 ) +
&		 ( ( TGAQTY * TGAPRC ) # 1 ) +
&		 ( ( TCLQTY * TCLPRC ) # 1 ) +
&		 ( ( TBAQTY * TBAPRC ) # 1 ) +
&		 ( ( TBNQTY * TBNPRC ) # 1 )

	CALL PRINT
	RETURN

PRTSAC,
		; Sort then Print summarized accessories from this order
;
;	BUBBLE SORT ACCREC ARRAY
;
	FOR I FROM 1 THRU MAXACC
	  BEGIN
	  ACCREC = SACCRC(I)
	  IF (ACCQTY.EQ.0) GOTO PRTSA2
	  COMPA = ACCITM
	  ACCREC = SACCRC(I+1)
	  IF (ACCQTY.EQ.0) GOTO PRTSA2
	  COMPB = ACCITM
	  IF (COMPA.GT.COMPB)
	  BEGIN
	    SACCRC(I+1) = SACCRC(I)
	    SACCRC(I) = ACCREC
	    I = I - 2
	    IF (I.LT.0) I = 0
	  END
	END
	GOTO BADACC
PRTSA2,
	FOR I FROM 1 THRU MAXACC
	  BEGIN
	  ACCREC = SACCRC(I)
	  IF (ACCITM.EQ.BLANKS) RETURN
	  IF ((LINCNT+1).GT.MAXLIN) CALL PRTHDR
	  PLINE (1,7) = ACCQTY,NUMASK
	  PLINE (9,23) = ACCITM
	  PLINE (25,54) = ACCDES
	  ACCUOM = 'EA'
	  IF (ACCITM(4,6).EQ.'GS ') ACCUOM = 'FT'
	  IF (ACCITM(4,6).EQ.'BAR') 
	  BEGIN
	    ACCUOM = 'IN'
	    DECMAL = ACCITM(10,12)
	    ACCQTY = ACCQTY * DECMAL
	  END
	  PLINE (65,66) = ACCUOM
	  CALL PRINT
	  SACCRC(I) =
	END
	IF (I.GE.MAXACC) GOTO BADACC
	RETURN

PRTSDU,
		;Print summarized duct from this order
	IF ((LINCNT+1).GT.MAXLIN) CALL PRTHDR
	INCR LINCNT
	FOR I FROM 1 THRU MAXDUC
	  BEGIN
	  DUCREC = SDUCRC(I)
	  IF (DUCCFG.EQ.0) GOTO PRTSD2
	  IF ((LINCNT+1).GT.MAXLIN) CALL PRTHDR
	  PLINE (1,7) = DUCPND,NUMASK
	  PLINE (8,8) = '#'
	  PLINE (18,19) = DUCCFG(1,3),'XX'
	  PLINE (21,22) = 'GA'
	  IF (DUCCFG(4,4).EQ.2.OR.DUCCFG(4,4).EQ.3)
	  BEGIN
	    PLINE (18,22) = DUCCFG(1,3),'.XXX'
	  END
	  PLINE (33,36) = DTYPE(DUCCFG(4,4))
	  PLINE (38,43) = DCAT(DUCCFG(5,5))
	  PLINE (45,47) = DSTY(DUCCFG(6,6))
	  PLINE (49,51) = DSEAM(DUCCFG(7,7))
	  CALL PRINT
	  SDUCRC(I) =
	END
PRTSD2,
	FOR I FROM 1 THRU 8
	  BEGIN
	  IF (LINSQF(I).NE.0.AND.I.NE.4)
	  BEGIN
	    IF ((LINCNT+1).GT.MAXLIN) CALL PRTHDR
	    PLINE (1,7) = LINSQF(I),NUMASK
	    PLINE (8,10) = 'SQF'
	    PLINE (33,39) = DLINER(I)
	    PLINE (40,45) = ' LINER'
	    CALL PRINT
	    LINSQF(I) =
	  END
	END
	RETURN	
;-


PRINT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	INCR LINCNT
	IF (LINCNT .GT. 57) 
		BEGIN
		SAVLIN = PLINE
		CALL PRTHDR
		PLINE = SAVLIN
		END

	WRITES (14, PLINE)
	CLEAR PLINE
	RETURN
PRINT2,
	INCR LINCNT
	WRITES (14, PLINE)
	CLEAR PLINE
	RETURN
;-----------------------------------------------------

PRTHDR,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (FIRST_PAGE .GT. 1) 
		BEGIN
		WRITES (14, EJECT)
		END
	FIRST_PAGE = 2

	CLEAR LINCNT
	CLEAR PLINE

	PLINE(28,62) = 'MATERIAL FOR ALL DEPARTMENTS'
	PLINE(62,67) = OORDNO,	'ZZZZZZ'
	CALL PRINT2

	FACT = 28
	FOR J FROM 1 THRU NUMDPT  
		BEGIN
		PLINE(FACT, FACT+1) = DPTS(J)
		FACT = FACT + 3
		END
	CALL PRINT

	INCR PAG
	INCR NPAG

	P1 = PAG,	'ZX'
	P2 = NPAG,	'ZZ' [LEFT]
; later...
;;;	PLINE(62,69) = PAGEOF
;;;	CALL PRINT2
;;;	forms (14,1)
;........................

	FORMS (14,1)

	PLINE(10,15) = OCUSNO,	'ZZZZZZ' [LEFT]
	PLINE(20,25) = CRDLMT,	'ZZZZZZ' [LEFT]	;3-29-00
	CALL PRINT2

	PLINE(1,8) = 'BILL TO:'
	PLINE(43,50) = 'SHIP TO:'
	PLINE(10,39) = NAME
	PLINE(52,80) = OSHPNM
	CALL PRINT2

	PLINE(10,39) = ADD1
	PLINE(52,80) = OSHAD1
	CALL PRINT2

	PLINE(10,39) = ADD2
	PLINE(52,80) = OSHAD2
	CALL PRINT2

	PLINE(10,39) = CSZ
	PLINE(52,80) = OSHAD3
	CALL PRINT2

	FORMS (14,2)
	WRITES (14, H_LINE)
	PLINE(3,12) = E_DATE
	PLINE(17,26) = SLSNM
	PLINE(29,38) = OPONO
	PLINE(41,50) = OJOBNO
	PLINE(53,67) = SV_NAME
	PLINE(70,79) = S_DATE
	CALL PRINT2

	FORMS(14,2)
	WRITES (14, H_LINE2)
	LINCNT = 16
	RETURN

;DATE ENTERED    SLS-REP     PO NUMBER   JOB NUMBER  SHIP VIA         SHIP DATE
;  XX/XX/XXXX    AAAAAAAAAA  AAAAAAAAAA  AAAAAAAAAA  AAAAAAAAAAAAAAA  XX/XX/XXXX
;12345678901234567890123456789012345678901234567890123456789012345678901234567890
;         1         2         3         4         5         6         7
;-----------------------------------------------

GET_SCAC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; COP TABLE SCAC LOOK-UP
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR TBL_KEY
	TBLCOD = 'SC'
	TBLKEY = OSCAC
	XCALL ISIO (CHN182,COPTBL,TBL_KEY,READ,LOKCTL)
	IF (LOKCTL .NE. 0)
		BEGIN
		CLEAR COPTBL
		SC_NAME = "* NOT ON FILE *"
		END
	SV_NAME = SC_NAME
	RETURN
;-----------------------------------------------------

GET_SALESMAN,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL IO (CHN054,SALMAN,OSLMAN,READ,LOKCTL)
	IF (SLSNM.EQ.']]]]]]' .OR. SLSNM.EQ.']]]DEL' .OR. LOKCTL.NE.0) SLSNM =
	RETURN
;-----------------------------------------------------

GET_DEPTS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	DUCTOR = ORDNO
	LOKCTL = 1
	XCALL ISIO (CHN175,DUCACC,DUCTOR,READ,LOKCTL)
	IF (LOKCTL.EQ.0 .AND. DUCTOR.EQ.ORDNO) 
		BEGIN
		DPTS(1) = 'O'
		NUMDPT = 1
		END

	FIND (CHN045, ORDLIN, OORDNO) [ERR=NXTLIN]
NXTLIN,
	XCALL IOS (CHN045, ORDLIN, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO EOF_LIN
	IF (LORDNO .NE. OORDNO) GOTO EOF_LIN
	IF (LTYPE .EQ. 'M') GOTO NXTLIN		;SKIP MEMOS

	CLEAR I
NLI,
	INCR I
;;;	IF (DPTS(I) .EQ. LDEPT) GOTO NXTLIN
	IF (DPTS(I) .EQ. LDEPT(1,1)) GOTO NXTLIN
	IF (DPTS(I) .EQ. '  ') 
		BEGIN
		DPTS(I) = LDEPT(1,1)	;FIRST CHAR ONLY 3-31-00
		NUMDPT = I
		GOTO NXTLIN
		END
	IF (I .LT. MAXDPT) GOTO NLI

EOF_LIN,
	RETURN
;---------------------------------------------

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK

	SWITCH = 5
	XCALL CHNOPN (24,STAT)
	IF (STAT .EQ. 0)
		BEGIN
		XCALL FILES (24,'SI',044,SWITCH)
		END
	CHN044 = 24

	XCALL CHNOPN (25,STAT)
	IF (STAT .EQ. 0)
		BEGIN
		XCALL FILES (25,'SI',045,SWITCH)
		END
	CHN045 = 25

	XCALL CHNOPN (26,STAT)
	IF (STAT .EQ. 0)
		BEGIN
		XCALL FILES (26,'SI',175,SWITCH)
		END
	CHN175 = 26

	XCALL CHNOPN (36,STAT)
	IF (STAT .EQ. 0) 
		BEGIN
		XCALL FILES (36,'I',001,SWITCH)
		END
	CHN001 = 36

	XCALL CHNOPN (37,STAT)
	IF (STAT .EQ. 0)
		BEGIN
		XCALL FILES (37,'I',002,SWITCH)
		END
	CHN002 = 37


	XCALL CHNOPN(38,STAT)
	IF (STAT .EQ. 0)
		BEGIN
		XCALL FILES (38,'I',054,SWITCH)
		END
	CHN054 = 38

	CHN182 = 17	;COP TABLES

	XCALL ISIO (CHN044, ORDHDR, ORDNO, READ, LOKCTL)
	WFORD = ORDNO,'XXXXXX'
	XCALL DATE8(OORDDT, D_OUT, D_OUTR, E_DATE, D_SW)
;;;	XCALL DATE8(OSHDAT, D_OUT, D_OUTR, S_DATE, D_SW)
	XCALL DATE8(OPROMD, D_OUT, D_OUTR, S_DATE, D_SW)

	CALL GET_SCAC
	CALL GET_SALESMAN

	XCALL IO (CHN001, DUMCUS, 1, READ, LOKCTL)

	KEY = OCUSNO,'XXXXXX'
	XCALL SERCH (CHN002,CUSIDX,KEY,1,6,ORG001,BSMID,SRCCTL,4,7,11,0,0,0,0)
	LOKCTL = 1
	CASE SRCCTL OF 
	BEGINCASE
	  0:	XCALL IO (CHN001,CUSMAS,IRC001,READ,LOKCTL)
	  1:	BEGIN
		CUSMAS =
		NAME = '* CUSTOMER NOT ON FILE *'
		END
	ENDCASE

	CSZ(1,15) = CITY
	CSZ(17,18) = STATE
	CSZ(20,29) = ZIP

;Create work file...
	XCALL ISAMC (WRKFIL, 123, 1, 'START=1, LENGTH=55, DUPS, ASCEND')
	OPEN (33, SU, WRKFIL)
	CHNWRK = 33

	OFORD = ORDNO,'XXXXXX'
;Create output file...
	XCALL ISAMC (OUTFIL, 123, 1, 'START=1, LENGTH=55, DUPS, ASCEND')
	OPEN (34, SU, OUTFIL)
	CHNOUT = 34

	SPORD = ORDNO,'XXXXXX'
	OPEN (14, O, SPLFIL)

	OPNOK = 1

	RETURN
;-------------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CLOSE CHN044
	CLOSE CHN045
	CLOSE CHN175
	RETURN



