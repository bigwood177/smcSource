;BLADXX.DBL
;		28-MAR-1997 SSQ:
;		PRINT ONLY VERSION OF BLADIN
;
;
RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR



RECORD BLHEAD
;;;	.INCLUDE 'DEF:RD178A.DEF'
	.INCLUDE 'DEF:RD178X.DEF'
RECORD BLLINE
	.INCLUDE 'DEF:RD179A.DEF'
RECORD TRKMAS
	.INCLUDE 'DEF:RD180A.DEF'
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
		,A1
	POS	,D2

RECORD
	BHKEY	,A9
RECORD	,X
	KORDNO	,D6
	KHDRN	,D1
	KSHPN	,D2

RECORD ASHIPNO
	AORDNO	,A6
		,A1,'.'
	AHDRN	,A1
		,A1,'.'
	ASHPN	,A2
RECORD
	UOM050	,7A7,	'CARTONS','PIECES ','BUNDLES','BOXES  ','CRATES ',
&			'SKIDS  ','GYLORDS'
	DES050	,6A30,
&			'SLIPS, DRIVES          106-260',
&			'R-ANGLE                       ',
&			'TDC ACCESSORIES               ',
&			'COMPANION RINGS               ',
&			'SPIRAL PIPE HANGERS           ',
&			'TDC BAR                       '

	UOM060	,9A7,	'CARTONS','PIECES ','LOTS   ','BOXES  ','CRATES ',
&			'SKIDS  ','GYLORDS','PANELS ','10'' BOX'
	DES060	,4A30,
&			'TURNING VANE RAIL             ',
&			'MISC. DUCT                    ',
&			'MISC. PLASMA FITTINGS         ',
&			'MISC. S/L PIPE-SEAM NOT CLOSED'

	UOM070	,3A7,	'BUNDLES','CRATES ','CARTONS'
	DES070	,2A30,
&			'GALV. TURNING VANE            ',
&			'STAINLESS STEEL TURNING VANE  '

	UOM125	,5A7,	'BOXES  ','GYLORDS','SKIDS  ','BUNDLES','PIECES '
	DES125	,4A30,
&			'FITTINGS - MISC. GALVANIZED   ',
&			'FITTINGS - MISC. PVS          ',
&			'FITTINGS - GORELOCK           ',
&			'FITTINGS - WELDED             '

	UOM150	,5A7,	'BOXES  ','GYLORDS','SKIDS  ','PIECES ','CRATES '
	DES150	,8A30,
&			'FITTINGS - MISC. GALVANIZED   ',
&			'FITTINGS - MISC. PVS          ',
&			'FITTINGS - GORELOCK           ',
&			'FITTINGS - WELDED             ',
&			'SPIRAL PIPE - GALVANIZED      ',
&			'SPIRAL PIPE - PVS             ',
&			'SPIRAL PIPE - PAINT GRIP      ',
&			'SPIRAL PIPE - STAINLESS STEEL '


RECORD	CHANNEL
	CHN178	,D2
	CHN179	,D2
	CHN180	,D2

RECORD
	LOKCTL	,D1

RECORD	,X
	ALOKCTL	,A1

RECORD	VARS
	CMPCOD	,A3
	QUE_NAME	,A7,	'TRAFFIC'
	OPNOK	,D1
	V	,D1
	I	,D2
	SWITCH	,D1
	TODAY	,D8
	TDATE	,D6
	ALPHA	,A15
	ENTRY	,A60
	INXCTL	,D1
	CNGCTL	,D1
	WHATNO	,D2
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	DELETE	,D1,3
	SELECT	,D2
	DTMASK	,A8,	'XX/XX/XX'
	TMASK	,A6,	'ZZZZZX'
	TUNITS	,D5
	TWGHT	,D6
	DCHAR	,D3
	ACHAR	,A1
	TTSTS	,D1
	ADDLIN	,D1
	SEQ	,D2
	GETHI	,D1
	KTRKNAM	,A15
	HIHDRN	,D1
	HISHPN	,9D2
	PLINE	,A82
	LINCNT	,D2
	LPSW	,D1
	SPLFIL	,A14
	PGCNT	,D1
	LPARG	,D1
	BLANKS	,A20
	DFLD	,D6
	NUMASK	,A7,	'ZZZ,ZZX'
	DLMASK	,A9,	'ZZ,ZZZ.XX'
	BLCONT	,D1,	0
	REPBL	,D1,	0
	INSTANTBL	,D1,	0
	ESC	,A1
	SAVKEY	,A9
	LINE	,A80	,'--------------------------------------------------------------------------------'



PROC
	XCALL TERID (V)
	XCALL ASCII (27,ESC)
	XCALL OUTPT (1,1,2,'PRINT ONLY BILL OF LADING',1)
	XCALL RDATE (TDATE)
	XCALL DATE8(TDATE, D_OUT, TODAY, D_FMT, D_SW)

	CALL OPENS
	IF (.NOT. OPNOK) GOTO ABORT

	XCALL WHO(CMPCOD)

	USING CMPCOD SELECT
	('ROC'),	QUE_NAME = 'SHIPPING'
	(),		QUE_NAME = 'TRAFFIC'
	ENDUSING

SELECT,

DISPLA1,
	CNGCTL =
	BHKEY =
	BLHEAD =
	BLLINE =
	SAVKEY =
	UNLOCK 8
	UNLOCK 9
	XCALL OUTPT (4,1,2,'6. SHIP TO',1)
	XCALL OUTPT (4,49,0,'1. SHIPPERS NO.',1)
	XCALL OUTPT (5,49,0,'2. B/L DATE',1)
	XCALL OUTPT (6,49,0,'3. SHIP VIA',1)
	XCALL OUTPT (7,49,0,'4. CARRIERS NO.',1)
	XCALL OUTPT (8,49,0,'5. DATE SHIPPED',1)
	XCALL OUTPT (11,1,0,'7. CUST PO NO',1)
	XCALL OUTPT (11,18,0,'8. SPECIAL INSTRUCTIONS',1)
	XCALL OUTPT (16,1,0,' 9. PPD/COL/THIRD',1)
	XCALL OUTPT (18,1,0,'10. TRACER ID #',1)
	XCALL OUTPT (20,1,0,'    STATUS CODE',1)

BHORDN,					; ORDER NUMBER
	CTL = '04,66,06,00,#E'
	CALL INPUT
	GOTO (DISPLA1,ENDOFF), INXCTL
	KORDNO = ENTRY
	IF (KORDNO .EQ. 0) 
		BEGIN
		KORDNO = 123455
		KHDRN = 0
		KSHPN = 0
		DO  BEGIN
		    INCR KORDNO
		    LOKCTL = 1
		    XCALL ISIO (8,BLHEAD,BHKEY,READ,LOKCTL)
		    END
		    UNTIL (LOKCTL.NE.0)
		
		AORDNO = KORDNO
		AHDRN = KHDRN
		ASHPN = KSHPN,'XX'
		GOTO BHSHPN2
		END

	AORDNO = KORDNO
	AHDRN = 
	ASHPN = 
	IF (KORDNO.EQ.0)
	BEGIN
	  KHDRN = 0
	  KSHPN = 0
	  AHDRN = KHDRN
	  ASHPN = KSHPN,'XX'
	  GOTO BHSHPN2
	END
	XCALL OUTPT (ROW,COL,0,ASHIPNO,1)

BHHDRN,					; B/L HEADER NUMBER (USED WHEN MULTI SHIP TO DIFF ADDR)
	CTL = '04,73,01,00,# '
	CALL INPUT
	GOTO (BHORDN), INXCTL
	KHDRN = ENTRY
	IF (KHDRN.EQ.0) KHDRN = 1
	AHDRN = KHDRN
	XCALL OUTPT (ROW,66,0,ASHIPNO,1)
	
BHSHPN,					; B/L SHIPMENT NUMBER (MULTI SHIP TO SAME HEADER)
	CTL = '04,75,02,00,# '
	CALL INPUT
	GOTO (BHORDN), INXCTL
	KSHPN = ENTRY
	IF (KSHPN.EQ.0) KSHPN = 1
	ASHPN = KSHPN,'XX'

BHSHPN2,
	XCALL OUTPT (ROW,66,0,ASHIPNO,1)

	GOTO (ANYCN1), CNGCTL
	
ADDMODE,
	BLHEAD =
	KEY178 = BHKEY

BHBILD,					; B/L DATE (DATE TRUCK LINE CALLED)
	CTL = '05,66,08,00,D '
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHBILD = ENTRY
	IF (BHBILD.EQ.0)
	BEGIN
	  BHBILD = TODAY
	  XCALL DATE8(BHBILD, D_OUT, D_OUTR, D_FMT, D_SW)
	  XCALL OUTPT (ROW,COL,0, D_FMT ,1)
	END
	GOTO (ANYCN1), CNGCTL
BHSHPV,					; SHIP VIA
	CTL = '06,66,15,01,A ,00'
ASK1B,
	CALL CINPUT
	GOTO (DISPLA1,DISPLA1,BHSHPV,ASK1C), INXCTL
	KTRKNAM = ENTRY
	IF (POS) TRKNAM(1,POS) = ENTRY(1,POS)
	IF (POS) XCALL OUTPT (ROW,COL,0,ENTRY(1,MAX),1)
	IF (POS) READ (80,TRKMAS,TRKNAM(1,POS)) [KEY=ASK1B, EOF=ASK1B]
	XCALL OUTPT (ROW,COL,0,TRKNAM,1)
	XCALL OUTPT (16,65,0,TRKNAM,1)
	XCALL OUTPT (17,65,0,LINE(1,15),1)

	ALPHA(1,13) = TKTEL1,'(XXX)XXX-XXXX'
	IF (TKTEL1(1,3).EQ.0) ALPHA(1,13) = TKTEL1,'ZZZZZXXX-XXXX'
	XCALL OUTPT (18,50,0,'TRAFFIC PHONE# ',1)
	XCALL OUTPT (18,65,0,ALPHA(1,13),1)

	ALPHA(1,13) = TKTEL2,'(XXX)XXX-XXXX'
	IF (TKTEL2(1,3).EQ.0) ALPHA(1,13) = TKTEL2,'ZZZZZXXX-XXXX'
	XCALL OUTPT (20,50,0,'TRACING PHONE# ',1)
	XCALL OUTPT (20,65,0,ALPHA(1,13),1)
	GOTO ASK1B	
ASK1C,
	IF (ENTRY.EQ.BLANKS) 
	BEGIN
	  XCALL MESAG ('SHIP VIA IS A REQUIRED FIELD',1)
	  GOTO BHSHPV
	END
	IF (TRKNAM(1,POS).EQ.ENTRY(1,POS)) GOTO ASK1D
	XCALL OUTPT (24,1,1,'NO RECORD FOR THIS TRUCK LINE - ADD <Y> ?',1)
	CTL = '24,43,01,00,YY'
	CALL INPUT
	IF (INXCTL.NE.1) GOTO BHSHPV
	TRKMAS =
	TRKNAM = KTRKNAM
	XCALL OUTPT (16,65,0,TRKNAM,1)
	XCALL OUTPT (17,65,0,LINE(1,15),1)
	XCALL OUTPT (18,50,1,'TRAFFIC PHONE# ',1)
	XCALL OUTPT (20,50,1,'TRACING PHONE# ',1)
	XCALL INPUT (18,65,10,00,'#',ENTRY,INXCTL,1)
	TKTEL1 = ENTRY
	ALPHA(1,13) = TKTEL1,'(XXX)XXX-XXXX'
	IF (TKTEL1(1,3).EQ.0) ALPHA(1,13) = TKTEL1,'ZZZZZXXX-XXXX'
	XCALL OUTPT (18,65,0,ALPHA(1,13),1)

	XCALL INPUT (20,65,10,00,'#',ENTRY,INXCTL,1)
	TKTEL2 = ENTRY
	ALPHA(1,13) = TKTEL2,'(XXX)XXX-XXXX'
	IF (TKTEL2(1,3).EQ.0) ALPHA(1,13) = TKTEL2,'ZZZZZXXX-XXXX'
	XCALL OUTPT (20,65,0,ALPHA(1,13),1)

	XCALL FILES (81,'SU',180,5)
	LOKCTL = 1
	XCALL ISIO (81,TRKMAS,TRKNAM,STORE,LOKCTL)
	CLOSE 81
	IF (LOKCTL) XCALL MESAG ('ERROR STORING NEW TRUCK LINE - TRUCK LINE NOT SAVED',2)
ASK1D,
	BHSHPV = TRKNAM
	GOTO (ANYCN1), CNGCTL

BHPRON,					; PRO NUMBER (TRUCK LINE ASSIGNED)
	CTL = '07,66,10,00,A '
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHPRON = ENTRY
	GOTO (ANYCN1), CNGCTL

BHSHPD,					; SHIP DATE
	CTL = '08,66,08,00,D '
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSHPD = ENTRY
	IF (BHSHPD.EQ.0) 
	BEGIN
	  BHSHPD = TODAY
	  XCALL DATE8(BHSHPD, D_OUT, D_OUTR, D_FMT, D_SW)
	  XCALL OUTPT (ROW,COL,0, D_FMT ,1)
	END
	GOTO (ANYCN1), CNGCTL

	CTL = '05,04,30,00,A '

	
BHSHPNM,				; SHIP-TO-NAME
	CTL = '05,04,30,00,A '
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSHPNM = ENTRY
BHSHAD1,				; SHIP-TO ADDRESS LINE 1
	CTL = '06,04,30,00,A '
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSHAD1 = ENTRY
BHSHAD2,				; SHIP-TO ADDRESS LINE 2
	CTL = '07,04,30,00,A '
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSHAD2 = ENTRY
BHSHAD3,				; SHIP-TO ADDRESS LINE 3
	CTL = '08,04,30,00,A '
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSHAD3 = ENTRY
	GOTO (ANYCN1), CNGCTL

BHPONO,					; PO NUMBER
	CTL = '12,04,10,00,A '
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHPONO = ENTRY
	GOTO (ANYCN1), CNGCTL

BHSPIN1,				; SPECIAL INSTRUCTIONS
	CTL = '12,21,45,00,A '
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSPIN1 = ENTRY
BHSPIN2,				; SPECIAL INST LINE 2
	CTL = '13,21,60,00,A '
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSPIN2 = ENTRY
	GOTO (ANYCN1), CNGCTL
	
BHPPCL,					; PREPAID OR COLLECT (P OR C)
	CTL = '16,21,01,00,A '
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHPPCL = ENTRY
	IF (BHPPCL.NE.'P'.AND.BHPPCL.NE.'C'.AND.BHPPCL.NE.'T') GOTO BHPPCL
	GOTO (ANYCN1), CNGCTL
	IF (SELECT.EQ.3) GOTO ANYCN1

BHTRACE,				; TRACER ID NUMBER (TRUCK LINE ASSIGNED)
	CTL = '18,21,10,00,A '
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHTRACE = ENTRY
	GOTO ANYCN1

ANYCN1,
	CNGCTL = 6
	XCALL ANYCN (CNGCTL,WHATNO)
	IF (CNGCTL.EQ.-1) GOTO DISPLA1
	IF (CNGCTL) 
	BEGIN
	  GOTO (BHORDN,BHBILD,BHSHPV,BHPRON,BHSHPD,BHSHAD1,BHPONO,
&		BHSPIN1,BHPPCL,BHTRACE), WHATNO
	  GOTO ANYCN1
	END

ADD1,
	LOKCTL = 1
	XCALL ISIO (8,BLHEAD,KEY178,STORE,LOKCTL)
	IF (LOKCTL.NE.0) 
	BEGIN
	  ;;;XCALL OUTPT (23,1,1,ALOKCTL,1)
	  ;;;DISPLAY (15,':  ',BLHEAD(1,9))
	  ;;;XCALL MESAG ('PROBLEM STORING RECORD',2)
	  ;;;GOTO DISPLA1
	  INCR KORDNO
	  KEY178 = BHKEY
	  GOTO ADD1
	END

;;;
;	Line item screens
;;;
LINES,
	XCALL OUTPT (4,1,0,'   SHIP TO',1)
	XCALL OUTPT (4,49,0,'   SHIPPERS NO.',1)
	XCALL OUTPT (5,49,0,'   B/L DATE',1)
	XCALL OUTPT (6,49,0,'   SHIP VIA',1)
	XCALL OUTPT (7,49,0,'   CARRIERS NO.',1)
	XCALL OUTPT (8,49,0,'   DATE SHIPPED',1)
	XCALL OUTPT (10,1,2,'LN  CLASS   QTY     UOM       DESCRIPTION                          WEIGHT#',1)
	XCALL OUTPT (11,1,0,'--  -----  ------   -------   -----------------------------------  -------',1)
	XCALL OUTPT (21,1,0,'           ------                                                  -------',1)
	ROW = 11
	SEQ =
ADDROW,
	INCR ROW
	INCR SEQ
	INXCTL =
	GOTO DISPLA2
CTRLW,
	XCALL OUTPT (ROW,COL,1,'\',1)
DISPLA2,
	IF (ROW.GT.20)
	BEGIN
	  ROW = 20
	  DISPLAY (15,ESC,'[12;20r',ESC,'[20;01H',ESC,'D')
	  DISPLAY (15,ESC,'[01;24r')
	END

	BLLINE =
	KEY179 = BHKEY
	BLLINN = SEQ

	LOKCTL = 1
	XCALL ISIO (9,BLLINE,KEY179,READ,LOKCTL)
	IF (LOKCTL.EQ.0)
	  BEGIN
	    INCR SEQ
	    GOTO DISPLA2
	  END
	BLLINE =
	KEY179 = BHKEY
	BLLINN = SEQ

BLLINN,
	CTL(4,8) = '01,02'
	ALPHA(1,2) = BLLINN
	XCALL OUTPT (ROW,COL,0,ALPHA(1,2),1)
BLCLAS,
	CTL (4,14) = '07,03,00,#E'
	IF (CNGCTL)
	BEGIN
	  CALL ACCEPT
	  IF (DCHAR.EQ.13) GOTO BLQTY
	  IF (DCHAR.EQ.23) GOTO CTRLW
	  IF (DCHAR.NE.9.AND.DCHAR.NE.21) GOTO BLCLAS
	END
	CALL INPUT
	GOTO (CTRLW,ENDLIN), INXCTL
	DCHAR = ENTRY
	IF (DCHAR.EQ.0) GOTO ASKDEL2
	BLCLAS = ENTRY
	USING BLCLAS SELECT
	  (50),	NOP
	  (60),	NOP
	  (70),	NOP
	  (125),NOP
	  (150),NOP
	  (200),NOP
	  (250),NOP
	  (300),NOP
	  (777),NOP
	  (888),NOP
	  (999),NOP
	  (),	BEGIN
		  XCALL MESAG ('INVALID FREIGHT CLASS',1)
		  GOTO BLCLAS
		END
	ENDUSING
BLQTY,
	IF (BLCLAS.EQ.999) GOTO BLDESC
	IF (BLCLAS.EQ.888) GOTO BLUOM
	IF (BLCLAS.EQ.777)
	BEGIN
	  XCALL OUTPT (ROW,12,0,LINE(12,74),1)
	  GOTO ANYCN2
	END
	CTL (4,14) = '13,05,00,# '
	IF (CNGCTL)
	BEGIN
	  CALL ACCEPT
	  IF (DCHAR.EQ.13) GOTO BLUOM
	  IF (DCHAR.EQ.23) GOTO CTRLW
	  IF (DCHAR.NE.9.AND.DCHAR.NE.21) GOTO BLQTY
	  IF (DCHAR.NE.9) GOTO BLQTY
	END
	CALL INPUT
	GOTO (CTRLW), INXCTL
	DCHAR = ENTRY
	IF (DCHAR.EQ.0) GOTO ASKDEL2
	BLQTY = ENTRY
BLUOM,
	IF (CNGCTL) ENTRY = BLUOM
	I =
	CTL (4,14) = '21,07,00,A '

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; SSQ 3-28-1997
;;;	IF (CNGCTL.EQ.0.AND.BLCLAS.EQ.888) 
	IF (BLCLAS.EQ.888)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	BEGIN
	  BLDESC = 'TAG ALONG'
	  XCALL OUTPT (ROW,31,0,BLDESC,1)
	  GOTO OVRUOM
	END
BLUOM2,
	CALL ACCEPT
	IF (DCHAR.EQ.13) GOTO ACCUOM		;<ENTER> ACCEPT DISPLAYED UOM
	IF (DCHAR.EQ.21) GOTO OVRUOM		;<CTRL/U> HAND TYPE UOM
	IF (DCHAR.EQ.23) GOTO CTRLW		;<CTRL/W> ABORT LINE
	IF (DCHAR.EQ.9)				;<TAB> CYCLE THRU STD UOMs
	BEGIN
	  INCR I
	  USING BLCLAS SELECT
	  (50),	BEGIN
	  	  IF (I.GT.7) I = 1
	  	  ENTRY = UOM050(I)
	  	  XCALL OUTPT (ROW,COL,0,ENTRY(1,7),1)
		END
	  (60),	BEGIN
	  	  IF (I.GT.9) I = 1
	  	  ENTRY = UOM060(I)
	  	  XCALL OUTPT (ROW,COL,0,ENTRY(1,7),1)
		END
	  (70),	BEGIN
	  	  IF (I.GT.3) I = 1
	  	  ENTRY = UOM070(I)
	  	  XCALL OUTPT (ROW,COL,0,ENTRY(1,7),1)
		END
	  (125),BEGIN
	  	  IF (I.GT.5) I = 1
	  	  ENTRY = UOM125(I)
	  	  XCALL OUTPT (ROW,COL,0,ENTRY(1,7),1)
		END
	  (150),BEGIN
	  	  IF (I.GT.5) I = 1
	  	  ENTRY = UOM150(I)
	  	  XCALL OUTPT (ROW,COL,0,ENTRY(1,7),1)
		END
	  (),	GOTO OVRUOM
	  ENDUSING
	END
	GOTO BLUOM2				;GO AROUND
OVRUOM,
	IF (BLCLAS.EQ.888) TYPE = '# '
	CALL INPUT
	GOTO (CTRLW), INXCTL
ACCUOM,
	
	IF (BLCLAS.EQ.888)
	THEN BEGIN
	  DFLD = ENTRY
	  BLUOM = DFLD,'XXXXXX'
	END
	ELSE BLUOM = ENTRY
	IF (BLCLAS.EQ.888) 
	BEGIN
	  BLQTY =
	  BLWGHT =
	  GOTO ANYCN2
	END
BLDESC,
	IF (CNGCTL) ENTRY = BLDESC
	I =
	CTL (4,14) = '31,35,00,A '
	IF (CNGCTL.EQ.0.AND.BLCLAS.EQ.999) GOTO OVRDESC
BLDESC2,
	CALL ACCEPT
	IF (DCHAR.EQ.13) GOTO ACCDESC		;<ENTER> ACCEPT DISPLAYED DESC
	IF (DCHAR.EQ.21) GOTO OVRDESC		;<CTRL/U> HAND TYPE DESC
	IF (DCHAR.EQ.23) GOTO CTRLW		;<CTRL/W> ABORT LINE
	IF (DCHAR.EQ.9)				;<TAB> CYCLE THRU STD DESCs
	BEGIN
	  INCR I
	  USING BLCLAS SELECT
	  (50),	BEGIN
	  	  IF (I.GT.6) I = 1
	  	  ENTRY = DES050(I)
	  	  XCALL OUTPT (ROW,COL,0,ENTRY(1,30),1)
		END
	  (60),	BEGIN
	  	  IF (I.GT.4) I = 1
	  	  ENTRY = DES060(I)
	  	  XCALL OUTPT (ROW,COL,0,ENTRY(1,30),1)
		END
	  (70),	BEGIN
	  	  IF (I.GT.2) I = 1
	  	  ENTRY = DES070(I)
	  	  XCALL OUTPT (ROW,COL,0,ENTRY(1,30),1)
		END
	  (125),BEGIN
	  	  IF (I.GT.4) I = 1
	  	  ENTRY = DES125(I)
	  	  XCALL OUTPT (ROW,COL,0,ENTRY(1,30),1)
		END
	  (150),BEGIN
	  	  IF (I.GT.8) I = 1
	  	  ENTRY = DES150(I)
	  	  XCALL OUTPT (ROW,COL,0,ENTRY(1,30),1)
		END
	  (),	GOTO OVRDESC
	  ENDUSING
	END
	GOTO BLDESC2				;GO AROUND
OVRDESC,
	CALL INPUT
	GOTO (CTRLW), INXCTL
ACCDESC,
	BLDESC = ENTRY
	IF (BLCLAS.EQ.999)
	BEGIN
	  BLQTY =
	  BLUOM =
	  BLWGHT =
	  GOTO ANYCN2
	END
BLWGHT,
	CTL (4,14) = '69,06,00,# '
	IF (CNGCTL)
	BEGIN
	  CALL ACCEPT
	  IF (DCHAR.EQ.13) GOTO ANYCN2
	  IF (DCHAR.EQ.23) GOTO CTRLW
	  IF (DCHAR.NE.9.AND.DCHAR.NE.21) GOTO BLWGHT
	END
	CALL INPUT
	GOTO (CTRLW), INXCTL
	BLWGHT = ENTRY
	GOTO ANYCN2
DSPREC2,
	CTL(4,8) = '01,02'
	ALPHA(1,2) = BLLINN
	XCALL OUTPT (ROW,COL,1,ALPHA(1,2),1)
	CTL (4,14) = '07,03,00,#X'
	ALPHA(1,3) = BLCLAS
	XCALL OUTPT (ROW,COL,0,ALPHA(1,3),1)
	IF (BLCLAS.EQ.777)
	BEGIN
	  XCALL OUTPT (ROW,12,0,LINE(12,74),1)
	  GOTO ANYCN2
	END
	CTL (4,14) = '31,35,00,A '
	XCALL OUTPT (ROW,COL,0,BLDESC,1)
	IF (BLCLAS.NE.999)
	BEGIN
	  CTL (4,14) = '21,07,00,A '
	  XCALL OUTPT (ROW,COL,0,BLUOM,1)
	END
	IF (BLCLAS.NE.999.AND.BLCLAS.NE.888)
	BEGIN
	  CTL (4,14) = '13,05,00,# '
	  ALPHA(1,5) = BLQTY
	  XCALL OUTPT (ROW,COL,0,ALPHA(1,5),1)
	  CTL (4,14) = '69,06,00,# '
	  ALPHA(1,6) = BLWGHT
	  XCALL OUTPT (ROW,COL,0,ALPHA(1,6),1)
	END
ANYCN2,
	CNGCTL = 4
	XCALL ANYCN (CNGCTL,WHATNO)
	IF (CNGCTL.EQ.-1) GOTO ENDLIN
	IF (CNGCTL) GOTO BLLINN

	TUNITS = TUNITS + BLQTY
	TWGHT = TWGHT + BLWGHT
	ALPHA(1,5) = TUNITS,TMASK
	ALPHA(6,11) = TWGHT,TMASK
	XCALL OUTPT (22,13,0,ALPHA(1,5),1)
	XCALL OUTPT (22,69,0,ALPHA(6,11),1)
	GOTO ADD2
ASKDEL2,
	XCALL OUTPT (24,1,1,'DELETE THIS LINE ITEM <N> ?',1)
	XCALL INPUT (24,30,01,00,'YN',ENTRY,INXCTL,1)
	IF (INXCTL.NE.1) GOTO (DSPREC2,BLCLAS), ADDLIN + 1
DELETE2,
	XCALL OUTPT (ROW,03,1,'  -----  ------   -------   ------------- DELETED -------------   ------',1)
	XCALL MESAG ('LINE ITEM DELETED',2)
	IF (BLCLAS.NE.888) GOTO CHANGE2B
	XCALL OUTPT (23,1,2,'*** WARNING, THE B/L FOR TAG ALONG ORDER: ',1)
	DISPLAY (15,BLUOM,' WAS NOT DELETED')
	XCALL MESAG ('*** PLEASE NOTE AND DELETE MANUALLY',2)
	GOTO CHANGE2B
CHANGE2,
	IF (ADDLIN) GOTO ADD2
	LOKCTL = 1
	XCALL ISIO (9,BLLINE,KEY179,WRITE,LOKCTL)
CHANGE2B,
	SEQ = BLLINN
	LOKCTL = 1
	XCALL IOS (9,BLLINE,READ,LOKCTL)
	IF (LOKCTL.OR.KEY179.NE.BHKEY)
	BEGIN
	  XCALL OUTPT (24,1,2,'NO MORE LINE ITEMS TO DISPLAY',1)
	  GOTO ADDLIN
	END
	INCR ROW
	GOTO DISPLA2
ADDLIN,
	ADDLIN =
	XCALL OUTPT (24,31,0,'- ADD LINES <N> ?',1)
	XCALL INPUT (24,50,01,00,'YN',ENTRY,INXCTL,1)
	IF (INXCTL.NE.1) GOTO ENDLIN
	ADDLIN = 1
	CNGCTL =
	GOTO ADDROW
ADD2,
	LOKCTL = 1
	XCALL ISIO (9,BLLINE,KEY179,STORE,LOKCTL)
	IF (LOKCTL.NE.0) 
	BEGIN
	  XCALL OUTPT (23,1,1,ALOKCTL,1)
	  DISPLAY (15,':  ',BLLINE(1,11))
	  XCALL MESAG ('PROBLEM STORING RECORD',2)
	  GOTO DISPLA2
	END
	IF (BLCLAS.NE.888) GOTO ADDROW
	IF (SAVKEY.EQ.BLANKS) SAVKEY = KEY178	

	BHORDN = BLUOM
	BHHDRN = 1
	BHSHPN = 1
	BHSTATS = 3		;COMPLETE
ADD3,
	LOKCTL = 1
	XCALL ISIO (8,BLHEAD,KEY178,STORE,LOKCTL)
	IF (LOKCTL.NE.0) 
	BEGIN
	  IF (LOKCTL.EQ.4)
	  BEGIN
	    INCR BHSHPN
	    GOTO ADD3
	  END
	  XCALL OUTPT (23,1,1,'BLHEAD: ',1)
	  DISPLAY (15,BLHEAD(1,9),' : ',ALOKCTL)
	  XCALL MESAG ('PROBLEM STORING RECORD',2)
	  GOTO DISPLA2
	END
	BLORDN = BHORDN 
	BLHDRN = BHHDRN
	BLSHPN = BHSHPN
	BLLINN = 1
	BLCLAS = 999
	BLDESC = 'ORDER SHIPPED W/ '
	BLDESC(18,28) = ASHIPNO
	BLUOM =
	LOKCTL = 1
	XCALL ISIO (9,BLLINE,KEY179,STORE,LOKCTL)
	IF (LOKCTL.NE.0) 
	BEGIN
	  XCALL OUTPT (23,1,1,'BLLINE: ',1)
	  DISPLAY (15,BLLINE(1,11),' : ',ALOKCTL)
	  XCALL MESAG ('PROBLEM STORING RECORD',2)
	  GOTO DISPLA2
	END
	KEY178 = SAVKEY
	LOKCTL = 1
	XCALL ISIO (8,BLHEAD,KEY178,READ,LOKCTL)
	UNLOCK 8
	GOTO ADDROW
ENDLIN,
	ADDLIN =
	TUNITS =
	TWGHT =

INSTBL,
	LINCNT =
	TUNITS =
	TWGHT =
	REPBL =
	BLCONT =

	LPSW = 8		;DON'T ASK
	XCALL LPON (LPSW,SPLFIL)

	CALL PBLLP2

;;;	CLOSE 14
;;;	XCALL LPOFF (LPSW,SPLFIL,PGCNT,QUE_NAME)
	XCALL BLOFF (LPSW,SPLFIL,PGCNT,QUE_NAME)

	UNLOCK 8
	UNLOCK 9
	XCALL OUTPT (24,1,1,'REPRINT B/L   <N> ?',1)
	XCALL INPUT (24,21,01,00,'YN',ENTRY,INXCTL,1)
	IF (INXCTL.EQ.1) GOTO INSTBL

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; DELETE BILL JUST PRINTED...
;;;
	XCALL OUTPT (2,1,1,'PRINT B/Ls - UPDATING B/L STATUS FLAG',1)

	XCALL ISIO (8,BLHEAD,KEY178,READ,LOKCTL)
	CALL DEL_LINES
	XCALL ISIO (8,BLHEAD,KEY178,DELETE,LOKCTL)


	XCALL MESAG ('B/L STATUS FLAG UPDATED - PRINTING PROCESS COMPLETE',2)
	GOTO SELECT

DEL_LINES,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL ISIO (9,BLLINE,KEY178,READ,LOKCTL)
	CLEAR LOKCTL
	WHILE (LOKCTL.EQ.0 .AND. KEY179(1,9).EQ.KEY178)
		BEGIN
		XCALL ISIO (9,BLLINE,KEY179,DELETE,LOKCTL)
		XCALL IOS (9,BLLINE,READ,LOKCTL)
		END
	RETURN	
;--------------------------------------------------------------

	GOTO DISPLA1
;;;
;---------------------------------------------------------------------------
;;;

;;;=========================================================================
PRINTBL2,
	OPEN (14,O,'LT:')
;;;	OPEN (14,O,'LPA0:')

PBLLP,
PBLLP2,
	PLINE (1,1) = ESC
	PLINE (2,2) = '@'
	CALL PRINT

	PLINE (10,14) = ' E W1'	;ST EMPHASISED / DBL WID
	PLINE (10,10) = ESC
	PLINE (12,12) = ESC
	PLINE (15,32) = BHSHPV
	PLINE (33,37) = ' F W0'	;END EMPHASISED / DBL WID
	PLINE (33,33) = ESC
	PLINE (35,35) = ESC

	CALL PRINT			;5
	INCR LINCNT
	XCALL LINFD (1)		;6
	AORDNO = BHORDN
	AHDRN = BHHDRN
	ASHPN = BHSHPN,'XX'
	PLINE (69,79) = ASHIPNO
	PLINE (4,33) = BHSHPNM
	CALL PRINT			;7
	PLINE (4,33) = BHSHAD1
	CALL PRINT			;8
	PLINE (4,33) = BHSHAD2
	CALL PRINT			;9
	PLINE (4,33) = BHSHAD3
	CALL PRINT			;10
	PLINE (69,79) = BHPRON
	CALL PRINT			;11
	INCR LINCNT
	XCALL LINFD (1)		;12
	PLINE (4,13) = BHPONO
	PLINE (25,64) = BHSPIN1

	XCALL DATE8(BHSHPD, D_OUT, D_OUTR, D_FMT, D_SW)
	PLINE (69,78) = D_FMT

	CALL PRINT			;13
	INCR LINCNT
	XCALL LINFD (1)		;14
	PLINE (4,63) = BHSPIN2
	CALL PRINT			;15
	LINCNT = LINCNT + 4
	XCALL LINFD (4)		;16-17-18-19
	IF (BLCONT) RETURN
;;;
;	B/L LINE ITEMS
;;;
	KEY179 = KEY178
	LOKCTL = 1
	XCALL ISIO (9,BLLINE,KEY179(1,9),READ,LOKCTL)
	DO BEGIN
	    IF (LOKCTL.NE.0) NEXTLOOP
	    IF (LINCNT.GE.49) CALL BLCONT
	    PLINE (16,45) = BLDESC
	    IF (BLCLAS.NE.999)
	    BEGIN
	      PLINE (1,5) = BLQTY,NUMASK
	      PLINE (8,14) = BLUOM
	      PLINE (49,55) = BLWGHT,NUMASK
	      PLINE (59,61) = BLCLAS,NUMASK
	    END
	    IF (BLCLAS.EQ.888)
	    BEGIN
	      PLINE (49,55) =
	      PLINE (59,61) =
	    END
	    IF (LINCNT.EQ.21) CALL PPCL
	    IF (BLCLAS.EQ.777) PLINE (2,61) = LINE(2,61)
	    CALL PRINT
	    IF (LINCNT.EQ.21) CALL PPCL
	    CALL PRINT
	    TUNITS = TUNITS + BLQTY
	    TWGHT = TWGHT + BLWGHT
	    LOKCTL = 1
	    XCALL IOS (9,BLLINE,READ,LOKCTL)
	  END UNTIL (LOKCTL.NE.0.OR.KEY179(1,9).NE.KEY178)	  
	IF (LINCNT.LE.21) 
	  BEGIN
	    IF (LINCNT.LT.21) DO BEGIN
	      XCALL LINFD (1)
	      INCR LINCNT
	    END UNTIL (LINCNT.EQ.21)
	    CALL PPCL
	    CALL PRINT
	  END

	  IF (LINCNT.LT.48)
	  BEGIN
	    DO BEGIN
	      XCALL LINFD (1)
	      INCR LINCNT
	    END UNTIL (LINCNT.EQ.48)
	    PLINE (1,5) = TUNITS,NUMASK
	    PLINE (49,55) = TWGHT,NUMASK
	    CALL PRINT
	  END

	XCALL LINFD (0)
	LINCNT =
	RETURN

	IF (REPBL.EQ.0)
	BEGIN
	  LOKCTL = 1
	  XCALL IOS (8,BLHEAD,READ,LOKCTL)
	  IF (LOKCTL.EQ.0) GOTO PBLLP
	END
	PGCNT = -1
;;;	XCALL LPOFF (LPSW,SPLFIL,PGCNT)
ENDPBL,
	UNLOCK 8
;;;	CLOSE 14
	RETURN
;===================================================



PPCL,
	PLINE (66,70) = ' E W1'		;ST EMPHASISED / DBL WID PRINTING
	PLINE (66,66) = ESC
	PLINE (68,68) = ESC
	IF (BHPPCL.EQ.'P') PLINE (71,77) = 'PREPAID'
	IF (BHPPCL.EQ.'C') PLINE (71,77) = 'COLLECT'
	IF (BHPPCL.EQ.'T') PLINE (71,77) = '3RD PTY'
	PLINE (78,82) = ' F W0'		; END EMPHASISED / DBL WID PRINTING
	PLINE (78,78) = ESC
	PLINE (80,80) = ESC
	RETURN
BLCONT,
	DO BEGIN
	  XCALL LINFD (1)
	  INCR LINCNT
	END UNTIL (LINCNT.EQ.55)
	PLINE (1,5) = 'CONT.'
	PLINE (48,56) = 'CONTINUED'
	CALL PRINT
	XCALL LINFD (0)
	LINCNT =
	BLCONT = 1
	CALL PBLLP2
	BLCONT =
	RETURN
;;;
ENDOFF,
	CALL CLOSE
ABORT,
	XCALL PGCHN ('CP:CPMENU',1)
ACCEPT,
	XCALL FLAGS (10000,1)
	XCALL OUTPT (ROW,COL-1,0,'\',1)
	ACCEPT (15,DCHAR)
	DO BEGIN
	  XCALL TTSTS (TTSTS,15)
	  IF (TTSTS) ACCEPT (15,ACHAR)
	END UNTIL (TTSTS.EQ.0)
	XCALL FLAGS (10000,0)
	RETURN
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	RETURN
CINPUT,
	XCALL CINPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,POS)
	RETURN
PRINT,
	WRITES (14,PLINE)
	PLINE =
	INCR LINCNT
	RETURN


OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; OPEN ALL FILES
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CLEAR OPNOK

	OPEN (8,SU,'SMC:XXHEAD.ISM')
	CHN178 = 8

	OPEN (9,SU,'SMC:XXLINE.ISM')
	CHN179 = 9

	XCALL FILES (80,'SI',180,SWITCH)	;FILE 180 - TRKMAS FILE
	IF (SWITCH .EQ. 9) RETURN
	CHN180 = 80
	
	OPNOK = 1
	RETURN
;-------------------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; CLOSE OPEN FILES
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CLOSE CHN178
	CLOSE CHN179
	IF (CHN180) XCALL FILES (CHN180,'SU',180,4)

	RETURN
;-------------------------------------------------

END

