;  PSTSLH / COP 
;
;	UPDATES SLSHST WITH ORDHDR / ORDLIN / DUCACC INFO
;	SLSHST STORES 1 RECORD FOR EACH CUSTOMER / ITEM COMBO
;
;	POSTS ORDHDR TO ORDHST FILE FOR SHIPTO & SALES TAX ANALYSIS PROGRAMS
;
;	PSTINV -> PSTSLH -> SRTSLH -> SLHCNT -> DETHIS -> CLRORD
; 9-3-19 ssq:
;	PSTSLH -> DATLBS -> DETHIS
;
RECORD SLSHST
		.INCLUDE 'DEF:RD055A.DEF'
RECORD SLHCTL		
		.INCLUDE 'DEF:RD055B.DEF'
RECORD	,X
		,A59
		,A4		;DAF
		,A5
	AREC55	,A5
	AMAX55	,A5
		,A3
RECORD SLHWRK		
		.INCLUDE 'DEF:RD057A.DEF'
RECORD ORDHST
		.INCLUDE 'DEF:RD176A.DEF'
RECORD ORHCTL
		.INCLUDE 'DEF:RD176B.DEF'
RECORD ORDHDR
		.INCLUDE 'DEF:RD044A.DEF'
RECORD ORDLIN
		.INCLUDE 'DEF:RD045A.DEF'
RECORD DUCACC
		.INCLUDE 'DEF:RD175A.DEF'

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;RECORD SNDMSG
;;;	PRGNAM	,A9,	'CP:SLHCNT'
;;;	RCNT	,D5
;;;	OCNT	,D5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

RECORD	HEADER
		,A7,	'DBSORT '
	HFILE	,A14

RECORD	VARS
	REDFIL	,A14
	SWITCH	,D1
	V	,D1
	LOKCTL	,D1
	READ	,D1	,0
	WRITE	,D1	,1
	CLOSE	,D1	,0
	MSGCTL	,D1
	EXEPRC	,D10
	EXECST	,D10
	BSMID	,D5
	DECMAL	,D18
	KEY	,A21
	SRCCTL	,D1
	MASK	,A6,	'XXXXXX'
PROC
	XCALL TERID (V)
OPENS,
	XCALL OUTPT (1,1,2,'ADD TO SALES HISTORY FILE',V)
;
	XCALL FFILE (55, REDFIL, SWITCH)
	HFILE = REDFIL
	XCALL OUTPT (2,1,2,HEADER,1)

	onerror in_use
	SORT (IN=REDFIL, RECORD=SLSHST, KEY=(HCUSNO,HITMNO))
	offerror
	goto not_in_use
in_use,
	offerror
	xcall mesag ('sales history file in use',1)
	sleep(1)
	goto opens
not_in_use,
;
	XCALL WATE (4,V)
	CLOSE =
OPEN1,
	SWITCH = 1
	XCALL FILES (8,'U',55,SWITCH)		;FILE # 55 -- SLSHST FILE
	IF (SWITCH.NE.9) GOTO OPEN2
	GOTO ABORT
OPEN2,
	XCALL FILES (4,'SI',44,SWITCH)		;FILE # 44 -- ORDHDR FILE
	IF (SWITCH.NE.9) GOTO OPEN3
	CALL CLOSE1
	GOTO ABORT
OPEN3,
	XCALL FILES (5,'SI',45,SWITCH)		;FILE # 45 -- ORDLIN FILE
	IF (SWITCH.NE.9) GOTO OPEN4
	CALL CLOSE2
	GOTO ABORT
OPEN4,
	XCALL FILES (6,'SI',175,SWITCH)		;FILE # 175 -- DUCTOR FILE
	IF (SWITCH.NE.9) GOTO OPEN5
	CALL CLOSE3
	GOTO ABORT
OPEN5,
	XCALL FILES (1,'U',176,SWITCH)		;FILE # 176 -- ORDHST FILE
	IF (SWITCH.NE.9) GOTO RDHDR
	CALL CLOSE4
	GOTO ABORT

CLOSES,
	INCR CLOSE
	XCALL FILES (1,'U',176,4)
CLOSE4,
	INCR CLOSE
	XCALL FILES (6,'SI',175,4)
CLOSE3,
	INCR CLOSE
	XCALL FILES (5,'SI',045,4)
CLOSE2,
	INCR CLOSE
	XCALL FILES (4,'SI',044,4)
CLOSE1,
	INCR CLOSE
	XCALL FILES (8,'U',055,4)
	RETURN
ABORT,
	IF (CLOSE.EQ.4) XCALL MESAG ('COULD NOT ACCESS ORDHST FILE - CANNOT ABORT POSTING - TO RETRY .. ',1)
	IF (CLOSE.EQ.3) XCALL MESAG ('COULD NOT ACCESS DUCACC FILE - CANNOT ABORT POSTING - TO RETRY .. ',1)
	IF (CLOSE.EQ.2) XCALL MESAG ('COULD NOT ACCESS ORDLIN FILE - CANNOT ABORT POSTING - TO RETRY .. ',1)
	IF (CLOSE.EQ.1) XCALL MESAG ('COULD NOT ACCESS ORDHDR FILE - CANNOT ABORT POSTING - TO RETRY .. ',1)
	IF (CLOSE.EQ.0) XCALL MESAG ('COULD NOT ACCESS SLSHST FILE - CANNOT ABORT POSTING - TO RETRY .. ',1)
	GOTO OPENS
EOF,
	LOKCTL = 1
	ORG055 = REC055		;3-19-99 SSQ (skipping srtslh & slhcnt)
	XCALL IO (8,SLHCTL,1,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IO (1,ORHCTL,1,WRITE,LOKCTL)
	CALL CLOSES
;--------------------------------------------------
;;;	RCNT = REC055
;;;	OCNT = ORG055
;;;	MSGCTL = 5
;;;	XCALL SNMSG (SNDMSG,MSGCTL)
;;;	XCALL PGCHN ('CP:SRTSLH',1)

	XCALL FFILE (55, REDFIL, SWITCH)
	HFILE = REDFIL
	XCALL OUTPT (2,1,2,HEADER,1)

	SORT (IN=REDFIL, RECORD=SLSHST, KEY=(HCUSNO,HITMNO))
	XCALL PGCHN ('CP:DATLBS',1)
;;;	XCALL PGCHN ('CP:DETHIS',1)
;--------------------------------------------------
FULL,
	DISPLAY (15,7,7)
	XCALL OUTPT (23,1,2,'"SLSHST" FILE IS FULL, PLEASE EXPAND AND USE SPECIAL FUNCTIONS MENU RESTART',1)
	CALL CLOSES
	XCALL MESAG ('COMMAND TO RESTART "CP:PSTSLH"',2)
	XCALL MESAG ('UT:XPAND',2)
FULL2,
	DISPLAY (15,7,7)
	XCALL OUTPT (23,1,2,'"ORDHST" FILE IS FULL, PLEASE EXPAND AND USE SPECIAL FUNCTIONS MENU RESTART',1)
	CALL CLOSES
	XCALL MESAG ('COMMAND TO RESTART "CP:PSTSLH"',2)
	XCALL MESAG ('UT:XPAND',2)
;
;*******************************************************************************
;
RDHDR,
	LOKCTL = 1
	XCALL IO (8,SLHCTL,1,READ,LOKCTL)
	XCALL OUTPT (22,01,2,'XXXXX ACTIVE RECORDS - XXXXX MAXIMUM RECORDS',1)
	XCALL OUTPT (22,24,0,AMAX55,1)
	LOKCTL = 1
	XCALL IO (1,ORHCTL,1,READ,LOKCTL)
;
ORDHLP,
	SLSHST =
	LOKCTL = 1
	XCALL IOS (4,ORDHDR,READ,LOKCTL)
	IF (LOKCTL.NE.0) GOTO EOF
	IF (OFLAG.NE.2) GOTO ORDHLP

	CALL SAVHDR		; SAVES HEADER IN ORDHST FILE


	WCUSNO = OCUSNO		; CUSTOMER NUMBER
	WINVDT = OINVDT		; INVOICE DATE
	WINVNO = OORDNO		; INVOICE NUMBER
	WORDDT = OORDDT		; ORDER DATE
	WCUSCD = OCUSCD 	; CUSTOMER TYPE
	WCUSC2 =		; CUSTOMER CODE 2
	WLOC = 			; LOCATION
	WSLSMN = OSLMAN		; SALESMAN NUMBER
	WTERR =			; TERRITORY CODE
ORDLIN,
	LORDNO = OORDNO
	LOKCTL = 1
	XCALL ISIO (5,ORDLIN,LORDNO,READ,LOKCTL)
	IF (LOKCTL.NE.0.OR.LORDNO.NE.OORDNO) GOTO DUCTOR
	GOTO FLIN
ORDLLP,
	LOKCTL = 1
	XCALL IOS (5,ORDLIN,READ,LOKCTL)
	IF (LOKCTL.NE.0.OR.LORDNO.NE.OORDNO) GOTO DUCTOR
FLIN,
	IF (LTYPE .EQ. 'M') GOTO ORDLLP

	WITMNO = LITMNO		; ITEM NUMBER (END-ITEM NUMBER)
	WTXFLG = 		; TAXABLE FLAG
	WPRDCD = LPRDCD		; PRODUCT CATEGORY
	WPRDC2 =		; PRODUCT CODE 2
	WQTY = LQTYSH		; QUANTITY SOLD

	DECMAL = ((LQTYSH*LPRICE) - ((LDISC*LQTYSH*LPRICE)#2))#1
	EXEPRC = DECMAL - ((DECMAL*LODISC)#2)

	WSALE = EXEPRC		; NET PRICE

	EXECST = (LQTYSH*LCOST)#1

	WCOST = EXECST		; COST
	WPSTED =		; STATUS OF RECORD:  0-NOT YET POSTED
	CALL UPDSLH
	GOTO ORDLLP
DUCTOR,
	DUCTOR = OORDNO
	LOKCTL = 1
	XCALL ISIO (6,DUCACC,DUCTOR,READ,LOKCTL)
	IF (LOKCTL.NE.0.OR.DUCTOR.NE.OORDNO) GOTO ORDHLP
	GOTO FDUC
DUCTLP,
	LOKCTL = 1
	XCALL IOS (6,DUCACC,READ,LOKCTL)
	IF (LOKCTL.NE.0.OR.DUCTOR.NE.OORDNO) GOTO ORDHLP
FDUC,
	WITMNO = 'DUCT'
	WPRDCD = '11'
	WQTY = POUNDS
	EXEPRC = ( POUNDS * GPRICE ) # 1
	WSALE = EXEPRC
	WCOST =
	CALL UPDSLH
LINER,
	IF (LINER.NE.4)
	BEGIN
	  WITMNO =
	  WITMNO(1,5) = 'LINER'
	  WITMNO(6,6) = LINER,'X'
	  WQTY = SQFLIN
	  EXEPRC = (SQFLIN * LINPRC) # 1
	  WSALE = EXEPRC
	  WCOST =
	  CALL UPDSLH
	END

	IF (ACC.EQ.2) GOTO DUCTLP

A1,
	IF (SLIPS.NE.0)
	BEGIN
	  WITMNO = SLPITM
	  WQTY = SLIPS
	  EXEPRC = (SLIPS * SLPPRC) # 1
	  WSALE = EXEPRC
	  WCOST =
	  CALL UPDSLH
	END
A2,
	IF (DRIVES.NE.0)
	BEGIN
	  WITMNO = DRVITM
	  WQTY = DRIVES
	  EXEPRC = (DRIVES * DRVPRC) # 1
	  WSALE = EXEPRC
	  WCOST =
	  CALL UPDSLH
	END
A3,
	IF (TCORN.NE.0)
	BEGIN
	  WITMNO = CORITM
	  WQTY = TCORN
	  EXEPRC = (TCORN * CORPRC) # 1
	  WSALE = EXEPRC
	  WCOST =
	  CALL UPDSLH
	END
A4,
	IF (TNBQTY.NE.0)
	BEGIN
	  WITMNO = TNBITM
	  WQTY = TNBQTY
	  EXEPRC = (TNBQTY * TNBPRC) # 1
	  WSALE = EXEPRC
	  WCOST =
	  CALL UPDSLH
	END
A5,
	IF (TGAQTY.NE.0)
	BEGIN
	  WITMNO = TGAITM
	  WQTY = TGAQTY
	  EXEPRC = (TGAQTY * TGAPRC) # 1
	  WSALE = EXEPRC
	  WCOST =
	  CALL UPDSLH
	END
A6,
	IF (TCLQTY.NE.0)
	BEGIN
	  WITMNO = TCLITM
	  WQTY = TCLQTY
	  EXEPRC = (TCLQTY * TCLPRC) # 1
	  WSALE = EXEPRC
	  WCOST =
	  CALL UPDSLH
	END
A7,
	IF (TBAQTY.NE.0)
	BEGIN
	  WITMNO = TBAITM
	  WQTY = TBAQTY
	  EXEPRC = (TBAQTY * TBAPRC) # 1
	  WSALE = EXEPRC
	  WCOST =
	  CALL UPDSLH
	END
A8,
	IF (TBNQTY.NE.0)
	BEGIN
	  WITMNO = TBNITM
	  WQTY = TBNQTY
	  EXEPRC = (TBNQTY * TBNPRC) # 1
	  WSALE = EXEPRC
	  WCOST =
	  CALL UPDSLH
	END

	GOTO DUCTLP

UPDSLH,
	IF (WSALE.EQ.0) RETURN	; DON'T SAVE NON INCOME ITEMS


	KEY(1,6) = WCUSNO,MASK
	KEY(7,21) = WITMNO
	XCALL SERCH (8,SLSHST,KEY,1,21,ORG055,BSMID,SRCCTL,4,22,27,0,0,0,0)
	IF (SRCCTL) GOTO ADDSLH
;;;	HCUSNO = WCUSNO		; CUSTOMER NUMBER	(DO NOT UPDATE)
;;;	HITMNO = WITMNO		; ITEM NUMBER 		(DO NOT UPDATE)
	HINVDT = WINVDT		; INVOICE DATE 		(LAST)
	HINVNO = WINVNO		; INVOICE NUMBER	(LAST)
	HORDDT = WORDDT		; ORDER DATE		(LAST)
	HBOFLG = 		; BACK ORDER FLAG
	HTXFLG = 		; TAXABLE FLAG
	HCUSCD = WCUSCD		; CUSTOMER TYPE
	HCUSC2 = 		; CUSTOMER CODE 2
	HLOC = 			; LOCATION
	HSLSMN = WSLSMN		; SALESMAN NUMBER
	HTERR = 		; TERRITORY CODE
	HPRDCD = WPRDCD		; PRODUCT CATEGORY
	HPRDC2 = 		; PRODUCT CODE 2
	HQTY = HQTY + WQTY	; QUANTITY SOLD
	HSALE = HSALE + WSALE	; NET PRICE
	HCOST = HCOST + WCOST	; COST
	POSTED = 		; STATUS OF RECORD:  0-NOT YET POSTED
	LOKCTL = 1
	XCALL IO (8,SLSHST,BSMID,WRITE,LOKCTL)
	RETURN
ADDSLH,
	INCR REC055
	IF (REC055.GE.MAX055) GOTO FULL
	LOKCTL = 1
	XCALL IO (8,SLHWRK,REC055,WRITE,LOKCTL)
	DISPLAY (15,13,AREC55)
	RETURN	
;;;
;	SAVES ORDHDR RECORD TO ORDHST FILE
;;;
SAVHDR,
	ORDHST = ORDHDR
	INCR REC176
	IF (REC176.GE.MAX176) GOTO FULL2
	LOKCTL = 1
	XCALL IO (1,ORDHST,REC176,WRITE,LOKCTL)
	RETURN	

END
