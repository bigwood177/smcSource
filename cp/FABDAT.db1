;FABDAT.DBL
;	POPULATE FABDAT.DDF 
;
RECORD	FABDAT
	.INCLUDE 'DEF:FABDAT.DEF'

RECORD	CHANNEL
	CHNFAB	,D2

RECORD	PRINT
	TITLE	,A*,	'FABDAT TABLE'
	HD	,A6,	'NO HDR'
	LG	,A9,	'NO LEGEND'
	PLINE	,A80
	PRNTON	,D1
	LINCNT	,D2,60
	PGCNT	,D6
	LPSW	,D2
	SPLFIL	,A14
	RPTNUM	,D3
	PRTTYP	,A1
	PRTCTL	,D3,080
	LPARG	,D1
	PRNTSW	,D1
	PRTCTR	,D1


RECORD	HD1
	,A*,	'  PC CODE  GA D1 D2 ET  DESCRIPTON'


RECORD	VARS
	ALPHA	,A12
	OPNOK	,D1
	BLANKS	,A15
	PC	,D2
	CODE	,D2
	RTN	,A5
	DAMP	,D1
	CONE	,D1
	SCOP	,D1
	MATL	,D1
	SAVPC	,D1
	ST_PC	,D2
	EN_PC	,D2
	PGM	,D1
	ROW	,D2
	ENTRY	,A30
	INXCTL	,D1
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	DELETE	,D1,3
	LOKCTL	,D1
	WHATNO	,D2
	SELECT	,D1
	CNGCTL	,D1
	I	,D3
	SWITCH	,D1
	V	,D1

PROC
	XCALL TERID (V)
	XCALL OUTPT (1,1,2,'FABDAT DATA TABLE',1)

	CALL OPENS
	IF (.NOT. OPNOK) GOTO CLOSE

MENU,
	XCALL OUTPT (1,1,2,'FABDAT DATA TABLE',1)
	XCALL OUTPT (3,9,0,'PLEASE SELECT APPLICATION',1)
	XCALL OUTPT (5,15,0,'1. TABLE MAINTENANCE',1)
	XCALL OUTPT (6,15,0,'2. PRINT TABLE',1)
MINPUT,
	XCALL INPUT (3,36,1,1,'#E',ENTRY,INXCTL,1)
	GOTO (MINPUT,ENDOFF), INXCTL
	PGM = ENTRY(1,1)
	GOTO (DISPLA,PRINT_TABLE),PGM
	GOTO MINPUT

DISPLA,
	CLEAR CNGCTL
	XCALL OUTPT (1,1,2,'FABDAT DATA TABLE',1)
	XCALL OUTPT ( 4,4,0,'1. PC',1)
	XCALL OUTPT ( 6,4,0,'2. CODE',1)
	XCALL OUTPT ( 8,4,0,'3. GAUGE',1)
	XCALL OUTPT (10,4,0,'4. DIM1',1)
	XCALL OUTPT (12,4,0,'5. DIM2',1)
	XCALL OUTPT (14,4,0,'6. ET',1)
PC,
	XCALL INPUT (4,14,02,00,'#E',ENTRY,INXCTL,1)
	GOTO (DISPLA,MENU),INXCTL
	PC = ENTRY(1,2)
	IF (PC .EQ. 0)
		BEGIN
		PC = SAVPC
		ENTRY(1,1) = PC,	'X'
		XCALL OUTPT (4,14,0,ENTRY(1,1),1)
		END
	SAVPC = PC
;;;	GOTO (CHKTBL),CNGCTL
CODE,
	XCALL INPUT (6,14,02,00,'#E',ENTRY,INXCTL,1)
	GOTO (DISPLA,MENU),INXCTL
	CODE = ENTRY(1,2)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;CHKTBL,
;;;	CLEAR TBL_KEY
;;;	TBL_KEY(1,2) = 'RT'
;;;	RT_PC = PC
;;;	RT_CODE = CODE
;;;	XCALL ISIO (CHNFAB,FABDAT,TBL_KEY,READ,LOKCTL)
;;;	IF (LOKCTL .EQ. 0)
;;;		BEGIN
;;;		SELECT = 2
;;;		CALL DSPREC
;;;		GOTO ANYCNG
;;;		END
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	SELECT = 1			;ADD MODE
	CLEAR FABDAT

GA,
	XCALL INPUT(8,14,02,00,'# ',ENTRY,INXCTL,1)
	GOTO (DISPLA),INXCTL
	FD_GA = ENTRY(1,5)
	GOTO (ANYCNG),CNGCTL
DIM1,
	XCALL INPUT(10,14,02,00,'# ',ENTRY,INXCTL,1)
	GOTO (DISPLA),INXCTL
	FD_DIM1 = ENTRY(1,2)
	GOTO (ANYCNG),CNGCTL
DIM2,
	XCALL INPUT(12,14,02,00,'# ',ENTRY,INXCTL,1)
	GOTO (DISPLA),INXCTL
	FD_DIM2 = ENTRY(1,2)
	GOTO (ANYCNG),CNGCTL
ET,
	XCALL INPUT (14,14,02,00,'A',ENTRY,INXCTL,1)
	GOTO (DISPLA),INXCTL
	FD_ET = ENTRY(1,2)
	GOTO (ANYCNG),CNGCTL
ANYCNG,
	XCALL OUTPT (24,1,1,'FIELD # TO CHANGE            <TAB> = DELETE',1)
	XCALL INPUT (24,20,02,00,'#T',ENTRY,INXCTL,1)
;;;	IF (INXCTL .EQ. 3)
;;;		BEGIN
;;;		XCALL OUTPT (24,1,1,'DELETE, ARE YOU SURE ?',1)
;;;		XCALL INPUT (24,24,01,01,'YN',ENTRY,INXCTL,1)
;;;		GOTO (ANYCNG),INXCTL-1
;;;		XCALL ISIO (CHNFAB,FABDAT,TBL_KEY,DELETE,LOKCTL)
;;;		GOTO DISPLA
;;;		END

	WHATNO = ENTRY(1,2)
	IF (WHATNO .EQ. 0)
	THEN 	CLEAR CNGCTL
	ELSE 	CNGCTL = 1

	GOTO (PROCES,CNGBR),CNGCTL+1
CNGBR,
	GOTO (PC, CODE, GA, DIM1, DIM2, ET),WHATNO
	GOTO ANYCNG

PROCES,
	CASE SELECT OF
	BEGINCASE
	1:	BEGIN
		FD_TYPE = 'I'
		FD_PC = PC
		FD_CODE = CODE
		WRITES (CHNFAB, FABDAT)
		END
;;;	2:	XCALL ISIO (CHNFAB,FABDAT,TBL_KEY,WRITE,LOKCTL)
	ENDCASE
	GOTO DISPLA

ENDOFF,
	CALL CLOSE
	STOP


DSPREC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; DISPLAY RECORD
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;


	RETURN
;-----------------------------------



;===================================================================
PRINT_TABLE,
;===================================================================
	CLOSE CHNFAB
	OPEN (1,I,'FABDAT.DAT')
	
	LINCNT = 66
	PGCNT  = 0
	
PDISP,
	CNGCTL = 
	XCALL OUTPT (1,1,2,'PRINT FABDAT TABLE',1)
	XCALL OUTPT (4,4,0,'1. STARTING PRESSURE FILE',1)
	XCALL OUTPT (6,4,0,'2. ENDING   PRESSURE FILE',1)
;                        123456789012345678901234567890
ST_PC,
	XCALL INPUT (4,30,02,00,'#E',ENTRY,INXCTL,1)
	GOTO (PDISP,PDONE),INXCTL
	ST_PC = ENTRY(1,2)
	IF (ST_PC .EQ. 0)
		BEGIN
		EN_PC = 99
		XCALL OUTPT (4,30,1,'ALL',1)
		XCALL OUTPT (6,30,1,' ',1)
		GOTO P_ANY
		END
	GOTO (P_ANY),CNGCTL
EN_PC,
	XCALL INPUT (6,30,02,00,'# ',ENTRY,INXCTL,1)
	GOTO (PDISP),INXCTL
	EN_PC = ENTRY(1,2)
	IF (EN_PC .EQ. 0)
		BEGIN
		EN_PC = ST_PC
		ENTRY(1,2) = EN_PC, 'ZX'
		XCALL OUTPT (6,30,0,ENTRY(1,2),1)
		END
P_ANY,
	XCALL ANYCN(CNGCTL,WHATNO)
	GOTO (P_PRINT,P_CNGBR),CNGCTL + 1
P_CNGBR,
	GOTO (ST_PC,EN_PC),WHATNO
	GOTO P_ANY

P_PRINT,

PLOOP,
	XCALL IOS (CHNFAB,FABDAT,READ,LOKCTL)
	IF (LOKCTL .NE. 0) GOTO EOF
;;;	IF (RT_PC .LT. ST_PC) GOTO PLOOP
;;;	IF (RT_PC .GT. EN_PC) GOTO EOF


	PLINE (3,4)  = FD_PC,	'ZX'
	PLINE (7,9)  = FD_CODE,	'ZZX'
	PLINE(12,13) = FD_GA,	'ZX'
	PLINE(15,16) = FD_DIM1,	'ZX'
	PLINE(18,19) = FD_DIM2,	'ZX'
	PLINE(21,22) = FD_ET
	PLINE(25,54) = FD_DESC
	
;  PC CODE  GA D1 D2 ET  DESCRIPTON
;  XX  XXX  XX ZX ZX AA  AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
;12345678901234567890123456789012345678901234567890123456789012345678901234567890
;         1         2         3         4         5         6         7         8
	CALL PRINT
	GOTO PLOOP

EOF,
	IF (PRNTON.EQ.1)  XCALL LPOFF(LPSW,SPLFIL,PGCNT)
	PRNTON  = 0

PDONE,
	GOTO MENU

PRINT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (PRNTON .EQ. 0) CALL PRNTON
	XCALL LPOUT(LINCNT,PGCNT,PLINE,TITLE,HD1,HD,HD
&		,LG,LG,LG,0,080,PRTCTL,0,LPSW,RPTNUM,PRTTYP)
	RETURN
;-------------------------------------------------------------
PRNTON,
	SPLFIL (5,6) = 'EF'
	LPSW = 1		;PRINT,SPOOL, OR DISPLAY
	XCALL LPON (LPSW,SPLFIL)
	IF (LPSW.EQ.0) GOTO ENDOFF
	LPARG = 2
	IF (LPSW.EQ.2) LPARG = 4
	XCALL WATE (LPARG,V)
	PRNTON = 1
	RETURN
;-------------------------------------------------------------
;===================================================================


OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK

	OPEN (1, O, 'FABDAT.DAT')
	CHNFAB = 1

	OPNOK = 1
	RETURN
;----------------------------------------------------

CLOSE,
	CLOSE CHNFAB
	RETURN
;----------------------------------------------------
	
	


