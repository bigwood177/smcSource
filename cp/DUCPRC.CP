;DUCPRC.COP
;
;		AUTHOR: SHERWOOD S. QUIRING
;		DATE  : 18-DEC-1996
;
RECORD	COPTBL
	.INCLUDE 'DEF:RD182A.DEF'

RECORD	PARAMS
	.INCLUDE 'DEF:PARAM.DEF'

RECORD	DPKEY
	K_CODE	,A2
	K_TYPE	,D1
	K_STYLE	,D1
	K_CAT	,D1
	K_GAUGE	,D3

RECORD	HD1
	,A*,	'TYPE               STYLE              CAT              '
	,A*,	'GAUGE       PRICE'

RECORD	PRINT
	TITLE	,A*,	'DUCT PRICE TABLE'
	HD	,A6,	'NO HDR'
	LG	,A9,	'NO LEGEND'
	PLINE	,A80
	PRNTON	,D1
	LINCNT	,D2,60
	PGCNT	,D6
	LPSW	,D2
	SPLFIL	,A14
	RPTNUM	,D3
	PRTTYP	,A1
	PRTCTL	,D3,080
	LPARG	,D1
	PRNTSW	,D1
	PRTCTR	,D1

RECORD	CHANNEL
	CHN182	,D2

RECORD	CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD	VARS
	PGM	,D1
	PDESC	,A15
	STG	,D3
	ENG	,D3
	SV_STYLE	,D1
	SV_CAT		,D1
	SV_TYPE		,D1
	SV_GAUGE	,D3
	I	,D5
	J	,D5
	SELECT	,D1
	OPNOK	,D1
	ENTRY	,A30
	INXCTL	,D1
	WHATNO	,D2
	CNGCTL	,D1
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	DELETE	,D1,3
	LOKCTL	,D1
	SWITCH	,D1
	V	,D1

PROC
	XCALL TERID (V)
	V = 1

;-
	XCALL OUTPT (1,1,2,'DUCT PRICING TABLE',1)
	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF

MENU,
	XCALL OUTPT (1,1,2,'DUCT PRICING TABLE',1)
	XCALL OUTPT (3,9,0,'PLEASE SELECT APPLICATION',1)
	XCALL OUTPT (5,15,0,'1. TABLE MAINTENANCE',1)
	XCALL OUTPT (6,15,0,'2. PRINT TABLE',1)
MINPUT,
	XCALL INPUT (3,36,1,1,'#E',ENTRY,INXCTL,1)
	GOTO (MINPUT,ENDOFF), INXCTL
	PGM = ENTRY(1,1)
	GOTO (DISPLA,PRINT_TABLE),PGM
	GOTO MINPUT

DISPLA,
	CLEAR CNGCTL
	XCALL OUTPT (1,1,2,'DUCT PRICING TABLE',1)
	XCALL OUTPT ( 4,4,0,'1. TYPE',1)
	XCALL OUTPT ( 6,4,0,'2. STYLE',1)
	XCALL OUTPT ( 8,4,0,'3. CAT',1)
	XCALL OUTPT (10,4,0,'4. GAUGE',1)
	XCALL OUTPT (12,4,0,'5. PRICE',1)
	XCALL OUTPT (14,4,0,'   CURRENT PRICE:',1)

DP_TYPE,
	CTL = '04,13,01,00,#E'
	FOR I FROM 1 THRU 7 XCALL OUTPT (ROW+I-1,65,0,DTYPE(I),V)
	CALL INPUT

	GOTO (DISPLA,ENDOFF),INXCTL
	K_TYPE = ENTRY(1,1)
	IF (K_TYPE .EQ. 0)
	  BEGIN
	  XCALL IOS (CHN182,COPTBL,READ,LOKCTL)	;READ NEXT
	  IF (LOKCTL .EQ. 0 .AND. TBLCOD .EQ. 'DP')
		BEGIN
		SELECT = 2		;EXISTING RECORD
		K_STYLE = DP_STYLE
		K_CAT = DP_CAT
		K_TYPE = DP_TYPE
		K_GAUGE = DP_GAUGE
		CALL DSPREC
		GOTO ANYCNG
		END
	  END
	IF (K_TYPE .EQ. 0) K_TYPE = SV_TYPE
	IF (K_TYPE .EQ. 0)
		BEGIN
		K_TYPE = 1
		XCALL OUTPT (6,13,0,'1',1)
		END
	SV_TYPE = K_TYPE
	FOR I FROM 1 THRU 7 XCALL OUTPT (ROW+I-1,65,1,'\',V)
	CLEAR ENTRY
	ENTRY(1,1) = K_TYPE,	'X'
	ENTRY(5,19) = DTYPE(K_TYPE)
	CLEAR ENTRY(5,7)
	XCALL OUTPT (ROW,13,0,ENTRY,1)
	GOTO (ANYCNG),CNGCTL

DP_STYLE,
	CTL = '06,13,01,00,# '
;;;	FOR I FROM 1 THRU 6	XCALL OUTPT (ROW+I-1,65,0,DSTY(I),V)
	FOR I FROM 1 THRU 7	XCALL OUTPT (ROW+I-1,65,0,DSTY(I),V)
	CALL INPUT
	GOTO (DISPLA),INXCTL
	K_STYLE = ENTRY(1,1)
	IF (K_STYLE .EQ. 0) K_STYLE = SV_STYLE
	IF (K_STYLE .EQ. 0)
		BEGIN
		K_STYLE = 1
		XCALL OUTPT (6,13,0,'1',1)
		END

;;;	IF (K_STYLE.LT.1.OR.K_STYLE.GT.6) GOTO DP_STYLE
	IF (K_STYLE.LT.1.OR.K_STYLE.GT.7) GOTO DP_STYLE
	SV_STYLE = K_STYLE
	CLEAR ENTRY
	ENTRY(1,1) = K_STYLE,'X'
	ENTRY (5,19) = DSTY(K_STYLE)
	CLEAR ENTRY(5,7)
;;;	FOR I FROM 1 THRU 6 XCALL OUTPT (ROW+I-1,65,1,'\',V)
	FOR I FROM 1 THRU 7 XCALL OUTPT (ROW+I-1,65,1,'\',V)
	XCALL OUTPT (ROW,13,0,ENTRY,1)

	GOTO (ANYCNG),CNGCTL

DP_CAT,
	CTL = '08,13,01,00,# '
	FOR I FROM 1 THRU 5 XCALL OUTPT (ROW+I-1,65,0,DCAT(I),V)
	CALL INPUT
	GOTO (DISPLA), INXCTL
	K_CAT = ENTRY(1,1)
	IF (K_CAT.EQ.0)K_CAT = SV_CAT
	IF (K_CAT.EQ.0)K_CAT = 1
	IF (K_CAT.LT.1.OR.K_CAT.GT.5) GOTO DP_CAT
	SV_CAT = K_CAT
	CLEAR ENTRY
	ENTRY(1,1) = K_CAT,'X'
	ENTRY (5,19) = DCAT(K_CAT)
	FOR I FROM 1 THRU 5 XCALL OUTPT (ROW+I-1,65,1,'\',V)
	CLEAR ENTRY(5,7)
	XCALL OUTPT (ROW,13,0,ENTRY,1)

	GOTO (ANYCNG),CNGCTL
DP_GAUGE,
	CTL = '10,13,03,00,#E'
	CALL INPUT
	GOTO (DISPLA,ENDOFF),INXCTL
	K_GAUGE = ENTRY(1,3)
	IF (K_GAUGE .EQ. 0) K_GAUGE = SV_GAUGE

	IF (K_GAUGE.NE.16 .AND.
&	    K_GAUGE.NE.18 .AND.
&	    K_GAUGE.NE.20 .AND.
&	    K_GAUGE.NE.22 .AND.
&	    K_GAUGE.NE.24 .AND.
&	    K_GAUGE.NE.26) GOTO DP_GAUGE

	SV_GAUGE = K_GAUGE
	K_CODE = 'DP'
	XCALL ISIO (CHN182,COPTBL,DPKEY,READ,LOKCTL)
	IF (LOKCTL .EQ. 0)
	THEN	BEGIN
		SELECT = 2		;EXISTING RECORD
		K_GAUGE = DP_GAUGE
		K_TYPE = DP_TYPE
		K_CAT = DP_CAT
		K_STYLE = DP_STYLE
		CALL DSPREC
		GOTO ANYCNG
		END
	ELSE	BEGIN
		SELECT = 1
		END
	GOTO (ANYCNG),CNGCTL

DP_PRICE,
	CTL = '12,13,08,00,# '
	CALL INPUT
	GOTO (DISPLA),INXCTL
	DP_PRICE = ENTRY(1,8)
	ENTRY(1,10) = DP_PRICE,	'ZZ,ZZX.XXX' [LEFT]
	XCALL OUTPT (ROW,13,0,ENTRY(1,9),1)
	GOTO (ANYCNG),CNGCTL
ANYCNG,
	XCALL ANYCN(CNGCTL,WHATNO)
	GOTO (PROCES,CNGBR),CNGCTL + 1
CNGBR,
	CASE SELECT OF
	BEGINCASE
	1:	GOTO (DP_STYLE,DP_CAT,DP_TYPE,DP_GAUGE,DP_PRICE),WHATNO
	2:	GOTO (ANYCNG,ANYCNG,ANYCNG,ANYCNG,DP_PRICE),WHATNO
	ENDCASE

	GOTO ANYCNG
PROCES,
	TBLCOD = 'DP'	
	DP_TYPE = K_TYPE
	DP_STYLE = K_STYLE
	DP_CAT = K_CAT
	DP_GAUGE = K_GAUGE

	CASE SELECT OF
	BEGINCASE
	1:	XCALL ISIO (CHN182,COPTBL,TBL_KEY,STORE,LOKCTL)
	2:	XCALL ISIO (CHN182,COPTBL,TBL_KEY,WRITE,LOKCTL)
	3:	BEGIN
		XCALL ISIO (CHN182,COPTBL,TBL_KEY,DELETE,LOKCTL)
		XCALL MESAG ('RECORD DELETED !',1)
		END
	ENDCASE
	GOTO DISPLA

DSPREC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR ENTRY
	ENTRY(1,1) = DP_TYPE,	'X'
	ENTRY(5,19) = DTYPE(DP_TYPE)
	CLEAR ENTRY(5,7)
	XCALL OUTPT (4,13,0,ENTRY,1)

	CLEAR ENTRY
	ENTRY(1,1) = DP_STYLE,'X'
	ENTRY (5,19) = DSTY(DP_STYLE)
	CLEAR ENTRY(5,7)
	XCALL OUTPT (6,13,0,ENTRY,1)
	
	CLEAR ENTRY
	ENTRY(1,1) = DP_CAT,'X'
	ENTRY (5,19) = DCAT(DP_CAT)
	CLEAR ENTRY(5,7)
	XCALL OUTPT (8,13,0,ENTRY,1)

	CLEAR ENTRY
	ENTRY(1,3) = DP_GAUGE,	'ZZX' [LEFT]
	XCALL OUTPT (10,13,0,ENTRY(1,3),1)

	CLEAR ENTRY
	ENTRY(1,10) = DP_PRICE,	'ZZ,ZZX.XXX' [LEFT]
	XCALL OUTPT (12,13,0,ENTRY(1,10),1)
	XCALL OUTPT (14,23,0,ENTRY(1,10),1)

	RETURN
;--------------------------------------------------------

INPUT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL INPUT(ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	RETURN
;--------------------------------------------------------

ENDOFF,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CALL CLOSE
	XCALL PGCHN ('CP:ducMNU',1)
;------------------------------------

;===================================================================
PRINT_TABLE,
;===================================================================
	LINCNT = 66
	PGCNT  = 0
;-
	CLEAR PRNTON
PDISP,
	CLEAR CNGCTL
	XCALL OUTPT (1,1,2,'PRINT DUCT PRICE TABLE',1)
	XCALL OUTPT (4,4,0,'1. START GAUGE:',1)
	XCALL OUTPT (6,4,0,'2. END   GAUGE:',1)
STG,
	XCALL INPUT (4,21,03,00,'#E',ENTRY,INXCTL,1)
	GOTO (PDISP,PDONE),INXCTL
	STG = ENTRY(1,3)
	IF (STG .EQ. 0)
		BEGIN
		ENG = 999
		XCALL OUTPT (4,21,1,'ALL',1)
		XCALL OUTPT (6,21,1,' ',1)
		GOTO P_ANY
		END
	GOTO (P_ANY),CNGCTL
ENG,
	XCALL INPUT (6,21,03,00,'#E',ENTRY,INXCTL,1)
	GOTO (PDISP,PDONE),INXCTL
	ENG = ENTRY(1,3)
	IF (ENG .EQ. 0)
		BEGIN
		ENG = STG
		ENTRY(1,3) = ENG,	'ZZX' [LEFT]
		XCALL OUTPT (6,21,1,ENTRY(1,3),1)
		END
P_ANY,
	XCALL ANYCN (CNGCTL,WHATNO)
	GOTO (P_PRINT,P_CNGBR),CNGCTL+1
P_CNGBR,
	GOTO (STG,ENG),WHATNO
	GOTO P_ANY
P_PRINT,
	CLEAR DPKEY
	K_CODE = 'DP'

	FIND (1,COPTBL,DPKEY) [ERR=LOOP]
LOOP,		
	XCALL IOS (1,COPTBL,READ,LOKCTL)
	IF (LOKCTL .NE. 0) GOTO EOF
	IF (TBLCOD .NE. 'DP') GOTO EOF
	IF (DP_GAUGE.LT.STG .OR. DP_GAUGE.GT.ENG) GOTO LOOP

	PLINE (3,3) = DP_TYPE,	'X'
	IF (DP_TYPE .LE. 7)
	THEN	BEGIN
		PDESC = DTYPE(DP_TYPE)
		PLINE (5,19) = PDESC(3,15)
		END
	ELSE	PLINE (5,19) = '*OUT OF RANGE*'

	PLINE (22,22) = DP_STYLE,	'X'
	IF (DP_STYLE .LE. 7)
	THEN	BEGIN
		PDESC = DSTY(DP_STYLE)
		PLINE (24,38) = PDESC(3,15)
		END
	ELSE	PLINE (24,38) = '*OUT OF RANGE*'

	PLINE (41,41) = DP_CAT,	'X'
	IF (DP_CAT .LE. 5)
	THEN	BEGIN
		PDESC = DCAT(DP_CAT)
		PLINE (43,57) = PDESC(3,15)
		END
	ELSE	PLINE (43,57) = '*OUT OF RANGE*'

	PLINE (60,62) = DP_GAUGE,	'ZXX'
	PLINE (66,74) = DP_PRICE,	'Z,ZZX.XXX'
	CALL PRINT
	GOTO LOOP
;  TYPE               STYLE              CAT              GAUGE       PRICE
;  X AAAAAAAAAAAAAAA  X AAAAAAAAAAAAAAA  X AAAAAAAAAAAAAAA  ZZX   ZZ,ZZX.XX
;123456789012345678901234567890123456789012345678901234567890123456789012345678
;         1         2         3         4         5         6         7        

;-

EOF,
	IF (PRNTON.EQ.1)  XCALL LPOFF(LPSW,SPLFIL,PGCNT)
	PRNTON  = 0

PDONE,
	GOTO MENU

PRINT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (PRNTON .EQ. 0) CALL PRNTON
	XCALL LPOUT(LINCNT,PGCNT,PLINE,TITLE,HD1,HD,HD
&		,LG,LG,LG,0,080,PRTCTL,0,LPSW,RPTNUM,PRTTYP)
	RETURN
;-------------------------------------------------------------
PRNTON,
	SPLFIL (5,6) = 'EF'
	LPSW = 1		;PRINT,SPOOL, OR DISPLAY
	XCALL LPON (LPSW,SPLFIL)
	IF (LPSW.EQ.0) GOTO PDONE
	LPARG = 2
	IF (LPSW.EQ.2) LPARG = 4
	XCALL WATE (LPARG,V)
	PRNTON = 1
	RETURN
;-------------------------------------------------------------

;===================================================================
OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK

	SWITCH = 5
	XCALL FILES (1,'SU',182,SWITCH)		;182 - COPTBL
	IF (SWITCH .EQ. 9) RETURN
	CHN182 = 1
	OPNOK = 1
	RETURN
;------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (CHN182) CLOSE CHN182
	RETURN
;------------------------------------

