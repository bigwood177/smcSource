;PRTSMT.CP
;
;
;		PRODUCT STRUCTURE FILE MAINTENANCE
;
;
	.include 'wnd:windows.def'

RECORD PRDSTR
	.INCLUDE 'DEF:RD092A.DEF'

RECORD ITMMAS		
	.INCLUDE 'DEF:RD041A.def'
RECORD	ITMKEY
	.INCLUDE 'DEF:RD041K.DEF'

RECORD DUMINV		
	.INCLUDE 'DEF:RD041B.def'

RECORD	COPTBL
	.INCLUDE 'DEF:RD182A.DEF'

RECORD	POP
	.INCLUDE 'DEF:POP1.DEF'

RECORD	FKEYS
	.INCLUDE 'DEF:FUNKEY.DEF'

RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD	CHANNEL
	CHN092	,D2
	CHN041	,D2
	CHN182	,D2


RECORD	VDAMPR
	DAMP		,D2	;DAMPER DIMENSIONS
	FL	,D2	;
	MAXFLEN	,D2
	BAD_DIGIT	,D1
	PARTNO	,A15
	PFF	,A15

RECORD	WVARS
	W_ID	,D4
	WND_1	,D4
	WND_2	,D4
	WN_TNMBR	,D4
	WN_NAME		,A6,	'IMFMNT'
	W2_NAME		,A6

RECORD	KEY_DSP
	KD1	,A3
		,A1
	KD2	,A3
		,A1
	KD3	,A5

RECORD	VARS
	A2		,A2
	A8		,A8
	A12		,A12
	PROW		,D2
	PARENT		,A15	;PARENT ITEM
	PR_F1		,A3
	PR_F2		,A3
	PR_F3		,A5
	PR_SEQ		,D2
	DS		,D4
	DI		,D4
	I		,D6
	IS_DAMPER	,D1
	D_ITEM		,A15
	IN_TABLE	,D1	;SSQ 9-10-03
	KEY_FOUND	,D1
	MM_CODE	,D5
	MM_DES1	,A12		;SHORT DESC F1
	MM_DES2	,A12		;SHORT DESC F2
	MM_DES3	,A12		;SHORT DESC F3
	F_KEY	,D3
	MODE	,A14
	DECMAL	,D18
	KEY	,A15
	KITMNO	,A15
	YESNO	,2A1,	'Y','N'
	JUSTIF	,D1

	PGM	,D2
	OPNOK	,D1
	OPTION	,D1
	ENTRY	,A31
	INXCTL  ,D1
	CNGCTL	,D1
	MSGCTL	,D1
	WHATNO	,D2
	SELECT	,D1
	ADDCNT	,D5
	KEY1	,A20
	BSEND	,D5
	BSMID	,D5
	FULL	,D1
	PSEND	,D5
	PSMID	,D5
	PSRCTL	,D1
	CSMID	,D5
	MAXPRD	,D5
	MAXREC	,D5
	OPENED	,D1
	SRCCTL	,D1
	DEFALT	,A2
	LOCTNS	,D2
	LOCCTR	,D2
	DELCTR	,D3
	SWITCH	,D1,	1
	SAVREC	,D5
	TIPSIS	,D1
	V	,D1
	READ	,D1,	0			;IO READ FLAG FOR I-O
	WRITE	,D1,	1			;IO WRITE
	STORE	,D1,	2
	DELETE	,D1,	3
	LOKCTL	,D1				;RECORD-LOCKED INDICATOR
;
PROC 
	XCALL TERID (V)
	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF

	CALL INIT_WINDOW
MENU,
	XCALL W_DISP (W_ID, WD_CLEAR)
	XCALL W_DISP (W_ID, WD_POS, 3,9,'PLEASE SELECT APPLICATION')
	XCALL W_DISP (W_ID, WD_POS, 5,15,'1. STRUCTURE MAINTENANCE')
	XCALL W_DISP (W_ID, WD_POS, 6,15,'2. PRINT')
MINPUT,
	XCALL WINPT (W_ID, 3,36,1,1,'#E',ENTRY,INXCTL)
	GOTO (MINPUT,ENDOFF), INXCTL
	PGM = ENTRY(1,1)
	GOTO (DISPLA,LIST),PGM
	GOTO MINPUT

DISPLA,
	CLEAR PRDSTR, CNGCTL

DISPL2,
	XCALL W_DISP (W_ID, WD_CLEAR)
	XCALL W_DISP (W_ID, WD_POS, 4,2,'1. PARENT ITEM #')
	XCALL W_DISP (W_ID, WD_POS, 6,2,'   DESCRIPTION')
	XCALL W_DISP (W_ID, WD_POS, 8,2,'2. SEQNO')
	XCALL W_DISP (W_ID, WD_POS,10,2,'3. QTY PER')

	XCALL W_DISP (W_ID, WD_POS,12,2,'4. COMPONENT ITEM #')
	XCALL W_DISP (W_ID, WD_POS,14,2,'   DESCRIPTION')
	XCALL W_DISP (W_ID, WD_POS,16,2,'5. ATTACH OP')

PITMNO,
	PROW = 4
	CALL POP_KEY
	GO TO (DISPLA,MENU,SCROLL), INXCTL
	IF (LOKCTL .NE. 0)
		BEGIN
		XCALL WNMSG(W_ID, 24, 'ITEM NOT FOUND',1)
		GOTO PITMNO
		END
NEWOK,
	XCALL W_DISP (W_ID, WD_POS, 4,23,KITMNO)
	CLEAR KEY_DSP
	KD1 = IF1
	KD2 = IF2
	KD3 = IF3
	XCALL W_DISP (W_ID, WD_POS, 4,40,KEY_DSP)
	XCALL W_DISP (W_ID, WD_POS, 6,23,DESCR)
	
	PITMNO = KITMNO
	P_F1 = IF1
	P_F2 = IF2
	P_F3 = IF3

SEQNUM,
	CTL = '08,15,02,00,# '
	CALL INPUT
	GOTO (DISPLA), INXCTL
	SEQNUM = ENTRY(1,2)

	PARENT = PITMNO	;PARENT ITEM
	PR_F1 = P_F1
	PR_F2 = P_F2
	PR_F3 = P_F3
	PR_SEQ = SEQNUM

	READ (CHN092, PRDSTR, PS_KEY) [ERR=NO_STR]
	GOTO STR_EXIST
NO_STR,
	SELECT = 1

	PITMNO = PARENT 	;PARENT ITEM
	P_F1 = PR_F1 
	P_F2 = PR_F2 
	P_F3 = PR_F3 
	SEQNUM = PR_SEQ 

	GOTO (ANYCNG), CNGCTL

QTYPER,
	CTL = '10,15,07,00,# '
	CALL INPUT
	GOTO (DISPLA), INXCTL
	QTYPER = ENTRY(1,7)
	A8 = QTYPER,	'ZZX.XXXX' [LEFT]
	XCALL W_DISP (W_ID, WD_POS, ROW, COL, A8)
	GOTO (ANYCNG), CNGCTL

CITMNO,
	PROW = 12
	CALL POP_KEY
	GOTO (DISPLA),INXCTL
	IF (LOKCTL .NE. 0)
		BEGIN
		XCALL WNMSG(W_ID, 24, 'ITEM NOT FOUND',1)
		GOTO CITMNO
		END

	XCALL W_DISP (W_ID, WD_POS, 12,23,KITMNO)
	CLEAR KEY_DSP
	KD1 = IF1
	KD2 = IF2
	KD3 = IF3
	XCALL W_DISP (W_ID, WD_POS, 12,40,KEY_DSP)
	XCALL W_DISP (W_ID, WD_POS, 14,23,DESCR)
	
	CITMNO = ITEMNO
	C_F1 = IF1
	C_F2 = IF2
	C_F3 = IF3

ATCHOP,
	CTL = '16,15,02,00,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	ATCHOP = ENTRY (1,2)

	GOTO ANYCNG

CNGBR,
	IF (SELECT.EQ.2.AND.WHATNO.EQ.1) GO TO BADCNG
	GO TO (PITMNO,SEQNUM,QTYPER,CITMNO,ATCHOP), WHATNO

	GO TO BADCNG

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
STR_EXIST,
	SELECT = 2		;ALREADY EXISTS

	A8 = QTYPER,	'ZZX.XXXX' [LEFT]
	XCALL W_DISP (W_ID, WD_POS, 10, 15, A8)

	CLEAR ITMKEY
	K_ITEM = CITMNO
	K_F1 = C_F1
	K_F2 = C_F2
	K_F3 = C_F3
	READ (CHN041, ITMMAS, ITMKEY, KEYNUM:1) [ERR=P_BAD_KEY]	;KRF = 2

	XCALL W_DISP (W_ID, WD_POS, 12,23,KITMNO)
	CLEAR KEY_DSP
	KD1 = IF1
	KD2 = IF2
	KD3 = IF3
	XCALL W_DISP (W_ID, WD_POS, 12,40,KEY_DSP)
	XCALL W_DISP (W_ID, WD_POS, 14,23,DESCR)

	A2 = ATCHOP,	'XX'
	XCALL W_DISP (W_ID, WD_POS, 16,15,A2)
	GOTO ANYCNG



;==============================================================
;==================== INTERNAL ROUTINES =======================

POP_KEY,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; Find by item # & f_keys
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CLEAR MM_DES1, MM_DES2, MM_DES3, CNGCTL
	XCALL W_PROC(WP_PLACE, WND_2, PROW, 4)
P_DISPLA,
	CLEAR CNGCTL
	XCALL W_DISP(WND_2, WD_CLEAR)
	XCALL W_DISP(WND_2, WD_POS, 1,1, '1. ITEM #')
	XCALL W_DISP(WND_2, WD_POS, 2,1, '2. F1_KEY')
	XCALL W_DISP(WND_2, WD_POS, 3,1, '3. F2_KEY')
	XCALL W_DISP(WND_2, WD_POS, 4,1, '4. F3_KEY')
P_ITEM,
	XCALL WINPT (WND_2,1,13, 15, 00, 'AE', ENTRY, INXCTL)
	GOTO (P_DISPLA, P_ENDOFF),INXCTL
	K_ITEM = ENTRY(1,15)
	GOTO (P_ANY),CNGCTL
P_F1,
	XCALL WINPT (WND_2,2,13, 3, 00, '# ', ENTRY, INXCTL)
	GOTO (P_DISPLA),INXCTL
	MM_CODE = ENTRY(1,3)
	K_F1 = MM_CODE,	'XXX'
	CALL MEMO_KEY
	IF (KEY_FOUND) 
	THEN	BEGIN
		XCALL W_DISP (WND_2, WD_POS, 2,20, MM_SHORT)
		MM_DES1 = MM_SHORT
		END
	ELSE	CLEAR MM_DES1
	GOTO (P_ANY),CNGCTL
P_F2,
	XCALL WINPT (WND_2,3,13, 3, 00, '# ', ENTRY, INXCTL)
	GOTO (P_DISPLA),INXCTL
	MM_CODE = ENTRY(1,3)
	K_F2 = MM_CODE,	'XXX'
	CALL MEMO_KEY
	IF (KEY_FOUND) 
	THEN	BEGIN
		XCALL W_DISP (WND_2, WD_POS, 3,20, MM_SHORT)
		MM_DES2 = MM_SHORT
		END
	ELSE	CLEAR MM_DES2

	GOTO (P_ANY),CNGCTL
P_F3,
	XCALL WINPT (WND_2,4,13, 5, 00, '# ', ENTRY, INXCTL)
	GOTO (P_DISPLA),INXCTL
	MM_CODE = ENTRY(1,5)
	K_F3 = MM_CODE,	'XXXXX'
	CALL MEMO_KEY
	IF (KEY_FOUND) 
	THEN	BEGIN
		XCALL W_DISP (WND_2, WD_POS, 4,20, MM_SHORT)
		MM_DES3 = MM_SHORT
		END
	ELSE	CLEAR MM_DES3

	GOTO (P_ANY),CNGCTL
P_ANY,	
	XCALL WANCN (WND_2, 6, CNGCTL, WHATNO)
	GOTO (P_PROCES, P_CNGBR),CNGCTL+1
P_CNGBR,
	GOTO (P_ITEM, P_F1, P_F2, P_F3),WHATNO
	GOTO P_ANY


P_PROCES,
	KITMNO = K_ITEM
	CLEAR K_MAT
	XCALL W_PROC (WP_REMOVE, WND_2)
	GOTO EXIT_KEY

P_ENDOFF,
	LOKCTL = 1			;ABORT
	XCALL W_PROC (WP_REMOVE, WND_2)
	RETURN
;------------------------------------------------------------

MEMO_KEY,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR TBL_KEY
	TBLCOD = 'MM'
	MM_KEY = MM_CODE
	READ (CHN182,COPTBL,TBL_KEY)[ERR=NOT_KEY]
	KEY_FOUND = 1		
	RETURN
NOT_KEY,
;;;	XCALL WNMSG (WND_2, 6, 'MEMO NOT FOUND',1)
	KEY_FOUND = 0
	RETURN
;-------------------------------------------------------------



EXIT_KEY,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CLEAR CNGCTL
	LOKCTL = 0
	READ (CHN041, ITMMAS, ITMKEY, KEYNUM:1) [ERR=P_BAD_KEY]	;KRF = 2
	GOTO P_KEY_OK

P_BAD_KEY,
	LOKCTL = 2
P_KEY_OK,
	RETURN
;--------------------------------------------------------------

FIND_DAMPER,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CLEAR BAD_DIGIT, IS_DAMPER

	D_ITEM = K_ITEM		;SAVE AS ENTERED
	PARTNO = K_ITEM


	MAXFLEN = %TRIM(PARTNO)
	FOR I FROM 1 THRU 3
		BEGIN
		XCALL INSTR(1, PARTNO, "*", FL)
		IF (.NOT. FL) 		EXITLOOP
		PARTNO(FL, MAXFLEN) = PARTNO(FL+1, MAXFLEN)
		CALL D_SIZE
		IF (BAD_DIGIT)
			BEGIN
			XCALL OLMSG(WND_1,23,'damper configuration',2)
			RETURN
			END
		IS_DAMPER = 1
		END

	K_ITEM = PARTNO
	RETURN

D_SIZE,	;---------------------------------------
	CLEAR BAD_DIGIT

	ONERROR BADDIG
	DAMP = PARTNO(FL, FL+1)
	OFFERROR

	RETURN
BADDIG,
	BAD_DIGIT = 1
	RETURN
;------------------------------------------------------------
;==============================================================


INPUT,
	XCALL WINPT (W_ID, ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL, F_KEY)
	RETURN
BADCNG,
	XCALL WNMSG (W_ID, 24, 'INVALID SELECTION',1)
ANYCNG,
;;;	CNGCTL = 6
;;;	XCALL ANYCN (CNGCTL,WHATNO)
	XCALL W_DISP (W_ID, WD_POS, 24, 1, WD_CLR, WDC_LIN,
&		'FIELD # TO CHANGE           <TAB> = DELETE')

	XCALL WINPT (W_ID, 24,20,02,00,'#T',ENTRY,INXCTL)
	IF (INXCTL .EQ. 3)
		BEGIN
		XCALL W_DISP(W_ID, WD_POS, 24,1,WD_CLR, WDC_LIN,
&			'DELETE, ARE YOU SURE?')

		XCALL WINPT (W_ID, 24,24,01,01,'YN',ENTRY,INXCTL)
		GOTO (ANYCNG),INXCTL-1
		XCALL ISIO (CHN041,ITMMAS,ITMKEY,DELETE,LOKCTL)
		GOTO DISPLA
		END
	WHATNO = ENTRY(1,2)
	IF (WHATNO .EQ. 0)
	THEN	CLEAR CNGCTL
	ELSE	CNGCTL = 1

	GO TO (PROCES,PROCES,CNGBR), CNGCTL+2

SCROLL,
	GO TO (SCRADD,SCRCNG,SCRCNG),SELECT
SCRADD,
	XCALL WNMSG (W_ID, 24, 'SCROLLING NOT ALLOWED IN ADD MODE',1)
	GO TO PITMNO
SCRCNG,
	XCALL IOS (CHN041, ITMMAS, READ, LOKCTL)
	IF (LOKCTL) 
		BEGIN
		INXCTL = 2
		GO TO DISPLA
		END

	XCALL W_DISP (W_ID, WD_POS, 4,15, ITEMNO)
	KITMNO = ITEMNO

	GO TO NEWOK

NOMORE,
	XCALL WNMSG (W_ID, 24, 'END OF FILE',1)
	GO TO PITMNO


;--------------------

PROCES,
	GO TO (ADD,CHANGE,DELETE), SELECT
ADD,
	STORE (CHN092, PRDSTR, PS_KEY) 

;;;	XCALL ISIO (CHN092, PRDSTR, PS_KEY, STORE, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO BADSTR	
	GOTO DISPLA

CHANGE,
	LOKCTL = 1
	XCALL ISIO (CHN092, PRDSTR, PS_KEY, WRITE, LOKCTL)
	GOTO DISPLA

C_BAD_KEY,
	XCALL WNMSG (W_ID, 24, 'DID NOT UPDATE',1)
	GOTO DISPLA

DELETE,
	LOKCTL = 1
	XCALL ISIO (CHN092, PRDSTR, PS_KEY, DELETE, LOKCTL)
	XCALL WNMSG (W_ID, 24, 'ITEM DELETED',2)
	GOTO DISPLA

BADSTR,
	XCALL WNMSG (W_ID, 24, 'STRUCTURE ALREADY ON FILE',1)
	GO TO DISPLA

ENDOFF,
	CALL CLOSE
	XCALL PGCHN ('ITM:ITM',1)
;;;	XCALL PGCHN ('CP:IMMENU',1)
LIST,
	CALL CLOSE
	XCALL PGCHN ('ITM:STRPRT',1)
	XCALL PGCHN ('ITM:ITM',1)

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK

	SWITCH = 5

	XCALL FILES (2,'SU',92,SWITCH)		;FILE # 92 -- PRDSTR FILE
	IF (SWITCH.EQ.9) RETURN
	CHN092 = 2

	XCALL FILES (1,'SU',41,SWITCH)		;FILE # 41 -- ITMMAS FILE
	IF (SWITCH.EQ.9) RETURN
	CHN041 = 1
	
	SWITCH = 5
	XCALL FILES (5,'SI',182,SWITCH)		;FILE # 182 -- COPTBL
	IF (SWITCH .EQ. 9) RETURN
	CHN182 = 5
	
NOTOPN,
	OPNOK = 1
	RETURN
;----------------------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (CHN092) CLOSE CHN092
	IF (CHN041) CLOSE CHN041
	IF (CHN182) CLOSE CHN182

	RETURN
;----------------------------------------------------

INIT_WINDOW,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; SET UP SCREEN 1 WINDOW
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL U_START("LIB:SMC_WND",,,,,,,100)
	XCALL TNMBR (WN_TNMBR)
	XCALL W_PROC(WP_FIND,WND_1,WN_NAME)
	IF (.NOT. WND_1)
		BEGIN
		XCALL W_PROC(WP_CREATE,WND_1,WN_NAME,24,78)
		END
	XCALL W_BRDR(WND_1,WB_TITLE,'PRODUCT STRUCTURE',
&			WB_TPOS,WBT_TOP,WBT_CENTER)
	XCALL W_PROC(WP_PLACE,WND_1,1,1)	
	XCALL W_DISP(WND_1,WD_CLEAR)
	XCALL W_UPDT
	W_ID = WND_1
	xcall u_logwnd(wnd_1)


	W2_NAME = 'FKEY'
	XCALL W_PROC(WP_FIND, WND_2, W2_NAME)
	IF (.NOT. WND_2) XCALL W_PROC(WP_CREATE,WND_2,W2_NAME,6,41)
	XCALL W_BRDR(WND_2,WB_TITLE,'Item Keys',
&		WB_TPOS,WBT_TOP,WBT_CENTER)
		
	RETURN

END

