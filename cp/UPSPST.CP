;UPSPST.DBL
;
RECORD	BUFFER
		,A1024

RECORD	UPSDATA
	.INCLUDE 'DEF:UPSDAT.DEF'

RECORD	ORDHDR
	.INCLUDE 'DEF:RD044A.DEF'

RECORD	CONFRM
	.INCLUDE 'DEF:RD158A.DEF'

RECORD	WRKFIL
		,A*,	'WRK:\UPSLOG\'
	W_DATE	,A11	;DD-MMM-CCYY
		,A4,	'.UPS'



RECORD	CHANNEL
	CHN044	,D2		;ORDHDR
	CHN158	,D2		;CONFRM
	CHN184	,D2		;SLHHDR
	CHNERR	,D2		;CONFRM.ERR
	CHNUPS	,D2		;UPSDAT
	CHNIN	,D2		;INFILE

RECORD	VARS
	BF	,D1			;ALPCD ERR FLAG
	SEQNO	,D5
	TODAY	,D8		;CCYYMMDD
	SAVTRK	,A20
	CURTRK	,A20
	SAVORD	,D6
	OPNOK	,D1
	ALPHA	,A18
	ALP2	,A18
	DECML	,D18
	DP	,D2
	XDATE	,A9	;DD-MMM-YY
	INFILE	,A*,	'WRK:UPS_CSV_EXPORT.CSV'
	XTIME	,D6
	LN	,D4
	START	,D4,	1
	DIM	,D2,	50
	POS	,50D4
	LEN	,50D4
	TYPE	,50D2
	ITEMS	,D2
	END	,D4
	IX	,D2
	NUM	,D2
	I1	,D4
	I2	,D4
	LOKCTL	,D1
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	SWITCH	,D1
	V	,D1

.PROC
	XCALL TERID (V)
;;;	OPEN (15, I, 'TT:')
	DISPLAY (15, $SCR_CLR(SCREEN), 'UPLOAD UPS DATA')

	ONERROR NO_UPS
	OPEN (1, I, INFILE)
	OFFERROR

	W_DATE = %DATE
	XCALL COPY (INFILE, WRKFIL)
		
	CALL OPENS
	IF (.NOT. OPNOK)
		BEGIN
		XCALL MESAG ("CAN'T OPEN FILES",1)
		GOTO ENDOFF
		END

	XCALL RDAT8(TODAY)
	CLEAR SEQNO
LOOP,
	READS (1, BUFFER, EOF)
	LN = %TRIM(BUFFER)

	CLEAR UPSDATA

	XCALL S_PARSE(BUFFER(1,LN), START, DIM, POS, LEN, TYPE, ITEMS, END)
	NUM = 0
	FOR IX FROM 1 THRU ITEMS
		BEGIN
		I1 = POS(IX)
		I2 = POS(IX) + LEN(IX) - 1
		IF (TYPE(IX) .EQ. 8)
			BEGIN
			INCR NUM		;COUNT COMMAS
			NEXTLOOP
			END

		IF(LEN(IX).LE.0) NEXTLOOP

		USING NUM SELECT
		(00),	CURTRK = BUFFER(I1,I2)
		(01),	TOTWGT = BUFFER(I1,I2)
		(04),	BEGIN
			ALPHA = BUFFER(I1,I2)
			CALL TOTAL_AMOUNT
			END
		(05),	XCALL ALPDC(BUFFER(I1,I2), NPKG, BF)
		(06),	UNAME = BUFFER(I1,I2)
		(08),	UADD1 = BUFFER(I1,I2)
		(09),	UADD2 = BUFFER(I1,I2)
		(10),	UCITY = BUFFER(I1,I2)
		(11),	USTAT = BUFFER(I1,I2)
		(12),	UZIP = BUFFER(I1,I2)
		(13),	TRACK = BUFFER(I1,I2)
		(14),	BEGIN
			IF (BUFFER(I1,I2) .EQ. 'SAMPLE')
			THEN	ORDER = 999999
			ELSE	XCALL ALPDC(BUFFER(I1,I2), ORDER,BF)
			END
		(15),	PKGWGT = BUFFER(I1,I2)
		(16),	VOID = BUFFER(I1,I2)
		ENDUSING
		END

	UDATE = TODAY		;TAG W/ TODAY'S DATE

	IF (CURTRK .NE. SAVTRK) 
	THEN	CALL NEWTRK
	ELSE	IF (ORDER.EQ.0) ORDER = SAVORD

	INCR SEQNO
	USEQ = SEQNO
	STORE (CHNUPS, UPSDATA, UPS_KEY) [ERR=LOOP]

	XCALL ISIO (CHN044, ORDHDR,ORDER, READ, LOKCTL) ;CURRENT ORDER
	IF (LOKCTL .NE. 0) XCALL ISIO (CHN184, ORDHDR, ORDER, READ, LOKCTL)	;HISTORY


	IF (LOKCTL.NE.0) GOTO LOOP
;;;	IF (OCUSCD.NE.'EM' .OR. LOKCTL.NE.0) GOTO LOOP

	USING OCUSCD(1,1) SELECT
	('E'),	NOP
	(),	GOTO LOOP
	ENDUSING

	CLEAR CONFRM

	SP_ORD = ORDER
	SP_SRC = 'U'
	SP_REF = TRACK
	SP_PKG = NPKG
	SP_CONF =
	SP_DT(1,8) = UDATE
	SP_CUST = OCUSNO
	SP_MNBR = OC_NBR

;;;	XCALL ISIO (CHN158, CONFRM, SP_ORD, STORE, LOKCTL)
	XCALL ISIO (CHN158, CONFRM, SP_KEY, STORE, LOKCTL)
	IF (LOKCTL.EQ.0) GOTO LOOP


ERR_CONFRM,
	WRITES (10, CONFRM)	;WRITE RECORD TO ERROR FILE
	GOTO LOOP

NEWTRK,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	SAVTRK = CURTRK
	SAVORD = ORDER
	RETURN
;----------------------------------------------------
	
TOTAL_AMOUNT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR TOTAMT
	DP = %INSTR(1, ALPHA, '.')
	IF (DP .EQ. 0)
	THEN	XCALL ALPDC(ALPHA, TOTAMT,BF)
	ELSE	BEGIN
		ALP2(1,DP-1) = ALPHA(1,DP-1)
		ALP2(DP,18) = ALPHA(DP+1,18)
		XCALL ALPDC(ALP2, TOTAMT,BF)
		END

	RETURN
;-------------------------------------------------
OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CLEAR OPNOK

	SWITCH = 5
	XCALL FILES (4, 'SI', 044, SWITCH)	;ORDHDR
	IF (SWITCH .EQ. 9) RETURN
	CHN044 = 4

	SWITCH = 5
	XCALL FILES (5, 'SI', 184, SWITCH)	;SLHHDR
	IF (SWITCH .EQ. 9) RETURN
	CHN184 = 5

	SWITCH = 5
	XCALL FILES (2, 'SU', 158, SWITCH)	;CONFRM
	IF (SWITCH .EQ. 9) RETURN
	CHN158 = 2

	OPEN (10,O,'SMC:CONFRM.ERR')
	CHNERR = 10

;;;	OPEN (12, SU,'tst:UPSDAT.ISM')
	OPEN (12, SU,'SMC:UPSDAT.ISM')
	CHNUPS = 12

	OPNOK = 1

	RETURN
;-------------------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	IF (CHN044) CLOSE CHN044
	IF (CHN158) CLOSE CHN158
	IF (CHN184) CLOSE CHN184
	IF (CHNERR) CLOSE CHNERR
	IF (CHNUPS) CLOSE CHNUPS

	CLOSE 1

	RETURN
;-------------------------------------------------

EOF,
	CALL CLOSE
	XCALL DELET (INFILE)

	STOP	'CP:UPSEDT'
;;;	STOP	'CP:UPSMNU'

NO_UPS,
	XCALL MESAG ('NO UPS DATA TO UPLOAD',1)
ENDOFF,
	CALL CLOSE
	STOP	'CP:UPSMNU'


.END

;;;.SUBROUTINE	ALPDC
;;;	ALPHA	,A
;;;	DECML	,D
;;;.PROC
;;;
;;;	CLEAR DECML
;;;	ONERROR NOT_NUM
;;;	DECML = ALPHA
;;;NOT_NUM,
;;;	OFFERROR
;;;	RETURN
;;;.END

