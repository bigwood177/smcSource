;  RSTCOM / COP isam
;
;		THIS PROGRAM WILL ZERO ALL QUANTITY ALLOCATED FIELDS IN THE
;		ITEM MASTER FILE, THEN SEQUENTIALLY READ THE ORDER
;		LINE ITEM FILE AND ACCUMULATE NEW QUANTITY ALLOCATED AMOUNTS
;		FOR THE ITEM MASTER FILE.
;
; 1-22-2020 ssq: process fab tickets

.DEFINE	ALLOCATE,	1

RECORD	OCT17
	.INCLUDE 'DEF:RD045O.DEF'

record	filen
	f_name	,a14

RECORD	JOBHDR
	.INCLUDE 'DEF:RD071A.DEF'

RECORD	JOBLIN
	.INCLUDE 'DEF:RD072A.DEF'

RECORD ORDLIN  		
		.INCLUDE 'DEF:RD045A.DEF'
RECORD	ORDHDR
		.INCLUDE 'DEF:RD044A.DEF'
RECORD 	ITMMAS		
		.INCLUDE 'DEF:RD041A.DEF'
RECORD	ITMKEY
		.INCLUDE 'DEF:RD041K.DEF'

RECORD	COPTBL
		.INCLUDE 'DEF:RD182A.DEF'

RECORD	CPMEMO
		.INCLUDE 'DEF:CPMEMO.DEF'

RECORD	I_ERR
	I_ORG	,A15
	I_F1	,D3
		,A1
	I_F2	,D3
		,A1
	I_F3	,D5
		,A1
		,A3,	' / '
	I_NEW	,A15
		,A*,	' NOT IN ITMMAS'

RECORD	DIS
	I	,D6

RECORD	CHANNEL
	CHN182	,D2
	CHNOUT	,D2	;'RSTCOM.DAT'
	CHN041	,D2
	CHN044	,D2
	CHN045	,D2
	CHN071	,D2
	CHN072	,D2
	CHN162	,D3
	CHN163	,D3

RECORD	VARS
	OPNOK	,D1
	litem	,a15
	itmrfa	,a6
	vanrfa	,a6
	ivflag	,d1
	vanflg	,d1

	A15	,A15
	SAVORD	,D6
	DEC	,D18
	XF1	,D3
	XF2	,D3
	XF3	,D5
	PRGNAM	,A9
	V	,D1
	ENTRY	,A15
	SWITCH	,D1
	INXCTL	,D1
	BSEND	,D5
	BSMID	,D5
	KEY	,A15
	SRCCTL	,D1
	MSGCTL	,D1
	RECNO	,D5
	ORDNOA	,A6
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1
PROC
	XCALL TERID (V)
	MSGCTL = 1
	XCALL SNMSG (PRGNAM,MSGCTL)
	IF (MSGCTL.EQ.9) GO TO NOMSG
	GOTO BEGIN
NOMSG,
	PRGNAM = 'CP:SPCFUN'
BEGIN,
	XCALL OUTPT (1,1,2,'RESET QUANTITY ALLOCATED FIELDS IN ITEM MASTER FILE',V)
	XCALL OUTPT (5,5,0,
&	'This program will Zero all QTYCOM fields in the ITMMAS file and reset',V)
	XCALL OUTPT (6,10,0,
&	'those fields per Allocations from Orders in the ORDLIN file',V)
	XCALL OUTPT (7,17,0,'ARE YOU SURE YOU WANT TO RESET THESE FIELDS ?',V)
	XCALL INPUT (7,64,1,1,'YE',ENTRY,INXCTL,V)

	IF (INXCTL.NE.1) XCALL PGCHN('CP:IMMENU',1)

	XCALL WATE (4,V)		;PROCESSING MESSAGE

	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF


	XCALL OUTPT (10,1,0,'PASS 1   ITEM:',V)

	read (1, itmmas, ^first) [err=coppas]
	CLEAR I
PASS1,
	INCR I
	IF (I/100*100 .EQ. I) XCALL OUTPT (1,70,1,DIS,1)
	LOKCTL = 1
	XCALL IOS (1,ITMMAS,READ,LOKCTL)
	IF (DESCR.EQ.']]]DEL') GO TO PASS1	;DELETED RECORD
	IF (LOKCTL .NE. 0) GOTO COPPAS

	QTYCOM =
	LOKCTL = 1
	XCALL ISIO (1,ITMMAS,ITEMNO,WRITE,LOKCTL)
	GO TO PASS1

COPPAS,
	XCALL OUTPT (10,1,1,'PASS 2   CUSTOMER ORDER #:',V)
	CLEAR I
PASS2,
	INCR I
	IF (I/500*500 .EQ. I) XCALL OUTPT (2,70,1,DIS,1)
	LOKCTL = 1
	XCALL IOS (5,ORDLIN,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GOTO JOBPAS
;;;	IF (LOKCTL.EQ.2) GO TO EOF

; any orders in this file should not relieve inventory...
	FIND (7, OCT17, LORDNO) [ERR=O_OK]
	CLEAR LQTYOR
O_OK,
	IF (LORDNO .NE. OORDNO) READ (4, ORDHDR, LORDNO) [ERR=PASS2]

	IF (LLOC.NE.'O')		GOTO PASS2		;8-1-97
	IF (LITMNO.EQ.'???') 		GOTO PASS2
	IF (LITMNO.EQ.'M              ') GOTO PASS2		;8-1-97 SSQ
	IF (LQTYOR.EQ.0) 		GOTO PASS2
	IF (LTYPE.EQ.'M')		GOTO PASS2


	LITEM = LITMNO
;;;	IF (LCFGIM .NE. A15) LITEM = LCFGIM	;use item input if not blank

	USING LITEM SELECT
	('CMGB','CMAB','CMSB'),	KEY = LITEM		;1-18-12 BOXES
	('CR0' thru 'CR9'),	KEY = LITEM(1,4)
	('CM'),			KEY = LITEM(1,3)
	('EDS0' THRU 'EDS9'),	KEY = LITEM(1,9)
	('JEB0' THRU 'JEB9'),	KEY = LITEM(2,15)	;SKIP THE "J"
	('JEF0' THRU 'JEF9'),	KEY = LITEM(2,15)	;SKIP THE "J"
	('JEFI'),		KEY = LITEM(2,3) + LITEM(5,15)
	('EFI'),		KEY = LITEM(1,2) + LITEM(4,15)
	('JJG'),		KEY = LITEM(2,15)	;SKIP THE "J"
	('JTG'),		KEY = LITEM(2,15)	;SKIP THE "J"
	(),			KEY = LITEM
	ENDUSING
;--------------------------------------------------------------------------
; 10-12-09 ssq: xcall gtitm replaces code below:

	xcall gtitm (key, lf1, lf2, lf3, itmrfa, ivflag, vanflg, vanrfa)
	if (ivflag .eq. 0) goto i_err

	read (1, itmmas, rfa:itmrfa) [err=i_err]
I_OK,
	if (stock .ne. 'S') goto pass2
	ORDNOA = LORDNO, 'ZZZZZX'
	QTYCOM = QTYCOM + LQTYOR
	write (1, ITMMAS, ITMKEY) [ERR=I_write]
	GOTO PASS2
I_ERR,
	I_ORG = LITMNO
	I_NEW = KEY
	i_f1 = lf1
	i_f2 = lf2
	i_f3 = lf3
	WRITES (CHNOUT, I_ERR)

;;;	XCALL MESAG (I_ERR,1)
	GOTO PASS2
i_write,
	dec = 0
	goto pass2

JOBPAS,
	CLEAR I

PASS3,
	INCR I
	IF (I/500*500 .EQ. I) XCALL OUTPT (3,70,1,DIS,1)
	LOKCTL = 1
	XCALL IOS (CHN072, JOBLIN, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO EOF
	IF (JLSTS .NE. 'P') GOTO PASS3		;PRINTED, NOT RECV'D

	XCALL XCOM(JLITM, JLIF1, JLIF2, JLIF3, JLQTY, JLRCV, ALLOCATE, CHN162, CHN163, CHN041)
	GOTO PASS3

EOF,
ENDOFF,

	CALL CLOSE 

	XCALL PGCHN('CP:IMMENU',1)

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CLEAR OPNOK

	SWITCH = 5
	XCALL FILES (1,'SU',41,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN041 = 1

	SWITCH = 5
	XCALL FILES (4,'SI',44,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN044 = 44

	SWITCH = 5
	XCALL FILES (5,'SI',45,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN045 = 5

	SWITCH = 5
	XCALL FILES (18,'SI',182,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN182 = 18

	SWITCH = 5
	XCALL FILES (71, 'SI', 071, SWITCH)	;71 - JOBHDR
	IF (SWITCH .EQ. 9) RETURN
	CHN071 = 71

	SWITCH = 5
	XCALL FILES (72, 'SI', 072, SWITCH)	;72 - JOBLIN
	IF (SWITCH .EQ. 9) RETURN
	CHN072 = 72


	SWITCH = 5
	XCALL FILES (62, 'SI', 162, SWITCH)	;;162 - PARENT
	IF (SWITCH .EQ. 9) RETURN
	CHN162 = 62

	SWITCH = 5
	XCALL FILES (63, 'SI', 163, SWITCH)	; 163 - CHILDX
	IF (SWITCH .EQ. 9) RETURN
	CHN163 = 63

	OPEN (19, O, 'SMC:RSTCOM.DAT')
	CHNOUT = 19

	XCALL FFILE (45, F_NAME, SWITCH)
	F_NAME(5,10) = 'PHYDEP'
	F_NAME(14,14) = 'M'
	open (7, si, f_name)

	OPNOK = 1
	RETURN
;---------------------------------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	IF (CHN041) CLOSE CHN041
	IF (CHN044) CLOSE CHN044
	IF (CHN045) CLOSE CHN045
	IF (CHN071) CLOSE CHN071
	IF (CHN072) CLOSE CHN072
	IF (CHN162) CLOSE CHN162
	IF (CHN163) CLOSE CHN163
	CLOSE 7
	CLOSE CHNOUT

	RETURN
;------------------------------------------------------



END
