SUBROUTINE ORDBL
;
;
;		HANDLES ORDER HEADER SCREEN OF BILLS
;
	SAVCOM	,A
	WHLORD	,D
	SKPORD	,D
	DSTFLG	,A
	MLARFG	,A
	INXCTL	,D
;new ---------------
	RUNTOT	,D
	TAXTOT	,D
	TOTWGT	,D
	TOTCST	,D

RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR

RECORD	LINE
	.INCLUDE 'DEF:RD045L.DEF'
RECORD	ORDLIN
	.INCLUDE 'DEF:RD045A.DEF'
RECORD,X
	.INCLUDE 'DEF:RD045D.DEF'

RECORD DUCFIL	; Table of all parameters necessary
	.INCLUDE 'DEF:RD174A.DEF'

RECORD	WRKFIL
		,A4,	'SPL:'
		,A1,	'B'
	WFORD	,A6
		,A4,	'.ISM'


GLOBAL ORDH
RECORD 	ORDHDR	
	.INCLUDE 'DEF:RD044A.DEF'
ENDGLOBAL

GLOBAL DUCK
	.INCLUDE 'DEF:RD175D.DEF'
ENDGLOBAL

GLOBAL PAR	
RECORD PARAM
	.INCLUDE 'DEF:PARAM.DEF'
ENDGLOBAL

GLOBAL CPCHAN
RECORD	CHANNEL
	CHN001	,D2
	CHN002	,D2
	CHN007	,D2
	CHN041	,D2
	CHN042	,D2
	CHN044	,D2
	CHN045	,D2
	CHN054	,D2
	CHN060	,D2
	CHN169	,D2
	CHN170	,D2
	CHN171	,D2
	CHN172	,D2
	CHN174	,D2
	CHN175	,D2
	CHN178	,D2
	CHN182	,D2
ENDGLOBAL

RECORD ARTERM
		.INCLUDE 'DEF:RD170A.DEF'
RECORD ARTCTL,X
		.INCLUDE 'DEF:RD170B.DEF'

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; 9-12-97 ssq: use coptbl:scac code...
RECORD	COPTBL
	.INCLUDE 'DEF:RD182A.DEF'

RECORD	BLHEAD
	.INCLUDE 'DEF:RD178A.DEF'

RECORD SHIPTO
		.INCLUDE 'DEF:RD171A.DEF'
RECORD SHPCTL,X
		.INCLUDE 'DEF:RD171B.DEF'
RECORD CUSMAS  		
		.INCLUDE 'DEF:RD001A.DEF'
RECORD CUSCTL,X	
		.INCLUDE 'DEF:RD001B.DEF'
RECORD CUSIDX  		
		.INCLUDE 'DEF:RD002A.DEF'
RECORD TMPAD3
	TMPCTY	,A15
		,A1
	TMPSTA	,A2
		,A2
	TMPZIP	,A10
RECORD SKEY
	XCUSNO	,D6
	SHPNO	,D4
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2


RECORD	ORDFMT
	OF_ORD	,A6
		,A1,	'.'
	OF_NUM	,D1

RECORD	W2_LINE
	W2_ITEM	,A15
		,A1
	W2_DESC	,A30
		,A1
	W2_QTY	,A6
		,A1
	W2_PRICE,A10

RECORD	VARS
	ROC_DISC,D2,	20		;20% DISCOUNT
	ROC_MULT,D3		;100 - ROC_DISC
	RDISC	,D1		;0=NOT ROCK, 1=ALL LINE ITEMS ,2=SELECT ITEMS TO DISC
	SAVV	,D1
	TCHAR	,D3
	DOTS2	,A35,	'...................................'
	LSEQ	,D3
	D2	,D2
	A2	,A2
	CHNWRK	,D3
	MULTLINE	,D6
	SAVQTY	,D5
	SAVKEY	,A63
	BL_FOUND	,D1
	CLPPD	,A1
	SHPNM	,A30
	SHAD1	,A30
	SHAD2	,A30
	SHAD3	,A30
	SHDAT	,D8
	STAT	,D1
	SCAC	,A4
	SCAC_FOUND	,D1
	BOL_FOUND	,D1
	ENTRY	,A35
	CNGCTL	,D1
	WHATNO	,D2
	DECMAL	,D18
	OPTION	,D1
	ABORT	,D1
	ALPHA	,A10
	COUNT	,D1
	BLANKS	,A35
	SRCCTL	,D1
	SWITCH	,D1
	BSEND	,D5
	BSMID	,D5
	L	,2D1
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1
	FILENM	,A14	;;;
	ORGART	,D5	;;;
	ORGSHV	,D5	;;;
	ORGSHP	,D5	;;;
	ORGCUS	,D5	;;;
	V	,D1

PROC
	V = 2

	LOKCTL = 1
	XCALL IO (CHN001,CUSCTL,1,READ,LOKCTL)
	ORGCUS = ORG001
SELCT,
	CALL DSPORD
	IF (INXCTL.EQ.2) GO TO ENDOR1

	clear rdisc
	roc_mult = 100
	if (ocusno .eq. 63340) call roc_disc
	call select_duct
	call load_work
	call consolidate
	CALL load_ordlin

	if (ocusno .eq. 63340)	;ssq 4-20-04
		begin
		XCALL OE1B
		call dspdat
		end


	CALL CNGORD
	IF (SKPORD) GO TO SELCT
;;;	ORDHDR = TORDHD		;5-31-00 SSQ: NOW GLOBAL

	GO TO ENDOR1	
INPUT,
	XCALL INPUT(ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
INPT1,
	XCALL INPUT(ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	RETURN
DSPORD,
	CALL DISPL1
	IF (ABORT) GOTO DSPORD
	IF (INXCTL.EQ.2) RETURN
	XCALL OUTPT (12,1,0,'BILL THIS ORDER <Y> ?   ',V)
	CTL = '12,24,01,00,YY'		;;;
	CALL INPUT
	IF (INXCTL.EQ.2) GO TO DSPORD
	RETURN
DISPL1,
	UNLOCK 4
	CNGCTL =
	ABORT =
;;;	XCALL OE1 (DSTFLG,V)
	XCALL OE1B
	XCALL OUTPT (2,1,0,'SELECT ',1)
	XCALL OUTPT (2,3,0,'*',V)
	XCALL OUTPT (3,3,0,'*',V)
	XCALL OUTPT (2,50,0,'3. SHIP DATE    ',V)
	CTL = '02,16,06,00,#E'
	CALL INPUT
	IF (INXCTL.EQ.2) RETURN
	IF (ENTRY.EQ.BLANKS) GO TO NOSRCH
	OORDNO = ENTRY
	CUSMAS =
SRCH,
	LOKCTL = 0
	XCALL ISIO (4,ORDHDR,OORDNO,READ,LOKCTL)
	IF (LOKCTL.EQ.1) GO TO DISPL1
	IF (LOKCTL) GO TO NOFIND
	GO TO CHKBOL
NOSRCH,
	LOKCTL = 0
	XCALL IOS (4,ORDHDR,READ,LOKCTL)
	GO TO (DISPL1,ORDMSG), LOKCTL
CHKBOL,
	CALL GET_BLHEAD		;FIND BILL OF LADING HEADER	

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; disable 6-24-98...
;;; enable 8-14-98
;;;SSQ 5-31-00	IF (BL_FOUND)		; Update fields from BLHEAD...
	IF (OFLAG.EQ.0 .AND. BL_FOUND)		; Update fields from BLHEAD...
		BEGIN				; only if order not already
		OSHPNM = SHPNM			; selected.
		OSHAD1 = SHAD1
		OSHAD2 = SHAD2
		OSHAD3 = SHAD3
	
		OCLPPD = CLPPD
		OSHDAT = SHDAT
		END
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

DSPDAT,
	TOTCST =
	CTL = '02,16,08'
;;;	DECMAL = OORDNO
;;;	CALL DSPNUM
	OF_ORD = OORDNO,	'ZZZZZX' [LEFT]
	OF_NUM = OPRTF
	XCALL OUTPT(ROW,COL,0,ORDFMT,V)

	CTL = '02,38'
	DECMAL(1,8) = OORDDT
	CALL DSPDTE
	CTL = '02,66'
	
	DECMAL(1,8) = OPROMD
	IF (OSHDAT.EQ.0) OSHDAT = OPROMD	;;;
	DECMAL (1,8) = OSHDAT			;;;
	CALL DSPDTE
	CTL = '03,16,05'
	DECMAL = OCUSNO
	CALL DSPNUM
;;;	CRDFLG = 1       ;;;
	CALL REDCUS      ;;;
	CALL GTTXCD	 ;;;	5/6/93 
	CTL = '03,68,06' ;;;
	DECMAL = CRDLMT  ;;;
	CALL DSPNUM      ;;;
;;;	CRDFLG = 0       ;;;
	XCALL OUTPT (3,24,0,OCUSNM,V)
	CTL = '04,16,02'
	DECMAL = OSLMAN
	CALL DSPNUM
	XCALL OUTPT (4,35,0,OLOC,V)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (SCAC .NE. '    ')
	THEN	OSCAC = SCAC		;SCAC FROM BL HEADER
	ELSE	SCAC = OSCAC		;USE CURRENT ORDHDR SCAC

	CALL GET_SCAC
	XCALL OUTPT (8,53,0,SC_SCAC,1)
	XCALL OUTPT (9,53,0,SC_NAME,1)
		

SHVOK,

	IF (OMETRO .NE. BLANKS)
		BEGIN
		XCALL OUTPT(7,58,0,'12DPO:',1)
		XCALL OUTPT (7,66,0,OMETRO,1)
		END
	XCALL OUTPT (4,69,0,OPONO,V)
	CTL = '05,16,02'
	DECMAL = ODISC
	CALL DSPNUM
	XCALL OUTPT (10,33,0,OTERMS,1)
	LOKCTL = 1
	XCALL IO (CHN170,ARTCTL,1,READ,LOKCTL)
	ORGART = ORG170
	SRCCTL = 2
	BSEND = ORGART
	XCALL SERCH (CHN170,ARTERM,OTERMS,1,1,BSEND,BSMID,SRCCTL,1,2,7,0,0,0,0)
	GO TO (TRMNFD), SRCCTL
	XCALL OUTPT (11,33,0,ARTRDS,1)
	GO TO TERMOK
TRMNFD,
	XCALL OUTPT (11,33,0,'TERM NOT ON FILE',1)
TERMOK,
	XCALL OUTPT (10,53,0,OCLPPD,1)
	XCALL OUTPT (5,69,0,OJOBNO,V)
DSPADD,
	ALPHA(1,4) = OSHPTO,'ZZZZ'
	XCALL OUTPT (6,16,0,ALPHA(1,4),V)
	XCALL OUTPT (13,12,0,OSHPNM,1)
	XCALL OUTPT (14,12,0,OSHAD1,1)
	XCALL OUTPT (15,12,0,OSHAD2,1)
	XCALL OUTPT (16,12,0,OSHAD3,1)
	IF (OCOMNT(1).NE.BLANKS) GO TO DSPCOM
	OCOMNT(1) = SAVCOM (1,35)
	OCOMNT(2) = SAVCOM (36,70)
DSPCOM,
	XCALL OUTPT (20,16,0,OCOMNT(1),1)
	XCALL OUTPT (21,16,0,OCOMNT(2),1)

	ALPHA(1,6) = OBONBR,	'ZZZZZZ'
	XCALL OUTPT (22,20,0,ALPHA(1,6),1)

	IF (DSTFLG.NE.'Y') RETURN
	ALPHA(1,8) = OARACT, 'XXXX-XXX'
	XCALL OUTPT (10,73,0,ALPHA(1,8),V)
	XCALL OUTPT (21,73,0,OTAXFL,1)
	RETURN
ORDMSG,
	XCALL MESAG ('NO MORE ORDERS',2)
	GO TO DISPL1
NOFIND,
	XCALL MESAG ('ORDER NOT FOUND',1)
	GO TO DISPL1
;
CNGORD,
	WHLORD =
	SKPORD =
	GOTO ANYCNG
DATE,
	CTL = '02,38,08,05,D '
	CALL INPUT
	GO TO (ENDORD), INXCTL
	OORDDT = ENTRY
	GO TO ANYCNG
PDATE,
	CTL = '02,66,08,00,D '
	CALL INPUT
	GOTO (ENDORD), INXCTL
	OSHDAT = ENTRY
	GO TO ANYCNG
SALMAN,
	CTL = '04,16,02,00,N '
	CALL INPUT
	GO TO (ENDORD), INXCTL
	OSLMAN = ENTRY
	IF (OSLMAN.LT.1) GO TO SALMAN
	GOTO ANYCNG
PONUM,
	CTL = '04,69,10,00,AT'
	CALL INPUT
	GO TO (ENDORD), INXCTL
	IF(INXCTL .EQ. 3)	;<TAB>
		BEGIN
		CALL OMETRO		;GET METRO PROJ #
		IF(CNGCTL.EQ.0)GOTO PONUM
		ENTRY = OPONO
		XCALL OUTPT(4,69,0,OPONO,V)
		END
	OPONO = ENTRY
	GO TO ANYCNG
SHIPV,
SHIPV1,
	XCALL OUTPT (9,53,0,'               ',1)
	CTL = '04,53,04,00,A '
	CALL INPUT
	GO TO (ENDORD), INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO SHIPV1
	OSCAC = ENTRY
	SCAC = OSCAC
	CALL GET_SCAC
	XCALL OUTPT (8,53,0,SC_SCAC,1)
	XCALL OUTPT (9,53,0,SC_NAME,1)
	GO TO ANYCNG
COLPPD,
	CTL = '05,53,01,00,A '
	CALL INPUT
	GO TO (ENDORD), INXCTL
	OCLPPD = ENTRY
	IF (OCLPPD.NE.'C'.AND.OCLPPD.NE.'P'.AND.OCLPPD.NE.' ' ) GO TO COLPPD
	GO TO ANYCNG
DISC,
	CTL = '05,16,02,00,# '
	CALL INPUT
	GOTO (ENDORD), INXCTL
	ODISC = ENTRY
;;;	D = 1		;D=1 INDICATES A NEW ORDER DISCOUNT
	GOTO ANYCNG
TERMS,
TERMS1,
	XCALL OUTPT(11,33,0,'               ',1)
	CTL = '05,33,01,00,A '
	CALL INPUT
	GOTO (ENDORD), INXCTL
	OTERMS = ENTRY
	IF (OTERMS.EQ.' ') GO TO TERMS1
	LOKCTL = 1
	XCALL IO (CHN170,ARTCTL,1,READ,LOKCTL)
	ORGART = ORG170
	SRCCTL = 2
	BSEND = ORGART
	XCALL SERCH (CHN170,ARTERM,OTERMS,1,1,BSEND,BSMID,SRCCTL,1,2,7,0,0,0,0)
	GO TO (BADTRM), SRCCTL
	OTRMSD = ARTRDP
	XCALL OUTPT (11,33,0,ARTRDS,1)
	GO TO ANYCNG
JOBNUM,
	CTL = '05,69,10,00,A '
	CALL INPUT
	GOTO (ENDORD), INXCTL
	OJOBNO = ENTRY
	GOTO ANYCNG
SHIPTO,
SHIPT1,
	XCALL OUTPT (13,12,1,'\',1)
	XCALL OUTPT (14,12,1,'\',1)
	XCALL OUTPT (15,12,1,'\',1)
	XCALL OUTPT (16,12,1,'\',1)
	CTL = '06,16,04,00,N '
	CALL INPUT
	GO TO (ENDORD), INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO DFBLTO
	OSHPTO = ENTRY
;;;	IF (OSHPTO.EQ.9999) GO TO SHIPNM	;SSQ 11-13-96
	IF (OSHPTO.EQ.9999) GO TO SHIPNX

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	LOKCTL = 1
;;;	XCALL IO (CHN171,SHPCTL,1,READ,LOKCTL)
;;;	ORGSHP = ORG171
;;;	SRCCTL = 2
;;;	BSEND = ORGSHP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCUSNO = OCUSNO
	SHPNO = OSHPTO
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	LOKCTL = 1
	XCALL ISIO (CHN171,SHIPTO,SKEY,READ,LOKCTL)
	IF (LOKCTL .NE. 0) GOTO BADSHP
;;;	XCALL SERCH (CHN171,SHIPTO,SKEY,1,10,BSEND,BSMID,SRCCTL,1,11,16,0,0,0,0)		
;;;	GO TO (BADSHP), SRCCTL
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   	OSHPNM = SHTONA
	OSHAD1 = SHTOAD(1)
	OSHAD2 = SHTOAD(2)
	OSHAD3 = SHTOAD(3)
;;;	OTAXFL = SHTOTC
;;;	IF (OCCRD .NE. 'C') OTAXFL = SHTOTC
	IF (OCCRD.NE.'C' .AND. (OCUSNO.NE.3.AND.OCUSNO.NE.10)) OTAXFL = SHTOTC
	XCALL OUTPT (21,73,0,OTAXFL,1)	;;; 5/6/93
	CALL DSPSHP
	GO TO ANYCNG
DFBLTO,
	BSEND = ORGCUS
	XCALL SERCH (2,CUSIDX,OCUSNO,1,6,BSEND,BSMID,SRCCTL,4,7,11,0,0,0,0)
	GO TO (BADCUS), SRCCTL
	LOKCTL = 1
	XCALL IO (CHN001,CUSMAS,IRC001,READ,LOKCTL)
	IF (CUSCD.EQ.'**') GOTO BADCUS
	OSHPTO = 
	OSHPNM = NAME
	OSHAD1 = ADD1
	OSHAD2 = ADD2
	TMPCTY = CITY
	TMPSTA = STATE
	TMPZIP = ZIP
	OSHAD3 = TMPAD3
	CALL DSPSHP
	GO TO ANYCNG
SHIPNX,
	CLEAR CNGCTL
SHIPNM,
	CTL = '13,12,30,00,A '
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	GO TO (ENDORD), INXCTL
	OSHPNM = ENTRY
;;;	IF (OSHPTO.NE.9999) GO TO ANYCNG
	GOTO (ANYCNG),CNGCTL
SHIPA1,
	CTL = '14,12,30,00,A '
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	GO TO (ENDORD), INXCTL
	OSHAD1 = ENTRY
;;;	IF (OSHPTO.NE.9999) GO TO ANYCNG
	GOTO (ANYCNG),CNGCTL
SHIPA2,
	CTL = '15,12,30,00,A '
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	GO TO (ENDORD), INXCTL
	OSHAD2 = ENTRY
;;;	IF (OSHPTO.NE.9999) GO TO ANYCNG
	GOTO (ANYCNG),CNGCTL
SHIPA3,
	CTL = '16,12,30,00,A '
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	GO TO (ENDORD), INXCTL
	OSHAD3 = ENTRY
	GO TO ANYCNG
COMENT,
;;;	XCALL OE4(5,V)
	XCALL OUTPT(21,16,0,DOTS2,1)
	XCALL OUTPT (24,1,0,'<TAB> FOR DEFAULT COMMENTS',1)
	OCOMNT(2) =
	CTL = '10,16,35,00,AT'
	CALL INPUT
	XCALL OUTPT (24,1,1,'\',1)
	GO TO (ENDORD,ENDORD,DEFCOM), INXCTL
	IF (ENTRY.EQ.BLANKS.AND.CNGCTL.EQ.0) GO TO DEFCOM	;;;
	OCOMNT(1) = ENTRY
	IF (OCOMNT(1).EQ.BLANKS) GO TO ANYCNG
	ROW = 21
	CALL INPT1
	GO TO (ENDORD), INXCTL
	OCOMNT(2) = ENTRY
	GO TO ANYCNG
DEFCOM,
	OCOMNT(1) = SAVCOM (1,35)
	OCOMNT(2) = SAVCOM (36,70)
	XCALL OUTPT (20,16,0,OCOMNT(1),1)
	XCALL OUTPT (21,16,0,OCOMNT(2),1)
;;;	GO TO (ARACCT,ANYCNG), CNGCTL+1
	GOTO ANYCNG
ARACCT,
	IF (DSTFLG.NE.'Y' .OR. MLARFG.NE.'Y') GO TO ANYCNG
	XCALL OUTPT (10,72,1,'\',V)
	XCALL GETAC (10,73,OARACT,INXCTL,V)
	GO TO (ENDORD), INXCTL
	GOTO ANYCNG

OTAXFL,
	CTL = '21,73,03,00,AT'
	CALL INPT1
	GOTO (ENDORD,ENDORD,DEFTX), INXCTL
	OTAXFL = ENTRY
	GOTO ANYCNG
DEFTX,
	CALL CUSTX
	GOTO ANYCNG

OBONBR,
	CTL = '22,20,06,00,# '
	CALL INPT1
	GOTO (ENDORD),INXCTL
	OBONBR = ENTRY(1,6)
	GOTO ANYCNG

ENDORD,
	SKPORD = 1
ENDOR1,
	IF(CHNWRK)
		BEGIN
		CLOSE CHNWRK
		XCALL DELET (WRKFIL)
		END
	RETURN
DEFLT1,
	IF (ENTRY.EQ.BLANKS) ENTRY(1,1) = '1'
	XCALL OUTPT (ROW,COL,0,ENTRY(1,1),V)
	RETURN
;;;CLROE4,
;;;	XCALL OUTPT (7,60,1,'\',V)
;;;	XCALL OUTPT (8,60,1,'\',V)
;;;	XCALL OUTPT (09,60,1,'\',V)
;;;	XCALL OUTPT (10,60,1,'\',V)
;;;	XCALL OUTPT (6,60,1,'\',V)
;;;	RETURN
ANYCNG,
	XCALL ANYCN(CNGCTL,WHATNO)
	GOTO (BILORD,CNGBR,ENDORD), CNGCTL+1
CNGBR,
	GO TO (BADCNG,DATE,PDATE,BADCNG,SALMAN,BADCNG,SHIPV,PONUM,DISC,TERMS,
&		COLPPD,JOBNUM,SHIPTO,SHIPNM,SHIPA1,SHIPA2,SHIPA3,
&		COMENT,ARACCT,OBONBR,OTAXFL), WHATNO
BADCNG,
	XCALL MESAG (' ',6)
	GOTO ANYCNG
BILORD,
	XCALL OUTPT (12,1,0,'BILL ENTIRE ORDER <Y> ?  ',V)	;;;
	CTL = '12,25,01,00,YY'		;;;
	CALL INPUT
	IF (INXCTL.EQ.1) WHLORD = 1
	INXCTL =
	XCALL WATE(3,V)
	RETURN

OMETRO,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; GET METRO PROJ. NO.
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL OUTPT(7,58,0,'METRO:',1)
	CTL = '07,66,12,00,A '

	IF (OMETRO .NE. BLANKS)GOTO OM_DISP

	SAVV = V
	V = 1
	CALL INPUT
	V = SAVV
	GOTO (OM_ABORT),INXCTL
	OMETRO = ENTRY(1,12)
	GOTO OM_ABORT

OM_DISP,
	XCALL OUTPT (ROW,COL,1,OMETRO,1)

	CALL ACCEPT		
	USING TCHAR SELECT
	(21),	BEGIN			;^U
		OMETRO =
		GOTO OMETRO
		END
	(13),	GOTO OM_ABORT		;<CR>
	ENDUSING
	GOTO OM_DISP

OM_ABORT,
	RETURN
;------------------------------------------
ACCEPT,
	XCALL FLAGS (00010000)			;DISABLE CHARACTER ECHOING
	XCALL OUTPT(ROW,COL+13,0,' ',1)
	ACCEPT (15,TCHAR)
	XCALL FLAGS (00000000)			;RE-ENABLE CHARACTER ECHOING
	RETURN

DSPNUM,
	OPTION = 1
	GOTO CALDSP
DSPDTE,
	XCALL DATE8(DECMAL(1,8), D_OUT, D_OUTR, D_FMT, D_SW)
	XCALL OUTPT (ROW, COL, 0, D_FMT, V)
	RETURN
;;;	OPTION = 2
;;;	GOTO CALDSP
DSPDLR,
	OPTION = 3
CALDSP,
	XCALL DSPLY(MAX,ROW,COL,DECMAL,OPTION,V)
	RETURN
BADSHV,
	XCALL MESAG ('SHIP-VIA CODE NOT FOUND',1)
	GO TO SHIPV1
BADTRM,	
	XCALL MESAG ('TERM CODE NOT FOUND',1)
	GO TO TERMS1
BADSHP,
	XCALL MESAG('SHIP-TO NUMBER NOT FOUND',1)
	GO TO SHIPT1
BADCUS,
	XCALL MESAG ('CUSTOMER NOT FOUND',1)
	GO TO SHIPTO
DSPSHP,
	XCALL OUTPT (13,12,0,OSHPNM,1)
	XCALL OUTPT (14,12,0,OSHAD1,1)
	XCALL OUTPT (15,12,0,OSHAD2,1)
	XCALL OUTPT (16,12,0,OSHAD3,1)
	RETURN
GTTXCD,
	IF (OSHPTO.EQ.0) GO TO REDCUS
	IF (OSHPTO.EQ.9999) GO TO REDCUS
	XCUSNO = OCUSNO
	SHPNO = OSHPTO

	LOKCTL = 1
	XCALL ISIO (CHN171,SHIPTO,SKEY,READ,LOKCTL)
	IF (LOKCTL .NE. 0) GOTO INVSHP
	IF(OCCRD .NE. 'C') OTAXFL = SHTOTC
	XCALL OUTPT (21,73,0,OTAXFL,1)	;;; 5/6/93
	RETURN
INVSHP,
	XCALL MESAG 
&	  ('INVALID CUST, SHIP-TO, OR TAX CODE, TAX FLAG WILL BE ZEROED',1)
	OTAXFL =
	XCALL OUTPT (21,73,0,OTAXFL,1)	;;; 5/6/93
	RETURN
REDCUS,
	IF (ICUSNO.EQ.OCUSNO.AND.CUSNO.EQ.OCUSNO) RETURN	;;;5/6/93
	BSEND = ORGCUS
	XCALL SERCH (2,CUSIDX,OCUSNO,1,6,BSEND,BSMID,SRCCTL,4,7,11,0,0,0,0)
	GO TO (INVSHP), SRCCTL
	LOKCTL = 1
	XCALL IO (CHN001,CUSMAS,IRC001,READ,LOKCTL)
;;;	IF (CRDFLG .EQ.1) RETURN
	IF (CUSCD.EQ.'**') GOTO INVSHP
CUSTX,
;;;	OTAXFL = TAXFLG
	IF(OCCRD .NE. 'C') OTAXFL = TAXFLG
	XCALL OUTPT (21,73,0,OTAXFL,1)	;;; 5/6/93
	RETURN

ROC_DISC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; ROCKFORD DISCOUNT 20%
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	XCALL OUTPT (2,1,2,'ROCKFORD DISCOUNT',1)
	XCALL OUTPT (10,4,0,'DISCOUNT ENTIRE ORDER?',1)
	XCALL INPUT (10,29,01,00,'YE',ENTRY,INXCTL,1)
	RDISC = INXCTL
	IF (INXCTL.EQ.2 .AND. ENTRY(1,1) .NE.'N')	;<END> ??
		BEGIN
		CLEAR RDISC
		RETURN
		END

	IF (INXCTL .EQ. 1) ROC_MULT = 100-ROC_DISC
	RETURN
;-----------------------------------------------------

GET_BLHEAD,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; fetch bol header record...
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CLEAR BL_FOUND

	SCAC =
	BHORDN = OORDNO
	BHHDRN =
	BHSHPN =
	XCALL ISIO (CHN178,BLHEAD,KEY178,READ,LOKCTL)
	WHILE	(BHORDN .EQ. OORDNO)
		BEGIN
		BL_FOUND = 1
		SCAC = BHSCAC
		CLPPD = BHPPCL
		SHPNM = BHSHPNM
		SHAD1 = BHSHAD1
		SHAD2 = BHSHAD2
		SHAD3 = BHSHAD3
		SHDAT = BHSHPD
		XCALL IOS (CHN178,BLHEAD,READ,LOKCTL)
		END
	RETURN
;-----------------------------------------------------

GET_SCAC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; COP TABLE SCAC LOOK-UP
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR TBL_KEY
	TBLCOD = 'SC'
	TBLKEY = SCAC
	XCALL ISIO (CHN182,COPTBL,TBL_KEY,READ,LOKCTL)
	IF (LOKCTL .NE. 0)
		BEGIN
		CLEAR COPTBL
		SC_NAME = "* NOT ON FILE *"
		END
	RETURN
;-----------------------------------------------------

SELECT_DUCT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; SELECT ALL DUCTWORK
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CLEAR RUNTOT, TAXTOT, TOTWGT, TOTCST
FNDDUC,
	DUCTOR = OORDNO
	FIND(CHN175,DUCACC,DUCTOR)[ERR=EOF_DUC]
NXTDUC,
	LOKCTL = 1
	XCALL IOS (CHN175,DUCACC,READ,LOKCTL)
	IF (LOKCTL.NE.0) GOTO EOF_DUC
	IF (DUCTOR.NE.OORDNO) GOTO EOF_DUC

SEL_DUC,
	GPRICE = (GPRICE*1000/ROC_MULT)#1	;SSQ 4-15-04
	LINPRC = (LINPRC*1000/ROC_MULT)#1	;SSQ 4-15-04

	DECMAL = (POUNDS*GPRICE)#1
	IF (LINER.GT.0.AND.LINER.LE.8) DECMAL = DECMAL + (SQFLIN*LINPRC)#1
	IF (ACC.EQ.1)
	BEGIN
	  IF (SLIPS)  DECMAL = DECMAL + (SLIPS*SLPPRC)#1
	  IF (DRIVES) DECMAL = DECMAL + (DRIVES*DRVPRC)#1
	  IF (TCORN)  DECMAL = DECMAL + (TCORN*CORPRC)#1
	  IF (TNBQTY) DECMAL = DECMAL + (TNBQTY*TNBPRC)#1
	  IF (TGAQTY) DECMAL = DECMAL + (TGAQTY*TGAPRC)#1
	  IF (TCLQTY) DECMAL = DECMAL + (TCLQTY*TCLPRC)#1
	  IF (TBAQTY) DECMAL = DECMAL + (TBAQTY*TBAPRC)#1
	  IF (TBNQTY) DECMAL = DECMAL + (TBNQTY*TBNPRC)#1
	END
	RUNTOT = RUNTOT + DECMAL
	TAXTOT = TAXTOT + DECMAL		;;;10/14/93 force taxable
	FLG175 = 1		;SET BILLING SELECT FLAG IN DUCACC

	LOKCTL = 1
	XCALL ISIO (CHN175,DUCACC,KEY175,WRITE,LOKCTL)
	GOTO NXTDUC

EOF_DUC,
	RETURN
;-----------------------------------------------------

LOAD_WORK,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;	CLEAR RUNTOT, TAXTOT, TOTWGT, TOTCST
;---------------------------------------------------------------
;Create work file...
	WFORD = OORDNO,'XXXXXX'
	XCALL ISAMC (WRKFIL, 154, 1, 'START=1, LENGTH=63, DUPS, ASCEND')
	OPEN (33, SU, WRKFIL)
	CHNWRK = 33

;---------------------------------------------------------------

	FIND (CHN045, ORDLIN, OORDNO) [ERR=LOOP]
LOOP,
	READS (CHN045, ORDLIN, EOF)
	IF (LORDNO .NE. OORDNO) GOTO EOF
	IF (LTYPE .EQ. 'M') GOTO LOOP
	IF (RDISC.GE.1) CALL GET_DISC

	LPRICE = (LPRICE*1000/ROC_MULT)#1	;SSQ 4-15-04

	L_LORDNO = LORDNO	; ORDER NUMBER
	L_LINSEQ = LINSEQ	; LINE PRINT SEQUENCE
	L_LITMNO = LITMNO	; ITEM NUMBER
	L_LDESCR = LDESCR	; ITEM DESCRIPTION
	L_LQTYOR = LQTYOR	; QUANTITY ORDERED
	L_LQTYSH = LQTYSH	; QUANTITY SHIPPED
	L_LQTYBO = LQTYBO	; QUANTITY BACK ORDERED
	L_LLOC = LLOC		; ORD/ESTS FLAG
	L_LCOMPS = LCOMPS	; LINE COMPLETION STATUS FLAG (0=NOT DONE, 9=DONE)
	L_LPRDCD = LPRDCD	; PRODUCT CATEGORY
	L_LUOFM = LUOFM		; UNIT OF MEASURE
	L_LPRICE = LPRICE	; PRICE ($XX,XXX.XXX)
	L_LODISC = LODISC	; ORDER DISCOUNT (XX%)
	L_LDISC = LDISC		; LINE DISCOUNT (XX%)
	L_LSTATS = LSTATS	; LINE STATUS (1=BACKORDER STATUS, B/Oable item,
	L_LCOST = LCOST		; UNIT COST ($XX,XXX.XXX)
	L_LFLAG = LFLAG		; SELECT FOR BILLING FLAG (0=NOT SELECTED, 1=SELECTED

	IF(OFLAG.EQ.0)
		BEGIN
		L_LFLAG=1		; FIRST TIME THRU, SELECT
		LQTYSH = LQTYOR
		L_LQTYSH = LQTYOR	; QUANTITY SHIPPED
		END

	L_LITMWT = LITMWT	; ITEM WEIGHT (X,XXX.XX)
	L_LTXFLG = LTXFLG	; ITEM TAX FLAG (0=NON-TAXABLE, 1=TAXABLE)
	L_LSTOKT = LSTOKT	; STOCKED ITEM FLAG (S=STOCKED, N=NON-STOCKED)
;;;	L_LEXSDT = LEXSDT	; EXPECTED SHIP DATE (CCYYMMDD)
;;;	L_LPRMDT = LPRMDT	; PROMISED DATE	(CCYYMMDD)
	L_LCPFLG = LCPFLG	; PRICE CHANGED BY USER (SSQ: 10-30-96)
	L_LDAMPR = LDAMPR	; 1=IS DAMPER (SSQ: 11-13-98)
	L_LTYPE = LTYPE		;"M"= MEMO
	L_LDEPT = LDEPT
	A2 = LMSQ1,	'XX'
	LMSQ1=A2
	L_LMSQ1 = LMSQ1

	A2 = LMSQ2,	'XX'
	LMSQ2=A2
	L_LMSQ2 = LMSQ2

	A2 = LMSQ3,	'XX'
	LMSQ3=A2
	L_LMSQ3 = LMSQ3
	L_LSRTSQ = LSRTSQ	;SORT SEQ, ITMMAS.PRICCD
;-------------------------------------------------
;;; NEW FIELDS SSQ 9-25-03
	L_LMAT = LMAT
	L_L_CFG = L_CFG
	L_LJRMAK = LJRMAK
	L_LMULT = LMULT
	L_LCFGIM = LCFGIM
;-------------------------------------------------

	IF(LITMNO .EQ. 'M') CLEAR W_KEY(1,6)
	IF(LITMNO .EQ. 'ME') W_KEY(1,1)='p'	;neg zero
	STORE (CHNWRK, LINE, W_KEY)
	DELETE (CHN045, ORDKEY)

	DECMAL = (LQTYSH*LPRICE)#1
	RUNTOT = RUNTOT + DECMAL
	IF(LTXFLG) TAXTOT = TAXTOT + DECMAL

	TOTCST = TOTCST + (LCOST*LQTYSH)
	TOTWGT = TOTWGT + (LQTYSH*LITMWT)
	GOTO LOOP

EOF,
	RETURN
;----------------------------------------------

GET_DISC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (RDISC .EQ. 1)
		BEGIN
	;;;	LDISC = ROC_DISC
		ROC_MULT = 100-ROC_DISC
		RETURN
		END

	CLEAR W2_LINE
	W2_ITEM = LITMNO
	W2_DESC = LDESCR
	W2_QTY = LQTYOR
	W2_PRICE = LPRICE,	'ZZ,ZZX.XXX'
	XCALL OUTPT (12,1,0,W2_LINE,1)
	XCALL OUTPT (13,1,0,'DISCOUNT THIS LINE (Y/N)',1)
	XCALL INPUT (13,30,01,00,'YY',ENTRY,INXCTL,1)
	USING INXCTL SELECT
	(1),	ROC_MULT = 100-ROC_DISC
	(2),	ROC_MULT = 100
	ENDUSING

	RETURN
;-------------------------------------------------

CONSOLIDATE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; Consolidate line items for the
		;;; same part #
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	FIND (CHNWRK, LINE, ^FIRST) [ERR=EOF_CON]
	SAVKEY = '***'
CONLOOP,
	READS(CHNWRK, LINE, EOF_CON)
;;;	IF (W_KEY.NE.SAVKEY .OR. L_LCPFLG)
	IF (W_KEY.NE.SAVKEY)
	THEN	CALL NEWKEY
	ELSE	BEGIN
		INCR MULTLINE
		SAVQTY = SAVQTY + L_LQTYOR
		DELETE (CHNWRK)
		END
	GOTO CONLOOP

NEWKEY,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (SAVKEY .EQ. '***') GOTO OUTKEY
	IF (MULTLINE .EQ. 0) GOTO OUTKEY

	READ (CHNWRK, LINE, SAVKEY)
	L_LQTYOR = SAVQTY
	L_LQTYSH = SAVQTY	;AUTO SELECT
	L_LFLAG = 1		;SELECTED

	WRITE (CHNWRK, LINE, SAVKEY)
OUTKEY,
	SAVKEY = W_KEY
	SAVQTY = L_LQTYOR
	CLEAR MULTLINE
	RETURN
;-----------------------------------------------

EOF_CON,
	CALL NEWKEY
	RETURN
;-----------------------------------------------

LOAD_ORDLIN,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; RE-LOAD THE ORDLIN FILE
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	LSEQ = 0
	FIND (CHNWRK, LINE, ^FIRST) [ERR=EOF_CON]
LOAD_LOOP,
	READS(CHNWRK, LINE, EOF_LOAD)
	INCR LSEQ
	LORDNO = L_LORDNO		; ORDER NUMBER

;;;	LINSEQ = L_LINSEQ		; LINE PRINT SEQUENCE
	LINSEQ = LSEQ			; LINE PRINT SEQUENCE

	LITMNO = L_LITMNO		; ITEM NUMBER
	LDESCR = L_LDESCR		; ITEM DESCRIPTION
	LQTYOR = L_LQTYOR		; QUANTITY ORDERED
	LQTYSH = L_LQTYSH		; QUANTITY SHIPPED
	LQTYBO = L_LQTYBO		; QUANTITY BACK ORDERED
	LLOC = L_LLOC			; ORD/ESTS FLAG
	LCOMPS = L_LCOMPS		; LINE COMPLETION STATUS FLAG (0=NOT DONE, 9=DONE)
	LPRDCD = L_LPRDCD		; PRODUCT CATEGORY
	LUOFM = L_LUOFM			; UNIT OF MEASURE
	LPRICE = L_LPRICE		; PRICE ($XX,XXX.XXX)
	LODISC = L_LODISC		; ORDER DISCOUNT (XX%)
	LDISC = L_LDISC			; LINE DISCOUNT (XX%)
	LSTATS = L_LSTATS		; LINE STATUS (1=BACKORDER STATUS, B/Oable item,
	LCOST = L_LCOST			; UNIT COST ($XX,XXX.XXX)
	LFLAG = L_LFLAG			; SELECT FOR BILLING FLAG (0=NOT SELECTED, 1=SELECTED
	LITMWT = L_LITMWT		; ITEM WEIGHT (X,XXX.XX)
	LTXFLG = L_LTXFLG		; ITEM TAX FLAG (0=NON-TAXABLE, 1=TAXABLE)
	LSTOKT = L_LSTOKT		; STOCKED ITEM FLAG (S=STOCKED, N=NON-STOCKED)
;;;	LEXSDT = L_LEXSDT		; EXPECTED SHIP DATE (CCYYMMDD)
;;;	LPRMDT = L_LPRMDT		; PROMISED DATE	(CCYYMMDD)
	LCPFLG = L_LCPFLG		; PRICE CHANGED BY USER (SSQ: 10-30-96)
	LDAMPR = L_LDAMPR		; 1=IS DAMPER (SSQ: 11-13-98)
	LTYPE = L_LTYPE			;"M"= MEMO
	LDEPT = L_LDEPT	
	LMSQ1 = L_LMSQ1	
	LMSQ2 = L_LMSQ2	
	LMSQ3 = L_LMSQ3	
	LSRTSQ = L_LSRTSQ		;SORT SEQ, ITMMAS.PRICCD

;-------------------------------------------------
;;; NEW FIELDS SSQ 9-25-03
	LMAT = L_LMAT
	L_CFG = L_L_CFG
	LJRMAK = L_LJRMAK
	LMULT = L_LMULT
	LCFGIM = L_LCFGIM
;-------------------------------------------------

	STORE(CHN045, ORDLIN, ORDKEY)
	GOTO LOAD_LOOP

EOF_LOAD,
	RETURN
;-----------------------------------------------

END
