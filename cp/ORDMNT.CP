;ORDMNT.DBL		isam
;
;		AUTHOR: SHERWOOD S. QUIRING
;		DATE  : 3-DEC-1999
;
;	CUSTOMER ORDER MAINTENANCE
;
	.INCLUDE 'WND:TOOLS.DEF'
	.INCLUDE 'WND:WINDOWS.DEF'


;--------- GLOBALS -------------------------
GLOBAL ORDH,	INIT
RECORD ORDHDR   	
		.INCLUDE 'DEF:RD044A.DEF'
ENDGLOBAL
;------------------------------------------

GLOBAL ORDL,	INIT
RECORD ORDLIN		
		.INCLUDE 'DEF:RD045A.def'
RECORD	,X
		.INCLUDE 'DEF:RD045D.def'
RECORD	,X
		.INCLUDE 'DEF:RD045M.def'
ENDGLOBAL
;------------------------------------------

GLOBAL DUCK,	INIT
	.INCLUDE 'DEF:RD175D.DEF'
ENDGLOBAL
;------------------------------------------

GLOBAL IMS,	INIT
RECORD INVMAS
	.INCLUDE 'DEF:RD041A.def'
RECORD DUMINV,X
	.INCLUDE 'DEF:RD041B.DEF'
;;;RECORD ITMIDX 
;;;	.INCLUDE 'DEF:RD042A.DEF'
RECORD
	FIL041	,A14		;ITMMAS FILE NAME
ENDGLOBAL
;------------------------------------------

; removed 12-28-16 - doesn't need to be global
;;;GLOBAL PAR	,INIT
;;;RECORD PARAM
;;;	.INCLUDE 'DEF:PARAM.DEF'
;;;ENDGLOBAL
;------------------------------------------

;----- END GLOBALS -----


	.INCLUDE 'DEF:HPSUB.DEF'

RECORD	FILOOS
	FS_DEV	,A3
		,A1,	':'
	FS_NAME	,A6
		,A1,	'.'
	FS_EXT	,A3

RECORD	SNDMSG
	S_ID	,A2
	S_ORD	,D6


RECORD	CCINFO
	.INCLUDE 'DEF:RD137A.DEF'

RECORD	CCTRAN
	.INCLUDE 'DEF:RD138A.DEF'

RECORD	TMPCUS
	.INCLUDE 'DEF:RD139A.DEF'

RECORD	COPCTL
	.INCLUDE 'DEF:RD060A.DEF'

RECORD	FUNKEY
	.INCLUDE 'DEF:FUNKEY.DEF'


RECORD	CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD	WINS
	W_ID	,D4
	WND_1	,D4
	C_WND	,D4

RECORD	WN_NAME
		,A5,	'ORDMM'
	WN_TNMBR,D4

RECORD	CHANNEL
	CHN041	,D2
	CHN044	,D2
	CHN060	,D2
	CHNOOS	,D2
	CHNAUD	,D2	;SSQ 4-15-04
	CHN137	,D2
	CHN138	,D2
	CHN139	,D2

RECORD	VARS
	cash_cust	,d1
	cmpcod	,a3
	OPT	,D1
	XCUST	,D6
	CCORD	,A1	;C = CREDIT CARD ORDER
	INET	,A1	;I = INTERNET ORDER
	CORDN	,A6
	ABORT	,D1
	F_KEY	,D3
	OPNOK	,D1
	BLANKS	,A30
	ENTRY	,A30
	INXCTL	,D1
	LOKCTL	,D1
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	TMPORD	,D6
	FIRST	,D1
	NXTORD	,D6
	DEFFLG	,D1
	ESTIMA	,D1
	SWITCH	,D1
	CLCTL	,D1
	V	,D1

PROC
	XCALL TERID (V)
	cmhpLPI = 12		;ssq

	SWITCH = 1
	XCALL SNMSG(SNDMSG, SWITCH)
	IF(SWITCH .NE. 9) 
		BEGIN
		XCALL SNMSG(' ',3)
		IF(S_ID .EQ. 'CO')TMPORD = S_ORD
		END

;open ITMMAS...
	SWITCH = 1
	XCALL FILES (1, 'SI', 041, SWITCH)
	IF (SWITCH .EQ. 9) GOTO ENDOFF
	CHN041 = 1	
	XCALL FFILE (41, FIL041, CLCTL)
	fil041(14,14) = 'M'
	XCALL FFILE (45, FILOOS, CLCTL)

;;;	OPEN(19, SU, 'SMC:OOSMSG.ISM')
	FS_NAME = 'OOSMSG'
	FS_EXT(3,3) = 'M'
	OPEN(19,SU,FILOOS)

	CHNOOS = 19

	FS_NAME = 'QAUDIT'	;SSQ 4-15-04
	OPEN(21,SU,FILOOS)
	CHNAUD = 21

	CLEAR ABORT

BEGIN_ORDER,
	CALL INIT_WINDOW
	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF

DISPLA,
	IF(ABORT)
	THEN	FIRST = 0	;USER ABORTED, RE-USE ORDER #
	ELSE	FIRST = 1

	LOKCTL = 0
;;;	XCALL IO (3,COPCTL,1,READ,LOKCTL)
	XCALL IOW (3,COPCTL,1,READ,LOKCTL,W_ID)
	IF (LOKCTL) GO TO ENDOFF
	UNLOCK 3

	INXCTL =
	XCALL OE1W (DSTFLG,W_ID)
	DEFFLG =
	ESTIMA =
	UNLOCK 1

	IF(S_ORD .GT. 0)
		BEGIN
		CLEAR S_ORD
		GOTO GOT_MSG
		END
ORDNO,
	OFFERROR
;;;	CTL = '04,16,06,00,#X'
	CTL = '04,16,07,00,AX'
	CALL INPUT
	GO TO (DISPLA,ENDOFF), INXCTL
	USING F_KEY SELECT
	(END_KEY,F_11), GOTO ENDOFF
	ENDUSING
	IF (INXCTL .EQ. 3)
	THEN	ESTIMA = 1
	ELSE	CLEAR ESTIMA

	CLEAR CCORD, INET
	USING ENTRY(1,1) SELECT
	('C'),	BEGIN
		CCORD = 'C'
		CORDN = ENTRY(2,7)
		ENTRY(1,6) = CORDN
		END
	('I'),	BEGIN
		INET = 'I'
		CORDN = ENTRY(2,7)
		ENTRY(1,6) = CORDN
		END
	ENDUSING

	ONERROR ORDNO
	TMPORD = ENTRY (1,6)
	OFFERROR
	IF (TMPORD.EQ.0.AND.ENTRY.NE.BLANKS) GO TO ORDNO
;;;	IF (ENTRY.EQ.BLANKS) CALL DEFLNX
	IF (ENTRY.EQ.BLANKS) 		;SSQ 12-21-04
	THEN	CALL DEFLNX
	ELSE	BEGIN	
		LOKCTL = 1
		XCALL ISIO (CHN044,ORDHDR,TMPORD,READ,LOKCTL)
		IF (LOKCTL.NE.0) GOTO ORDNO
		END

GOT_MSG,
	OORDNO = TMPORD
	IF(OORDNO .EQ. 0) GOTO DISPLA	;SSQ 3-9-01

	LOKCTL = 1
	XCALL ISIO (CHN044,ORDHDR,OORDNO,READ,LOKCTL)
	CALL CLOSE


;;;	XCALL W_PROC(WP_DELETE, WND_1)
;;;	XCALL U_FINISH
	IF (LOKCTL .EQ. 0)
	THEN	BEGIN
	;;;	IF (CCORD.EQ.'C' .AND. OCCRD.EQ.' ')
		IF (CCORD.EQ.'C' .AND. OCCRD.NE.'C')	;SSQ 5-4-05
			BEGIN
			CALL GET_CCINFO
				IF(OPT .EQ. 9)
				BEGIN
				XCALL W_PROC(WP_DELETE, WND_1)
				XCALL U_FINISH
				GOTO BEGIN_ORDER
				END
			CALL C_TRAN
			END
		XCALL W_PROC(WP_DELETE, WND_1)
		XCALL U_FINISH
	;------------------------------------------------------
	; allow regular orders to be changed to internet orders...
		IF (ORDTYP.EQ.'I') INET = ORDTYP		;SSQ 9-13-05
	;;;	INET = ORDTYP		;SSQ 8-9-05
	;------------------------------------------------------
		XCALL S_CHANGE(OORDNO,INET,CCORD)	;6-10-15
	;;;	XCALL S_CHANGE(OORDNO,INET)
		END
	ELSE	BEGIN
		XCALL W_PROC(WP_DELETE, WND_1)
		XCALL U_FINISH
		XCALL S_ORDADD(TMPORD, ESTIMA, CCORD, INET, ABORT)
		END	
	GOTO BEGIN_ORDER
;======================================================

ENDOFF,
	XCALL W_PROC(WP_DELETE, WND_1)
	XCALL U_FINISH
	CALL CLOSE
	IF (CHN041) XCALL FILES (CHN041, 'SI', 041, 4)
	IF (CHNOOS) CLOSE CHNOOS
	IF (CHNAUD) CLOSE CHNAUD	;SSQ 4-15-04


	XCALL PGCHN ('CP:OEMNU',1)
;;;	XCALL PGCHN ('itm:OEMNU',1)
;=====================================================


DEFLNX,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (FIRST.EQ.0) GO TO NEXT
	LOKCTL = 0
;;;	XCALL IO (3,COPCTL,1,READ,LOKCTL)
	XCALL IOW (3,COPCTL,1,READ,LOKCTL,W_ID)	;SSQ 11/20/02
	IF (LOKCTL) GO TO ENDOFF
	IF (LSTORD.EQ.999999) LSTORD =
	INCR LSTORD
	NXTORD = LSTORD
	LOKCTL = 1
;;;	XCALL IO (3,COPCTL,1,WRITE,LOKCTL)
	XCALL IOW (3,COPCTL,1,WRITE,LOKCTL,W_ID)	;SSQ 11/20/02
	FIRST =
NEXT,
	DEFFLG = 1
	ENTRY (1,6) = NXTORD, 'XXXXXX'
	TMPORD = NXTORD
	XCALL W_DISP(WND_1,WD_POS,4,16,ENTRY(1,6))
	RETURN
;-------------------------------------------------

INPUT,
	XCALL WINPT (W_ID,ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,F_KEY)
	RETURN
;-------------------------------------------------

GET_CCINFO,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	SWITCH = 5
	XCALL FILES (47,'SU',137,SWITCH)
	XCALL FILES (49,'SI',139,SWITCH)
	CHN137 = 47
	CHN139 = 49
	XCALL ISIO (CHN139,TMPCUS,OORDNO,READ,LOKCTL)
	IF (LOKCTL.NE.0) CLEAR TMPCUS
	IF (T_CUSNO.NE.OORDNO) CLEAR TMPCUS

	OPT = 4				;FIND BY CUST #
	IF (T_CUSNO .GT. 0)
	THEN	BEGIN
	;;;	XCUST = T_CUSNO		;FROM TMPCUS
		XCUST = OCUSNO		;FROM ordhdr
		CI_ALPH = T_NAME
		END
	ELSE	BEGIN
		XCUST = OCUSNO		;FROM CUSMAS
		CI_ALPH = OCUSNM
		END

;12-9-19: cash cust mod...
	using ocusno select		;2-27-12 ssq
	(2,3,5,10),	cash_cust = 1
	(),		cash_cust = 0
	endusing

	IF (CASH_CUST)
	THEN	XCALL CCIN2(C_WND, CHN137, OMICUS, CCINFO, OPT, CASH_CUST)
	ELSE	XCALL CCIN2(C_WND, CHN137, XCUST, CCINFO, OPT, CASH_CUST)

;;;	XCALL CCINF(C_WND, CHN137, XCUST, CCINFO, OPT)
;;;	XCALL CCIN2(C_WND, CHN137, XCUST, CCINFO, OPT)
	XCALL W_PROC(WP_DELETE, C_WND)
	CLOSE CHN137
	CLOSE CHN139
	RETURN
;-------------------------------------------------------

C_TRAN,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	SWITCH = 5
	XCALL FILES (47,'SU',138,SWITCH)
	CHN138 = 47
	
	CLEAR CCTRAN
	CT_ORDER = OORDNO
	CT_NUMBR = CI_NUMBR
	CT_TYPE = CI_TYPE
	CT_EXDAT = CI_EXDAT
	CT_CVV = CI_CVV		;6-13-16
	CT_ADDR = CI_ADDR	;6-13-16
	CT_ZIP = CI_ZIP		;6-13-16
;;;	STORE (CHN138, CCTRAN, CT_ORDER)
	XCALL ISIO (CHN138, CCTRAN, CT_ORDER, STORE, LOKCTL)
	CLOSE CHN138

	SWITCH = 5
	XCALL FILES (4, 'SU', 044, SWITCH)
	XCALL ISIO (4,ORDHDR,OORDNO,READ,LOKCTL)
	OCCRD = 'C'
	OTERMS = 'C'
	XCALL ISIO (4,ORDHDR,OORDNO,WRITE,LOKCTL)
	CLOSE 4
	RETURN
;-------------------------------------------------------


OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK
	SWITCH = 5
	XCALL FILES (4, 'SI', 044, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN044 = 4

	SWITCH = 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	xcall who(cmpcod)
;;;	using cmpcod select
;;;	('SMC'),	OPEN (3,U,'SMC:COPCTL.XXX')
;;;	(),		XCALL FILES (3, 'U', 060, SWITCH)
;;;	endusing
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	XCALL FILES (3, 'U', 060, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN060 = 3
	OPNOK = 1
	RETURN
;------------------------------------------------
CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (CHN044) CLOSE CHN044
	IF (CHN060) CLOSE CHN060
	RETURN
;------------------------------------------------


INIT_WINDOW,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; SET UP SCREEN 1 WINDOW
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL U_START("LIB:SMC_WND",,,,,,,100)
;;;	XCALL E_SECT("Order Maintenance", D_CAPTION)
;;;	XCALL W_INIT(POOLSIZE,WNDCHNL,MAXWINS)
;;;	xcall u_start("lib:smc_wnd",,,,,,,35)
	XCALL TNMBR (WN_TNMBR)
	XCALL W_PROC(WP_FIND,WND_1,WN_NAME)
	IF (.NOT. WND_1)
		BEGIN
		XCALL W_PROC(WP_CREATE,WND_1,WN_NAME,24,78)
		END
	XCALL W_BRDR(WND_1,WB_TITLE,'ORDER MAINTENANCE',
&			WB_TPOS,WBT_TOP,WBT_CENTER)
	XCALL W_PROC(WP_PLACE,WND_1,1,1)	
	XCALL W_DISP(WND_1,WD_CLEAR)
	XCALL W_UPDT
	W_ID = WND_1
	xcall u_logwnd(wnd_1)
	RETURN

