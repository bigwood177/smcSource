SUBROUTINE OECC2		;CC ORDER SUMMARY
	ORDATA	,A	;ORDHDR
	RUNTOT	,D	;ORDER SUBTOTAL
	TAXTOT	,D	;ORDER TAXABLE TOTAL
	FREGHT	,D	;FREIGHT

; 10/13/2005 ssq: print barcode, use sort room printer

.include 'def:hpsub.def'

RECORD	COPTBL
	.INCLUDE 'DEF:RD182A.DEF'

RECORD	TOP_MARGIN
	TM_ESC	,A1
		,A4,	'&l0E'


RECORD	M_BOX
	MB_ESC	,A1
		,A1,	'&'
		,A1,	'l'
	MBOX	,A2
RECORD	M_BOX2
		,A1,	'g'
	TRA	,A1
		,A1,	'h'
		,A1,	'8'
		,A1,	'C'	;vertical spacing

RECORD	EJECT
	E_CHAR	,A1		;<ESC>
		,A4,	"&l0H"	;PAGE EJECT

RECORD	HP_PROG
	HP_ESC	,A1	;ESC
	HP_BOLD	,A4,	'(s#B'

RECORD	ORDHDR

	.INCLUDE 'DEF:RD044A.DEF'

RECORD	COPCTL
	.INCLUDE 'DEF:RD060A.DEF'

RECORD	ARTCDE		;AR TAX CODES
	.INCLUDE 'DEF:RD169A.DEF'
RECORD,X
	.INCLUDE 'DEF:RD169B.DEF'

RECORD	CCINFO
	.INCLUDE 'DEF:RD137A.DEF'

RECORD	CCTRAN
	.INCLUDE 'DEF:RD138A.DEF'

RECORD	TMPCUS
	.INCLUDE 'DEF:RD139A.DEF'

RECORD	CUST_KEY
	CK_CUST		,D6
	CK_NUMBR	,D16

RECORD	ALPH_KEY
	AK_ALPH		,A25
	AK_NUMBR	,D16

RECORD	DIG4_KEY
	DK_DIG4		,D4
	DK_NUMBR	,D16
	DK_TYPE		,A1

RECORD
		,A8,	'MVDAXXXX'
		,A20,	'MASTER CARD         '
		,A20,	'VISA                '
		,A20,	'DISCOVER            '
		,A20,	'AMERICAN EXPRESS    '
		,A20,	'INVALID             '
		,A20,	'INVALID             '
		,A20,	'INVALID             '
		,A20,	'INVALID             '
;                        12345678901234567890
RECORD,X
	CTYP	,8A1
	CDES	,8A20

RECORD	
	MMYY	,D4
RECORD,X
	MM	,D2
	YY	,D2

RECORD	CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD	PBUF
	PLINE	,A80

RECORD	CHANNEL
	CHN044	,D2,04
	CHN060	,D2,03
	CHN137	,D2,29
	CHN138	,D2
	CHN139	,D2
	CHN169	,D2

RECORD	CCKEY
	CCCUS	,D6
	CCNUM	,D16

RECORD	VARS
	CHN182	,D2
	PRINTER_NAME	,A8
	U_NAME	,A25
	TRA_B	,D1
	TRA_Y	,D1
	TRA_W	,D1
	BLUE	,D1
	YELLOW	,D1
	CMPCOD	,A3
	LINCNT	,D5
	b_data	,a100
	b_strng	,a100
	LNAM	,A25
	SNAM	,A12
	SINT	,A3
	SEXT	,D10
	OPNOK	,D1
	BADDAT	,D1
	I	,D5
	SAVIDX	,D4
	TODAY	,D6
	UPDATE	,D1
	DESC_OK	,D1
	F_KEY	,D3
	SELECT	,D1
	ERR	,D1
	SAVRFA	,A6
	WND1	,D4
	CCDAT	,D4
	CCTYP	,A1
	BADTAX	,D1
	TAXAMT	,D10
	TAX	,3D10
	TAXFRT	,D10
	XDAT1	,D4	;YYMM
	XDAT2	,D4	;YYMM
	XDATE	,D8
	ENTRY	,A30
	BLANKS	,A30
	CNGCTL	,D1
	INXCTL	,D1
	WHATNO	,D1
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	DELETE	,D1,3
	LOKCTL	,D1
	SRCCTL	,D1
	BSEND	,D6
	BSMID	,D6
	KEY	,A3
	SWITCH	,D1
	V	,D1
;
PROC
	V = 1
	XCALL RDATE(TODAY)
	ORDHDR = ORDATA
	XCALL ISIO (CHN044,ORDHDR,OORDNO,READ,LOKCTL)

	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF
		
DISPLA,	
	XCALL ISIO(CHN138,CCTRAN,OORDNO,READ,LOKCTL)
	IF (LOKCTL .NE. 0)
		BEGIN
		XCALL MESAG("CAN'T FIND CCTRAN",1)
		GOTO ENDOFF
		END

; save original credit card info...
	CCNUM = CT_NUMBR
	CCDAT = CT_EXDAT
	CCTYP = CT_TYPE

	CALL PAINT
	CALL DISP_CC
	GOTO FRT
;;;>DISPLA,
	CLEAR CNGCTL
	CALL PAINT
NUMBR,
	CTL = '03,21,16,00,#E'
	CALL INPUT
	GOTO(DISPLA,ENDOFF),INXCTL
	IF (ENTRY .EQ. BLANKS)
		BEGIN
		ENTRY(1,16) = CCNUM,	'XXXXXXXXXXXXXXXX' [LEFT]
		END
	CT_NUMBR = ENTRY(1,16)
	ENTRY(1,19) = CT_NUMBR,	'XXXX-XXXX-XXXX-XXXX'
	XCALL OUTPT (ROW,COL,1,ENTRY(1,19),1)
	GOTO ANYCNG
TYPE,
	CTL = '04,21,01,00,A '
	CALL INPUT
	GOTO(DISPLA),INXCTL
	IF (ENTRY .EQ. BLANKS) 
		BEGIN
		ENTRY(1,1) = CCTYP
		XCALL OUTPT (ROW,COL,0,CCTYP,1)
		END
	CT_TYPE = ENTRY(1,1)
	CALL GET_CC_DESC
	IF (DESC_OK) 
	THEN	XCALL OUTPT(ROW,24,0,CDES(I),1)
	ELSE	BEGIN
		XCALL MESAG('Invalid Type',1)
		GOTO TYPE
		END
	GOTO ANYCNG
EXDAT,
	CTL = '05,21,04,04,# '
	CALL INPUT
	GOTO(DISPLA),INXCTL
	IF (ENTRY .EQ. BLANKS)	ENTRY(1,4) = CCDAT,	'XXXX'
	MMYY = ENTRY(1,4)
	IF (MM.LT.0 .OR. MM.GT.12)
		BEGIN
		XCALL MESAG('DATE FORMAT IS MMYY',1)
		GOTO EXDAT
		END

	CT_EXDAT = MMYY
	ENTRY(1,5) = CT_EXDAT,	'XX/XX'
	XCALL OUTPT (ROW,COL,0,ENTRY(1,5),1)
	CALL CHKDAT
	GOTO(EXDAT),BADDAT
	GOTO ANYCNG
TAXCDE,
	CTL = '08,21,03,00,A '
	CALL INPUT
	GOTO(DISPLA),INXCTL
	IF (ENTRY .EQ. BLANKS)
		BEGIN
		ENTRY(1,3) = OTAXFL
		XCALL OUTPT (ROW,COL,0,OTAXFL,1)
		END
	OTAXFL = ENTRY(1,3)
	CALL CALC_TAX
	IF(BADTAX) GOTO TAXCDE
	GOTO ANYCNG
TAX,
	CTL = '09,21,08,00,$-'
	CALL INPUT
	GOTO(DISPLA),INXCTL
	TAXAMT = ENTRY(1,8)
	GOTO ANYCNG
FRT,
	CTL = '10,21,08,00,$-'
	CALL INPUT
	GOTO(DISPLA,ENDOFF),INXCTL
	CT_FRT = ENTRY(1,8)
	FREGHT = CT_FRT
	OFRGHT = FREGHT
	CALL CALC_TAX		;IN CASE FREGHT IS TAXABLE
	GOTO ANYCNG

DISP_CC,
	ENTRY(1,19) = CT_NUMBR,	'XXXX-XXXX-XXXX-XXXX'
	XCALL OUTPT (3,21,0,ENTRY(1,19),1)
	XCALL OUTPT (4,21,0,CT_TYPE,1)
	CALL GET_CC_DESC
	IF (DESC_OK) XCALL OUTPT(4,24,0,CDES(I),1)

	ENTRY(1,5) = CT_EXDAT	,'XX/XX'
	XCALL OUTPT (5,21,0,ENTRY(1,5),1)
	CALL CHKDAT

	ENTRY(1,11) = RUNTOT,	'ZZZ,ZZX.XX-'
	XCALL OUTPT (7,21,0,ENTRY(1,11),1)

	XCALL OUTPT (8,21,0,OTAXFL,1)
	CALL CALC_TAX

	ENTRY(1,11) = FREGHT,	'ZZZ,ZZZ.XX-'
	XCALL OUTPT (10,21,0,ENTRY(1,11),1)

ANYCNG,
	ENTRY(1,11) = (RUNTOT + TAXAMT + FREGHT), 'ZZZ,ZZX.XX-'
	XCALL OUTPT (11,21,0,ENTRY(1,11),1)
	XCALL ANYCN(CNGCTL,WHATNO)
	GOTO (PROCES,CNGBR),CNGCTL+1
CNGBR,
	GOTO (NUMBR,TYPE,EXDAT,TAXCDE,TAX,FRT), WHATNO
	GOTO ANYCNG
PROCES,
	CALL CHKDAT
	GOTO (ANYCNG),BADDAT

	CT_SUB = RUNTOT
	CT_FRT = FREGHT
	CT_TAX = TAXAMT
	XCALL ISIO(CHN138, CCTRAN, OORDNO, WRITE, LOKCTL)
	IF (LOKCTL .NE. 0) XCALL MESAG ('ERROR WRITING CCTRAN',1)

; set billing fields in ordhdr...
	XCALL IO(CHN060,COPCTL,1,READ,LOKCTL)	;DEFAULT ACCOUNTS
	UNLOCK CHN060

	FOR I FROM 1 THRU 3
		BEGIN
		OTAX(I) = TAX(I)
		OTXACT(I) = ARTGLN(I)	;TAX ACCOUNTS
		END

	OFRGHT = FREGHT
	OFRACT = DEFRET

	OSALE = RUNTOT 
	XCALL ISIO (CHN044,ORDHDR,OORDNO,WRITE,LOKCTL)
	ORDATA = ORDHDR
	CCCUS = OCUSNO		;SSQ 6-17-02	
;May need to change ccinfo data...
;;;	XCALL ISIO (CHN137,CCINFO,CCNUM,READ,LOKCTL)
	XCALL ISIO (CHN137,CCINFO,CCKEY,READ,LOKCTL)
	IF(CI_NUMBR .NE. CT_NUMBR)CALL UPD_CCINFO
	IF(CI_TYPE .NE. CT_TYPE) CALL UPD_CCINFO
	IF(CI_EXDAT.NE. CT_EXDAT) CALL UPD_CCINFO
	CALL PRT_CC

ENDOFF,
	CALL CLOSE
	XRETURN
;=========================================================

CHKDAT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; CHECK EXPIRATION DATE
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR BADDAT

	XDAT1(1,2) = CT_EXDAT(3,4)
	XDAT1(3,4) = CT_EXDAT(1,2)
	XDAT2(1,2) = TODAY(5,6)
	XDAT2(3,4) = TODAY(1,2)
	IF (XDAT2 .GT. XDAT1) 
		BEGIN
		XCALL MESAG('Card has Expired!',1)
		BADDAT = 1
		END
	RETURN
;--------------------------------------------

UPD_CCINFO,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (CI_NUMBR .NE. CT_NUMBR)
	THEN	BEGIN
		XCALL ISIO (CHN137,CCINFO,CCNUM,DELETE,LOKCTL)	;ORIGINAL
		CI_NUMBR = CT_NUMBR
		CI_TYPE = CT_TYPE
		CI_EXDAT = CT_EXDAT
		XCALL ISIO (CHN137,CCINFO,CI_NUMBR,STORE,LOKCTL)
		END
	ELSE	BEGIN
		CI_TYPE = CT_TYPE
		CI_EXDAT = CT_EXDAT
		XCALL ISIO (CHN137,CCINFO,CI_NUMBR,WRITE,LOKCTL)
		END
	RETURN

PRT_CC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL ASCII(27,HP_ESC)
	
	E_CHAR = HP_ESC

	XCALL SREP(OSLMAN,LNAM,SNAM,SINT,SEXT)


	OPEN(14,O,'SPL:OECC2.SPL')
		
;----------------------------
; get the printer info...

	XCALL WHO (CMPCOD)
	USING CMPCOD SELECT		
	('CAT'),	CALL SMP
	('SMC'),	BEGIN
			CALL SMC

			IF (U_NAME .EQ. 'WCALL') CALL WCALL
			IF (OSCAC .EQ. '10') CALL WCALL
			END
	(),		CALL SMC
	ENDUSING


; mailbox stuff... 

	TRA_B = BLUE
	TRA_Y = YELLOW


	CLEAR TBL_KEY
	TBLCOD = 'MB'
	MB_SLSM = OSLMAN
	XCALL ISIO (CHN182, COPTBL, TBL_KEY, READ, LOKCTL)
	IF (LOKCTL .NE. 0) MB_MBOX = 0
	IF (OSCAC.EQ.'10' .OR. U_NAME.EQ.'WCALL') MB_MBOX = 0

	MB_ESC = HP_ESC
;;;	LM_ESC = HP_ESC
	TM_ESC = HP_ESC
	IF(MB_MBOX .GT. 1)
	THEN	MBOX = MB_MBOX+1,	'ZZ' [LEFT]
	ELSE	MBOX = MB_MBOX,		'ZZ' [LEFT]


	TRA = TRA_B,	'X'	;BLUE
	DISPLAY(14,M_BOX(1,%TRIM(M_BOX)))
	DISPLAY(14,M_BOX2)

	TRA = TRA_Y,	'X'	;YELLOW
	DISPLAY(46,M_BOX(1,%TRIM(M_BOX)))
	DISPLAY(46,M_BOX2)


;  hp stuf

	xcall HP (14, hpDots, 0)
	xcall HP (14, hpFont, hp12CPI+hpMEDIUM)

	tm_esc = hp_esc
	display (14, TOP_MARGIN)

	b_data(1,2) = 'S~'
	b_data(3,8) = OORDNO,	'XXXXXX'
	xcall b128 (b_data, b_strng, 70)
	pline(40,80) = b_strng
	xcall HP (14,HPpos,8,20,0,pline(20,80))
	xcall of128
	
	LINCNT = 9
;----------------------------

	PLINE = 'Credit card info for Order:'
	PLINE(29,35) = OORDNO,	'XXXXXX'
	PLINE(40,47) = TODAY,	'XX/XX/XX'
	PLINE(50,61) = SNAM
	CALL PRINT

	PLINE = 'PO'
	PLINE(5,14) = OPONO
	PLINE(16,18) = 'Job'
	PLINE(20,29) = OJOBNO
	CALL PRINT

	PLINE(1,6) = OCUSNO,	'ZZZZZX'
	PLINE(8,38) = OCUSNM
	CALL PRINT

	PLINE = 'Credit Card #'
	PLINE(17,36) = CT_NUMBR,	'XXXX-XXXX-XXXX-XXXX'
	CALL PRINT
	PLINE = 'Type'
	PLINE(17,37) = CDES(SAVIDX)
	CALL PRINT
	PLINE = 'Expiration Date'
	PLINE(17,21) = CT_EXDAT,		'XX/XX'
	CALL PRINT
	PLINE = 'Order Sub Total'
	PLINE(21,31) = RUNTOT,		'ZZZ,ZZX.XX-'
	CALL PRINT
	PLINE = 'Tax Code:'
	PLINE(11,14) = OTAXFL
	PLINE(16,46) = ARTDSC
	CALL PRINT
	PLINE = 'Tax'
	PLINE(21,31) = TAXAMT,	'ZZZ,ZZX.XX-'
	CALL PRINT
	PLINE = 'Shipping & Handling'
	PLINE(21,31) = FREGHT,	'ZZZ,ZZX.XX-'
	CALL PRINT

	xcall HP (14, hpFont, hp10CPI+hpBOLD)

;;;	HP_BOLD(3,3) = '3'	;BOLD
;;;	PLINE = HP_PROG
;;;	CALL PRINT
	PLINE = 'Order Total'
	PLINE(21,31) = (RUNTOT+TAXAMT+FREGHT),	'ZZZ,ZZX.XX-'
	CALL PRINT


	xcall HP (14, hpFont, hp12CPI+hpMEDIUM)

;;;	HP_BOLD(3,3) = '0'	;MEDIUM
;;;	PLINE = HP_PROG
	CALL PRINT
	PLINE = 'Auth # ___________________________'
	CALL PRINT

	IF (OCUSNO .EQ. 10) CALL TMP_CUS
	WRITES(14,EJECT)
	CLOSE 14
	LPQUE ('SPL:OECC2.SPL')
	RETURN
TMP_CUS,
	SWITCH = 5
	XCALL FILES (39,'SI',139,SWITCH)
	LOKCTL = 1
	XCALL ISIO (39,TMPCUS,OORDNO,READ,LOKCTL)
	IF (LOKCTL .NE. 0) GOTO NO_TMP_CUS

	CALL PRINT
	PLINE = T_NAME
	CALL PRINT
	PLINE = T_ADD1
	CALL PRINT
	PLINE = T_ADD2
	CALL PRINT
	PLINE = T_CITY
	PLINE(17,18) = T_STATE
	PLINE(20,29) = T_ZIP
	CALL PRINT
NO_TMP_CUS,
	CLOSE 39
	RETURN
;------------------------------------------------------
PRINT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	xcall HP (14,HPpos,LINCNT,1,0,pline)
	CLEAR PLINE
	INCR LINCNT
	xcall HP (14,HPpos,LINCNT,1,0,pline)
	RETURN
;------------------------------------------------------

SMC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;4=TRAY1, 1=TRAY2, 5=TRAY3

	PRINTER_NAME = 'BLUE'
	BLUE = 1	;TRAY 2 IS BLUE
	YELLOW = 5	;TRAY 3 IS YELLOW

	RETURN
;----------------------------------------------------------

SMP,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;4=TRAY1, 1=TRAY2, 5=TRAY3

	PRINTER_NAME= 'HP 2300'

;for now use same settings as smc... ssq 7/10/03
	BLUE = 1	;TRAY 2 IS BLUE
	YELLOW = 5	;TRAY 3 IS YELLOW

	RETURN
;----------------------------------------------------------

WCALL,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;4=TRAY1, 1=TRAY2, 5=TRAY3

	PRINTER_NAME= 'new_blue'
	BLUE = 4	;TRAY 1 IS BLUE
	YELLOW = 1	;TRAY 2 IS YELLOW

	RETURN
;----------------------------------------------------------

PAINT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL OUTPT (2,1,2,' ',1)

	XCALL OUTPT( 3,5,0,'1. NUMBER',1)
	XCALL OUTPT( 4,5,0,'2. TYPE',1)
	XCALL OUTPT( 5,5,0,'3. EXP DATE',1)
	XCALL OUTPT( 7,5,0,'   SUB-TOTAL',1)
	XCALL OUTPT( 8,5,0,'4. TAX CODE',1)
	XCALL OUTPT( 9,5,0,'5. TAX AMOUNT',1)
	XCALL OUTPT(10,5,0,'6. FREIGHT',1)
	XCALL OUTPT(11,5,0,'   ORDER TOTAL',1)

	RETURN
;-------------------------------------------------------

CALC_TAX,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR BADTAX 
	SRCCTL = 2
	XCALL SERCH (CHN169,ARTCDE,OTAXFL,1,3,BSEND,BSMID,SRCCTL,4,4,9,0,0,0,0)
	IF (SRCCTL.EQ.0) 
		BEGIN
		XCALL OUTPT (8,30,0,ARTDSC,1)	;;;
		USING OTAXFL(1,1) SELECT
		('W'),	TAXFRT = OFRGHT			;WISC
		('N'),	TAXFRT = OFRGHT			;NEB
		(),	TAXFRT =
		ENDUSING

		IF (OTAXFL(1,2) .EQ. 'MN') TAXFRT = OFRGHT	;SSQ 1-9-02
		END
SKP1,
	IF (SRCCTL.OR.OTAXFL.EQ.'   ')
		BEGIN
		XCALL MESAG('INVALID TAX CODE',1)
		BADTAX = 1
		RETURN
		END	

	TAX(1) = ((TAXTOT+TAXFRT) * ARTPRT(1) / 100) # 3
	TAX(2) = ((TAXTOT+TAXFRT) * ARTPRT(2) / 100) # 3
	TAX(3) = ((TAXTOT+TAXFRT) * ARTPRT(3) / 100) # 3

	TAXAMT = TAX(1) + TAX(2) + TAX(3)

	ENTRY(1,11) = TAXAMT,	'ZZZ,ZZX.XX-'
	XCALL OUTPT (9,21,0,ENTRY(1,11),1)
	RETURN
;-------------------------------------------------------

GET_CC_DESC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR DESC_OK

	FOR I FROM 1 THRU 8
		BEGIN
		IF (CTYP(I).EQ.'X')EXITLOOP
		IF (CTYP(I).EQ.CT_TYPE) 
			BEGIN
			DESC_OK = 1
			SAVIDX = I
			EXITLOOP
			END
		END
	RETURN
;-------------------------------------------------------

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK

	CHN182 = 17

	SWITCH = 5
	XCALL FILES (33,'SU',138,SWITCH)	;CCTRAN
	IF (SWITCH .EQ. 9) RETURN
	CHN138 = 33

	XCALL FILES (34,'I',169,SWITCH)		;ARTCDE
	IF(SWITCH .EQ. 9) RETURN
	CHN169 = 34

	XCALL IO (CHN169,ARTCDE,1,READ,LOKCTL)
	IF (LOKCTL .NE. 0) RETURN
	BSEND = ORG169
	OPNOK = 1
	RETURN
;-------------------------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (CHN138) CLOSE CHN138
	IF (CHN169) CLOSE CHN169
	RETURN
;-------------------------------------------------------

INPUT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL INPUT(ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)

	RETURN
;------------------------------------


