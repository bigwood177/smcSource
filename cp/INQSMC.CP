;INQSMC.CP
; INQMNT.CP
;  IMFMNT / CP		isam
;
;
;		ITEM MASTER FILE MAINTENANCE
;
;
	.include 'wnd:windows.def'

RECORD ITMMAS		;
		.INCLUDE 'DEF:RD041A.def'
RECORD	ITMKEY
		.INCLUDE 'DEF:RD041K.DEF'

RECORD DUMINV		;
		.INCLUDE 'DEF:RD041B.def'
RECORD	COPTBL
		.INCLUDE 'DEF:RD182A.DEF'

RECORD	POP
	.INCLUDE 'DEF:POP1.DEF'

RECORD	FKEYS
	.INCLUDE 'DEF:FUNKEY.DEF'

RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD	CHANNEL
	CHN041	,D2
	CHN182	,D2

RECORD	WVARS
	W_ID	,D4
	WND_1	,D4
	WND_2	,D4
	WN_TNMBR	,D4
	WN_NAME		,A6,	'IMFMNT'
	W2_NAME		,A6

RECORD	KEY_DSP
	KD1	,A3
		,A1
	KD2	,A3
		,A1
	KD3	,A5

RECORD	VARS
	IN_TABLE	,D1	;SSQ 9-10-03
	KEY_FOUND	,D1
	MM_CODE	,D5
	F_KEY	,D3
	MODE	,A14
	DECMAL	,D18
	KEY	,A15
	KITMNO	,A15
	YESNO	,2A1,	'Y','N'
	JUSTIF	,D1

	PGM	,D2
	OPNOK	,D1
	OPTION	,D1
	ENTRY	,A31
	INXCTL  ,D1
	CNGCTL	,D1
	WHATNO	,D2
	SELECT	,D1
	ADDCNT	,D5
	KEY1	,A20
	BSEND	,D5
	BSMID	,D5
	FULL	,D1
	PSEND	,D5
	PSMID	,D5
	PSRCTL	,D1
	CSMID	,D5
	MAXPRD	,D5
	MAXREC	,D5
	OPENED	,D1
	SRCCTL	,D1
	DEFALT	,A2
	LOCTNS	,D2
	LOCCTR	,D2
	DELCTR	,D3
	SWITCH	,D1,	1
	SAVREC	,D5
	TIPSIS	,D1
	V	,D1
	READ	,D1,	0			;IO READ FLAG FOR I-O
	WRITE	,D1,	1			;IO WRITE
	STORE	,D1,	2
	DELETE	,D1,	3
	LOKCTL	,D1				;RECORD-LOCKED INDICATOR
;
PROC 
	XCALL TERID (V)
	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF

	CALL INIT_WINDOW
MENU,
	XCALL W_DISP (W_ID, WD_CLEAR)
	XCALL W_DISP (W_ID, WD_POS, 3,9,'PLEASE SELECT APPLICATION')
	XCALL W_DISP (W_ID, WD_POS, 5,15,'1. INVENTORY MAINTENANCE')
	XCALL W_DISP (W_ID, WD_POS, 6,15,'2. PRINT')
MINPUT,
	XCALL WINPT (W_ID, 3,36,1,1,'#E',ENTRY,INXCTL)
	GOTO (MINPUT,ENDOFF), INXCTL
	PGM = ENTRY(1,1)
	GOTO (DISPLA,LIST),PGM
	GOTO MINPUT


DISPLA,
	ITMMAS =
	CNGCTL =

DISPL2,
	XCALL W_DISP (W_ID, WD_CLEAR)
	XCALL W_DISP (W_ID, WD_POS, 4,2,'1. ITEM #')
	XCALL W_DISP (W_ID, WD_POS, 6,2,'2. DESCR')
	XCALL W_DISP (W_ID, WD_POS, 8,2,'3. PROD CAT')
	XCALL W_DISP (W_ID, WD_POS,10,2,'4. ON-HAND')

	XCALL W_DISP (W_ID, WD_POS,12,2,'5. ALLOCATD')
	XCALL W_DISP (W_ID, WD_POS,14,2,'6. ON-ORDER')
	XCALL W_DISP (W_ID, WD_POS,16,2,'7. ORD UPTO')
	XCALL W_DISP (W_ID, WD_POS,18,2,'8. REO LVL')
	XCALL W_DISP (W_ID, WD_POS,20,2,'9. AVG COST')
	XCALL W_DISP (W_ID, WD_POS,22,1,'10. PRICE')

	XCALL W_DISP (W_ID, WD_POS, 8,26,'11. DEPT/LOC')
	XCALL W_DISP (W_ID, WD_POS,10,26,'12. STOCKED')
	XCALL W_DISP (W_ID, WD_POS,12,26,'13. PER BNDLE')
	XCALL W_DISP (W_ID, WD_POS,14,26,'14. PER CASE')

	XCALL W_DISP (W_ID, WD_POS, 4,48,'15. WEIGHT')
	XCALL W_DISP (W_ID, WD_POS, 5,48,'16. UNIT MEASURE')
	XCALL W_DISP (W_ID, WD_POS, 7,48,'17. QTY SOLD MTD')
	XCALL W_DISP (W_ID, WD_POS, 8,48,'18. QTY SOLD YTD')
	XCALL W_DISP (W_ID, WD_POS, 9,48,'19. SALES $ MTD')
	XCALL W_DISP (W_ID, WD_POS,10,48,'20. SALES $ YTD')
	XCALL W_DISP (W_ID, WD_POS,11,48,'21. COST MTD')
	XCALL W_DISP (W_ID, WD_POS,12,48,'22. COST YTD')
	XCALL W_DISP (W_ID, WD_POS,14,48,'23. BACKORDERABLE ?')
	XCALL W_DISP (W_ID, WD_POS,15,48,'24. TAXABLE ?')

	XCALL W_DISP (W_ID, WD_POS,17,48,'25. PIC CODE')
	XCALL W_DISP (W_ID, WD_POS,18,48,'26. CFG PRICE (Y/N)')
	XCALL W_DISP (W_ID, WD_POS,19,48,'27. NO NOTES (Y/N)')
	XCALL W_DISP (W_ID, WD_POS,20,48,'28. ASK PRESSED (Y/N)')

ITMNUM,
	CALL POP_KEY

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	CTL = '04,15,15,01,AX'
;;;	CALL INPUT

	GO TO (DISPLA,MENU,SCROLL), INXCTL

;;;
;;;	USING F_KEY SELECT
;;;	(F_01),	BEGIN
;;;		CALL POP_KEY
;;;		END
;;;	(),	BEGIN
;;;		CALL ITEM_KEY
;;;		END
;;;	ENDUSING
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
	GOTO (DISPLA),INXCTL

NEWOK,
	CLEAR KEY_DSP
	KD1 = IF1
	KD2 = IF2
	KD3 = IF3
	XCALL W_DISP (W_ID, WD_POS, 4,32,KEY_DSP)
	
	ITEMNO = KITMNO
	GOTO (DSCRIP),SELECT
	CALL FNDREC
	GO TO ANYCNG

DSCRIP,
	CTL = '06,15,30,01,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	DESCR = ENTRY (1,30)
	GO TO (ANYCNG), CNGCTL
PRODCT,
	CTL = '08,15,02,00,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	PRDCAT = ENTRY (1,2)
	GO TO (ANYCNG), CNGCTL
QONHND,
	CTL = '10,15,08,00,#-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	QTYONH(1) = ENTRY (1,8)
	GO TO (ANYCNG), CNGCTL
QALLOC,
;;;	IF (SELECT.NE.1.AND.STOCK.EQ.'S') GOTO BADCNG	;removed 1/18/95
	CTL = '12,15,08,00,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	QTYCOM (1) = ENTRY
	GO TO (ANYCNG), CNGCTL
QONODR,
	CTL = '14,15,08,00,#-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	QTYONO(1) = ENTRY (1,8)
	GO TO (ANYCNG), CNGCTL
ORDRUP,
	CTL = '16,15,08,00,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	ORDUPT(1) = ENTRY(1,8)
	GO TO (ANYCNG), CNGCTL
REORDR,
	CTL = '18,15,08,00,#N'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	REOLVL(1) = ENTRY (1,8)
	GO TO (ANYCNG), CNGCTL
UCOST,
	CTL = '20,15,09,01,# '
	CALL INPUT
	GO TO (DISPLA),INXCTL
	AVGCST = ENTRY(1,9)
	ENTRY(1,11) = AVGCST,	'ZZZ,ZZX.XXX' [LEFT]
	XCALL W_DISP (W_ID, WD_POS, 20,15, ENTRY(1,11) )
	GO TO (ANYCNG), CNGCTL
PRCE1,
	IF (IN_TABLE .EQ. $TRUE)
		BEGIN
		XCALL WNMSG (W_ID, 24,'(See Table)',1)
		GOTO (USCODE,ANYCNG),CNGCTL+1
		END
		
	CTL = '22,15,08,00,# '
	CALL INPUT
	PRICE = ENTRY
	ENTRY(1,10) = PRICE,	'ZZ,ZZX.XXX' [LEFT]
	XCALL W_DISP (W_ID, WD_POS, 22,15, ENTRY(1,11) )
	GO TO (DISPLA), INXCTL
	GO TO (ANYCNG), CNGCTL

;-------------------------------------
USCODE,
	CTL = '08,40,02,00,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	USRDEF = ENTRY(1,2)
	GO TO (ANYCNG), CNGCTL
STOCK,
	XCALL W_DISP (W_ID, WD_POS, 24,1,'Stock Flag: (S) STOCKED or (N) NON-STOCK')
	CTL = '10,40,01,00,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	IF (ENTRY.EQ.' ')
	BEGIN
	  ENTRY = 'N'
	  XCALL W_DISP (W_ID, WD_POS, ROW,COL,ENTRY(1,1))
	END
	STOCK = ENTRY
	IF (STOCK.NE.'S'.AND.STOCK.NE.'N') GOTO STOCK
	XCALL W_DISP (W_ID, WD_POS, 24,1,'\')
	GO TO (ANYCNG), CNGCTL
FTBNDL,
	CTL = '12,40,03,00,# '
	CALL INPUT
	GOTO (DISPLA),INXCTL
	FTBNDL = ENTRY(1,3)
	GOTO (ANYCNG),CNGCTL
FTCASE,
	CTL = '14,40,04,00,# '
	CALL INPUT
	GOTO (DISPLA),INXCTL
	FTCASE = ENTRY(1,4)
	GOTO (ANYCNG),CNGCTL
;-------------------------------------

WAYT,
	CTL = '04,68,06,00,$ '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	WEIGHT = ENTRY (1,6)
	GO TO (ANYCNG), CNGCTL
UMEAS,
	CTL = '05,68,02,00,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	IF (ENTRY.NE.'  ') GO TO UMEAS1
	ENTRY = 'EA'
	XCALL W_DISP (W_ID, WD_POS, 5,68,ENTRY)
UMEAS1,
	SUOFM = ENTRY (1,2)
	GO TO (ANYCNG), CNGCTL
QMTD,
	CTL = '07,68,08,00,#-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	QTYMTD = ENTRY
	GO TO (ANYCNG), CNGCTL
QYTD,
	CTL = '08,68,09,00,#-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	QTYYTD = ENTRY
	GO TO (ANYCNG), CNGCTL
SMTD,
	CTL = '09,66,10,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	SLSMTD = ENTRY
	GO TO (ANYCNG), CNGCTL
SYTD,
	CTL = '10,66,10,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	SLSYTD = ENTRY
	GO TO (ANYCNG), CNGCTL
CMTD,
	CTL = '11,66,10,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	CSTMTD = ENTRY
	GO TO (ANYCNG), CNGCTL
CYTD,
	CTL = '12,66,10,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	CSTYTD = ENTRY
	GO TO (ANYCNG), CNGCTL
RCODE,
	CTL = '14,68,01,00,YY'
	CALL INPUT
	BOCODE = INXCTL - 1
	INXCTL =
	GO TO (ANYCNG), CNGCTL
TFLAG,
	CTL = '15,68,01,00,YY'
	CALL INPUT
	TXFLAG = ENTRY (1,1)
	INXCTL =
	GO TO ANYCNG

CNGBR,
	IF (SELECT.EQ.2.AND.WHATNO.EQ.1) GO TO BADCNG
	GO TO (ITMNUM,DSCRIP,PRODCT,QONHND,QALLOC,QONODR,ORDRUP,REORDR,
&		UCOST,PRCE1,USCODE,STOCK,FTBNDL,FTCASE,WAYT,UMEAS,QMTD,
&		QYTD,SMTD,SYTD,CMTD,CYTD,RCODE,TFLAG), WHATNO

	GO TO BADCNG

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
FNDREC,

	TBL_KEY(1,2) = 'I1'
	I1_KEY = KITMNO
	XCALL ISIO (5,COPTBL,TBL_KEY,READ,LOKCTL)
	IF (LOKCTL .EQ. 0)
	THEN	IN_TABLE = $TRUE
	ELSE	IN_TABLE = $FALSE

	XCALL W_DISP (W_ID, WD_POS, 24,1,WD_CLR, WDC_LIN)
	CTL =

	CLEAR KEY_DSP
	KD1 = IF1
	KD2 = IF2
	KD3 = IF3
	XCALL W_DISP (W_ID, WD_POS, 4,15,ITEMNO)
	XCALL W_DISP (W_ID, WD_POS, 4,32,KEY_DSP)

	XCALL W_DISP (W_ID, WD_POS, 6,15,DESCR)
	XCALL W_DISP (W_ID, WD_POS, 8,15,PRDCAT)

	ENTRY(1,11) = QTYONH,	'ZZ,ZZZ,ZZX-' [LEFT]
	XCALL W_DISP (W_ID, WD_POS, 10,15,ENTRY(1,11))

	ENTRY(1,11) = QTYCOM,	'ZZ,ZZZ,ZZX-' [LEFT]
	XCALL W_DISP (W_ID, WD_POS, 12,15, ENTRY(1,11))

	ENTRY(1,11) = QTYONO,	'ZZ,ZZZ,ZZX-' [LEFT]
	XCALL W_DISP (W_ID, WD_POS, 14,15, ENTRY(1,11) )

	ENTRY(1,11) = ORDUPT,	'ZZ,ZZZ,ZZX-' [LEFT]
	XCALL W_DISP (W_ID, WD_POS, 16,15, ENTRY(1,11) )

	ENTRY(1,11) = REOLVL,	'ZZ,ZZZ,ZZX-' [LEFT]
	XCALL W_DISP (W_ID, WD_POS, 18,15, ENTRY(1,11) )

	ENTRY(1,11) = AVGCST,	'ZZ,ZZX.XXX' [LEFT]
	XCALL W_DISP (W_ID, WD_POS, 20,15, ENTRY(1,11) )


	IF (IN_TABLE .EQ. $TRUE)
		BEGIN
		PRICE = 0	;per SteveM 3-18-05
		XCALL W_DISP (W_ID, WD_POS, 22,285,'(See Table)')
		END		
	ENTRY(1,11) = PRICE,	'ZZ,ZZX.XXX' [LEFT]
	XCALL W_DISP (W_ID, WD_POS, 22,15,ENTRY(1,11) )

;---------------------------------------
	XCALL W_DISP (W_ID, WD_POS, 8,40,USRDEF)
	XCALL W_DISP (W_ID, WD_POS,10,40,STOCK)

	ENTRY(1,3) =  FTBNDL, 'ZZZ' [LEFT]
	XCALL W_DISP (W_ID, WD_POS, 12,40, ENTRY(1,3) )

	ENTRY(1,4) = FTCASE,	'ZZZZ' [LEFT]
	XCALL W_DISP (W_ID, WD_POS, 14,40, ENTRY(1,4) )

;---------------------------------------
	ENTRY(1,7) = WEIGHT,	'ZZZX.XX' [LEFT]
	XCALL W_DISP (W_ID, WD_POS, 4,68, ENTRY(1,7) )

	XCALL W_DISP (W_ID, WD_POS, 5,68,SUOFM)

	ENTRY(1,10) = QTYMTD,	'ZZ,ZZZ,ZZX' [LEFT]
	XCALL W_DISP (W_ID, WD_POS, 7,68, ENTRY(1,10) )

	ENTRY(1,10) = QTYYTD,	'ZZ,ZZZ,ZZX' [LEFT]
	XCALL W_DISP (W_ID, WD_POS, 8,68, ENTRY(1,10) )

	ENTRY(1,10) = SLSMTD,	'ZZ,ZZZ,ZZX' [LEFT]
	XCALL W_DISP (W_ID, WD_POS, 9,68, ENTRY(1,10) )

	ENTRY(1,10) = SLSYTD,	'ZZ,ZZZ,ZZX' [LEFT]
	XCALL W_DISP (W_ID, WD_POS,10,68, ENTRY(1,10) )

	ENTRY(1,10) = CSTMTD,	'ZZ,ZZZ,ZZX' [LEFT]
	XCALL W_DISP (W_ID, WD_POS,11,68, ENTRY(1,10) )

	ENTRY(1,10) = CSTYTD,	'ZZ,ZZZ,ZZX' [LEFT]
	XCALL W_DISP (W_ID, WD_POS,12,68, ENTRY(1,10) )

	XCALL W_DISP (W_ID, WD_POS, 14,68,YESNO(BOCODE+1))
	XCALL W_DISP (W_ID, WD_POS, 15,68,TXFLAG)

	XCALL W_DISP (W_ID, WD_POS, 17,68, IPIC)

	USING ICFG SELECT
	(1,2),	XCALL W_DISP (W_ID, WD_POS, 18,68,YESNO(ICFG))
	ENDUSING

	USING INN SELECT
	(1,2),	XCALL W_DISP (W_ID, WD_POS, 19,68,YESNO(INN))
	ENDUSING

	USING IPF SELECT
	(1,2),	XCALL W_DISP (W_ID, WD_POS, 20,68,YESNO(IPF))
	ENDUSING

	RETURN
;-------------------------------------------------------------

;==============================================================
;==================== INTERNAL ROUTINES =======================

POP_KEY,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; Find by item # & f_keys
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	XCALL W_PROC(WP_PLACE, WND_2, 4, 4)
P_DISPLA,
	CLEAR CNGCTL
	XCALL W_DISP(WND_2, WD_CLEAR)
	XCALL W_DISP(WND_2, WD_POS, 1,1, '1. ITEM #')
	XCALL W_DISP(WND_2, WD_POS, 2,1, '2. F1_KEY')
	XCALL W_DISP(WND_2, WD_POS, 3,1, '3. F2_KEY')
	XCALL W_DISP(WND_2, WD_POS, 4,1, '4. F3_KEY')
P_ITEM,
	XCALL WINPT (WND_2,1,13, 15, 00, 'AE', ENTRY, INXCTL)
	GOTO (P_DISPLA, P_ENDOFF),INXCTL
	K_ITEM = ENTRY(1,15)
	GOTO (P_ANY),CNGCTL
P_F1,
	XCALL WINPT (WND_2,2,13, 3, 00, '# ', ENTRY, INXCTL)
	GOTO (P_DISPLA),INXCTL
	MM_CODE = ENTRY(1,3)
	K_F1 = MM_CODE,	'XXX'
	CALL MEMO_KEY
	IF (KEY_FOUND) 	XCALL W_DISP (WND_2, WD_POS, 2,20, MM_SHORT)
	GOTO (P_ANY),CNGCTL
P_F2,
	XCALL WINPT (WND_2,3,13, 3, 00, '# ', ENTRY, INXCTL)
	GOTO (P_DISPLA),INXCTL
	MM_CODE = ENTRY(1,3)
	K_F2 = MM_CODE,	'XXX'
	CALL MEMO_KEY
	IF (KEY_FOUND) 	XCALL W_DISP (WND_2, WD_POS, 3,20, MM_SHORT)
	GOTO (P_ANY),CNGCTL
P_F3,
	XCALL WINPT (WND_2,4,13, 5, 00, '# ', ENTRY, INXCTL)
	GOTO (P_DISPLA),INXCTL
	MM_CODE = ENTRY(1,5)
	K_F3 = MM_CODE,	'XXXXX'
	CALL MEMO_KEY
	IF (KEY_FOUND) XCALL W_DISP (WND_2, WD_POS, 4,20, MM_SHORT)
	GOTO (P_ANY),CNGCTL
P_ANY,	
	XCALL WANCN (WND_2, 6, CNGCTL, WHATNO)
	GOTO (P_PROCES, P_CNGBR),CNGCTL+1
P_CNGBR,
	GOTO (P_ITEM, P_F1, P_F2, P_F3),WHATNO
	GOTO P_ANY


P_PROCES,
	XCALL W_DISP (W_ID, WD_POS, 4,15, KITMNO)
	KITMNO = K_ITEM
	CLEAR K_MAT
;;;	CLEAR LOKCTL
;;;	XCALL ISIO (CHN041, ITMMAS, ITMKEY, READ, LOKCTL)
	XCALL W_PROC (WP_REMOVE, WND_2)
	GOTO EXIT_KEY

P_ENDOFF,
	LOKCTL = 1			;ABORT
	XCALL W_PROC (WP_REMOVE, WND_2)
;;;	GOTO EXIT_KEY
;;;	INXCTL = 1
	RETURN
;------------------------------------------------------------

MEMO_KEY,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR TBL_KEY
	TBLCOD = 'MM'
	MM_KEY = MM_CODE
	READ (CHN182,COPTBL,TBL_KEY)[ERR=NOT_KEY]
	KEY_FOUND = 1		
	RETURN
NOT_KEY,
;;;	XCALL WNMSG (WND_2, 6, 'MEMO NOT FOUND',1)
	KEY_FOUND = 0
	RETURN
;-------------------------------------------------------------


ITEM_KEY,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; Find by item number
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CLEAR ITMKEY
	K_F1 = '000'
	K_F2 = '000'
	K_F3 = '00000'

	IF (JUSTIF) XCALL FRMAT (ENTRY(1,15),15)
	XCALL W_DISP (W_ID, WD_POS, 4,15,ENTRY(1,15))
	KITMNO = ENTRY (1,15)
	K_ITEM = KITMNO

	CLEAR TBL_KEY
	TBLCOD = 'IK'
	IK_ITEM = KITMNO

	READ (CHN182,COPTBL,TBL_KEY)[ERR=NO_DEFAULT]
	K_F1 = IK_F1,	'XXX'
	K_F2 = IK_F2,	'XXX'
	K_F3 = IK_F3,	'XXXXX'

NO_DEFAULT,

;;;	LOKCTL = 0
;;;	XCALL ISIO (CHN041, ITMMAS, KITMNO, READ, LOKCTL)
	GOTO EXIT_KEY
;--------------------------------------------------------------


EXIT_KEY,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	LOKCTL = 0
	READ (CHN041, ITMMAS, ITMKEY, KEYNUM:1) [ERR=P_BAD_KEY]	;KRF = 2
	GOTO P_KEY_OK
P_BAD_KEY,
	CLEAR ITMMAS
	KITMNO = K_ITEM
	LOKCTL = 2		;key not same
P_KEY_OK,
	CLEAR INXCTL, SELECT

	USING LOKCTL SELECT
	(0),	BEGIN
		SELECT = 2		;item exists, change mode
		CNGCTL = 1		;change mode
		END

	(1),	INXCTL = 1		;ABORT

	(),	BEGIN
		IF1 = K_F1
		IF2 = K_F2
		IF3 = K_F3
		IMAT = K_MAT
		SELECT = 1		;add new item
		END
	ENDUSING

	RETURN
;--------------------------------------------------------------
;==============================================================


INPUT,
	XCALL WINPT (W_ID, ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL, F_KEY)
	RETURN
BADCNG,
	XCALL WNMSG (W_ID, 24, 'INVALID SELECTION',1)
ANYCNG,
;;;	CNGCTL = 6
;;;	XCALL ANYCN (CNGCTL,WHATNO)
	XCALL W_DISP (W_ID, WD_POS, 24, 1, WD_CLR, WDC_LIN,
&		'FIELD # TO CHANGE           <TAB> = DELETE')

	XCALL WINPT (W_ID, 24,20,02,00,'#T',ENTRY,INXCTL)
	IF (INXCTL .EQ. 3)
		BEGIN
		XCALL W_DISP(W_ID, WD_POS, 24,1,WD_CLR, WDC_LIN,
&			'DELETE, ARE YOU SURE?')

		XCALL WINPT (W_ID, 24,24,01,01,'YN',ENTRY,INXCTL)
		GOTO (ANYCNG),INXCTL-1
		XCALL ISIO (CHN041,ITMMAS,ITMKEY,DELETE,LOKCTL)
		GOTO DISPLA
		END
	WHATNO = ENTRY(1,2)
	IF (WHATNO .EQ. 0)
	THEN	CLEAR CNGCTL
	ELSE	CNGCTL = 1

	GO TO (PROCES,PROCES,CNGBR), CNGCTL+2

SCROLL,
	GO TO (SCRADD,SCRCNG,SCRCNG),SELECT
SCRADD,
	XCALL WNMSG (W_ID, 24, 'SCROLLING NOT ALLOWED IN ADD MODE',1)
	GO TO ITMNUM
SCRCNG,
	XCALL IOS (CHN041, ITMMAS, READ, LOKCTL)
	IF (LOKCTL) 
		BEGIN
		INXCTL = 2
		GO TO DISPLA
		END

	XCALL W_DISP (W_ID, WD_POS, 4,15, ITEMNO)
	KITMNO = ITEMNO

	GO TO NEWOK

NOMORE,
	XCALL WNMSG (W_ID, 24, 'END OF FILE',1)
	GO TO ITMNUM


;--------------------

;;;	GO TO (DISPLA,BEGIN), INXCTL
;;;	XCALL WATE (3,V)

PROCES,
	GO TO (ADD,CHANGE,DELETE), SELECT
ADD,
	LOC(1) = DEFALT

	IMAT = K_MAT
	IF1 = K_F1
	IF2 = K_F2
	IF3 = K_F3

;;;	XCALL ISIO (1, ITMMAS, ITEMNO, STORE, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO BADITM	
	GOTO DISPLA

CHANGE,
	LOKCTL = 1
;;;	XCALL ISIO (1, ITMMAS, ITEMNO, WRITE, LOKCTL)
;;;	WRITE (CHN041, ITMMAS, ITEMNO) [ERR=C_BAD_KEY]
	GOTO DISPLA
C_BAD_KEY,
	XCALL WNMSG (W_ID, 24, 'DID NOT UPDATE',1)
	GOTO DISPLA

DELETE,
	IF (TIPSIS.LE.2) GO TO DELET1


BADDL1,
	XCALL WNMSG (W_ID, 24, 'NO DELETION. QUANTITIES ARE NOT ZERO.',2)
	GO TO DISPLA

DELET1,
	LOCCTR =
CHKQTY,
	INCR LOCCTR
	IF (LOCCTR.GT.LOCTNS.OR.LOC(LOCCTR).EQ.'  ') GO TO OKDEL
	IF (QTYONH(LOCCTR).NE.0.OR.QTYONO(LOCCTR).NE.0
&		.OR.QTYCOM(LOCCTR).NE.0) GO TO BADDL1
	GO TO CHKQTY
OKDEL,

	LOKCTL = 1
	XCALL ISIO (1, ITMMAS, ITEMNO, DELETE, LOKCTL)
	XCALL WNMSG (W_ID, 24, 'ITEM DELETED',2)
	GOTO DISPLA

BADITM,
	XCALL WNMSG (W_ID, 24, 'ITEM # ALREADY ON FILE',1)
	GO TO DISPLA

ENDOFF,
	CALL CLOSE
	xcall flags (7000000)
	stop

	XCALL PGCHN ('CP:IMMENU',1)
LIST,
	CALL CLOSE
	xcall flags (7000000)
	stop
	XCALL PGCHN ('CP:IMFPRT',1)


OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK

	OPEN (1, SI, 'tst:ITMMAS.tsM')
;;;	OPEN (1, SI, 'SMC:ITMMAS.SMM')
	CHN041 = 1
	
	OPEN (5, SI, 'SMC:COPTBL.SMM')
	CHN182 = 5
	
	LOKCTL = 0
	ITEMNO = '!!!!!!!!!!!!!!!'		;HEADER
	XCALL ISIO (1,DUMINV,ITEMNO,READ,LOKCTL)
	UNLOCK 1
	JUSTIF = JSTIFY				;SAVE THE JUSTIFY FLAG
	GO TO (NOTOPN), LOKCTL

	DEFALT = DFLTLO
	LOCTNS = NUMLOC
	TIPSIS = TYPSYS
NOTOPN,
	OPNOK = 1
	RETURN
;----------------------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (CHN041) CLOSE CHN041
	IF (CHN182) CLOSE CHN182

	RETURN
;----------------------------------------------------

INIT_WINDOW,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; SET UP SCREEN 1 WINDOW
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL U_START("LIB:SMC_WND",,,,,,,100)
	XCALL TNMBR (WN_TNMBR)
	XCALL W_PROC(WP_FIND,WND_1,WN_NAME)
	IF (.NOT. WND_1)
		BEGIN
		XCALL W_PROC(WP_CREATE,WND_1,WN_NAME,24,78)
		END
	XCALL W_BRDR(WND_1,WB_TITLE,'ORDER MAINTENANCE',
&			WB_TPOS,WBT_TOP,WBT_CENTER)
	XCALL W_PROC(WP_PLACE,WND_1,1,1)	
	XCALL W_DISP(WND_1,WD_CLEAR)
	XCALL W_UPDT
	W_ID = WND_1
	xcall u_logwnd(wnd_1)


	W2_NAME = 'FKEY'
	XCALL W_PROC(WP_FIND, WND_2, W2_NAME)
	IF (.NOT. WND_2) XCALL W_PROC(WP_CREATE,WND_2,W2_NAME,6,41)
	XCALL W_BRDR(WND_2,WB_TITLE,'Item Keys',
&		WB_TPOS,WBT_TOP,WBT_CENTER)
		
	RETURN

END
