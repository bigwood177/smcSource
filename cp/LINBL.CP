SUBROUTINE LINBL		;still configuring items
	RUNTOT	,D
	TAXTOT	,D
	TOTWGT	,D
	TOTCST	,D

; 12-02-03 ssq:	use "call cfg"
; 1-18-21 ssq: ordhdr.odisc is gone, odisc now in vars

RECORD ORDLIN		
	.INCLUDE 'DEF:RD045A.def'
RECORD	,X
	.INCLUDE 'DEF:RD045E.def'
RECORD,X
	.INCLUDE 'DEF:RD045D.def'

RECORD SAVLIN
	.INCLUDE 'DEF:RD045F.def'

GLOBAL ORDH
RECORD	ORDHDR
	.INCLUDE 'DEF:RD044A.DEF'
ENDGLOBAL

GLOBAL CPCHAN
RECORD	CHANNEL
	CHN001	,D2
	CHN002	,D2
	CHN007	,D2
	CHN041	,D2
	CHN042	,D2
	CHN044	,D2
	CHN045	,D2
	CHN054	,D2
	CHN060	,D2
	CHN169	,D2
	CHN170	,D2
	CHN171	,D2
	CHN172	,D2
	CHN174	,D2
	CHN175	,D2
	CHN178	,D2
	CHN182	,D2
	CHN066	,D2		;SSQ 5-24-05
	CHN101	,D3		;MISCUS 12-9-19
	CHN102	,D3		;MISSHP 12-9-19
ENDGLOBAL


RECORD	FILPRC
	FL_DEV	,A3
		,A1,	':'
	FL_NAME	,A6
		,A1,	'.'
	FL_EXT	,A3

RECORD	CFGMAT
	.INCLUDE 'DEF:CFGMAT.DEF'

RECORD INVMAS
	.INCLUDE 'DEF:RD041A.def'
;;;RECORD DUMINV,X
;;;	.INCLUDE 'DEF:RD041B.DEF'
;;;RECORD ITMIDX 
;;;	.INCLUDE 'DEF:RD042A.DEF'

RECORD	COPTBL		;5/17/97 SSQ
	.INCLUDE 'DEF:RD182A.DEF'


RECORD TPRICE
	ARRAY	,80D5
RECORD TEEDAT
	TGUAG	,D2
	TMAIN	,D2
	TREDU	,D2
	TBRAN	,D2
	TDESCR	,A30

RECORD	SADDLE
	SANGL	,A2
	SGUAG	,A2
	SBRAN	,A2
	SMAIN	,A2
		,A1	;IN CASE "DAMPER" (*)
RECORD,X
		,A4	;ANGLE, GAUGE
	STAR	,A1	;FOR DAMPER
	ST_BRAN	,A2
	ST_MAIN	,A2

RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD OUTSTK
		,A9,	'ON-HAND: '
	AQTYONH	,A7
		,A13,	'| COMMITTED: '
	AQTYCOM	,A7
		,A12,	'| ON-ORDER: '
	AQTYONO	,A7
		,A13,	'| NET AVAIL: '
	ANETAV	,A7

RECORD	VDAMPR
	DAMP		,D2	;DAMPER DIMENSIONS
	DAMPER_PRICE	,3D8
	FL	,D2	;
	MAXFLEN	,D2
	BAD_DIGIT	,D1
	PARTNO	,A15
	PFF	,A15

RECORD	S_KEYS
	SAVKEY	,D9
RECORD	,X
	SAVORD	,D6
	SAVSEQ	,D3

;;;RECORD	CHANNEL
;;;	CHN044	,D2,	04
;;;	CHN045	,D2,	05
;;;	CHN041	,D2,	09
;;;	CHN042	,D2,	10
;;;	CHN060	,D2,	03	;COPCTL
	
RECORD	VARS
	odisc	,d2
	CONFIG_ERROR	,D1
	ST_GUAGE	,A2
	FIRST_LINE	,D1
	ADJQTY	,D5
	ORIG_EXT	,D10
	NEW_EXT		,D10
	ORGINV	,D5
	T_REC		,D5
	VINYL		,D1

	TBL_PRICE_FOUND	,D1
	I	,D5
	NUMITM	,D2
;;;	CHN182	,D2

	ORIG_PRICE	,D8
	NUMASK	,A7,'ZZ,ZZZ-'
	SAVKY2	,D9
	ORDNOA	,A6
	ODISCA	,A2
	ENTRY	,A31
	INXCTL	,D1
	CNGCTL	,D1
	WHATNO	,D2
	DECMAL	,D18
	TCHAR	,D3
	DCHAR	,D3
	KITMNO	,A15
	KEY	,A15
	BSEND	,D5
	BSMID	,D5
	SRCCTL	,D1
	READ	,D1	,0
	WRITE	,D1	,1
	STORE	,D1	,2	;USED FOR ISIO SUBROUTINE
	DELETE	,D1	,3	;USED FOR ISIO SUBROUTINE
	LOKCTL	,D1
	BLANKS	,A15
	ADDLIN	,D1
	CNGKEY	,D1
	OPTION	,D1
	DPND	,D6
	DSIZ	,D3
	WTPIN	,D6
	PRPPN	,D6
	WRANGL	,A12
	R_VALUE	,A1	;HOLDS THE "+" OR "-" IF R-ANGLE
	INCH	,D3
	DASH	,D2
	TONH	,D6
	TONO	,D6
	TCOM	,D6
	TREC	,D5

PROC
	CLEAR TBL_PRICE_FOUND

	odisc = 0	;1-18-21
	LOKCTL = 1
	NUMITM = 4

;;;	XCALL IO (CHN041,INVMAS,1,READ,LOKCTL)
;;;	ORGINV = ORG041

	FIRST_LINE = 1		;NO LINE ITEMS READ YET (SSQ 3-16-01)
DISPLA,
	UNLOCK CHN041
;;;	UNLOCK CHN042
	UNLOCK 5
	ODISCA = ODISC
	ORDNOA = OORDNO, 'XXXXXX'
;;;	XCALL OE6 (ORDNOA,OCUSNM,ODISCA,V)
	CALL OE6
	ORDLIN =
	INXCTL =
	SRCCTL =
	ADDLIN =
	CNGCTL =
	CNGKEY =
	SAVKEY =
	SAVKY2 =
	SAVLIN =

LITMNO,
	IF (CNGCTL.EQ.0) CTL = '06,40,15,00,AX'
	IF (CNGCTL) CTL = '06,40,15,01,AE'
;;;	CTL = '06,40,15,01,AE'
	CTL = '06,40,15,00,AE'		;SSQ 3-16-01
	CALL INPUT
	GOTO (DISPLA,ENDOFF,FNDSEQ), INXCTL
	KITMNO = ENTRY
;;;	IF (KITMNO.EQ.BLANKS.AND.LORDNO.EQ.OORDNO) GOTO NXTLIN
	IF (KITMNO.EQ.BLANKS.AND. .NOT. FIRST_LINE) GOTO NXTLIN
	IF (KITMNO.EQ.BLANKS) GOTO FNDLIN
	LITMNO = KITMNO

	IF (CNGCTL) 			;CHANGE ITEM NUMBER
	BEGIN
	  CALL GETITM			;GET NEW ITEM FROM INVMAS
	  IF (SRCCTL) GOTO LITMNO
	  CALL FIND_DAMPER		;SSQ 12-30-98
	  IF(BAD_DIGIT) GOTO LITMNO	;SSQ 12-30-98
	  LITMNO = ITEMNO
;;;	  IF (LITMNO.NE.'???'.AND.LITMNO.NE.'M') LDESCR = DESCR	;;;
	  IF (LITMNO.NE.'???'.AND.LITMNO(1,1).NE.'M') LDESCR = DESCR	;;;
	  LPRDCD = PRDCAT
	  CALL SET_NEW_FIELDS
	  LLOC = OLOC
	  LCOST = AVGCST
	  LSTOKT = STOCK
	  LITMWT = WEIGHT
	  IF (OTAXFL.NE.'   '.AND.TXFLAG.EQ.'Y') LTXFLG = 1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	  USING KITMNO SELECT
;;;	  ('WR'),			CALL GETWRN
;;;	  ('R20' THRU 'R26'),		CALL GETRED
;;;	  ('RV20' THRU 'RV26'),		CALL GETRED
;;;	  ('T4','T9','TV4','TV9'),	CALL GETTEE
;;;	  ('S9','S4','SV','SW','SC'),	CALL GETSAD
;;;	  ('SG','SX'),			CALL GETSPR
;;;	  ENDUSING
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	  USING KITMNO SELECT
	  ('WR'),			CALL GETWRN
	  ('R16' THRU 'R26'),		CALL CALL_CFG
	  ('RV16' THRU 'RV26'),		CALL CALL_CFG
	  ('T4','T9','TV4','TV9'),	CALL CALL_CFG
	  ('S9','S4','SV','SW','SC','ST'),	CALL CALL_CFG
	  ('SG','SX'),			CALL GETSPR
	  ENDUSING
	  IF (PRICE) LPRICE = PRICE

;-------- Add in damper prices ---------------------------------------
	IF (LDAMPR)
&		FOR I FROM 1 THRU 3 LPRICE = LPRICE + DAMPER_PRICE(I)
;---------------------------------------------------------------------

	  CALL DSPLIN
	  GOTO ANYCNG
	END

	GOTO FNDLIN
FNDSEQ,
	CTL = '10,40,03,00,# '
	CALL INPUT
	GOTO (DISPLA), INXCTL
	CLEAR KITMNO		;SSQ 10-28-98
	LORDNO = OORDNO
	LINSEQ = ENTRY
	LOKCTL = 1
	XCALL ISIO (5,ORDLIN,KEY045,READ,LOKCTL)	;;;
	IF (LOKCTL.EQ.0) GOTO NXTLI2
	XCALL MESAG ('NO LINE ITEM FOUND WITH THAT SEQUENCE NUMBER',2)
	GOTO DISPLA
FNDLIN,
	CLEAR FIRST_LINE		;SSQ 3-16-01
	LORDNO = OORDNO
	LOKCTL = 1
	XCALL ISIO (5,ORDLIN,LORDNO,READ,LOKCTL)	;;;
	IF (LOKCTL.NE.0) GOTO NEWLIN
	GOTO NXTLI2
NXTLIN,
	LOKCTL = 1
	XCALL IOS (5,ORDLIN,READ,LOKCTL)
	IF (LOKCTL.NE.0) GOTO NEWLIN
NXTLI2,
	IF (LORDNO.NE.OORDNO) GOTO NEWLIN
	IF (KITMNO.NE.BLANKS.AND.KITMNO.NE.LITMNO) GOTO NXTLIN
	if (ltype .eq. 'M') goto nxtlin
	if (lqtyor .eq. 0) goto nxtlin		;4-11-11 ssq

	CALL DSPLIN	
	XCALL OUTPT (24,1,0,'RIGHT LINE ITEM <Y> ? ',1)
	XCALL INPUT (24,30,01,00,'YY',ENTRY,INXCTL,1)
	IF (INXCTL.EQ.1) 
	BEGIN
	  SAVLIN = ORDLIN
	  KITMNO = LITMNO	;SSQ 10-21-98
	  CALL GETITM		;SSQ 10-21-98 read in itmmas record
	  ORIG_EXT=(LQTYSH*LPRICE)#1	;SSQ 7-19-00
	  GOTO ANYCNG
	END
	GOTO NXTLIN
NOMORE,
	XCALL MESAG ('NO MORE LINE ITEMS ON FILE',2)
	GOTO DISPLA
NEWLIN,
	IF (KITMNO.EQ.BLANKS) GOTO NOMORE
	XCALL OUTPT (24,1,0,'ITEM NOT FOUND IN ORDER - ADD IT <Y> ? ',1)
	XCALL INPUT (24,40,01,00,'YY',ENTRY,INXCTL,1)
	IF (INXCTL.NE.1) GOTO DISPLA
;;;	XCALL OE6 (ORDNOA,OCUSNM,ODISCA,V)	;;;ADDED 12/7/93
	CALL OE6		;INTERNAL ROUTINE

	ADDLIN = 1
	CNGCTL =
	ORDLIN =
	CLEAR ORIG_EXT			;SSQ 7-19-00
	CALL GETITM
	IF (SRCCTL) GOTO DISPLA

	CALL FIND_DAMPER		;SSQ 12-30-98
	IF(BAD_DIGIT) GOTO DISPLA	;SSQ 12-30-98

	LORDNO = OORDNO
	LITMNO = ITEMNO
	LLOC = OLOC
;;;	IF (LITMNO.EQ.'M') GOTO LDESCR
	IF (LITMNO(1,1).EQ.'M') GOTO LDESCR
	LPRDCD = PRDCAT

	CALL SET_NEW_FIELDS

	LSTOKT = STOCK
	LODISC =
	LDISC =
;;;	IF (TAXFLG.NE.'   '.AND.TXFLAG.EQ.'Y') LTXFLG = 1
	IF (OTAXFL.NE.'   '.AND.TXFLAG.EQ.'Y') LTXFLG = 1
	IF (LITMNO.EQ.'???') 
	BEGIN
	  XCALL OUTPT (06,40,0,LITMNO,1)
	  GOTO LDESCR
	END
	LDESCR = DESCR
	LUOFM = SUOFM
	LPRICE = PRICE
	LCOST = AVGCST
	LITMWT = WEIGHT

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	USING KITMNO SELECT
;;;	('WR'),			CALL GETWRN
;;;	('R20' THRU 'R26'),		CALL GETRED
;;;	('RV20' THRU 'RV26'),		CALL GETRED
;;;	('T4','T9','TV4','TV9'),	CALL GETTEE
;;;	('S9','S4','SV','SW','SC'),	CALL GETSAD
;;;	('SG','SX'),			CALL GETSPR
;;;	ENDUSING

	USING KITMNO SELECT
	('WR'),			CALL GETWRN
	('R16' THRU 'R26'),		CALL CALL_CFG
	('RV16' THRU 'RV26'),		CALL CALL_CFG
	('T4','T9','TV4','TV9'),	CALL CALL_CFG
	('S9','S4','SV','SW','SC'),	CALL CALL_CFG
	('SG','SX'),			CALL GETSPR
	ENDUSING
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;-------- Add in damper prices --------------------------------------
	IF (LDAMPR)
&		FOR I FROM 1 THRU 3 LPRICE = LPRICE + DAMPER_PRICE(I)
;---------------------------------------------------------------------

	CALL DSPLIN
	GOTO LINSEQ
LDESCR,
	CTL = '08,40,30,00,AT'
	CALL INPUT
	GOTO (DISPLA), INXCTL
;;;	IF (CNGCTL.EQ.0.AND.ENTRY.EQ.BLANKS.AND.LITMNO.NE.'M')
	IF (CNGCTL.EQ.0.AND.ENTRY.EQ.BLANKS.AND.LITMNO(1,1).NE.'M')
	BEGIN
	  XCALL OUTPT (ROW,COL,0,DESCR,1)
	  ENTRY = DESCR	  
	END
	LDESCR = ENTRY
	GOTO (ANYCNG), CNGCTL
LINSEQ,
	IF (ADDLIN.EQ.0.AND.SAVKEY.EQ.0) SAVKEY = KEY045
	CTL = '10,40,03,00,# '
	CALL INPUT
	GOTO (DISPLA), INXCTL
	IF (CNGCTL.EQ.0.AND.ENTRY.EQ.BLANKS)
	BEGIN
	  INCR ORDSEQ
	  LINSEQ = ORDSEQ
	  ENTRY(1,3) = LINSEQ,'ZZX'
	  XCALL OUTPT (ROW,COL,0,ENTRY(1,3),1)
	END
	LINSEQ = ENTRY
	IF (SAVKEY.NE.0.AND.LINSEQ.NE.SAVSEQ) CNGKEY = 1
	IF (LINSEQ.GT.ORDSEQ.AND.LINSEQ.LT.900) ORDSEQ = LINSEQ
	GOTO (ANYCNG), CNGCTL
	IF (LITMNO.NE.'???'.AND.LITMNO(1,1).NE.'M') GOTO LQTYOR	;ADD INV ITM
	IF (LITMNO(1,1).EQ.'M') 					;ADD MSG
	BEGIN
	  LQTYOR = 1
	  LPRICE =
	  LUOFM = 
	  LDISC = 
	  GOTO ANYCNG
	END
LUOFM,
	CTL = '12,40,02,00,A '
	CALL INPUT
	GOTO (DISPLA), INXCTL
	IF (CNGCTL.EQ.0.AND.ENTRY.EQ.BLANKS)
	BEGIN
	  XCALL OUTPT (ROW,COL,0,SUOFM,1)
	  ENTRY = SUOFM
	END
	LUOFM = ENTRY
	GOTO (ANYCNG), CNGCTL
LQTYOR,
	CTL = '14,40,05,00,#-'
	CALL INPUT
	GOTO (DISPLA), INXCTL
	IF (ENTRY.EQ.'0') GOTO DELLIN
	IF (ENTRY.EQ.BLANKS) 
	BEGIN
	  LQTYOR = 1
	  ENTRY(1,1) = LQTYOR,'X'
	  XCALL OUTPT (ROW,COL,1,ENTRY(1,1),1)
	END
	LQTYOR = ENTRY
;-----------------------------------------------
;;; 5-16-97 SSQ: QTY BREAK PRICING:
	CALL TBL_PRICE
	IF (TBL_PRICE_FOUND)
	   BEGIN
	   FOR I FROM 1 THRU NUMITM
		BEGIN
		IF (LQTYOR.LT.I1_QTY(I))
		    BEGIN
		    LPRICE = I1_PRICE(I)
		    DECMAL = LPRICE
		    CTL = '18,40,08,00,# '
		    CALL DSP3DP
		    EXITLOOP
		    END
		END
	   END
;-----------------------------------------------

;;;	CALL DSPEXT
	AQTYONH = QTYONH,NUMASK
	AQTYCOM = QTYCOM,NUMASK
	AQTYONO = QTYONO,NUMASK
	DECMAL = QTYONH-QTYCOM+QTYONO
;;;	IF (LITMNO.EQ.'X'.OR.LITMNO.EQ.'CD'.OR. LITMNO.EQ.'CM' .OR.
	IF (LITMNO.EQ.'X'.OR.LITMNO.EQ.'CM' .OR.
&		(LITMNO.GE.'CR0'.AND.LITMNO.LE.'CR9') .OR.
&		(LITMNO.GE.'EDS0' .AND. LITMNO.LE.'EDS9') )
	BEGIN
	  AQTYONH = TONH,NUMASK
	  AQTYCOM = TCOM,NUMASK
	  AQTYONO = TONO,NUMASK
	  DECMAL = TONH-TCOM+TONO
	END
	IF (STOCK.EQ.'S'.AND.LLOC.EQ.'O'.AND.LQTYOR.GT.DECMAL)
	BEGIN
	  ANETAV = DECMAL, NUMASK
	  XCALL OUTPT (23,1,2,OUTSTK,1)
	  XCALL MESAG ('WARNING - POSSIBLE OUT OF STOCK SITUATION',2)
	  XCALL OUTPT (23,1,2,'\',1)
	END
	GOTO (ANYCNG), CNGCTL

LQTYSH,
	CTL = '16,40,05,00,#-'
	CALL INPUT
	GOTO (DISPLA), INXCTL
	IF (ENTRY.EQ.BLANKS) 
	BEGIN
	  LQTYSH = LQTYOR
	  ENTRY(1,5) = LQTYSH,	'ZZZZX' [LEFT]
	  XCALL OUTPT (ROW,COL,1,ENTRY(1,5),1)
	END
	LQTYSH = ENTRY
	CALL DSPEXT
	IF (PRICE.NE.0) GOTO ANYCNG
	IF (LPRICE.NE.0) GOTO ANYCNG
;;;	GOTO ANYCNG
	IF(LITMNO.NE.'???')GOTO ANYCNG	;8-17-00 SSQ

LPRICE,
	CTL = '18,40,08,00,# '
	CALL INPUT
	GOTO (DISPLA), INXCTL
	IF (CNGCTL.EQ.0.AND.ENTRY.EQ.BLANKS)
	BEGIN
	  ENTRY = PRICE
	END

;;; SSQ 10-30-96
;;; Flag user changing price...

	IF (ORIG_PRICE .EQ. 0) ORIG_PRICE = LPRICE
	LPRICE = ENTRY
	IF (LPRICE .NE. ORIG_PRICE)
	THEN	LCPFLG = 1
	ELSE	CLEAR LCPFLG
;;; SSQ 10-30-96

	DECMAL = LPRICE
	CALL DSP3DP
	CALL DSPEXT
	GOTO ANYCNG

ANYCNG,
	XCALL ANYCN(CNGCTL,WHATNO)
	IF (CNGCTL)
	BEGIN
	  GO TO (LITMNO,LDESCR,LINSEQ,LUOFM,LQTYOR,LQTYSH,LPRICE), WHATNO
	  IF (WHATNO.EQ.99) GOTO DELLIN
BADCNG,
	  CNGCTL = 3
	  GOTO ANYCNG
	END
	IF (ADDLIN) GOTO ADDLIN
	IF (CNGKEY) GOTO CNGKEY	

CNGLIN,	  ;	WRITE BACK CHANGED RECORD
	LOKCTL = 1
;;;	IF(LQTYSH .EQ. 0) LFLAG = 0		;UNSELECTED
	XCALL ISIO (5,ORDLIN,KEY045,WRITE,LOKCTL)
	CALL ADJCOM					;ADJUST COMMITTED
	GOTO DISPLA

CNGKEY,	;	DELETE AND READD LINE WITH NEW KEY
	SAVKY2 = KEY045
	KEY045 = SAVKEY
	LOKCTL = 1
	XCALL ISIO (5,ORDLIN,KEY045,DELETE,LOKCTL)
	KEY045 = SAVKY2
	LOKCTL = 1
	XCALL ISIO (5,ORDLIN,KEY045,STORE,LOKCTL)
	CALL ADJCOM					;ADJUST COMMITTED
	GOTO DISPLA

ADDLIN,	;	ADD NEW LINE ITEM RECORD
	IF(LITMNO(1,1) .EQ. 'M') 
		BEGIN
		LSRTSQ = LINSEQ(2,3),'XX'
		LQTYSH = LQTYOR		
		END
	LFLAG = 1		;SELECTED
;;;	IF(LQTYSH .EQ. 0) LFLAG = 0		;UNSELECTED

	LOKCTL = 1
	XCALL ISIO (5,ORDLIN,KEY045,STORE,LOKCTL)

	DECMAL = (LQTYSH*LPRICE)#1
	RUNTOT = RUNTOT + DECMAL
	IF(LTXFLG) TAXTOT = TAXTOT + DECMAL
	TOTCST = TOTCST + (LCOST*LQTYSH)#1
	TOTWGT = TOTWGT + (LQTYSH*LITMWT)

	CALL RECOM					;COMMIT QTY
	ADDLIN =
	GOTO DISPLA

DELLIN,	;	DELETE A LINE ITEM
	XCALL OUTPT (24,1,0,'OK TO DELETE LINE ITEM <Y> ? ',1)
	XCALL INPUT (24,30,01,00,'YY',ENTRY,INXCTL,1)
	IF (INXCTL.NE.1) GOTO ANYCNG
	IF (ADDLIN.EQ.0) 
	BEGIN
	  LOKCTL = 1
	  XCALL ISIO (5,ORDLIN,KEY045,DELETE,LOKCTL)
	  LQTYOR = 0
	  LQTYSH = 0
	  CALL ADJCOM					;UNCOMMIT QTY
;;;	  CALL UNCOM					;UNCOMMIT QTY
	END
	XCALL MESAG ('LINE ITEM DELETED',1)
	GOTO DISPLA

ADJCOM,	;	ADJUST COMMITTED
;first update order dollar amounts:
	ADJQTY = (LQTYSH-SLQTYSH)
	NEW_EXT=(LQTYSH*LPRICE)#1
	DECMAL=NEW_EXT - ORIG_EXT

;;;	DECMAL = (ADJQTY*LPRICE)#1
	RUNTOT = RUNTOT + DECMAL
	IF(LTXFLG) TAXTOT = TAXTOT + DECMAL
	TOTCST = TOTCST + (LCOST*ADJQTY)#1
	TOTWGT = TOTWGT + (ADJQTY*LITMWT)
	
	IF (LITMNO.EQ.SLITMNO.AND.LQTYOR.EQ.SLQTYOR) RETURN
	CALL UNCOM
	CALL RECOM
	RETURN
UNCOM,
	KITMNO = SLITMNO			;GET OLD ITEM
	CALL GETITM
	IF (SRCCTL.EQ.0.AND.STOCK.EQ.'S'.AND.LLOC.EQ.'O') ;IF ITEM FOUND AND STOCKED
	BEGIN
;;;	  IF (SLITMNO.EQ.'X'.OR.SLITMNO.EQ.'CD'.OR. SLITMNO.EQ.'CM' .OR.
	  IF (SLITMNO.EQ.'X'.OR.SLITMNO.EQ.'CM' .OR.
&		(SLITMNO.GE.'CR0'.AND.SLITMNO.LE.'CR9') .OR.
&		(SLITMNO.GE.'EDS0' .AND. SLITMNO.LE.'EDS9') )
	  BEGIN
	    USING SLITMNO SELECT
;;;	    ('X','CD'),		BEGIN
	    ('X'),		BEGIN
				  KEY = SLITMNO(1,3)
				  KEY(4,4) = '0'
				END
	    ('CR0' thru 'CR9'),	KEY = SLITMNO(1,4)
	    ('CM'),		KEY = SLITMNO(1,3)
	    ('EDS0' THRU 'EDS9'), KEY = SLITMNO(1,9)
	    (),			KEY = SLITMNO
	    ENDUSING

;;;	    BSEND = ORGINV
;;;	    XCALL SERCH (CHN042,ITMIDX,KEY,1,15,BSEND,BSMID,SRCCTL,4,16,20,0,0,0,0)
;;;	    IF (SRCCTL)
;;;	    BEGIN
;;;	      XCALL MESAG ('CANNOT FIND ITEM TO DEALLOCATE INVENTORY',2)
;;;	      UNLOCK CHN041
;;;	      UNLOCK CHN042
;;;	      RETURN
;;;	    END
	    LOKCTL = 1
	    XCALL ISIO (CHN041,INVMAS,KEY,READ,LOKCTL)
;;;	    XCALL IO (CHN041,INVMAS,IRC041,READ,LOKCTL)
	  END
	  QTYCOM = QTYCOM - SLQTYOR		;UNCOMMIT OLD QTY
	  LOKCTL = 1
	  
	END
	UNLOCK CHN041
	UNLOCK CHN042
	RETURN
RECOM,
	KITMNO = LITMNO			;GET NEW ITEM
	CALL GETITM
	IF (SRCCTL.EQ.0.AND.STOCK.EQ.'S'.AND.LLOC.EQ.'O')	;IF ITEM FOUND AND STOCKED
	BEGIN
;;;	  IF (LITMNO.EQ.'X'.OR.LITMNO.EQ.'CD'.OR. LITMNO.EQ.'CM' .OR.
	  IF (LITMNO.EQ.'X'.OR.LITMNO.EQ.'CM' .OR.
&		(LITMNO.GE.'CR0'.AND.LITMNO.LE.'CR9') .OR. 
&		(LITMNO.GE.'EDS0' .AND. LITMNO.LE.'EDS9') )
	  BEGIN
	    USING LITMNO SELECT
;;;	    ('X','CD'),		BEGIN
	    ('X'),		BEGIN
				  KEY = LITMNO(1,3)
				  KEY(4,4) = '0'
				END
	    ('CR0' thru 'CR9'),	KEY = LITMNO(1,4)
	    ('CM'),		KEY = LITMNO(1,3)
	    ('EDS0' THRU 'EDS9'), KEY = LITMNO(1,9)
	    (),			KEY = LITMNO
	    ENDUSING

;ISAM ------------------------------------------------------
;;;	    BSEND = ORGINV
;;;	    XCALL SERCH (CHN042,ITMIDX,KEY,1,15,BSEND,BSMID,SRCCTL,4,16,20,0,0,0,0)
;;;	    IF (SRCCTL)
;;;	    BEGIN
;;;	      XCALL MESAG ('CANNOT FIND ITEM TO ALLOCATE INVENTORY',2)
;;;	      UNLOCK CHN041
;;;	      UNLOCK CHN042
;;;	      RETURN
;;;	    END

	    LOKCTL = 1
	    XCALL ISIO (CHN041,INVMAS,KEY,READ,LOKCTL)
	    ;;;XCALL IO (CHN041,INVMAS,IRC041,READ,LOKCTL)
;ISAM ------------------------------------------------------
	  END

	  QTYCOM = QTYCOM + LQTYOR		;COMMIT NEW QTY
	  LOKCTL = 1
;;;	  XCALL IO (CHN041,INVMAS,IRC041,WRITE,LOKCTL)

	END
	UNLOCK CHN041
	UNLOCK CHN042
	RETURN

ACCEPT,
	XCALL FLAGS (0000010000,1)
	XCALL OUTPT (ROW,COL-1,0,'\',1)
	ACCEPT (15,TCHAR)
	IF (TCHAR.EQ.27) CALL FLUSH
	IF (TCHAR.EQ.13) ACCEPT (15,DCHAR)
	XCALL FLAGS (0000010000,0)
	RETURN
FLUSH,
	XCALL TTSTS (INXCTL,15)
	IF (INXCTL.EQ.0) RETURN
	ACCEPT (15,DCHAR)
	GOTO FLUSH

DSPLIN,	;	DISPLAY A RECORD
	XCALL OUTPT (6,40,0,LITMNO,1)
	XCALL OUTPT (8,40,0,LDESCR,1)
	CTL = '10,40,06'
	DECMAL = LINSEQ
	CALL DSPNUM
	IF (LINSEQ.GT.ORDSEQ.AND.LINSEQ.LT.900) ORDSEQ = LINSEQ
	CTL = '12,40,06'
	XCALL OUTPT (ROW,COL,0,LUOFM,1)
	CTL = '14,40,05'
	DECMAL = LQTYOR
	CALL DSPNUM
	CTL = '16,40,05'
	DECMAL = LQTYSH
	CALL DSPNUM

	CTL = '18,40,07'
	DECMAL = LPRICE
	CALL DSP3DP

;;;	CTL = '20,40,02'
;;;	DECMAL = LDISC
;;;	CALL DSPNUM
	IF (LITMNO.NE.'???') GO TO DSPEXT
	XCALL OUTPT (22,20,0,'9. ITEM COST',1)
	CTL = '22,40,07'
	DECMAL = LCOST
	CALL DSP3DP
DSPEXT,
	DECMAL = (LQTYSH*LPRICE)#1
	CTL = '18,68,08'
	CALL DSPDLR
	RETURN

GETITM,	;	GET ITEM MASTER RECORD
	SRCCTL =
	KEY = KITMNO
	IF (KITMNO.EQ.'WR')  KEY(4,15) =
	IF (KITMNO.GE.'R20'.AND.KITMNO.LE.'R26') KEY(4,15) =
	IF (KITMNO.GE.'RV20'.AND.KITMNO.LE.'RV26') KEY(5,15) =
	IF (KITMNO.EQ.'T9'.OR.KITMNO.EQ.'T4')   KEY(3,15) =
	IF (KITMNO.EQ.'TV9'.OR.KITMNO.EQ.'TV4') KEY(4,15) =
	IF (KITMNO.EQ.'S9'.OR.KITMNO.EQ.'S4')   KEY(3,15) =
	IF (KITMNO.EQ.'SV9'.OR.KITMNO.EQ.'SV4') KEY(4,15) =
	IF (KITMNO.EQ.'SW9'.OR.KITMNO.EQ.'SW4')   KEY(4,15) =
	IF (KITMNO.EQ.'SWV9'.OR.KITMNO.EQ.'SWV4') KEY(5,15) =
	IF (KITMNO.EQ.'SC9'.OR.KITMNO.EQ.'SC4')   KEY(4,15) =
	IF (KITMNO.EQ.'SCV9'.OR.KITMNO.EQ.'SCV4') KEY(5,15) =

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; removed 7-18-13 ssq: left over from days gone by...
;;;	IF (KITMNO.EQ.'SG') 
;;;	BEGIN
;;;	  KEY(1,15) = 'SP'
;;;	  KEY(3,4) = KITMNO(3,4)	;DIA
;;;	  KEY(5,6) = '10'		;LEN
;;;	  KEY(7,8) = KITMNO(5,6)	;GA
;;;	END
;;;	IF (KITMNO.EQ.'SX')
;;;	BEGIN
;;;	  KEY(1,15) = 'SPV'
;;;	  KEY(4,5) = KITMNO(3,4)	;DIA
;;;	  KEY(6,7) = '10'		;LEN
;;;	  KEY(8,9) = KITMNO(5,6)	;GA
;;;	END
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;	IF (LITMNO.EQ.'X'.OR.LITMNO.EQ.'CD'.OR. LITMNO.EQ.'CM' .OR. 
	IF (LITMNO.EQ.'X'.OR.LITMNO.EQ.'CM' .OR. 
&		(LITMNO.GE.'CR0'.AND.LITMNO.LE.'CR9') .OR. 
&		(LITMNO.GE.'EDS0' .AND. LITMNO.LE.'EDS9') )
	BEGIN
	  USING LITMNO SELECT
;;;	  ('X','CD'),		BEGIN
	  ('X'),		BEGIN
				  KEY = LITMNO(1,3)
				  KEY(4,4) = '0'
				END
	  ('CR0' thru 'CR9'),	KEY = LITMNO(1,4)
	  ('CM'),		KEY = LITMNO(1,3)
	  ('EDS0' THRU 'EDS9'), KEY = LITMNO(1,9)
	  (),			KEY = LITMNO
	  ENDUSING

;ISAM ------------------------------------------------------
	LOKCTL = 1
	XCALL ISIO (CHN041,INVMAS,KEY,READ,LOKCTL)
;;;	XCALL IO (CHN041,INVMAS,KEY,READ,LOKCTL)
;;;	TREC = IRC041
	TONH = QTYONH
	TONO = QTYONO
	TCOM = QTYCOM
	CALL TBL_PRICE

;;;	  BSEND = ORGINV
;;;	  XCALL SERCH (CHN042,ITMIDX,KEY,1,15,BSEND,BSMID,SRCCTL,4,16,20,0,0,0,0)
;;;	  IF (SRCCTL.OR.IRC041.EQ.0) 
;;;	  THEN	BEGIN
;;;		INVMAS = 
;;;		ITMIDX =
;;;		DESCR = 'ITEM NOT FOUND'
;;;		SRCCTL = 1
;;;		XCALL MESAG ('ITEM NOT FOUND ON INVENTORY MASTER',2)
;;;		END
;;;	  ELSE	BEGIN
;;;		LOKCTL = 1
;;;		XCALL IO (CHN041,INVMAS,IRC041,READ,LOKCTL)
;;;		TREC = IRC041
;;;		TONH = QTYONH
;;;		TONO = QTYONO
;;;		TCOM = QTYCOM
;;;		CALL TBL_PRICE
;;;		END
;ISAM ------------------------------------------------------

	  RETURN
	END

;ISAM ------------------------------------------------------
	LOKCTL = 1
	XCALL ISIO (CHN041,INVMAS,KEY,READ,LOKCTL)
;;;	XCALL IO (CHN041,INVMAS,KEY,READ,LOKCTL)
	CALL TBL_PRICE

;;;	BSEND = ORGINV
;;;	XCALL SERCH (CHN042,ITMIDX,KEY,1,15,BSEND,BSMID,SRCCTL,4,16,20,0,0,0,0)
;;;	IF (SRCCTL.OR.IRC041.EQ.0) 
;;;	THEN	BEGIN
;;;		INVMAS = 
;;;		ITMIDX =
;;;		DESCR = 'ITEM NOT FOUND'
;;;		SRCCTL = 1
;;;		XCALL MESAG ('ITEM NOT FOUND ON INVENTORY MASTER',2)
;;;		END
;;;	ELSE	BEGIN
;;;		LOKCTL = 1
;;;		XCALL IO (CHN041,INVMAS,IRC041,READ,LOKCTL)
;;;		CALL TBL_PRICE
;;;		END
;ISAM ------------------------------------------------------
	RETURN
;------------------------------------------------------------------
CALL_CFG,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; internal routine so I can see parameter list...
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	XCALL CFG(LITMNO,CONFIG_PRICE,TDESCR,CONFIG_ERROR,MAT_SEL,ST_GUAGE)
	LITMNO = KITMNO
	XCALL CFG(LITMNO,LPRICE,LDESCR,CONFIG_ERROR,GALV,ST_GUAGE)
;;;	IF (CONFIG_ERROR .EQ. 1) 
	IF (CONFIG_ERROR) 			;11-14-13
	THEN	XCALL MESAG('INVALID CONFIGURATION',2)
	ELSE	CALL DSPLIN

	RETURN
;----------------------------------------------------


GETWRN,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; ADDED FOR R-ANGLE PROCESSING
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	WRANGL = KITMNO(4,15)
	IF (WRANGL(8,12) .NE. BLANKS) GOTO BADWRN
	LDESCR(1,8) = WRANGL(1,7)

	XCALL INSTR (1,WRANGL,'-',DASH)
	IF (DASH)
	THEN	R_VALUE = "-"
	ELSE	BEGIN
		XCALL INSTR (1,WRANGL,'+',INCH)		;SSQ 6-1-98
		IF (INCH)
		THEN R_VALUE = "+"
		ELSE R_VALUE = 
		END

	USING R_VALUE SELECT
	("-"),	BEGIN
		  LDESCR(DASH,DASH) = '/'		;;;
		  ONERROR BADWRN
		  DSIZ = WRANGL(1,DASH-1)
		  DECMAL = WRANGL(DASH+1,DASH+3)
		  OFFERROR
		  DSIZ = DSIZ + DECMAL
		  WTPIN = ((WEIGHT*1000)/120)
		  DPND = (WTPIN * DSIZ)#3
		  PRPPN = ((PRICE*1000)/WEIGHT)
		  LPRICE = (PRPPN * DPND)#3
		END
	("+"),	BEGIN
		  IF (WRANGL(INCH+1,12) .NE. BLANKS) GOTO BADWRN
		  LDESCR(INCH,INCH) = '"'
		  ONERROR BADWRN
		  DSIZ = WRANGL(1,INCH-1)
		  OFFERROR
		  WTPIN = ((WEIGHT*10000)/120)/2
		  DPND = (WTPIN * DSIZ)#3
		  PRPPN = ((PRICE*1000)/WEIGHT)
		  LPRICE = (PRPPN * DPND)#4
		  PRICE = LPRICE
		END
	(),	BEGIN
		CLEAR LDESCR
		GOTO BADWRN
		END
	ENDUSING

	RETURN

BADWRN,
	OFFERROR
	XCALL MESAG ('INVALID R-ANGLE PART NUMBER',1)
	SRCCTL = 1
	RETURN
;---------------------------------------------------------------

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;GETTEE,	;	ADDED FOR TEES PROCESSING	
;;;	ONERROR BADTEE
;;;	LITMNO = KITMNO
;;;	IF (LITMNO.EQ.'TV') LITMNO = KITMNO(2,15)
;;;	TEEDAT =
;;;	TGUAG = LITMNO(3,4)		;GUAGE
;;;	IF (TGUAG.NE.26.AND.TGUAG.NE.24.AND.TGUAG.NE.22.AND.TGUAG.NE.20) GOTO BADTEE
;;;	IF (TGUAG.EQ.26.AND.LITMNO.EQ.'V') GOTO BADTEE
;;;	TMAIN = LITMNO(5,6)		;MAIN
;;;	TREDU = LITMNO(7,8)		;REDUCER (PRICED BY MAIN SIZE)
;;;	IF (TREDU.GT.TMAIN) GOTO BADTEE
;;;	TBRAN = LITMNO(9,10)		;BRANCH
;;;	IF (TBRAN.GT.TMAIN) GOTO BADTEE
;;;	TDESCR = 'GALV TEE '
;;;	IF (LITMNO.EQ.'V') TDESCR(1,4) = 'PVS '
;;;	IF (LITMNO(2,2).EQ.'9') TDESCR(10,12) = '90 '
;;;	IF (LITMNO(2,2).EQ.'4') TDESCR(10,12) = '45 '
;;;	TDESCR(13,14) = TGUAG
;;;	TDESCR(15,17) = 'ga '
;;;	TDESCR(18,26) = 'xx/xx/xx '
;;;	TDESCR(18,19) = TMAIN
;;;	TDESCR(21,22) = TREDU
;;;	TDESCR(24,25) = TBRAN
;;;	LITMNO(3,15) =
;;;	IF (LITMNO.EQ.'V') LITMNO(2,3) = LITMNO(1,2)
;;;	IF (LITMNO.EQ.'VV') LITMNO(1,1) = 'T'
;;;	OFFERROR
;;;	LDESCR = TDESCR
;;;	LPRICE =
;;;	IF (LITMNO.EQ.'TV')	THEN OPEN (19,I,'SMC:TVPRIC.SMC')
;;;				ELSE OPEN (19,I,'SMC:TPRICE.SMC')
;;;	IF (TMAIN)
;;;	BEGIN
;;;	  LOKCTL = 1
;;;	  IF (TGUAG.EQ.26) XCALL IO (19,TPRICE,1,READ,LOKCTL)
;;;	  IF (TGUAG.EQ.24) XCALL IO (19,TPRICE,2,READ,LOKCTL)
;;;	  IF (TGUAG.EQ.22) XCALL IO (19,TPRICE,3,READ,LOKCTL)
;;;	  IF (TGUAG.EQ.20) XCALL IO (19,TPRICE,4,READ,LOKCTL)
;;;	  IF (ARRAY(TMAIN).EQ.0) XCALL MESAG ('NO MAIN PRICE ON FILE FOR THIS ITEM',2)
;;;	  IF (TMAIN.LE.80) LPRICE = LPRICE + ARRAY(TMAIN)
;;;	END
;;;	IF (TMAIN.GT.TREDU)
;;;	BEGIN
;;;	  LOKCTL = 1
;;;	  IF (TGUAG.EQ.26) XCALL IO (19,TPRICE,13,READ,LOKCTL)
;;;	  IF (TGUAG.EQ.24) XCALL IO (19,TPRICE,14,READ,LOKCTL)
;;;	  IF (TGUAG.EQ.22) XCALL IO (19,TPRICE,15,READ,LOKCTL)
;;;	  IF (TGUAG.EQ.20) XCALL IO (19,TPRICE,16,READ,LOKCTL)
;;;	  IF (ARRAY(TMAIN).EQ.0) XCALL MESAG ('NO MAIN PRICE ON FILE FOR THIS ITEM',2)
;;;	  IF (TMAIN.LE.80) LPRICE = LPRICE + ARRAY(TMAIN)
;;;	END
;;;	IF (TBRAN.AND.(LITMNO.EQ.'T9'.OR.LITMNO.EQ.'TV9'))
;;;	BEGIN
;;;	  LOKCTL = 1
;;;	  IF (TGUAG.EQ.26) XCALL IO (19,TPRICE,5,READ,LOKCTL)
;;;	  IF (TGUAG.EQ.24) XCALL IO (19,TPRICE,6,READ,LOKCTL)
;;;	  IF (TGUAG.EQ.22) XCALL IO (19,TPRICE,7,READ,LOKCTL)
;;;	  IF (TGUAG.EQ.20) XCALL IO (19,TPRICE,8,READ,LOKCTL)
;;;	  IF (ARRAY(TBRAN).EQ.0) XCALL MESAG ('NO BRANCH PRICE ON FILE FOR THIS ITEM',2)
;;;	  IF (TBRAN.LE.80) LPRICE = LPRICE + ARRAY(TBRAN)
;;;	END
;;;	IF (TBRAN.AND.(LITMNO.EQ.'T4'.OR.LITMNO.EQ.'TV4'))
;;;	BEGIN
;;;	  LOKCTL = 1
;;;	  IF (TGUAG.EQ.26) XCALL IO (19,TPRICE,9,READ,LOKCTL)
;;;	  IF (TGUAG.EQ.24) XCALL IO (19,TPRICE,10,READ,LOKCTL)
;;;	  IF (TGUAG.EQ.22) XCALL IO (19,TPRICE,11,READ,LOKCTL)
;;;	  IF (TGUAG.EQ.20) XCALL IO (19,TPRICE,12,READ,LOKCTL)
;;;	  IF (ARRAY(TBRAN).EQ.0) XCALL MESAG ('NO BRANCH PRICE ON FILE FOR THIS ITEM',2)
;;;	  IF (TBRAN.LE.80) LPRICE = LPRICE + ARRAY(TBRAN)
;;;	END
;;;	CLOSE 19
;;;	LPRICE = LPRICE * 10
;;;	PRICE = LPRICE
;;;	IF (LPRICE.EQ.0) XCALL MESAG ('NO PRICING ON FILE FOR THIS ITEM',1)
;;;	IF (LITMNO.NE.'TV'.AND.TGUAG.EQ.20) PRDCAT = '10'
;;;
;;;	CALL DSPLIN
;;;	RETURN
;;;  BADTEE,
;;;	OFFERROR
;;;	XCALL MESAG ('INVALID ITEM NUMBER FOR TEE OR SADDLE',2)
;;;	SRCCTL = 1
;;;	RETURN
;;;
;;;GETRED,	;	ADDED FOR REDUCER PROCESSING	
;;;	ONERROR BADRED
;;;	LITMNO = KITMNO
;;;	IF (LITMNO.EQ.'RV') LITMNO = KITMNO(2,15)
;;;	TEEDAT =
;;;	TGUAG = LITMNO(2,3)		;GUAGE
;;;	IF (TGUAG.NE.26.AND.TGUAG.NE.24.AND.TGUAG.NE.22.AND.TGUAG.NE.20) GOTO BADRED
;;;	IF (TGUAG.EQ.26.AND.LITMNO.EQ.'V') GOTO BADRED
;;;	IF (TGUAG.EQ.20.AND.LITMNO.EQ.'R') GOTO BADRED
;;;	TMAIN = LITMNO(4,5)		;MAIN
;;;
;;;	TREDU = LITMNO(6,7)		;REDUCER (PRICED BY MAIN SIZE)
;;;	IF (TREDU.GT.TMAIN) GOTO BADRED
;;;	TBRAN = 
;;;	TDESCR = 'GALV REDUCER '
;;;	IF (LITMNO.EQ.'V') TDESCR(1,4) = 'PVS '
;;;	TDESCR(14,15) = TGUAG
;;;	TDESCR(16,18) = 'ga '
;;;	TDESCR(19,23) = 'xx/xx'
;;;	TDESCR(19,20) = TMAIN
;;;	TDESCR(22,23) = TREDU
;;;	LITMNO(4,15) =
;;;	IF (LITMNO.EQ.'V') LITMNO(2,4) = LITMNO(1,3)
;;;	IF (LITMNO.EQ.'VV') LITMNO(1,1) = 'R'
;;;	OFFERROR
;;;	LDESCR = TDESCR
;;;	LPRICE =
;;;	IF (LITMNO.EQ.'RV')	THEN OPEN (19,I,'SMC:TVPRIC.SMC')
;;;				ELSE OPEN (19,I,'SMC:TPRICE.SMC')
;;;	IF (TMAIN.GT.TREDU)
;;;	BEGIN
;;;	  LOKCTL = 1
;;;	  IF (TGUAG.EQ.26) XCALL IO (19,TPRICE,13,READ,LOKCTL)
;;;	  IF (TGUAG.EQ.24) XCALL IO (19,TPRICE,14,READ,LOKCTL)
;;;	  IF (TGUAG.EQ.22) XCALL IO (19,TPRICE,15,READ,LOKCTL)
;;;	  IF (TGUAG.EQ.20) XCALL IO (19,TPRICE,16,READ,LOKCTL)
;;;	  IF (ARRAY(TMAIN).EQ.0) XCALL MESAG ('NO MAIN PRICE ON FILE FOR THIS ITEM',2)
;;;	  IF (TMAIN.LE.80) LPRICE = LPRICE + ARRAY(TMAIN)
;;;	END
;;;	CLOSE 19
;;;	LPRICE = LPRICE * 10
;;;	PRICE = LPRICE
;;;	IF (LPRICE.EQ.0) XCALL MESAG ('NO PRICING ON FILE FOR THIS ITEM',1)
;;;	IF (LITMNO.NE.'RV'.AND.TGUAG.EQ.20) PRDCAT = '10'
;;;
;;;	CALL DSPLIN
;;;	RETURN
;;;  BADRED,
;;;	OFFERROR
;;;	XCALL MESAG ('INVALID ITEM NUMBER FOR REDUCER',2)
;;;	SRCCTL = 1
;;;	RETURN
;;;
;;;GETSAD,	;	ADDED FOR SADDLES PROCESSING	
;;;	VINYL = $FALSE
;;;	USING KITMNO SELECT
;;;	('SWV'),	BEGIN	;EDGE, VINYL
;;;			SADDLE = KITMNO(4,15)
;;;			TDESCR = '99"ON 99"90 26GA PVS SWDG SADD'
;;;			VINYL = $TRUE
;;;			LITMNO = KITMNO(1,4)
;;;	  		OPEN (19,I,'SMC:SWVPRI.SMC')
;;;			END
;;;	('SCV'),	BEGIN	;CONICAL, VINYL
;;;			SADDLE = KITMNO(3,15)
;;;			TDESCR = '99"ON 99"90 26GA PVS CON/SADDL'
;;;			VINYL = $TRUE
;;;			LITMNO = KITMNO(1,4)
;;;	  		OPEN (19,I,'SMC:SCVPRI.SMC')
;;;			END
;;;	('SW'),		BEGIN	;EDGE
;;;			SADDLE = KITMNO(3,15)
;;;			TDESCR = '99"ON 99"90 26GA SWEDGE SADDLE'
;;;			LITMNO = KITMNO(1,3)
;;;	  		OPEN (19,I,'SMC:SWPRIC.SMC')
;;;			END
;;;	('SV'),		BEGIN	;VINYL
;;;			SADDLE = KITMNO(3,15)
;;;			TDESCR = '99"ON 99"90 26GA PVS SADDLE   '
;;;			VINYL = $TRUE
;;;			LITMNO = KITMNO(1,3)
;;;	  		OPEN (19,I,'SMC:SVPRIC.SMC')
;;;			END
;;;	('SC'),		BEGIN	;CONICAL
;;;			SADDLE = KITMNO(3,15)
;;;			TDESCR = '99"ON 99"90 26GA CONICAL SADDL'
;;;			LITMNO = KITMNO(1,3)
;;;	  		OPEN (19,I,'SMC:SCPRIC.SMC')
;;;			END
;;;	('S'),		BEGIN	;JUST PLAIN
;;;			SADDLE = KITMNO(2,15)
;;;			TDESCR = '99"ON 99"90 26GA SADDLE       '
;;;			IF (SGUAG .EQ. '20') GOTO SADDLE_ERROR
;;;			LITMNO = KITMNO(1,2)
;;;	  		OPEN (19,I,'SMC:SPRICE.SMC')
;;;			END
;;;	(),		GOTO SADDLE_ERROR
;;;	ENDUSING
;;;
;;;
;;;; angle must be 90 or 45...
;;;	USING SANGL SELECT
;;;	('4'),	SANGL = '45'
;;;	('9'),	SANGL = '90'
;;;	(),	GOTO SADDLE_ERROR
;;;	ENDUSING
;;;
;;;; check for valid gauges...
;;;	USING SGUAG SELECT
;;;	('20','22','24','26'),	TGUAG = SGUAG
;;;	(),			GOTO SADDLE_ERROR
;;;	ENDUSING
;;;; vinyl doesn't come in 26 ga.
;;;	IF (VINYL .AND. TGUAG.EQ.26) GOTO SADDLE_ERROR
;;;
;;;; check for valid branch length...
;;;	USING SBRAN SELECT
;;;	('01' THRU '36'),	TBRAN = SBRAN
;;;	(),			GOTO SADDLE_ERROR
;;;	ENDUSING
;;;
;;;; check for valid main length...
;;;	USING SMAIN SELECT
;;;	('00' THRU '99'),	TMAIN = SMAIN
;;;	(),			GOTO SADDLE_ERROR
;;;	ENDUSING
;;;	IF (TBRAN .GT. TMAIN) GOTO SADDLE_ERROR
;;;
;;;; insert dimensions and angle into description...
;;;	TDESCR(1,2) = TBRAN,'XX'
;;;	TDESCR(7,8) = TMAIN,'XX'
;;;	TDESCR(10,11) = SANGL
;;;	TDESCR(13,14) = SGUAG
;;;
;;;; get price from table...
;;;
;;;	CLEAR LPRICE
;;;; at this point gauge has been validated to be 20,22,24,26.
;;;; read TPRICE record as follows:
;;;;     for angle = 90	for angle 45
;;;;	26 = rec 5	26 = rec  9
;;;;	24 = rec 6	24 = rec 10
;;;;	22 = rec 7	22 = rec 11
;;;;	20 = rec 8	20 = rec 12
;;;
;;;	USING TGUAG SELECT
;;;	(26),	T_REC = 5
;;;	(24), 	T_REC = 6
;;;	(22),	T_REC = 7
;;;	(20),	T_REC = 8
;;;	ENDUSING
;;;
;;;	IF (SANGL .EQ. '45') T_REC = T_REC + 4
;;;	LOKCTL = 1
;;;	XCALL IO (19,TPRICE,T_REC,READ,LOKCTL)
;;;
;;;	IF (ARRAY(TBRAN).EQ.0) 
;;;&		XCALL MESAG ('NO BRANCH PRICE ON FILE FOR THIS ITEM',1)
;;;	IF (TBRAN.LE.80) LPRICE = LPRICE + ARRAY(TBRAN)
;;;
;;;	LPRICE = LPRICE * 10
;;;	IF (LPRICE.EQ.0) XCALL MESAG ('NO PRICING ON FILE FOR THIS ITEM',1)
;;;	IF ((LITMNO.NE.'SV'.AND.LITMNO.NE.'SWV'.AND.LITMNO.NE.'SCV')
;;;&		.AND.TGUAG.EQ.20) PRDCAT = '10'
;;;
;;;
;;;	CLOSE 19
;;;
;;;	PRICE = LPRICE	
;;;	LDESCR = TDESCR
;;;
;;;	RETURN
;;;
;;;SADDLE_ERROR,
;;;	CLOSE 19
;;;	SRCCTL = 1
;;;	XCALL MESAG ('INVALID ITEM NUMBER FOR SADDLE',2)
;;;	RETURN
;;;;----------------------------------------------------------------
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

GETSPR,	;	ADDED FOR SPIRAL PIPE PROCESSING
	ONERROR BADSP
	IF (KITMNO(7,7).EQ.'+')		;PROCESS INCHES
	THEN	BEGIN
		INCH = KITMNO(8,10)
		TDESCR = '__"-__GA X ___"LONG SPIRL ____'
		TDESCR(12,14) = INCH,'ZZX'
		END	
	ELSE	BEGIN
		INCH = 
		DSIZ = KITMNO(7,8)
		TDESCR = '__"-__GA X __''SPIRAL PIPE ____'
		TDESCR(12,13) = DSIZ,'ZX'
		END
	TDESCR(1,2) = KITMNO(3,4)	;DIA
	TDESCR(5,6) = KITMNO(5,6)	;GA

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; removed 7-18-13 ssq: left over from days gone by...
;;;	IF (KITMNO.EQ.'SG') 
;;;	BEGIN
;;;	  LITMNO = 'SP'
;;;	  LITMNO(3,4) = KITMNO(3,4)	;DIA
;;;	  LITMNO(5,6) = '10'		;LEN
;;;	  LITMNO(7,8) = KITMNO(5,6)	;GA
;;;	  TDESCR(27,30) = 'GALV'
;;;	END
;;;	IF (KITMNO.EQ.'SX')
;;;	BEGIN
;;;	  LITMNO = 'SPV'
;;;	  LITMNO(4,5) = KITMNO(3,4)	;DIA
;;;	  LITMNO(6,7) = '10'		;LEN
;;;	  LITMNO(8,9) = KITMNO(5,6)	;GA
;;;	  TDESCR(27,30) = 'PVS '
;;;	END
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	OFFERROR
	LDESCR = TDESCR
	LUOFM = 'EA'
	IF (INCH)
	THEN	BEGIN
		ONERROR BADSP
		DPND = (INCH*100) / 12
		IF (DPND(5,6).NE.0) THEN DSIZ = DPND(1,4) + 1 ELSE DSIZ = DPND(1,4)
		END
	ELSE 	DSIZ = KITMNO(7,8)

	IF (DSIZ.GT.30) GOTO BADSP
	LPRICE = (DSIZ * PRICE(1))
	PRICE = LPRICE			;SSQ 12-9-98
	OFFERROR
	RETURN
BADSP,
	OFFERROR
	XCALL OUTPT (23,1,1,'\',1)
	DISPLAY (15,'ITEM CODE ENTERED: ',KITMNO,     '/ ITEM CODE CALCULATED: ',LITMNO      )
	XCALL MESAG ('INVALID ITEM NUMBER FOR SPIRAL PIPE',2)
	SRCCTL = 1
	RETURN

TBL_PRICE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; READ COP PRICE TABLE INTO CORE
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;-----------------------------------------------
;;; 5-16-97 SSQ: QTY BREAK PRICING:

	CLEAR TBL_KEY, TBL_PRICE_FOUND
	TBLCOD = 'I1'
	I1_KEY = KITMNO
	XCALL ISIO (CHN182,COPTBL,TBL_KEY,READ,LOKCTL)
	IF (LOKCTL .EQ. 0) 
		BEGIN
		TBL_PRICE_FOUND = 1
		PRICE = I1_PRICE(1)		;SAVE THE 1ST PRICE
		END
	RETURN
;-----------------------------------------------
;
FIND_DAMPER,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CLEAR LDAMPR

	PARTNO = KITMNO

	FOR I FROM 1 THRU 3	CLEAR DAMPER_PRICE(I)

	MAXFLEN = %TRIM(PARTNO)
	FOR I FROM 1 THRU 3
		BEGIN
		XCALL INSTR(1, PARTNO, "*", FL)
		IF (.NOT. FL) 		EXITLOOP
		PARTNO(FL, MAXFLEN) = PARTNO(FL+1, MAXFLEN)
		CALL D_SIZE
		IF (BAD_DIGIT)
			BEGIN
			XCALL MESAG('Invalid damper configuration',2)
			RETURN
			END
		END

	KITMNO = PARTNO
	RETURN

D_SIZE,	;---------------------------------------
	CLEAR BAD_DIGIT
;;;12-30-98	CLEAR SRCCTL		;use srcctl in place of bad_dig
	ONERROR BADDIG
	DAMP = PARTNO(FL, FL+1)
	OFFERROR

;check damper price...
	CLOSE 19
	FL_NAME = 'SDPRIC'		;SSQ 9-9-03
	OPEN(19,I,FILPRC)		;SSQ 9-9-03
;;;	OPEN (19,I,'SMC:SDPRIC.SMC')
	XCALL IO (19,TPRICE,1,READ,LOKCTL)

	IF(DAMP.LE.80) 
	THEN	DAMPER_PRICE(I) = ARRAY(DAMP)*10
	ELSE	CLEAR DAMPER_PRICE(I)

	CLOSE 19
	IF (DAMPER_PRICE(I) .LE. 0)
		BEGIN
		XCALL MESAG ('Zero or missing damper price',2)
		GOTO BADDIG
		END
	LDAMPR = 1
	RETURN
BADDIG,
	CLEAR DAMPER_PRICE(I)
	BAD_DIGIT = 1
;;;12-30-98	SRCCTL = 1
	CLEAR LDAMPR
	RETURN
;----------------------------------------------------------------
OE6,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL OUTPT (1,1,2,'BILLING',1)
	XCALL OUTPT (2,1,2,'SELECT',1)
	XCALL OUTPT (2,12,0,'ORDER: ',1)
	XCALL DSPLY (6,2,19,ORDNOA,1,1)
	XCALL OUTPT (0,0,0,'  CUST: ',1)
	XCALL OUTPT (0,0,0,OCUSNM,1)
	XCALL OUTPT (6,20,0,'1. ITEM #',1)
	XCALL OUTPT (8,20,0,'2. DESCRIPTION',1)
	XCALL OUTPT (10,20,0,'3. SEQUENCE NO.',1)
	XCALL OUTPT (12,20,0,'4. UNIT-OF-MEAS',1)
	XCALL OUTPT (14,20,0,'5. QTY ORDERED',1)
	XCALL OUTPT (16,20,0,'6. QTY SHIPPED',1)
	XCALL OUTPT (18,20,0,'7. PRICE',1)
	XCALL OUTPT (18,51,0,'EXTENDED PRICE:',1)
	RETURN
;--------------

SET_NEW_FIELDS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;added 6-14-00 ssq:
	CLEAR LMSQ1, LMSQ2, LMSQ3
	LTYPE = 'L'
;if LITMNO is in "stocked part numbers" table, change dept to "I"...
	CLEAR TBL_KEY
	TBLCOD = 'SI'
	SI_ITEM = KITMNO
	READ (CHN182,COPTBL,TBL_KEY)[ERR=NOT_SIT]
	LDEPT = 'I'	;STOCKED
	GOTO SIT_OK
NOT_SIT,
	LDEPT = USRDEF
SIT_OK,
	LSRTSQ = PRICCD			;3-29-00 SSQ

	IF (LCPFLG) LDEPT = LPRDCD	;if price "tabbed" set dept to prdcat

	IF (TGUAG .EQ. 20)
		BEGIN
		LDEPT = 'K'
		LPRDCD = 'K3'
		END

	RETURN
;---------------------------------------------------
;;;
INPUT,
	XCALL INPUT(ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	RETURN
DSP3DP,				;;;
	OPTION = 4		;;;
	GOTO CALDSP		;;;
DSPDAT,
	OPTION = 2
	GOTO CALDSP
DSPNUM,
	OPTION = 1
	GOTO CALDSP
DSPDLR,
	OPTION = 3
CALDSP,
	XCALL DSPLY(MAX,ROW,COL,DECMAL,OPTION,1)
	RETURN
ENDOFF,
	RETURN
END



