;TESTBL.COP
;
;	IN-TEST VERSION OF BLADIN.COP
; BLADIN.COP - MAINTAIN BILL OF LADING FILE PRIOR TO PRINT AND HIST UPDATE
;
;	4/15/96 - SEFFREN - TECHNOLOGY MAXIMIZERS, INC.
;
RECORD BLHEAD
;;;	.INCLUDE 'DEF:RD178A.DEF'
			; BILL OF LADING HEADER FILE
			; RECORD SIZE =	335	DEVICE - 178
			; NAME - "BLHEAD"
			;
			;
	BHORDN	,D6	; ORDER NUMBER
	BHHDRN	,D1	; B/L HEADER NUMBER (USED WHEN MULTI SHIP TO DIFF ADDR)
	BHSHPN	,D2	; B/L SHIPMENT NUMBER (MULTI SHIP TO SAME HEADER)
	BHSCAC	,A4	; SCAC CODE
		,A11
;;;	BHSHPV	,A15	; SHIP VIA TRUCK LINE
	BHPRON	,A15	; PRO NUMBER (TRUCK LINE ASSIGNED)
	BHBILD	,D6	; B/L DATE (DATE TRUCK LINE CALLED)
	BHSHPD	,D6	; SHIP DATE
	BHCUSNM	,A25	; CUSTOMER NAME
	BHSHPNM	,A30	; SHIP-TO-NAME
	BHSHAD1	,A30	; SHIP-TO ADDRESS LINE 1
	BHSHAD2	,A30	; SHIP-TO ADDRESS LINE 2
	BHSHAD3	,A30	; SHIP-TO ADDRESS LINE 3
	BHPONO	,A10	; PO NUMBER
	BHSPIN1	,A45	; SPECIAL INSTRUCTIONS LINE 1
	BHSPIN2	,A60	; SPECIAL INSTRUCTIONS LINE 2
	BHPPCL	,A1	; PREPAID OR COLLECT (P OR C)
	BHTRACE	,A15	; TRACER ID NUMBER (TRUCK LINE ASSIGNED)
	BHFRTAM	,D7	; FREIGHT CHARGE AMOUNT (PPD ONLY) XX,XXX.XX
	BHSTATS	,D1	; B/L HEADER STATUS; 	0=OPEN 1=SELECTED 2=PRINTED 
			;			3=COMPLETE W/CHGS 4=POSTING
			;			9=CLOSED (HISTORY)
;		----
;	
RECORD	,X
	KEY178	,A9	

RECORD BLLINE
	.INCLUDE 'DEF:RD179A.DEF'
RECORD ORDHDR
	.INCLUDE 'DEF:RD044A.DEF'
;;;RECORD TRKMAS
;;;	.INCLUDE 'DEF:RD180A.DEF'
RECORD	COPTBL
	.INCLUDE 'DEF:RD182A.DEF'
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
		,A1
	POS	,D2
RECORD
	BHKEY	,A9
RECORD	,X
	KORDNO	,D6
	KHDRN	,D1
	KSHPN	,D2
RECORD ASHIPNO
	AORDNO	,A6
		,A1,'.'
	AHDRN	,A1
		,A1,'.'
	ASHPN	,A2
RECORD
	UOM050	,7A7,	'CARTONS','PIECES ','BUNDLES','BOXES  ','CRATES ',
&			'SKIDS  ','GYLORDS'
	DES050	,6A30,
&			'SLIPS, DRIVES          106-260',
&			'R-ANGLE                       ',
&			'TDC ACCESSORIES               ',
&			'COMPANION RINGS               ',
&			'SPIRAL PIPE HANGERS           ',
&			'TDC BAR                       '

	UOM060	,9A7,	'CARTONS','PIECES ','LOTS   ','BOXES  ','CRATES ',
&			'SKIDS  ','GYLORDS','PANELS ','10'' BOX'
	DES060	,4A30,
&			'TURNING VANE RAIL             ',
&			'MISC. DUCT                    ',
&			'MISC. PLASMA FITTINGS         ',
&			'MISC. S/L PIPE-SEAM NOT CLOSED'

	UOM070	,3A7,	'BUNDLES','CRATES ','CARTONS'
	DES070	,2A30,
&			'GALV. TURNING VANE            ',
&			'STAINLESS STEEL TURNING VANE  '

	UOM125	,5A7,	'BOXES  ','GYLORDS','SKIDS  ','BUNDLES','PIECES '
	DES125	,4A30,
&			'FITTINGS - MISC. GALVANIZED   ',
&			'FITTINGS - MISC. PVS          ',
&			'FITTINGS - GORELOCK           ',
&			'FITTINGS - WELDED             '

	UOM150	,5A7,	'BOXES  ','GYLORDS','SKIDS  ','PIECES ','CRATES '
	DES150	,8A30,
&			'FITTINGS - MISC. GALVANIZED   ',
&			'FITTINGS - MISC. PVS          ',
&			'FITTINGS - GORELOCK           ',
&			'FITTINGS - WELDED             ',
&			'SPIRAL PIPE - GALVANIZED      ',
&			'SPIRAL PIPE - PVS             ',
&			'SPIRAL PIPE - PAINT GRIP      ',
&			'SPIRAL PIPE - STAINLESS STEEL '


RECORD	VARS
	BHSHPV	,A15	; SHIP VIA TRUCK LINE
	BL_FOUND	,D1
	SCAC	,A4
	SHP_ERR	,D1
	LOKCTL	,D1
	V	,D1
	I	,D2
	SWITCH	,D1
	TODAY	,D6
	ALPHA	,A15
	ENTRY	,A60
	INXCTL	,D1
	CNGCTL	,D1
	WHATNO	,D2
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	DELETE	,D1,3
	SELECT	,D2
	DTMASK	,A8,	'XX/XX/XX'
	TMASK	,A6,	'ZZZZZX'
	TUNITS	,D5
	TWGHT	,D6
	DCHAR	,D3
	ACHAR	,A1
	TTSTS	,D1
	ADDLIN	,D1
	SEQ	,D2
	GETHI	,D1
	KTRKNAM	,A15
	HIHDRN	,D1
	HISHPN	,9D2
	PLINE	,A82
	LINCNT	,D2
	LPSW	,D1
	SPLFIL	,A14
	PGCNT	,D1
	LPARG	,D1
	BLANKS	,A20
	DFLD	,D6
	NUMASK	,A7,	'ZZZ,ZZX'
	DLMASK	,A9,	'ZZ,ZZZ.XX'
	BLCONT	,D1,	0
	REPBL	,D1,	0
	INSTANTBL	,D1,	0
	ESC	,A1
	SAVKEY	,A9
	LINE	,A80	,'--------------------------------------------------------------------------------'

RECORD	,X
	ALOKCTL	,A1
PROC
	XCALL TERID (V)
	XCALL ASCII (27,ESC)
	XCALL OUTPT (1,1,2,'BILL OF LADING ENTRY AND EDITING',1)
	XCALL RDATE (TODAY)
OPEN1,
	SWITCH = 1
	XCALL FILES (8,'SU',178,SWITCH)		;FILE 178 - BLHEAD FILE
	IF (SWITCH.NE.9) GOTO OPEN2
	GOTO ABORT
OPEN2,
	XCALL FILES (9,'SU',179,SWITCH)		;FILE 179 - BLLINE FILE
	IF (SWITCH.NE.9) GOTO OPEN3
	CALL CLOSE1
	GOTO ABORT
OPEN3,
	XCALL FILES (28,'SI',188,SWITCH)	;FILE 188 - SBLHDR FILE
	IF (SWITCH.NE.9) GOTO OPEN4
	CALL CLOSE2
	GOTO ABORT
OPEN4,
	XCALL FILES (29,'SI',189,SWITCH)	;FILE 189 - SBLLIN FILE
	IF (SWITCH.NE.9) GOTO OPEN5
	CALL CLOSE3
	GOTO ABORT
OPEN5,
;;;	XCALL FILES (80,'SI',180,SWITCH)	;FILE 180 - TRKMAS FILE
;;;	IF (SWITCH.NE.9) GOTO OPEN6
	XCALL FILES (80,'SI',182,SWITCH)
	IF (SWITCH.NE.9) GOTO OPEN6
	CALL CLOSE4
	GOTO ABORT
OPEN6,
	XCALL FILES (4,'SI',044,SWITCH)		;FILE 044 - ORDHDR FILE
	IF (SWITCH.NE.9) GOTO SELECT
	CALL CLOSE5
	GOTO ABORT

SELECT,
	XCALL OUTPT ( 2,1,2,'\',1)
	XCALL OUTPT ( 6,15,0,'PLEASE SELECT ACTION: ',1)
	XCALL OUTPT ( 8,15,0,'1. DISPLAY ALL B/L ACTIVITY FOR AN ORDER',1)
	XCALL OUTPT ( 9,15,0,'2. ADD NEW B/L HEADER (SHIP TO LOCATION)',1)
	XCALL OUTPT (10,15,0,'3. ADD NEW B/L SHIPMENT (TO AN EXISTING HEADER)',1)
	XCALL OUTPT (11,15,0,'4. CHANGE OPEN B/L',1)
	XCALL OUTPT (12,15,0,'5. DELETE OPEN B/L',1)
	XCALL OUTPT (13,15,0,'6. SELECT B/Ls FOR PRINTING',1)
	XCALL OUTPT (14,15,0,'7. PRINT SELECTED B/Ls',1)
	XCALL OUTPT (15,15,0,'8. ENTER FREIGHT CHARGES TO SHIPPED B/Ls',1)
	XCALL OUTPT (16,15,0,'9. MANUALLY FLAG B/L TO HISTORY',1)
	XCALL OUTPT (17,14,0,'10. MAINTAIN TRUCK LINE INFO',1)
	CTL = '06,37,02,00,#E'
	CALL INPUT
	GOTO (SELECT,ENDOFF), INXCTL
	SELECT = ENTRY

	ROW = 2
	COL = 1
	USING SELECT SELECT
	(1), BEGIN
		XCALL OUTPT (ROW,COL,0,'DISPLAY ALL B/L ACTIVITY FOR AN ORDER',1)
		GOTO DSPACT
	     END
	(2), XCALL OUTPT (ROW,COL,0,'ADD NEW B/L HEADER (SHIP TO LOCATION)',1)
	(3), XCALL OUTPT (ROW,COL,0,'ADD NEW B/L SHIPMENT (TO AN EXISTING HEADER)',1)
	(4), XCALL OUTPT (ROW,COL,0,'CHANGE OPEN B/L',1)
	(5), XCALL OUTPT (ROW,COL,0,'DELETE OPEN B/L',1)
	(6), XCALL OUTPT (ROW,COL,0,'SELECT B/Ls FOR PRINTING',1)
	(7), BEGIN
		XCALL OUTPT (ROW,COL,0,'PRINT B/Ls',1)
		GOTO PRINTBL
	     END
	(8), XCALL OUTPT (ROW,COL,0,'ENTER FREIGHT CHARGES TO SHIPPED B/Ls',1)
	(9), XCALL OUTPT (ROW,COL,0,'MANUALLY MOVE B/L TO HISTORY',1)
	(10), BEGIN
		CALL CLOSES
		XCALL PGCHN ('CP:TRKMNT',1)
	      END
	(), GOTO SELECT
	ENDUSING

DISPLA1,
	CNGCTL =
	BHKEY =
	BLHEAD =
	BLLINE =
	SAVKEY =
	UNLOCK 8
	UNLOCK 9
	XCALL OUTPT (4,1,2,'6. SHIP TO',1)
	XCALL OUTPT (4,49,0,'1. SHIPPERS NO.',1)
	XCALL OUTPT (5,49,0,'2. B/L DATE',1)
	XCALL OUTPT (6,49,0,'3. SHIP VIA',1)
	XCALL OUTPT (7,49,0,'4. CARRIERS NO.',1)
	XCALL OUTPT (8,49,0,'5. DATE SHIPPED',1)
	XCALL OUTPT (11,1,0,'7. CUST PO NO',1)
	XCALL OUTPT (11,18,0,'8. SPECIAL INSTRUCTIONS',1)
	XCALL OUTPT (16,1,0,' 9. PPD/COL/THIRD',1)
	XCALL OUTPT (18,1,0,'10. TRACER ID #',1)
	XCALL OUTPT (20,1,0,'    STATUS CODE',1)

BHORDN,					; ORDER NUMBER
	CTL = '04,66,06,01,#E'
	CALL INPUT
	GOTO (DISPLA1,SELECT), INXCTL
	KORDNO = ENTRY
	AORDNO = KORDNO
	AHDRN = 
	ASHPN = 
	IF (KORDNO.EQ.0)
	BEGIN
	  KHDRN = 0
	  KSHPN = 0
	  AHDRN = KHDRN
	  ASHPN = KSHPN,'XX'
	  GOTO BHSHPN2
	END
	XCALL OUTPT (ROW,COL,0,ASHIPNO,1)
	IF (SELECT.GE.2.AND.SELECT.LE.3) 
	BEGIN
	  GETHI = 1
	  CALL GETHIGH
	  GETHI = 
	END

BHHDRN,					; B/L HEADER NUMBER (USED WHEN MULTI SHIP TO DIFF ADDR)
	CTL = '04,73,01,00,# '
	CALL INPUT
	GOTO (BHORDN), INXCTL
	KHDRN = ENTRY
		;IF ADD HEADER - INCR HIGH HEADER # AND DISPLAY

	IF (SELECT.EQ.2.AND.KHDRN.EQ.0) KHDRN = HIHDRN + 1	;IF ADD HEADER
								;INCR HIGH HDR #
								;AND DISPLAY
	IF (KHDRN.EQ.0) KHDRN = 1
	AHDRN = KHDRN
	XCALL OUTPT (ROW,66,0,ASHIPNO,1)
	
BHSHPN,					; B/L SHIPMENT NUMBER (MULTI SHIP TO SAME HEADER)
	CTL = '04,75,02,00,# '
	CALL INPUT
	GOTO (BHORDN), INXCTL
	KSHPN = ENTRY

		;IF ADD SHIPMENT - INCR HIGH SHIPMENT # AND DISPLAY

	IF (SELECT.EQ.3.AND.KSHPN.EQ.0) KSHPN = HISHPN(KHDRN) + 1
								
	IF (KSHPN.EQ.0) KSHPN = 1
	ASHPN = KSHPN,'XX'

BHSHPN2,
	XCALL OUTPT (ROW,66,0,ASHIPNO,1)
	KEY178 = BHKEY
	CALL GET_BLHEAD			;FETCH BLHEAD RECORD
;-----------------------------------------------------------
	IF (BL_FOUND)
	THEN	USING SELECT SELECT		;header found...
		(2 thru 3),		BEGIN
					XCALL MESAG('THIS KEY ALREADY ON CURRENT FILE - CANNOT ADD ANOTHER',2)
					GOTO DISPLA1
					END
		(),			GOTO DSPREC1
		ENDUSING

	ELSE	USING SELECT SELECT		;header not found...
		(4 thru 6, 8 thru 10),	BEGIN
					XCALL MESAG('NO CURRENT B/L''s ON FILE MATCHING THIS KEY',2)
					GOTO DISPLA1
					END
		(),			GOTO ADDMODE
		ENDUSING
;-----------------------------------------------------------
	GOTO SELECT
	
ADDMODE,
	IF (SELECT.EQ.3)
	BEGIN
	  KEY178 = BHKEY
	  LOKCTL = 1
	  XCALL ISIO (8,BLHEAD,KEY178(1,7),READ,LOKCTL)
	  IF (LOKCTL.EQ.0) 
	  BEGIN
	    KEY178 = BHKEY
	    BHBILD = 
	    BHSHPV = 
	    BHSCAC =
	    BHPRON =
	    BHSHPD =
	    BHPPCL =
	    BHTRACE =
	    BHSTATS =
	    GOTO DSPREC1
	  END
	  KEY178 = BHKEY
	  LOKCTL = 1
	  XCALL ISIO (28,BLHEAD,KEY178(1,7),READ,LOKCTL)
	  IF (LOKCTL.EQ.0) 
	  BEGIN
	    KEY178 = BHKEY
	    BHBILD = 
	    BHSHPV = 
	    BHSCAC =
	    BHPRON =
	    BHSHPD =
	    BHPPCL =
	    BHTRACE =
	    BHSTATS =
	    GOTO DSPREC1
	  END
	XCALL MESAG ('NO PREVIOUS HEADER FOUND - SWITCHING TO ADD HEADER MODE',2)
	SELECT = 2
	XCALL OUTPT (2,1,1,'ADD NEW B/L HEADER (SHIP TO LOCATION)',1)
	END

	BLHEAD =
	KEY178 = BHKEY
	IF (KORDNO.EQ.0) GOTO BHBILD
	OORDNO = KORDNO
	LOKCTL = 1
	XCALL ISIO (4,ORDHDR,OORDNO,READ,LOKCTL)
	IF (LOKCTL.OR.OORDNO.NE.KORDNO)
	BEGIN
	  XCALL MESAG ('OPEN ORDER NOT FOUND - CANNOT ENTER B/L',2)
	  GOTO DISPLA1
	END
	IF (OLOC.NE.'O')
	BEGIN
	  XCALL MESAG ('THIS ORDER # IS FLAGGED AS AN ESTIMATE - CANNOT ENTER B/L',2)
	  GOTO DISPLA1
	END
	BHCUSNM = OCUSNM

BHBILD,					; B/L DATE (DATE TRUCK LINE CALLED)
	CTL = '05,66,06,00,D '
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHBILD = ENTRY
	IF (BHBILD.EQ.0)
	BEGIN
	  BHBILD = TODAY
	  ENTRY(1,8) = BHBILD,DTMASK
	  XCALL OUTPT (ROW,COL,0,ENTRY(1,8),1)
	END
	GOTO (ANYCN1), CNGCTL
BHSHPV,					; SHIP VIA
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	CTL = '06,66,15,01,A ,00'
;;;ASK1B,
;;;	CALL CINPUT
;;;	GOTO (DISPLA1,DISPLA1,BHSHPV,ASK1C), INXCTL
;;;	KTRKNAM = ENTRY
;;;	IF (POS) TRKNAM(1,POS) = ENTRY(1,POS)
;;;	IF (POS) XCALL OUTPT (ROW,COL,0,ENTRY(1,MAX),1)
;;;	IF (POS) READ (80,TRKMAS,TRKNAM(1,POS)) [KEY=ASK1B, EOF=ASK1B]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CTL = '06,66,04,00,A '
	CALL INPUT
	GOTO (DISPLA1),INXCTL
	SCAC = ENTRY(1,4)
	CALL GET_SCAC
	GOTO (BHSHPV),SHP_ERR

	XCALL OUTPT (ROW,COL,0,SC_NAME,1)
	XCALL OUTPT (16,65,0,SC_NAME,1)
	XCALL OUTPT (17,65,0,LINE(1,15),1)

	ALPHA(1,13) = SC_TEL1,'(XXX)XXX-XXXX'
	IF (SC_TEL1(1,3).EQ.0) ALPHA(1,13) = SC_TEL1,'ZZZZZXXX-XXXX'
	XCALL OUTPT (18,50,0,'TRAFFIC PHONE# ',1)
	XCALL OUTPT (18,65,0,ALPHA(1,13),1)

	ALPHA(1,13) = SC_TEL2,'(XXX)XXX-XXXX'
	IF (SC_TEL2(1,3).EQ.0) ALPHA(1,13) = SC_TEL2,'ZZZZZXXX-XXXX'
	XCALL OUTPT (20,50,0,'TRACING PHONE# ',1)
	XCALL OUTPT (20,65,0,ALPHA(1,13),1)

	BHSHPV = SC_NAME
	BHSCAC = SC_SCAC
	GOTO (ANYCN1), CNGCTL

BHPRON,					; PRO NUMBER (TRUCK LINE ASSIGNED)
	CTL = '07,66,10,00,A '
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHPRON = ENTRY
	GOTO (ANYCN1), CNGCTL

BHSHPD,					; SHIP DATE
	CTL = '08,66,06,00,D '
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSHPD = ENTRY
	IF (BHSHPD.EQ.0) 
	BEGIN
	  BHSHPD = TODAY
	  ENTRY(1,8) = BHSHPD,DTMASK
	  XCALL OUTPT (ROW,COL,0,ENTRY(1,8),1)
	END
	GOTO (ANYCN1), CNGCTL

	CTL = '05,04,30,00,A '
	IF (SELECT.EQ.2)
	BEGIN
	  BHSHPNM = OSHPNM
	  BHSHAD1 = OSHAD1
	  BHSHAD2 = OSHAD2
	  BHSHAD3 = OSHAD3
	END

	XCALL OUTPT (ROW,COL,0,BHSHPNM,1)
	XCALL OUTPT (ROW+1,COL,0,BHSHAD1,1)
	XCALL OUTPT (ROW+2,COL,0,BHSHAD2,1)
	XCALL OUTPT (ROW+3,COL,0,BHSHAD3,1)


	XCALL OUTPT (24,1,0,'<ENTER> TO ACCEPT; <TAB> TO OVERRIDE',1)
	
BHSHPNM,				; SHIP-TO-NAME
	CTL = '05,04,30,00,A '
	CALL ACCEPT
	IF (DCHAR.EQ.13) GOTO BHSHAD1
	IF (DCHAR.NE.9) GOTO BHSHPNM
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSHPNM = ENTRY
BHSHAD1,				; SHIP-TO ADDRESS LINE 1
	CTL = '06,04,30,00,A '
	CALL ACCEPT
	IF (DCHAR.EQ.13) GOTO BHSHAD2
	IF (DCHAR.NE.9) GOTO BHSHAD1
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSHAD1 = ENTRY
BHSHAD2,				; SHIP-TO ADDRESS LINE 2
	CTL = '07,04,30,00,A '
	CALL ACCEPT
	IF (DCHAR.EQ.13) GOTO BHSHAD3
	IF (DCHAR.NE.9) GOTO BHSHAD2
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSHAD2 = ENTRY
BHSHAD3,				; SHIP-TO ADDRESS LINE 3
	CTL = '08,04,30,00,A '
	CALL ACCEPT
	IF (DCHAR.EQ.13) GOTO ENDSHAD
	IF (DCHAR.NE.9) GOTO BHSHAD3
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSHAD3 = ENTRY
ENDSHAD,
	GOTO (ANYCN1), CNGCTL

	CTL = '12,04,10,00,A '
	XCALL OUTPT (ROW,COL,0,OPONO,1)
BHPONO,					; PO NUMBER
	CTL = '12,04,10,00,A '
	CALL ACCEPT
	IF (DCHAR.EQ.13)
	BEGIN
	  BHPONO = OPONO
	  GOTO ENDPONO
	END
	IF (DCHAR.NE.9) GOTO BHPONO
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHPONO = ENTRY
ENDPONO,
	GOTO (ANYCN1), CNGCTL

BHSPIN1,				; SPECIAL INSTRUCTIONS
	CTL = '12,21,45,00,A '
	CALL ACCEPT
	IF (DCHAR.EQ.13) GOTO BHSPIN2
	IF (DCHAR.NE.9) GOTO BHSPIN1
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSPIN1 = ENTRY
BHSPIN2,				; SPECIAL INST LINE 2
	CTL = '13,21,60,00,A '
	CALL ACCEPT
	IF (DCHAR.EQ.13) GOTO ENDIN2
	IF (DCHAR.NE.9) GOTO BHSPIN2
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSPIN2 = ENTRY
ENDIN2,
	GOTO (ANYCN1), CNGCTL
	
BHPPCL,					; PREPAID OR COLLECT (P OR C)
	CTL = '16,21,01,00,A '
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHPPCL = ENTRY
	IF (BHPPCL.NE.'P'.AND.BHPPCL.NE.'C'.AND.BHPPCL.NE.'T') GOTO BHPPCL
	GOTO (ANYCN1), CNGCTL
	IF (SELECT.EQ.3) GOTO ANYCN1

BHTRACE,				; TRACER ID NUMBER (TRUCK LINE ASSIGNED)
	CTL = '18,21,10,00,A '
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHTRACE = ENTRY
	GOTO ANYCN1
BHSTATS,
	CTL = '20,21,01,00,# '
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSTATS = ENTRY
	USING BHSTATS SELECT
	(0),	ALPHA = 'X   OPEN B/L'
	(1),	ALPHA = 'X   SELECTED'
	(2),	ALPHA = 'X   PRINTED'
	(3),	ALPHA = 'X   COMPLETE'
	(4),	ALPHA = 'X   POSTING'
	(9),	ALPHA = 'X   HIST B/L'
	(),	ALPHA = 'X   UNDEF'
	ENDUSING
	ALPHA(1,2) = BHSTATS,'X-'
	CTL = '20,21'
	XCALL OUTPT (ROW,COL,0,ALPHA,1)
	GOTO ANYCN1

DSPREC1,
	CTL = '04,66,06,00,#E'
	AORDNO = BHORDN
	AHDRN = BHHDRN
	ASHPN = BHSHPN,'XX'
	XCALL OUTPT (ROW,COL,0,ASHIPNO,1)
	CTL = '05,66,06,00,D '
	ALPHA(1,8) = BHBILD,DTMASK
	XCALL OUTPT (ROW,COL,0,ALPHA(1,8),1)
	CTL = '06,66,15,01,A ,00'
	XCALL OUTPT (ROW,COL,0,BHSHPV,1)
	CTL = '07,66,10,00,A '
	XCALL OUTPT (ROW,COL,0,BHPRON,1)
	CTL = '08,66,06,00,D '
	ALPHA(1,8) = BHSHPD,DTMASK
	XCALL OUTPT (ROW,COL,0,ALPHA(1,8),1)
	CTL = '05,04,30,00,A '
	XCALL OUTPT (ROW,COL,0,BHSHPNM,1)
	CTL = '06,04,30,00,A '
	XCALL OUTPT (ROW,COL,0,BHSHAD1,1)
	CTL = '07,04,30,00,A '
	XCALL OUTPT (ROW,COL,0,BHSHAD2,1)
	CTL = '08,04,30,00,A '
	XCALL OUTPT (ROW,COL,0,BHSHAD3,1)
	CTL = '12,04,10,00,A '
	XCALL OUTPT (ROW,COL,0,BHPONO,1)
	CTL = '12,21,45,00,A '
	XCALL OUTPT (ROW,COL,0,BHSPIN1,1)
	CTL = '13,21,60,00,A '
	XCALL OUTPT (ROW,COL,0,BHSPIN2,1)
	CTL = '16,21,01,00,A '
	XCALL OUTPT (ROW,COL,0,BHPPCL,1)
	CTL = '18,21,10,00,A '
	XCALL OUTPT (ROW,COL,0,BHTRACE,1)
	DCHAR = BHSTATS
	USING BHSTATS SELECT
	(0),	ALPHA = 'X   OPEN B/L'
	(1),	ALPHA = 'X   SELECTED'
	(2),	ALPHA = 'X   PRINTED'
	(3),	ALPHA = 'X   COMPLETE'
	(4),	ALPHA = 'X   POSTING'
	(9),	ALPHA = 'X   HIST B/L'
	(),	ALPHA = 'X   UNDEF'
	ENDUSING
	ALPHA(1,2) = BHSTATS,'X-'
	CTL = '20,21'
	XCALL OUTPT (ROW,COL,0,ALPHA,1)

	GOTO 	(DISPLA1,DISPLA1,BHBILD,ANYCN1,ASKDEL1,SELECBL,PRINTBL,
&		 ENTFRT,MANUPD), SELECT
	GOTO DISPLA1
ANYCN1,
	IF (BHSTATS.GT.3) GOTO NOCN1
	CNGCTL = 6
	XCALL ANYCN (CNGCTL,WHATNO)
	IF (CNGCTL.EQ.-1) GOTO DISPLA1
	IF (CNGCTL) 
	BEGIN
	  IF (BHSHPN.NE.1) GOTO (BADCN1,BHBILD,BHSHPV,BHPRON,BHSHPD,BADCN1,BADCN1,BHSPIN1,BHPPCL,BHTRACE,BHSTATS), WHATNO
	  GOTO (BADCN1,BHBILD,BHSHPV,BHPRON,BHSHPD,BHSHPNM,BHPONO,BHSPIN1,BHPPCL,BHTRACE,BHSTATS), WHATNO
	  GOTO ANYCN1
	END
	GOTO (SELECT,ADD1,ADD1,CHANGE1), SELECT
	GOTO DISPLA1
BADCN1,
	XCALL MESAG ('INVALID CHANGE',1)
	GOTO ANYCN1
NOCN1,
	USING BHSTATS SELECT
	(1),	XCALL MESAG ('CANNOT CHANGE OR DELETE B/L SELECTED FOR PRINTING',2)
	(2),	XCALL MESAG ('CANNOT CHANGE OR DELETE B/L ALREADY PRINTED',2)
	(3),	XCALL MESAG ('CANNOT CHANGE OR DELETE B/L FLAGGED COMPLETE',2)
	(4),	XCALL MESAG ('CANNOT CHANGE OR DELETE B/L FLAGGED POSTING',2)
	(9),	XCALL MESAG ('NO CHANGES OR DELETIONS ALLOWED TO HISTORICAL B/L',2)
	ENDUSING
	GOTO DISPLA1
ASKDEL1,
	IF (BHSTATS.GT.3) GOTO NOCN1
	IF (CNGCTL) 
	  THEN XCALL OUTPT (24,1,1,'CANNOT CHANGE SHIPPERS NUMBER - DELETE B/L <N> ?',1)
	  ELSE XCALL OUTPT (24,1,1,' ARE YOU SURE YOU WISH TO DELETE THIS B/L <N> ?',1)
	CTL = '24,49,01,00,YN'
	CALL INPUT
	IF (INXCTL.NE.1) GOTO DISPLA1
DELETE1,
	IF (BHSTATS.GT.3) GOTO NOCN1
	IF (SELECT.EQ.5)
	BEGIN
	  LOKCTL = 1
	  XCALL ISIO (8,BLHEAD,KEY178,DELETE,LOKCTL)
	  IF (LOKCTL.NE.0) 
	  BEGIN
	    XCALL OUTPT (23,1,1,ALOKCTL,1)
	    DISPLAY (15,':  ',BLHEAD(1,9))
	    XCALL MESAG ('PROBLEM DELETING HEADER',2)
	  END
	END
	XCALL OUTPT (23,1,2,'--- HEADER DELETED ---',1)
	KEY179 = BHKEY
	LOKCTL = 1
	XCALL ISIO (9,BLLINE,KEY179(1,9),READ,LOKCTL)
	IF (LOKCTL.NE.0.OR.KEY179(1,9).NE.BHKEY) GOTO DEL2
	DO BEGIN
	  LOKCTL = 1
	  XCALL ISIO (9,BLLINE,KEY179,DELETE,LOKCTL)
	  IF (LOKCTL.NE.0)
	  BEGIN
	    XCALL OUTPT (23,1,1,ALOKCTL,1)
	    DISPLAY (15,':  ',BLLINE(1,9))
	    XCALL MESAG ('PROBLEM DELETING LINE ITEM',2)
	  END
	  LOKCTL = 1
	  XCALL IOS (9,BLLINE,READ,LOKCTL)
	END UNTIL (LOKCTL.NE.0.OR.KEY179(1,9).NE.BHKEY)
	XCALL OUTPT (23,20,0,'--- LINE ITEMS DELETED ---',1)
DEL2,
	XCALL MESAG ('B/L DELETED',2)
	GOTO DISPLA1
CHANGE1,
	LOKCTL = 1
	XCALL ISIO (8,BLHEAD,KEY178,WRITE,LOKCTL)
	IF (SELECT.GE.8) GOTO DISPLA1
	GOTO LINES
ADD1,
	LOKCTL = 1
	XCALL ISIO (8,BLHEAD,KEY178,STORE,LOKCTL)
	IF (LOKCTL.NE.0) 
	BEGIN
	  XCALL OUTPT (23,1,1,ALOKCTL,1)
	  DISPLAY (15,':  ',BLHEAD(1,9))
	  XCALL MESAG ('PROBLEM STORING RECORD',2)
	  GOTO DISPLA1
	END
	GOTO LINES

;;;
;	Line item screens
;;;
LINES,
	XCALL OUTPT (4,1,0,'   SHIP TO',1)
	XCALL OUTPT (4,49,0,'   SHIPPERS NO.',1)
	XCALL OUTPT (5,49,0,'   B/L DATE',1)
	XCALL OUTPT (6,49,0,'   SHIP VIA',1)
	XCALL OUTPT (7,49,0,'   CARRIERS NO.',1)
	XCALL OUTPT (8,49,0,'   DATE SHIPPED',1)
	XCALL OUTPT (10,1,2,'LN  CLASS   QTY     UOM       DESCRIPTION                          WEIGHT#',1)
	XCALL OUTPT (11,1,0,'--  -----  ------   -------   -----------------------------------  -------',1)
	XCALL OUTPT (21,1,0,'           ------                                                  -------',1)
	ROW = 11
	SEQ =
	IF (SELECT.EQ.4)
	BEGIN
	  KEY179 = BHKEY
	  LOKCTL = 1
	  XCALL ISIO (9,BLLINE,KEY179(1,9),READ,LOKCTL)
	  IF (LOKCTL)
	  BEGIN
	    UNLOCK 9
	    XCALL OUTPT (24,1,2,'NO LINE ITEMS ON FILE',1)
	    GOTO ADDLIN
	  END	
	  SEQ = BLLINN
	END
ADDROW,
	INCR ROW
	INCR SEQ
	INXCTL =
	GOTO DISPLA2
CTRLW,
	XCALL OUTPT (ROW,COL,1,'\',1)
DISPLA2,
	IF (ROW.GT.20)
	BEGIN
	  ROW = 20
	  DISPLAY (15,ESC,'[12;20r',ESC,'[20;01H',ESC,'D')
	  DISPLAY (15,ESC,'[01;24r')
	END

	IF (SELECT.EQ.4.AND.ADDLIN.EQ.0) GOTO DSPREC2

	BLLINE =
	KEY179 = BHKEY
	BLLINN = SEQ

	IF ((SELECT.GE.2.AND.SELECT.LE.3).OR.ADDLIN)
	BEGIN
	  LOKCTL = 1
	  XCALL ISIO (9,BLLINE,KEY179,READ,LOKCTL)
	  IF (LOKCTL.EQ.0)
	  BEGIN
	    INCR SEQ
	    GOTO DISPLA2
	  END
	BLLINE =
	KEY179 = BHKEY
	BLLINN = SEQ
	END
BLLINN,
	CTL(4,8) = '01,02'
	ALPHA(1,2) = BLLINN
	XCALL OUTPT (ROW,COL,0,ALPHA(1,2),1)
BLCLAS,
	CTL (4,14) = '07,03,00,#E'
	IF (CNGCTL)
	BEGIN
	  CALL ACCEPT
	  IF (DCHAR.EQ.13) GOTO BLQTY
	  IF (DCHAR.EQ.23) GOTO CTRLW
	  IF (DCHAR.NE.9.AND.DCHAR.NE.21) GOTO BLCLAS
	END
	CALL INPUT
	GOTO (CTRLW,ENDLIN), INXCTL
	DCHAR = ENTRY
	IF (DCHAR.EQ.0) GOTO ASKDEL2
	BLCLAS = ENTRY
	USING BLCLAS SELECT
	  (50),	NOP
	  (60),	NOP
	  (70),	NOP
	  (125),NOP
	  (150),NOP
	  (200),NOP
	  (250),NOP
	  (300),NOP
	  (777),NOP
	  (888),NOP
	  (999),NOP
	  (),	BEGIN
		  XCALL MESAG ('INVALID FREIGHT CLASS',1)
		  GOTO BLCLAS
		END
	ENDUSING
BLQTY,
	IF (BLCLAS.EQ.999) GOTO BLDESC
	IF (BLCLAS.EQ.888) GOTO BLUOM
	IF (BLCLAS.EQ.777)
	BEGIN
	  XCALL OUTPT (ROW,12,0,LINE(12,74),1)
	  GOTO ANYCN2
	END
	CTL (4,14) = '13,05,00,# '
	IF (CNGCTL)
	BEGIN
	  CALL ACCEPT
	  IF (DCHAR.EQ.13) GOTO BLUOM
	  IF (DCHAR.EQ.23) GOTO CTRLW
	  IF (DCHAR.NE.9.AND.DCHAR.NE.21) GOTO BLQTY
	  IF (DCHAR.NE.9) GOTO BLQTY
	END
	CALL INPUT
	GOTO (CTRLW), INXCTL
	DCHAR = ENTRY
	IF (DCHAR.EQ.0) GOTO ASKDEL2
	BLQTY = ENTRY
BLUOM,
	IF (CNGCTL) ENTRY = BLUOM
	I =
	CTL (4,14) = '21,07,00,A '

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; SSQ 3-28-1997
;;;	IF (CNGCTL.EQ.0.AND.BLCLAS.EQ.888) 
	IF (BLCLAS.EQ.888)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	BEGIN
	  BLDESC = 'TAG ALONG'
	  XCALL OUTPT (ROW,31,0,BLDESC,1)
	  GOTO OVRUOM
	END
BLUOM2,
	CALL ACCEPT
	IF (DCHAR.EQ.13) GOTO ACCUOM		;<ENTER> ACCEPT DISPLAYED UOM
	IF (DCHAR.EQ.21) GOTO OVRUOM		;<CTRL/U> HAND TYPE UOM
	IF (DCHAR.EQ.23) GOTO CTRLW		;<CTRL/W> ABORT LINE
	IF (DCHAR.EQ.9)				;<TAB> CYCLE THRU STD UOMs
	BEGIN
	  INCR I
	  USING BLCLAS SELECT
	  (50),	BEGIN
	  	  IF (I.GT.7) I = 1
	  	  ENTRY = UOM050(I)
	  	  XCALL OUTPT (ROW,COL,0,ENTRY(1,7),1)
		END
	  (60),	BEGIN
	  	  IF (I.GT.9) I = 1
	  	  ENTRY = UOM060(I)
	  	  XCALL OUTPT (ROW,COL,0,ENTRY(1,7),1)
		END
	  (70),	BEGIN
	  	  IF (I.GT.3) I = 1
	  	  ENTRY = UOM070(I)
	  	  XCALL OUTPT (ROW,COL,0,ENTRY(1,7),1)
		END
	  (125),BEGIN
;;; SSQ 8-8-97	  	  IF (I.GT.3) I = 1
	  	  IF (I.GT.5) I = 1
	  	  ENTRY = UOM125(I)
	  	  XCALL OUTPT (ROW,COL,0,ENTRY(1,7),1)
		END
	  (150),BEGIN
	  	  IF (I.GT.5) I = 1
	  	  ENTRY = UOM150(I)
	  	  XCALL OUTPT (ROW,COL,0,ENTRY(1,7),1)
		END
	  (),	GOTO OVRUOM
	  ENDUSING
	END
	GOTO BLUOM2				;GO AROUND
OVRUOM,
	IF (BLCLAS.EQ.888) TYPE = '# '
	CALL INPUT
	GOTO (CTRLW), INXCTL
ACCUOM,
	
	IF (BLCLAS.EQ.888)
	THEN BEGIN
	  DFLD = ENTRY
	  BLUOM = DFLD,'XXXXXX'
	END
	ELSE BLUOM = ENTRY
	IF (BLCLAS.EQ.888) 
	BEGIN
	  BLQTY =
	  BLWGHT =
	  GOTO ANYCN2
	END
BLDESC,
	IF (CNGCTL) ENTRY = BLDESC
	I =
	CTL (4,14) = '31,35,00,A '
	IF (CNGCTL.EQ.0.AND.BLCLAS.EQ.999) GOTO OVRDESC
BLDESC2,
	CALL ACCEPT
	IF (DCHAR.EQ.13) GOTO ACCDESC		;<ENTER> ACCEPT DISPLAYED DESC
	IF (DCHAR.EQ.21) GOTO OVRDESC		;<CTRL/U> HAND TYPE DESC
	IF (DCHAR.EQ.23) GOTO CTRLW		;<CTRL/W> ABORT LINE
	IF (DCHAR.EQ.9)				;<TAB> CYCLE THRU STD DESCs
	BEGIN
	  INCR I
	  USING BLCLAS SELECT
	  (50),	BEGIN
	  	  IF (I.GT.6) I = 1
	  	  ENTRY = DES050(I)
	  	  XCALL OUTPT (ROW,COL,0,ENTRY(1,30),1)
		END
	  (60),	BEGIN
	  	  IF (I.GT.4) I = 1
	  	  ENTRY = DES060(I)
	  	  XCALL OUTPT (ROW,COL,0,ENTRY(1,30),1)
		END
	  (70),	BEGIN
	  	  IF (I.GT.2) I = 1
	  	  ENTRY = DES070(I)
	  	  XCALL OUTPT (ROW,COL,0,ENTRY(1,30),1)
		END
	  (125),BEGIN
	  	  IF (I.GT.4) I = 1
	  	  ENTRY = DES125(I)
	  	  XCALL OUTPT (ROW,COL,0,ENTRY(1,30),1)
		END
	  (150),BEGIN
	  	  IF (I.GT.8) I = 1
	  	  ENTRY = DES150(I)
	  	  XCALL OUTPT (ROW,COL,0,ENTRY(1,30),1)
		END
	  (),	GOTO OVRDESC
	  ENDUSING
	END
	GOTO BLDESC2				;GO AROUND
OVRDESC,
	CALL INPUT
	GOTO (CTRLW), INXCTL
ACCDESC,
	BLDESC = ENTRY
	IF (BLCLAS.EQ.999)
	BEGIN
	  BLQTY =
	  BLUOM =
	  BLWGHT =
	  GOTO ANYCN2
	END
BLWGHT,
	CTL (4,14) = '69,06,00,# '
	IF (CNGCTL)
	BEGIN
	  CALL ACCEPT
	  IF (DCHAR.EQ.13) GOTO ANYCN2
	  IF (DCHAR.EQ.23) GOTO CTRLW
	  IF (DCHAR.NE.9.AND.DCHAR.NE.21) GOTO BLWGHT
	END
	CALL INPUT
	GOTO (CTRLW), INXCTL
	BLWGHT = ENTRY
	GOTO ANYCN2
DSPREC2,
	CTL(4,8) = '01,02'
	ALPHA(1,2) = BLLINN
	XCALL OUTPT (ROW,COL,1,ALPHA(1,2),1)
	CTL (4,14) = '07,03,00,#X'
	ALPHA(1,3) = BLCLAS
	XCALL OUTPT (ROW,COL,0,ALPHA(1,3),1)
	IF (BLCLAS.EQ.777)
	BEGIN
	  XCALL OUTPT (ROW,12,0,LINE(12,74),1)
	  GOTO ANYCN2
	END
	CTL (4,14) = '31,35,00,A '
	XCALL OUTPT (ROW,COL,0,BLDESC,1)
	IF (BLCLAS.NE.999)
	BEGIN
	  CTL (4,14) = '21,07,00,A '
	  XCALL OUTPT (ROW,COL,0,BLUOM,1)
	END
	IF (BLCLAS.NE.999.AND.BLCLAS.NE.888)
	BEGIN
	  CTL (4,14) = '13,05,00,# '
	  ALPHA(1,5) = BLQTY
	  XCALL OUTPT (ROW,COL,0,ALPHA(1,5),1)
	  CTL (4,14) = '69,06,00,# '
	  ALPHA(1,6) = BLWGHT
	  XCALL OUTPT (ROW,COL,0,ALPHA(1,6),1)
	END
ANYCN2,
	CNGCTL = 4
	XCALL ANYCN (CNGCTL,WHATNO)
	IF (CNGCTL.EQ.-1) GOTO ENDLIN
	IF (CNGCTL) GOTO BLLINN

	TUNITS = TUNITS + BLQTY
	TWGHT = TWGHT + BLWGHT
	ALPHA(1,5) = TUNITS,TMASK
	ALPHA(6,11) = TWGHT,TMASK
	XCALL OUTPT (22,13,0,ALPHA(1,5),1)
	XCALL OUTPT (22,69,0,ALPHA(6,11),1)
	GOTO (SELECT,ADD2,ADD2,CHANGE2), SELECT
	GOTO ANYCN2
ASKDEL2,
	XCALL OUTPT (24,1,1,'DELETE THIS LINE ITEM <N> ?',1)
	XCALL INPUT (24,30,01,00,'YN',ENTRY,INXCTL,1)
	IF (INXCTL.NE.1) GOTO (DSPREC2,BLCLAS), ADDLIN + 1
DELETE2,
	IF (SELECT.EQ.4.AND.ADDLIN.EQ.0)
	BEGIN
	  LOKCTL = 1
	  XCALL ISIO (9,BLLINE,KEY179,DELETE,LOKCTL)
	END
	XCALL OUTPT (ROW,03,1,'  -----  ------   -------   ------------- DELETED -------------   ------',1)
	XCALL MESAG ('LINE ITEM DELETED',2)
	IF (BLCLAS.NE.888) GOTO CHANGE2B
	XCALL OUTPT (23,1,2,'*** WARNING, THE B/L FOR TAG ALONG ORDER: ',1)
	DISPLAY (15,BLUOM,' WAS NOT DELETED')
	XCALL MESAG ('*** PLEASE NOTE AND DELETE MANUALLY',2)
	GOTO CHANGE2B
CHANGE2,
	IF (ADDLIN) GOTO ADD2
	LOKCTL = 1
	XCALL ISIO (9,BLLINE,KEY179,WRITE,LOKCTL)
CHANGE2B,
	SEQ = BLLINN
	LOKCTL = 1
	XCALL IOS (9,BLLINE,READ,LOKCTL)
	IF (LOKCTL.OR.KEY179.NE.BHKEY)
	BEGIN
	  XCALL OUTPT (24,1,2,'NO MORE LINE ITEMS TO DISPLAY',1)
	  GOTO ADDLIN
	END
	INCR ROW
	GOTO DISPLA2
ADDLIN,
	ADDLIN =
	XCALL OUTPT (24,31,0,'- ADD LINES <N> ?',1)
	XCALL INPUT (24,50,01,00,'YN',ENTRY,INXCTL,1)
	IF (INXCTL.NE.1) GOTO ENDLIN
	ADDLIN = 1
	CNGCTL =
	GOTO ADDROW
ADD2,
	LOKCTL = 1
	XCALL ISIO (9,BLLINE,KEY179,STORE,LOKCTL)
	IF (LOKCTL.NE.0) 
	BEGIN
	  XCALL OUTPT (23,1,1,ALOKCTL,1)
	  DISPLAY (15,':  ',BLLINE(1,11))
	  XCALL MESAG ('PROBLEM STORING RECORD',2)
	  GOTO DISPLA2
	END
	IF (BLCLAS.NE.888) GOTO ADDROW
	IF (SAVKEY.EQ.BLANKS) SAVKEY = KEY178	
	OORDNO = BLUOM
	LOKCTL = 1
	XCALL ISIO (4,ORDHDR,OORDNO,READ,LOKCTL)
	IF (LOKCTL.EQ.0)
	BEGIN
	  BHCUSNM = OCUSNM
	  BHSHPNM = OSHPNM
	  BHSHAD1 = OSHAD1
	  BHSHAD2 = OSHAD2
	  BHSHAD3 = OSHAD3
	  BHPONO = OPONO
	END
	BHORDN = BLUOM
	BHHDRN = 1
	BHSHPN = 1
	BHSTATS = 3		;COMPLETE
ADD3,
	LOKCTL = 1
	XCALL ISIO (8,BLHEAD,KEY178,STORE,LOKCTL)
	IF (LOKCTL.NE.0) 
	BEGIN
	  IF (LOKCTL.EQ.4)
	  BEGIN
	    INCR BHSHPN
	    GOTO ADD3
	  END
	  XCALL OUTPT (23,1,1,'BLHEAD: ',1)
	  DISPLAY (15,BLHEAD(1,9),' : ',ALOKCTL)
	  XCALL MESAG ('PROBLEM STORING RECORD',2)
	  GOTO DISPLA2
	END
	BLORDN = BHORDN 
	BLHDRN = BHHDRN
	BLSHPN = BHSHPN
	BLLINN = 1
	BLCLAS = 999
	BLDESC = 'ORDER SHIPPED W/ '
	BLDESC(18,28) = ASHIPNO
	BLUOM =
	LOKCTL = 1
	XCALL ISIO (9,BLLINE,KEY179,STORE,LOKCTL)
	IF (LOKCTL.NE.0) 
	BEGIN
	  XCALL OUTPT (23,1,1,'BLLINE: ',1)
	  DISPLAY (15,BLLINE(1,11),' : ',ALOKCTL)
	  XCALL MESAG ('PROBLEM STORING RECORD',2)
	  GOTO DISPLA2
	END
	KEY178 = SAVKEY
	LOKCTL = 1
	XCALL ISIO (8,BLHEAD,KEY178,READ,LOKCTL)
	UNLOCK 8
	GOTO ADDROW
ENDLIN,
	ADDLIN =
	TUNITS =
	TWGHT =

	XCALL OUTPT (24,1,1,'PRINT B/L NOW <Y> ?',1)
	XCALL INPUT (24,21,01,00,'YY',ENTRY,INXCTL,1)
	IF (INXCTL.NE.1) GOTO DISPLA1
INSTBL,
	LINCNT =
	TUNITS =
	TWGHT =
	REPBL =
	BLCONT =

;;;	OPEN (14,O,'LT:')
	OPEN (14,O,'LPA0:')

	INSTANTBL = 1
	CALL PBLLP2
	INSTANTBL =
	CLOSE 14
	UNLOCK 8
	UNLOCK 9
	XCALL OUTPT (24,1,1,'REPRINT B/L   <N> ?',1)
	XCALL INPUT (24,21,01,00,'YN',ENTRY,INXCTL,1)
	IF (INXCTL.EQ.1) GOTO INSTBL
	LOKCTL = 1
	XCALL ISIO (8,BLHEAD,KEY178,READ,LOKCTL)
	BHSTATS = 2
	LOKCTL = 1
	XCALL ISIO (8,BLHEAD,KEY178,WRITE,LOKCTL)
	IF (LOKCTL.NE.0) 
	BEGIN
	  XCALL OUTPT (23,1,1,ALOKCTL,1)
	  DISPLAY (15,':  ',BLHEAD(1,9))
	  XCALL MESAG ('PROBLEM WRITING RECORD STATUS',2)
	END
	GOTO DISPLA1
;;;
;---------------------------------------------------------------------------
;;;

;;;
;	SELECT=1 DISPLAY ALL B/L ACTIVITY (CURRENT AND HISTORY)
;;;
DSPACT,
;	ROUTINE TO GET HEADER & SHIP NUMBERS
;;;
	UNLOCK 8
	UNLOCK 9
	XCALL OUTPT (4,2,2,'1. ORDER NUMBER ',1)
	CTL = '04,18,06,00,#E'
	CALL INPUT
	GOTO (DSPACT,SELECT), INXCTL
	KORDNO = ENTRY

	ROW = 5

GETHIGH,
	HIHDRN =
	FOR I FROM 1 THRU 9 HISHPN(I) =
	BHORDN = KORDNO
	LOKCTL = 1
	XCALL ISIO (8,BLHEAD,BHORDN,READ,LOKCTL)
	IF (LOKCTL.NE.0.OR.BHORDN.NE.KORDNO) 
	BEGIN
	  IF (GETHI.EQ.0) XCALL OUTPT (23,1,0,'--- NO OPEN B/L FOUND ---',1)
	  GOTO CHKHST
	END
	IF (GETHI.EQ.0) XCALL OUTPT (4,27,0,BHCUSNM,1)

	DO BEGIN
	  IF (BHHDRN.GT.HIHDRN) HIHDRN = BHHDRN
	  IF (BHSHPN.GT.HISHPN(BHHDRN)) HISHPN(BHHDRN) = BHSHPN
	  IF (GETHI.EQ.0)
	  BEGIN
	    AORDNO = BHORDN
	    AHDRN = BHHDRN
	    ASHPN = BHSHPN,'XX'
	    USING BHSTATS SELECT
	      (0),	PLINE = 'X  OPEN B/L'
	      (1),	PLINE = 'X  SELECTED'
	      (2),	PLINE = 'X  PRINTED '
	      (3),	PLINE = 'X  COMPLETE'
	      (4),	PLINE = 'X  POSTING'
	      (9),	PLINE = 'X  HIST B/L'
	      (),	PLINE = 'X  UNDEF   '
	    ENDUSING
	    PLINE(1,1) = BHSTATS,'X'
	    PLINE (15,25) = ASHIPNO
	    PLINE (29,58) = BHSHPNM
	    CALL OUTLINE
	    PLINE (29,58) = BHSHAD1
	    CALL OUTLINE
	    PLINE (29,58) = BHSHAD2
	    CALL OUTLINE
	    PLINE (29,58) = BHSHAD3
	    CALL OUTLINE
	    PLINE =
	    CALL OUTLINE
	  END
	  LOKCTL = 1
	  XCALL IOS (8,BLHEAD,READ,LOKCTL)
	END UNTIL (LOKCTL.OR.BHORDN.NE.KORDNO)

CHKHST,
	BHORDN = KORDNO
	LOKCTL = 1
	XCALL ISIO (28,BLHEAD,BHORDN,READ,LOKCTL)
	IF (LOKCTL.NE.0.OR.BHORDN.NE.KORDNO) 
	BEGIN
	  IF (GETHI.EQ.0) XCALL OUTPT (23,26,0,'--- NO HISTORICAL B/L FOUND ---',1)
	  GOTO ENDACT
	END
	IF (GETHI.EQ.0) XCALL OUTPT (4,27,0,BHCUSNM,1)

	DO BEGIN
	  IF (BHHDRN.GT.HIHDRN) HIHDRN = BHHDRN
	  IF (BHSHPN.GT.HISHPN(BHHDRN)) HISHPN(BHHDRN) = BHSHPN
	  IF (GETHI.EQ.0) 
	  BEGIN
	    AORDNO = BHORDN
	    AHDRN = BHHDRN
	    ASHPN = BHSHPN,'XX'
	    USING BHSTATS SELECT
	      (0),	PLINE = 'X HOPEN B/L'
	      (1),	PLINE = 'X HSELECTED'
	      (2),	PLINE = 'X HPRINTED '
	      (3),	PLINE = 'X HCOMPLETE'
	      (4),	PLINE = 'X HPOSTING'
	      (9),	PLINE = 'X  HIST B/L'
	      (),	PLINE = 'X HUNDEF   '
	    ENDUSING
	    PLINE(1,1) = BHSTATS,'X'
	    PLINE (15,25) = ASHIPNO
	    PLINE (29,58) = BHSHPNM
	    CALL OUTLINE
	    PLINE (29,58) = BHSHAD1
	    CALL OUTLINE
	    PLINE (29,58) = BHSHAD2
	    CALL OUTLINE
	    PLINE (29,58) = BHSHAD3
	    CALL OUTLINE
	    PLINE =
	    CALL OUTLINE
	  END
	  LOKCTL = 1
	  XCALL IOS (28,BLHEAD,READ,LOKCTL)
	END UNTIL (LOKCTL.OR.BHORDN.NE.KORDNO)

ENDACT,
	IF (GETHI) RETURN
	XCALL MESAG ('END OF ACTIVITY DISPLAY',2)
	GOTO DSPACT
OUTLINE,
	INCR ROW
	IF (ROW.GE.20)
	BEGIN
	  XCALL MESAG ('FOR NEXT PAGE',2)
	  ROW = 06
	  XCALL OUTPT (ROW,1,2,'\',1)
	END
	XCALL OUTPT (ROW,1,0,PLINE,1)
	PLINE =
	RETURN
;;;
;	ROUTINE TO SELECT B/L's
;;;
SELECBL,
	IF (BHSTATS.LE.1)
	THEN BEGIN
	  XCALL OUTPT (24,1,1,'ORDER STATUS    :     <TAB> TO TOGGLE',1)
	  XCALL INPUT (24,19,01,00,'#T',ENTRY,INXCTL,1)
	  GOTO (DISPLA1,DISPLA1), INXCTL
;;;	  IF (BHSTATS.LT.0.AND.ENTRY.NE.BLANKS)
;;;	  BEGIN
;;;	    INXCTL = 3
;;;	    DCHAR = ENTRY
;;;	    ENTRY =
;;;	  END
	  IF (ENTRY.NE.BLANKS) GOTO SELECBL
	  IF (INXCTL.EQ.3)
	  BEGIN
	    IF (DCHAR.EQ.0) THEN DCHAR = 1 ELSE IF (DCHAR.EQ.1) DCHAR = 0
	    USING DCHAR SELECT
	      (0),	ALPHA = 'X   OPEN B/L'
	      (1),	ALPHA = 'X   SELECTED'
	      (2),	ALPHA = 'X   PRINTED'
	      (3),	ALPHA = 'X   COMPLETE'
	      (4),	ALPHA = 'X   POSTING'
	      (9),	ALPHA = 'X   HIST B/L'
	      () ,	ALPHA = 'X   UNDEF'
	    ENDUSING
	    ALPHA(1,1) = DCHAR,'X'
	    CTL = '20,21'
	    XCALL OUTPT (ROW,COL,0,ALPHA,1)
	    GOTO SELECBL
	  END
	  IF (DCHAR.NE.BHSTATS)
	  BEGIN
	    BHSTATS = DCHAR
	    LOKCTL = 1
	    XCALL ISIO (8,BLHEAD,KEY178,WRITE,LOKCTL)
	  END
	END
	ELSE BEGIN
	  XCALL MESAG ('INQUIRY ONLY: NO CHANGES ALLOWED WITH THIS STATUS CODE',2)

;;;	  XCALL OUTPT (24,1,1,'INQUIRY ONLY: NO CHANGES ALLOWED WITH THIS STATUS CODE           CR TO CONTINUE',1)
;;;	  XCALL INPUT (24,80,1,0,'#T',ENTRY,INXCTL,1)
;;;	  IF (INXCTL.EQ.3) 
;;;	  BEGIN
;;;	    BHSTATS = BHSTATS * -1
;;;	    GOTO DSPREC1
;;;	  END

	END
	UNLOCK 8
	GOTO DISPLA1
;;;
;	ROUTINE TO PRINT B/L's
;;;
PRINTBL,
	READ (8,BLHEAD,^FIRST) [KEY=ENDPBL, EOF=ENDPBL, LOCK=PRINTBL]
	LINCNT =
	TUNITS =
	TWGHT =
	REPBL =
PRINTBL2,
;;;	OPEN (14,O,'LT:')
	OPEN (14,O,'LPA0:')
;;;	LPSW = 1	; PRINT, SPOOL OR DISPLAY
;;;	XCALL LPON (LPSW,SPLFIL)
;;;	IF (LPSW.EQ.0) GO TO ENDPBL
;;;	LPARG = 2
;;;	IF (LPSW.EQ.2) LPARG = 4
;;;	XCALL WATE (LPARG,V)

PBLLP,
	IF (BHSTATS.EQ.1)
	BEGIN
PBLLP2,
	  PLINE (1,1) = ESC
	  PLINE (2,2) = '@'
	  CALL PRINT
;;;	  LINCNT = 1
;;;	  XCALL LINFD (1)		;1-4

	  PLINE (10,14) = ' E W1'	;ST EMPHASISED / DBL WID
	  PLINE (10,10) = ESC
	  PLINE (12,12) = ESC
	  PLINE (15,32) = BHSHPV
	  PLINE (33,37) = ' F W0'	;END EMPHASISED / DBL WID
	  PLINE (33,33) = ESC
	  PLINE (35,35) = ESC

	  CALL PRINT			;5
	  INCR LINCNT
	  XCALL LINFD (1)		;6
	  AORDNO = BHORDN
	  AHDRN = BHHDRN
	  ASHPN = BHSHPN,'XX'
	  PLINE (69,79) = ASHIPNO
	  PLINE (4,33) = BHSHPNM
	  CALL PRINT			;7
	  PLINE (4,33) = BHSHAD1
	  CALL PRINT			;8
	  PLINE (4,33) = BHSHAD2
	  CALL PRINT			;9
	  PLINE (4,33) = BHSHAD3
	  CALL PRINT			;10
	  PLINE (69,79) = BHPRON
	  CALL PRINT			;11
	  INCR LINCNT
	  XCALL LINFD (1)		;12
	  PLINE (4,13) = BHPONO
	  PLINE (25,64) = BHSPIN1
	  PLINE (69,76) = BHSHPD,DTMASK
	  CALL PRINT			;13
	  INCR LINCNT
	  XCALL LINFD (1)		;14
	  PLINE (4,63) = BHSPIN2
	  CALL PRINT			;15
	  LINCNT = LINCNT + 4
	  XCALL LINFD (4)		;16-17-18-19
	  IF (BLCONT) RETURN
;;;
;	B/L LINE ITEMS
;;;
	  KEY179 = KEY178
	  LOKCTL = 1
	  XCALL ISIO (9,BLLINE,KEY179(1,9),READ,LOKCTL)
	  DO BEGIN
	    IF (LOKCTL.NE.0) NEXTLOOP
	    IF (LINCNT.GE.49) CALL BLCONT
	    PLINE (16,45) = BLDESC
	    IF (BLCLAS.NE.999)
	    BEGIN
	      PLINE (1,5) = BLQTY,NUMASK
	      PLINE (8,14) = BLUOM
	      PLINE (49,55) = BLWGHT,NUMASK
	      PLINE (59,61) = BLCLAS,NUMASK
	    END
	    IF (BLCLAS.EQ.888)
	    BEGIN
	      PLINE (49,55) =
	      PLINE (59,61) =
	    END
	    IF (LINCNT.EQ.21) CALL PPCL
	    IF (BLCLAS.EQ.777) PLINE (2,61) = LINE(2,61)
	    CALL PRINT
	    IF (LINCNT.EQ.21) CALL PPCL
	    CALL PRINT
	    TUNITS = TUNITS + BLQTY
	    TWGHT = TWGHT + BLWGHT
	    LOKCTL = 1
	    XCALL IOS (9,BLLINE,READ,LOKCTL)
	  END UNTIL (LOKCTL.NE.0.OR.KEY179(1,9).NE.KEY178)	  
	  IF (LINCNT.LE.21) 
	  BEGIN
	    IF (LINCNT.LT.21) DO BEGIN
	      XCALL LINFD (1)
	      INCR LINCNT
	    END UNTIL (LINCNT.EQ.21)
	  CALL PPCL
	  CALL PRINT
	  END

	  IF (LINCNT.LT.48)
	  BEGIN
	    DO BEGIN
	      XCALL LINFD (1)
	      INCR LINCNT
	    END UNTIL (LINCNT.EQ.48)
	    PLINE (1,5) = TUNITS,NUMASK
	    PLINE (49,55) = TWGHT,NUMASK
	    CALL PRINT
	  END
	  XCALL LINFD (0)
	  LINCNT =
	  IF (INSTANTBL) RETURN
	END
	IF (REPBL.EQ.0)
	BEGIN
	  LOKCTL = 1
	  XCALL IOS (8,BLHEAD,READ,LOKCTL)
	  IF (LOKCTL.EQ.0) GOTO PBLLP
	END
	PGCNT = -1
	XCALL LPOFF (LPSW,SPLFIL,PGCNT)
ENDPBL,
	UNLOCK 8
	CLOSE 14
	XCALL OUTPT (8,10,2,'DID ALL BILLS OF LADING PRINT OK <N> ?',1)
	XCALL INPUT (8,50,1,0,'YN',ENTRY,INXCTL,1)
	IF (INXCTL.NE.1)
	BEGIN
	  XCALL OUTPT (10,10,0,'ENTER BILL NUMBER TO REPRINT ',1)
	  CTL = '10,40,06,00,#E'
	  CALL INPUT
	  GOTO (DISPLA1,SELECT), INXCTL
	  KORDNO = ENTRY
	  AORDNO = KORDNO
	  AHDRN = 
	  ASHPN = 
	  XCALL OUTPT (ROW,COL,0,ASHIPNO,1)
	  CTL = '10,47,01,00,# '
	  CALL INPUT
	  GOTO (BHORDN), INXCTL
	  KHDRN = ENTRY
	  AHDRN = KHDRN
	  ASHPN = 
	  XCALL OUTPT (ROW,40,0,ASHIPNO,1)
	  CTL = '10,49,02,00,# '
	  CALL INPUT
	  GOTO (BHORDN), INXCTL
	  KSHPN = ENTRY
	  ASHPN = KSHPN,'XX'
	  XCALL OUTPT (ROW,40,0,ASHIPNO,1)
	  KEY178 = BHKEY
	  LOKCTL = 1
	  XCALL ISIO (8,BLHEAD,KEY178,READ,LOKCTL)
	  IF (LOKCTL.EQ.0.AND.KEY178.EQ.BHKEY.AND.BHSTATS.EQ.1)
	  BEGIN
	    REPBL = 1
	    GOTO PRINTBL2
	  END
	  IF (LOKCTL.OR.KEY178.NE.BHKEY) XCALL MESAG ('B/L NOT FOUND',1)
	  IF (BHSTATS.EQ.0) XCALL MESAG ('B/L NOT SELECTED FOR PRINTING',1)
	  IF (BHSTATS.GT.2) XCALL MESAG ('INVALID STATUS CODE FOR B/L - CANNOT PRINT',1)
	  GOTO ENDPBL
	END
;;;
;	UPDATE BLSTATS TO REFLECT PRINTED STATUS
;;;
	XCALL OUTPT (2,1,1,'PRINT B/Ls - UPDATING B/L STATUS FLAG',1)
	READ (8,BLHEAD,^FIRST)
	DO BEGIN
	  IF (BHSTATS.EQ.1)
	  BEGIN
	    BHSTATS = 2
	    LOKCTL = 1
	    XCALL ISIO (8,BLHEAD,KEY178,WRITE,LOKCTL)
	    IF (LOKCTL.NE.0) 
	    BEGIN
	      XCALL OUTPT (23,1,1,ALOKCTL,1)
	      DISPLAY (15,':  ',BLHEAD(1,9))
	      XCALL MESAG ('PROBLEM WRITING RECORD STATUS',2)
	    END
	  END
	  LOKCTL = 1
	  XCALL IOS (8,BLHEAD,READ,LOKCTL)
	END UNTIL (LOKCTL.NE.0)
	XCALL MESAG ('B/L STATUS FLAG UPDATED - PRINTING PROCESS COMPLETE',2)
	GOTO SELECT
PPCL,
	PLINE (66,70) = ' E W1'		;ST EMPHASISED / DBL WID PRINTING
	PLINE (66,66) = ESC
	PLINE (68,68) = ESC
	IF (BHPPCL.EQ.'P') PLINE (71,77) = 'PREPAID'
	IF (BHPPCL.EQ.'C') PLINE (71,77) = 'COLLECT'
	IF (BHPPCL.EQ.'T') PLINE (71,77) = '3RD PTY'
	PLINE (78,82) = ' F W0'		; END EMPHASISED / DBL WID PRINTING
	PLINE (78,78) = ESC
	PLINE (80,80) = ESC
	RETURN
BLCONT,
	DO BEGIN
	  XCALL LINFD (1)
	  INCR LINCNT
	END UNTIL (LINCNT.EQ.55)
	PLINE (1,5) = 'CONT.'
	PLINE (48,56) = 'CONTINUED'
	CALL PRINT
	XCALL LINFD (0)
	LINCNT =
	BLCONT = 1
	CALL PBLLP2
	BLCONT =
	RETURN
;;;
;	ROUTINE TO ENTER FREIGHT CHARGES FROM TRUCKING CO.
;;;
ENTFRT,					; FREIGHT CHARGES & FLAG AS COMPLETE
	XCALL OUTPT (16,28,0,'FREIGHT CHARGES',1)

;	IF (BHSTATS.LT.2)
;	BEGIN
;	  XCALL MESAG ('CANNOT ENTER FREIGHT CHARGES ON UNPRINTED B/Ls',1)
;	  GOTO DISPLA1
;	END


EFPRON,
	CTL = '07,66,10,00,A '
	IF (BHPRON.NE.BLANKS)
	BEGIN
	  XCALL OUTPT (ROW,COL,0,BHPRON,1)
	  CALL ACCEPT
	  IF (DCHAR.EQ.13) GOTO EFSHPD
	  IF (DCHAR.EQ.23) GOTO DISPLA1
	  IF (DCHAR.NE.9) GOTO EFPRON
	END
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHPRON = ENTRY

EFSHPD,
	CTL = '08,66,06,00,D '
	IF (BHSHPD.NE.0)
	BEGIN
	  ALPHA(1,8) = BHSHPD,DTMASK
	  XCALL OUTPT (ROW,COL,0,ALPHA(1,8),1)
	  CALL ACCEPT
	  IF (DCHAR.EQ.13) GOTO EFFRTAM
	  IF (DCHAR.EQ.23) GOTO DISPLA1
	  IF (DCHAR.NE.9) GOTO EFSHPD
	END
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSHPD = ENTRY
	IF (BHSHPD.EQ.0) 
	BEGIN
	  BHSHPD = TODAY
	  ENTRY(1,8) = BHSHPD,DTMASK
	  XCALL OUTPT (ROW,COL,0,ENTRY(1,8),1)
	END

EFFRTAM,
	CTL = '16,45,07,00,$ '
	IF (BHFRTAM.NE.0)
	BEGIN
	  ALPHA(1,9) = BHFRTAM,DLMASK
	  XCALL OUTPT (ROW,COL,0,ALPHA(1,9),1)
	  CALL ACCEPT
	  IF (DCHAR.EQ.13) GOTO EFFRTAM2
	  IF (DCHAR.EQ.23) GOTO DISPLA1
	  IF (DCHAR.NE.9) GOTO EFFRTAM
	END
	CALL INPUT
	XCALL OUTPT (24,1,1,'\',1)
	GOTO (DISPLA1), INXCTL
	BHFRTAM = ENTRY
EFFRTAM2,
;	IF (BHPPCL.EQ.'C')
;	BEGIN
;	  XCALL MESAG ('NO FREIGHT CHARGES ALLOWED ON COLLECT B/Ls',1)
;	  GOTO EFFRTAM
;	END

EFSTATS,
	BHSTATS = 3		;FLAG AS COMPLETE
	ALPHA = '3   COMPLETE'
	CTL = '20,21'
	XCALL OUTPT (ROW,COL,0,ALPHA,1)

	CNGCTL = 4
	XCALL ANYCN (CNGCTL,WHATNO)
	IF (CNGCTL.EQ.-1) GOTO DISPLA1
	IF (CNGCTL.NE.0) GOTO ENTFRT
	XCALL MESAG ('B/L UPDATED AND FLAGGED COMPLETE',2)
	GOTO CHANGE1

;;;
;	ROUTINE TO MANUALLY UPDATE B/L's TO HISTORY
;;;
MANUPD,
	XCALL OUTPT (16,28,0,'FREIGHT CHARGES',1)
	ALPHA(1,9) = BHFRTAM,DLMASK
	XCALL OUTPT (16,45,0,ALPHA(1,9),1)
	XCALL OUTPT (23,1,2,'ARE YOU SURE YOU WANT TO MANUALLY MOVE THIS B/L TO HISTORY <N> ?',1)
	XCALL INPUT (23,67,01,00,'YN',ENTRY,INXCTL,1)
	IF (INXCTL.NE.1) GOTO DISPLA1
	BHSTATS = 4		;FLAG AS POSTING IN PROCESS
	ALPHA = '4   POSTING'
	CTL = '20,21'
	XCALL OUTPT (ROW,COL,0,ALPHA,1)
	XCALL OUTPT (23,1,2,'B/L STATUS UPDATED',1)
	XCALL MESAG ('B/L WILL MOVE TO HISTORY WITH NEXT INVOICE POSTING',2)
	GOTO CHANGE1


CLOSES,
	XCALL FILES (4,'SI',044,4)
CLOSE5,
;;;	XCALL FILES (80,'SI',180,4)
	XCALL FILES (80,'SI',182,4)
CLOSE4,
	XCALL FILES (29,'SI',189,4)
CLOSE3,
	XCALL FILES (28,'SI',188,4)
CLOSE2,
	XCALL FILES (9,'SU',179,4)
CLOSE1,
	XCALL FILES (8,'SU',178,4)
	RETURN

GET_SCAC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; COP TABLE SCAC LOOK-UP
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	SHP_ERR = $FALSE
	CLEAR TBL_KEY
	TBLCOD = 'SC'
	TBLKEY = SCAC
	XCALL ISIO (80,COPTBL,TBL_KEY,READ,LOKCTL)
	IF (LOKCTL .EQ. 0) RETURN

	XCALL OUTPT (24,1,1,'NO RECORD FOR THIS CARRIER - ADD <Y> ?',1)
	CTL = '24,43,01,00,YY'
	CALL INPUT
	GOTO (ADD_SCAC,BAD_SCAC),INXCTL
BAD_SCAC,
	SHP_ERR = $TRUE
	RETURN
ADD_SCAC,
	XCALL OUTPT (16,65,1,'NAME:',1)
	XCALL OUTPT (17,65,0,LINE(1,15),1)
	XCALL OUTPT (18,50,1,'TRAFFIC PHONE# ',1)
	XCALL OUTPT (20,50,1,'TRACING PHONE# ',1)
	XCALL INPUT (16,65,15,00,'A ',ENTRY,INXCTL,1)
	SC_NAME = ENTRY(1,15)

	XCALL INPUT (18,65,10,00,'#',ENTRY,INXCTL,1)
	SC_TEL1 = ENTRY
	ALPHA(1,13) = SC_TEL1,'(XXX)XXX-XXXX'
	IF (SC_TEL1(1,3).EQ.0) ALPHA(1,13) = SC_TEL1,'ZZZZZXXX-XXXX'
	XCALL OUTPT (18,65,0,ALPHA(1,13),1)

	XCALL INPUT (20,65,10,00,'#',ENTRY,INXCTL,1)
	SC_TEL2 = ENTRY
	ALPHA(1,13) = SC_TEL2,'(XXX)XXX-XXXX'
	IF (SC_TEL2(1,3).EQ.0) ALPHA(1,13) = SC_TEL2,'ZZZZZXXX-XXXX'
	XCALL OUTPT (20,65,0,ALPHA(1,13),1)

	CNGCTL = 2
	XCALL ANYCN(CNGCTL,WHATNO)
	GOTO (ADD_SCAC),CNGCTL

	XCALL FILES (81,'SU',182,5)
	LOKCTL = 1
	CLEAR TBL_KEY
	TBLCOD = 'SC'
	TBLKEY = SCAC
	XCALL ISIO (81,COPTBL,TBL_KEY,STORE,LOKCTL)
	CLOSE 81
	IF (LOKCTL) 
		BEGIN
		XCALL MESAG ('ERROR STORING NEW CARRIER - CARRIER NOT SAVED',2)
		SHP_ERR = $TRUE
		END

	RETURN
;--------------------------------------------------

GET_BLHEAD,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; FETCH BLHEAD RECORD...
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	LOKCTL = 1
	XCALL ISIO (8,BLHEAD,KEY178,READ,LOKCTL)
	IF (LOKCTL.EQ.0.AND.KEY178.EQ.BHKEY)	;FOUND
	THEN	BL_FOUND = $TRUE
	ELSE	BL_FOUND = $FALSE

	RETURN
;--------------------------------------------------

ENDOFF,
	CALL CLOSES
ABORT,
	XCALL PGCHN ('CP:CPMENU',1)
ACCEPT,
	XCALL FLAGS (10000,1)
	XCALL OUTPT (ROW,COL-1,0,'\',1)
	ACCEPT (15,DCHAR)
	DO BEGIN
	  XCALL TTSTS (TTSTS,15)
	  IF (TTSTS) ACCEPT (15,ACHAR)
	END UNTIL (TTSTS.EQ.0)
	XCALL FLAGS (10000,0)
	RETURN
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	RETURN
CINPUT,
	XCALL CINPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,POS)
	RETURN
PRINT,
	WRITES (14,PLINE)
	PLINE =
	INCR LINCNT
	RETURN
END
;--------------------------------------------------------------------------------
;BILL OF LADING ENTRY AND EDITING
;HEADER SCREEN
;
;6. SHIP TO                                      1. SHIPPERS NO.  XXXXXX.X.XX
;   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX               2. B/L DATE      XX/XX/XX
;   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX               3. SHIP VIA      XXXXXXXXXXXXXXX
;   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX               4. CARRIERS NO.  XXXXXXXXXX
;   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX               5. DATE SHIPPED  XX/XX/XX
;
;
;7. CUST PO NO    8. SPECIAL INSTRUCTIONS
;   XXXXXXXXXX       XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
;                    XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
;
;
; 9. PPD/COL/THIRD   X      FREIGHT CHARGES  XXXXXXX
;
;10. TRACER ID #     XXXXXXXXXX
;
;
;
;
;FIELD # TO CHANGE ...
;--------------------------------------------------------------------------------
;
;--------------------------------------------------------------------------------
;BILL OF LADING ENTRY AND EDITING
;LINE ITEM SCREEN
;
;   SHIP TO                                         SHIPPERS NO.  XXXXXX.X.XX
;   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                  B/L DATE      XX/XX/XX
;   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                  SHIP VIA      XXXXXXXXXXXXXXX
;   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                  CARRIERS NO.  XXXXXXXXXX
;   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                  DATE SHIPPED  XX/XX/XX
;
;LN  CLASS   QTY     UOM       DESCRIPTION                          WEIGHT#
;--  -----  ------   -------   -----------------------------------  -------
;XX    XXX   XXXXX   XXXXXXX   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX   XXXXXX
;XX    XXX   XXXXX   XXXXXXX   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX   XXXXXX
;XX    XXX   XXXXX   XXXXXXX   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX   XXXXXX
;XX    XXX   XXXXX   XXXXXXX   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX   XXXXXX
;XX    XXX   XXXXX   XXXXXXX   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX   XXXXXX
;XX    XXX   XXXXX   XXXXXXX   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX   XXXXXX
;    -----  ------   -------   ------------- DELETED -------------   ------
;XX    XXX   XXXXX   XXXXXXX   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX   XXXXXX
;XX    XXX   XXXXX   XXXXXXX   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX   XXXXXX
;           ------                                                  -------
;            XXXXX                                                   XXXXXX
;
;FIELD # TO CHANGE ...
;--------------------------------------------------------------------------------

