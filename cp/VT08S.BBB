SUBROUTINE VT08S
	PNUM	,D
	LINE	,A	;ORDER L/I
	CHN182	,D	;CHANNEL FOR COPTBL
	MEMDAT	,A	;CPMEMO
	ERR	,D	;1 => ERROR DURING CONVERSION

; Routine for Shoe Taps
;
; STC 24 14 10 10 10
; AAA GA MA MB BC BD
;     |  |  |  |  |_ Branch D
;     |  |  |  |____ Branch C
;     |  |  |_______ Main B
;     |  |__________ Main A
;     |_____________ Gauge
;
;
RECORD	ORDLIN
	.INCLUDE 'DEF:RD045A.def'

RECORD	COPTBL
	.INCLUDE 'DEF:RD182A.DEF'

RECORD	CPMEMO
	.INCLUDE 'DEF:CPMEMO.DEF'

RECORD	PARAM
	LT	,D6
	WR	,2D6
	WL	,D6
	DL	,D6
	ST	,D6
	WT	,D6
	WB	,D6
	QTY	,D6
	GAUGE	,D2
	AR	,2D3
	AT	,D2
	SB	,D2
	SR	,D2
	OW	,D2
	R	,D2
	A	,D2
	NG	,D2
	L	,D2
	

RECORD	V_LINE1
	VLINE	,A80

RECORD	ARAY
	WD4	,4D4

RECORD	BODY
		,A10		;GA MA MB BC BD
RECORD,X
	AGA	,A2
	AMA	,A2
	AMB	,A2
	ABC	,A2
	ABD	,A2

RECORD	VARS
	IS_PRESSED	,D1	;1= IS A PRESSED REDUCER
	IS_CROSS	,D1
	IS_TEE		,D1
	REDUCER	,A15		;created reducer item #
	J	,D6
	A1	,A1
	A4	,A4
	WRKITM	,A15
	CNT	,D3
	LF3	,D5		;THIS IS A FIELD IN RD045A.NEW...
	CODE	,A3
	VINYL	,D1		;1=IS VINYL
	AN	,A1
	GA	,D2
	MA	,D2
	MB	,D2
	BC	,D2
	BD	,D2
	BF	,D1
	DIF	,D8
	SZ1	,D2
	SZB	,D2
	SZT	,D2
	ERROR	,D1
	LN	,D6
	D4	,D4
	READ	,D1,0
	LOKCTL	,D1
;
PROC

	ERROR = 1			;ASSUME ERROR

	ORDLIN = LINE

	CPMEMO = MEMDAT

	CLEAR IS_PRESSED, IS_CROSS, IS_TEE

	CLEAR GA, MA, MB, BC, BD, AN, VINYL

	WRKITM = LCFGIM
	FOR J FROM 1 THRU 4	;STRIP OFF "V" AND ANGLE (4 or 9)
		BEGIN
		A1 = LCFGIM(J,J)
		USING A1 SELECT
		('V'),		BEGIN
				VINYL = 1
				CALL SHIFT
				END
		('4','9'),	BEGIN
				IF (AN.EQ.' ')
					BEGIN
					AN = A1
					CALL SHIFT
					END
				END
		ENDUSING

		END

	USING WRKITM SELECT
	('ST'),		BEGIN
			CODE = WRKITM(1,3)	;STC,STT
			BODY = WRKITM(4,13)
			END

	('CC','CT'),	BEGIN
			CODE = WRKITM(1,2)	;CC,CT
			BODY = WRKITM(3,12)
			END

	('C','T'),	BEGIN
			CODE = WRKITM(1,1)	;C,T
			BODY = WRKITM(2,11)
			END
	ENDUSING
	
	LN = %TRIM(CODE)
	USING CODE(LN,LN) SELECT
	('C'),	CALL MMBB		;CROSS
	('T'),	CALL MMB		;TEE
	ENDUSING

	IF (MB .LT. MA)
	THEN	BEGIN
		REDUCER = 'R' + AGA + AMA + AMB
		CALL PRESSED_REDUCER
		END	

	ELSE	CLEAR REDUCER


	CODE = CODE(1,%trim(code) ) + AN

	CLEAR LF3
	IF (LMSQ3 .GT. 0) LF3 = F3_KEY(LMSQ3)

; end treatment...
	CLEAR COPTBL
	TBLCOD = 'MM'
	MM_KEY = LF3
	XCALL ISIO (CHN182, COPTBL, TBL_KEY, READ, LOKCTL)
	IF (LOKCTL .EQ. 0) GOTO GOT_TBL

; if no/bad end treatment, check for default keys...
	CLEAR COPTBL
	TBLCOD = 'IK'
	IK_ITEM = LCFGIM
	XCALL ISIO (CHN182, COPTBL, TBL_KEY, READ, LOKCTL)
	IF (LOKCTL .NE. 0) CLEAR COPTBL
GOT_TBL,
;
; Create the output file...
;
	CLEAR VLINE
	WRITES (10, VLINE)

	VLINE = '// ' + LCFGIM
	WRITES (10, VLINE)

	WRITES (10, '//Straight Body')
	WRITES (10, 'FN = 1000-i;')

	CALL COM_SEC

	CLEAR TBLKEY
	TBLCOD = 'V1'
	V1_KEY = 8		; Shoe Taps
	V1_F3 = LF3
	XCALL ISIO (CHN182, COPTBL, TBL_KEY, READ, LOKCTL)
	IF (LOKCTL .NE. 0) CLEAR COPTBL

	FOR J FROM 1 THRU 4
		USING GA SELECT
		(16),		WD4(J) = V1_16(J)
		(18 THRU 20),	WD4(J) = V1_1820(J)
		(22 THRU 26),	WD4(J) = V1_2226(J)
		(),		WD4(J) =
		ENDUSING

	IF (BD .GT. BC) BC = BD		;BC will be larger of BD & BD

	USING CODE SELECT
	('STC','STT'),			BEGIN
					L = BC + 9
					AT = 90
					END

	('T4','C4'),			BEGIN
					L = BC + 9
					AT = 45
					END

	('CC9','CT9'),			BEGIN
					L = BC + 6
					AT = 45
					END

	('C9','T9'),			BEGIN
					L = BC + 7
					AT = 90
					END
	ENDUSING

	VLINE = ((MA * 1000) + WD4(1)), 'W= ZZ.XXX;' [left]		;.XXX
	WRITES (10, VLINE)


	VLINE = L,	'L= ZZ;' [left]		;
	WRITES (10, VLINE)
	
	WRITES (10, 'PRCT= ;')
	WRITES (10, 'FLOOR= "";')

	CLEAR TBLKEY
	TBLCOD = 'V2'		;vulcan descriptions
	V2_KEY = LF3
	XCALL ISIO (CHN182, COPTBL, TBL_KEY, READ, LOKCTL)
	IF (LOKCTL .NE. 0) CLEAR COPTBL

	VLINE = 'CONN= B;CN= "'
	LN = %TRIM (VLINE)
	INCR LN
	VLINE(LN,60) = V2_CN1
	LN = %TRIM(VLINE)
	INCR LN
	VLINE(LN,80) = '"; END;'
	WRITES (10, VLINE)


	VLINE = 'CONN= B;CN= "'
	LN = %TRIM (VLINE)
	INCR LN
	VLINE(LN,60) = V2_CN1
	LN = %TRIM(VLINE)
	INCR LN
	VLINE(LN,80) = '"; END;'
	WRITES (10, VLINE)

	WRITES (10, 'END;')
	CLEAR VLINE
	WRITES (10, VLINE)

; Taps...
	
	WR(1) = ((MA * 1000) + WD4(3))	;1st Tap...
	WR(2) = ((MA * 1000) + WD4(4))	;2nd Tap...

	AR(1) = 90
	AR(2) = 270

	USING CODE SELECT	;round boot taps, conical taps
	('STC'),	BEGIN
			FOR J FROM 1 THRU 2	CALL STC
			IF (MA.GT.MB)		CALL CONR
			END

	('CC4'),	BEGIN
			FOR J FROM 1 THRU 2	CALL CC4
			IF (MA.GT.MB) 		CALL CONR
			END		

	('CC9'),	BEGIN
			FOR J FROM 1 THRU 2	CALL CC9
			IF (MA.GT.MB) 		CALL CONR
			END		

	('STT'),	BEGIN
			J = 1			;ONLY 1 TAP
			CALL STC
			IF (MA.GT.MB) 		CALL CONR
			END

	('C4'),		BEGIN
			FOR J FROM 1 THRU 2	CALL CC4
			IF (MA.GT.MB) 		CALL CONR
			END

	('C9'),		BEGIN	
			FOR J FROM 1 THRU 2	CALL C9
			IF (MA.GT.MB) 		CALL CONR
			END

	('T4'),		BEGIN
			J = 1			;ONLY 1 TAP
			CALL CC4
			IF (MA.GT.MB) 		CALL CONR
			END

	('T9'),		BEGIN	
			J = 1			;ONLY 1 TAP
			CALL C9
			IF (MA.GT.MB) 		CALL CONR
			END
	('CT4'),	BEGIN
			J = 1			;ONLY 1 TAP
			CALL CC4
			IF (MA.GT.MB) 		CALL CONR
			END

	('CT9'),	BEGIN	
			J = 1			;ONLY 1 TAP
			CALL CC9
			IF (MA.GT.MB) 		CALL CONR
			END
	ENDUSING


	CLEAR VLINE
	WRITES (10, VLINE)

	XRETURN

;========================================
SHIFT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	WRKITM(J,15) = WRKITM(J+1,15)
	LN = %TRIM(WRKITM) + 1
	WRKITM(LN,LN) = 	

	RETURN
;----------------------------------------

MMBB,	;CROSS: MAIN-A MAIN-B BRANCH-C BRANCH-D

	XCALL ALPDC (AGA, GA, BF)
	IF (BF) XRETURN

	XCALL ALPDC (AMA, MA, BF)
	IF (BF) XRETURN

	XCALL ALPDC (AMB, MB, BF)
	IF (BF) XRETURN

	XCALL ALPDC (ABC, BC, BF)
	IF (BF) XRETURN

	XCALL ALPDC (ABD, BD, BF)
	IF (BF) XRETURN

	RETURN
;----------------------------------------

MMB,	;TEE: MAIN-A MAIN-B BRANCH-C 

	XCALL ALPDC (AGA, GA, BF)
	IF (BF) XRETURN

	XCALL ALPDC (AMA, MA, BF)
	IF (BF) XRETURN

	XCALL ALPDC (AMB, MB, BF)
	IF (BF) XRETURN

	XCALL ALPDC (ABC, BC, BF)
	IF (BF) XRETURN

	RETURN
;----------------------------------------
CC4,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; Round Lateral Tap
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	WRITES (10, '//Round Lateral Tap')
	WRITES (10, 'FN = 51-i;')

	CALL COM_SEC

	LT = (MA*10/2)#1
	LT = LT + 1

	VLINE = WR(J),	'WR= ZZ.XXX;' [left]		;.XXX
	WRITES (10, VLINE)

	VLINE = LT,	'LT= ZZ.XXX;' [left]		;.XXX
	WRITES (10, VLINE)
	
	CALL FINISH_CROSS

	RETURN
;-----------------------------------------------------

C9,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; Round Straight Tap
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	WRITES (10, '//Round Straight Tap')
	WRITES (10, 'FN = 51-i;')

	CALL COM_SEC

	LT = (MA*10/2)#1
	LT = LT + 1

	VLINE = WR(J),	'WR= ZZ.XXX;' [left]		;.XXX
	WRITES (10, VLINE)

	VLINE = LT,	'LT= ZZ.XXX;' [left]		;.XXX
	WRITES (10, VLINE)

	CALL FINISH_CROSS


	RETURN
;-----------------------------------------------------

CC9,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; Round Conical Tap
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	WRITES (10, '//Round Conical Tap')
	WRITES (10, 'FN = 53-i;')

	CALL COM_SEC

	WL = WR(J) + 1000
	LT = (MA*10/2)#1
	LT = LT + 1

	VLINE = WL,	'WL= ZZ.XXX;' [left]		;.XXX
	WRITES (10, VLINE)

	VLINE = WR(J),	'WR= ZZ.XXX;' [left]		;.XXX
	WRITES (10, VLINE)

	WRITES (10, 'SR= ;')

	VLINE = LT,	'LT= ZZ.XXX;' [left]		;.XXX
	WRITES (10, VLINE)

	CALL FINISH_CROSS


	RETURN
;-----------------------------------------------------

CONR,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; Round Concentric Reducer
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	WRITES (10, '//Round Concentric Reducer')
	WRITES (10, 'FN = 315-i;')

	CALL COM_SEC

	SZT = MA
	SZB = MB
	; code from vt02s.cp


	CLEAR TBLKEY
	TBLCOD = 'V1'

	USING GA SELECT
	(18 THRU 22),	V1_KEY = 2		; F dept
	(24 THRU 26),	V1_KEY = 4		; H dept
	(),		V1_KEY = 4		; default to H dept
	ENDUSING

	V1_F3 = LF3
	XCALL ISIO (CHN182, COPTBL, TBL_KEY, READ, LOKCTL)
	IF (LOKCTL .NE. 0) CLEAR COPTBL

	FOR J FROM 1 THRU 4
		USING GA SELECT
		(16),		WD4(J) = V1_16(J)
		(18 THRU 20),	WD4(J) = V1_1820(J)
		(22 THRU 26),	WD4(J) = V1_2226(J)
		(),		WD4(J) =
		ENDUSING

	SB = 		;always zero for reducers
	SR = 		;always zero for reducers

	WB = ((SZB * 1000) + WD4(1))		;.XXX
	VLINE = WB,	'WB= Z.XXX;' [left]		;.XXX
	WRITES (10, VLINE)

	VLINE = 'SB= 0;'
	WRITES (10, VLINE)

	WT = ((SZT * 1000) + WD4(2))		;.XXX
	VLINE = WT,	'WT= Z.XXX;' [left]		;.XXX
	WRITES (10, VLINE)

	VLINE = 'ST= 0;'
	WRITES (10, VLINE)

;Total Reduction/Body Length:
	DIF = WB - WT
	USING GA SELECT
	(18 thru 22),	USING DIF#3 SELECT
			(1),		L=3
			(2,3),		L=4
			(4,5,6),	L=DIF+2
			(7,8),		L=DIF+3
			(9,10,11),	L=DIF+4
			(12,13,14),	L=DIF+5
			(15,16),	L=22
			(17,18),	L=25
			(19),		L=26
			(20,21,22),	L=DIF+8
			(),		L=31
			ENDUSING

	(24 thru 26),	USING DIF#3 SELECT
			(1),		L = 2
			(2,3),		L = 3
			(4,5,6),	L=DIF+1
			(7,8),		L=DIF+2
			(9,10,11),	L=DIF+3
			(12,13,14),	L=DIF+4
			(15,16),	L=21
			(17,18),	L=24
			(19),		L=25
			(20,21,22),	L=DIF+7
			(),		L=30
			
			ENDUSING

	ENDUSING

	VLINE = L,	'L= X;' [left]
	WRITES (10, VLINE)

	OW = (DIF/2)#3
	VLINE = OW,		'OW= X;' [left]
	WRITES (10, VLINE)

	WB = (DIF/2)#3
	VLINE = WB,		'OD= X;' [left]
	WRITES (10, VLINE)
	

	WRITES (10, 
& 'PRCT= CATALOG SETUP Design Build S & D KD - ASMBL Mult Rfcmt Galvanized;')


	CLEAR TBLKEY
	TBLCOD = 'V2'		;vulcan descriptions
	V2_KEY = LF3
	XCALL ISIO (CHN182, COPTBL, TBL_KEY, READ, LOKCTL)
	IF (LOKCTL .NE. 0) CLEAR COPTBL

	VLINE = 'CONN= B;CN= "'
	LN = %TRIM (VLINE)
	INCR LN
	VLINE(LN,60) = V2_CN1
	LN = %TRIM(VLINE)
	INCR LN
	VLINE(LN,80) = '"; END;'
	WRITES (10, VLINE)

	VLINE = 'CONN= T;CN= "'
	LN = %TRIM (VLINE)
	INCR LN
	VLINE(LN,60) = V2_CN2
	LN = %TRIM(VLINE)
	INCR LN
	VLINE(LN,80) = '"; END;'
	WRITES (10, VLINE)


	WRITES (10, 'END;')

	CLEAR VLINE
	WRITES (10, VLINE)


	RETURN
;-----------------------------------------------------

STC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; Round Boot Tap
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	WRITES (10, '//Round Boot Tap')
	WRITES (10, 'FN = 54-i;')

	CALL COM_SEC

	WL = WR(J)
	DL = WR(J) + 3000

	VLINE = WL,	'WL= ZZ.XXX;' [left]		;.XXX
	WRITES (10, VLINE)

	VLINE = DL,	'DL= ZZ.XXX;' [left]		;.XXX
	WRITES (10, VLINE)

	VLINE = WR(J),	'WR= ZZ.XXX;' [left]		;.XXX
	WRITES (10, VLINE)

	WRITES (10, 'SR= ;')
	WRITES (10, 'LT= ;')

	CALL FINISH_CROSS

	RETURN
;-----------------------------------------------------

FINISH_CROSS,	;;;;;;;;;;;;;;;;;;;;;;;;;;
	WRITES (10, 'OW= 3;')
	WRITES (10, 'OD= 0;')

	VLINE = AT,	'AT= ZX;' [left]
	WRITES (10, VLINE)

	VLINE = AR(J),	'AR= ZZX;' [left]
	WRITES (10, VLINE)

	WRITES (10, 'PRCT= CATALOG SETUP Design Build S & D KD - ASMBL Mult Rfcmt Falvanized;')
	WRITES (10, 'FLOOR= ;')

	USING GA SELECT
	(16 THRU 20),	VLINE = 'CONN=L;CN= "BUTT WELD"; END;'
	(22 THRU 26),	VLINE = 'CONN=L;CN= "ELBOWLOCK"; END;'
	ENDUSING
	WRITES (10, VLINE)

	VLINE = 'CONN= R;CN= "'
	LN = %TRIM (VLINE)
	INCR LN
	VLINE(LN,60) = V2_CN1
	LN = %TRIM(VLINE)
	INCR LN
	VLINE(LN,80) = '"; END;'
	WRITES (10, VLINE)

	WRITES (10, 'END;')

	CLEAR VLINE
	WRITES (10, VLINE)

	RETURN
;-----------------------------------------------------

COM_SEC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; COMMON TO EACH SECTION
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	PNUM = PNUM + 1
	VLINE = PNUM,	'PNUM = ZZX;' [LEFT]
	WRITES (10, VLINE)

	VLINE = 'QTY= '
	VLINE (6,11) = LQTYOR,	'ZZZZZZ;' [LEFT]
	WRITES (10, VLINE)

	WRITES (10, 'METALN= "GALV SPIRAL FITT";')

	VLINE = 'GAUGE= '
	VLINE(8,10) = GA,	'XX;' 
	WRITES (10, VLINE)

	USING GA SELECT
	(16 THRU 20),	WRITES (10, 'LSEAM= BUTT WELD;')
	(22 THRU 26),	WRITES (10, 'LSEAM= .5 LAP;')
	ENDUSING

	RETURN
;--------------------------------------------------------------


PRESSED_REDUCER,	;;;;;;;;;;;;;;;;;

	CLEAR COPTBL
	TBLCOD = 'PP'
	IK_ITEM = REDUCER
	XCALL ISIO (CHN182, COPTBL, TBL_KEY, READ, LOKCTL)
	IF (LOKCTL .NE. 0) CLEAR REDUCER

	RETURN
;----------------------------------------

	END

		
