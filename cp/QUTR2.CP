;QUTR2.CP
;
;	QUOTES TO ORDERS STATISTTICS
;
; 5-30-18 ssq: make cusmas isam

subroutine qutr2
	stdat	,d
	endat	,d
	nite	,d	;1 = nite batch, no screen i/o

RECORD	ARQDAT
	.INCLUDE 'DEF:RD083A.DEF'

RECORD	ORDHDR
	.INCLUDE 'DEF:RD044A.DEF'

RECORD	CUSMAS
	.INCLUDE 'DEF:RD001A.DEF'
RECORD,X
	.INCLUDE 'DEF:RD001B.DEF'
;
;;;RECORD	CUSIDX
;;;	.INCLUDE 'DEF:RD002A.DEF'

RECORD	SALMAN
	.INCLUDE 'DEF:RD054A.DEF'

;
RECORD HDR1
	,A*,	'------------CUSTOMER------------ QUOTES ORDERS   --CNV--'
	,A*,	'  SALES-MTD   SALES-YTD'



RECORD LEG1
;;;		,A14,'SALESPERSON:  '
;;;	LSTSLM	,D2
;;;		,A3
;;;	SLMNAM	,A25
;;;		,A10
	L1DAT1	,A10
		,A*, ' THRU '
	L1DAT2	,A10

RECORD	PRINT
	TITLE	,A*,	'QUOTES TO ORDER STATISTICS'
	HDR	,A6,	'NO HDR'
	LEG	,A9,	'NO LEGEND'
	PLINE	,A80
	LPONSW	,D1
	LPSW	,D1
	SPLFIL	,A14
	LINCNT	,D2,62
	PGCNT	,D3
	RPTNUM	,D3
	PRTTYP	,A1
	LPARG	,D1


;not sorted & reported by salesman
RECORD	KEYSP
	KEY_SPEC	,A*,	'START=1, LENGTH=6, DUPS, ASCEND'
;

RECORD	WORK
;;;	W_SLSMN	,D2
	W_CUST	,D6
	W_NAME	,A25
	W_QORD	,D4	;NUMBER OF ORDERS
	W_QQOT	,D4	;NUMBER OF QUOTES
	W_QCNV	,D4	;NUMBER OF QUOTES CONVERTED TO ORDERS
	W_MTD	,D10	;SALES M-T-D
	W_YTD	,D10	;SALES Y-T-D
;
RECORD, X
	W_KEY	,D6

RECORD	CHANNEL
	CHN001	,D2
	CHN002	,D2
	CHN044	,D2
	CHN054	,D2
	CHN083	,D2
	CHN184	,D2
	CHNWRK	,D2

RECORD	DIS
	II	,D6

RECORD	VARS
	OPNOK	,D1
	QORD	,D4	;NUMBER OF ORDERS
	QQOT	,D4	;NUMBER OF QUOTES
	QCNV	,D4	;NUMBER OF QUOTES CONVERTED TO ORDERS
	XDATE	,D8
	PCT	,D5
	WRKFIL	,A14,	'SPL:QUOTWK.ISM'
	SAVCUS	,D6
	SAVMAN	,D2
	LOKCTL	,D1
	INXCTL	,D1
	CNGCTL	,D1
	SRCCTL	,D1
	KEY	,A6
	BSMID	,D6
	BSEND	,D6
	WHATNO	,D2
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,1
	ENTRY	,A30
	SWITCH	,D1
	V	,D1
	
PROC

	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF
	

; look thru open orders ...

	CLEAR II
	SAVCUS = -1
	FIND (CHN044, ORDHDR, ^FIRST, KRF=1) [ERR=LOOP]
LOOP,
	INCR II
	IF (II/1000*1000 .EQ. II) DISPLAY (15,$SCR_POS(1,70),DIS)

	XCALL IOS (CHN044, ORDHDR, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO EOF
	IF (OORDDT.LT.STDAT .OR. OORDDT.GT.ENDAT) GOTO LOOP

	IF (OCUSNO .NE. SAVCUS) CALL NEW_CUST
;;;	IF (OSLMAN .NE. SAVMAN) CALL NEW_CUST	;ALSO FOR NEW SALEMAN

	USING OLOC SELECT
	('O'),	INCR QORD
	('E'),	INCR QQOT
	ENDUSING

	XCALL ISIO (CHN083, ARQDAT, OORDNO, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO LOOP

	IF (AQ_RC .EQ. 'QO') INCR QCNV

	GOTO LOOP


EOF,
	CALL NEW_CUST

; look thru current year's history for orders that were converted from quotes...

	CLEAR II
	SAVCUS = -1
	FIND (CHN184, ORDHDR, ^FIRST, KRF=1) [ERR=LOOP]
LOOP2,
	INCR II
	IF (II/1000*1000 .EQ. II) DISPLAY (15,$SCR_POS(2,70),DIS)
	XCALL IOS (CHN184, ORDHDR, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO EOF2
	IF (OORDDT.LT.STDAT .OR. OORDDT.GT.ENDAT) GOTO LOOP2

	IF (OCUSNO .NE. SAVCUS) CALL NEW_CUST
;;;	IF (OSLMAN .NE. SAVMAN) CALL NEW_CUST	;ALSO FOR NEW SALEMAN

	INCR QORD

	XCALL ISIO (CHN083, ARQDAT, OORDNO, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO LOOP2

	IF (AQ_RC .EQ. 'QO') INCR QCNV

	GOTO LOOP2

EOF2,
	CALL NEW_CUST

	LINCNT = 66
	PGCNT = 0
	XDATE(1,4) = STDAT(5,8)
	XDATE(5,8) = STDAT(1,4)
	L1DAT1 = XDATE, 'ZX/XX/XXXX'

	XDATE(1,4) = ENDAT(5,8)
	XDATE(5,8) = ENDAT(1,4)
	L1DAT2 = XDATE, 'ZX/XX/XXXX'


;;;	LSTSLM = -1
	FIND (CHNWRK, WORK, ^FIRST) [ERR=PLOOP]
PLOOP,
	READS (CHNWRK, WORK, P_EOF)
;;;	IF (W_SLSMN .NE.LSTSLM)
;;;	BEGIN
;;;	  LINCNT = 62
;;;	  LOKCTL = 1
;;;	  XCALL IO (CHN054,SALMAN,W_SLSMN,READ,LOKCTL)
;;;	  LSTSLM = W_SLSMN
;;;	  SLMNAM = SLSNM
;;;	END

	W_QQOT = W_QQOT + W_QCNV	;CONVERTED QUOTES COUNT AS QUOTES	
	PLINE (1,6) = W_CUST,	'ZZZZZX'
	PLINE (8,32) = W_NAME
	PLINE (36,39) = W_QQOT,	'ZZZX'
	PLINE (43,46) = W_QORD,	'ZZZX'
	PLINE (49,51) = W_QCNV,	'ZZZX'
	IF (W_QQOT .GT. 0)
	THEN	PCT = ((W_QCNV*1000)/W_QQOT)#1
	ELSE	PCT =

	PLINE (53,56) = PCT,	'ZZX%'
	PLINE (58,67) = W_MTD,	'ZZZ,ZZX.XX'
	PLINE (69,79) = W_YTD,	'ZZZZ,ZZX.XX'
	CALL PRINT

	GOTO PLOOP
P_EOF,
	PLINE =
	CALL PRINT
	XCALL LPOFF (LPSW,SPLFIL,PGCNT)

ENDOFF,
	CALL CLOSE
	XRETURN

	STOP

UPDATE_WORK,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	W_CUST = SAVCUS
;;;	W_SLSMN = SAVMAN
	READ (CHNWRK, WORK, W_KEY) [ERR=NO_WRK]
	W_QORD = W_QORD + QORD
	W_QCNV = W_QCNV + QCNV
	W_QQOT = W_QQOT + QQOT
	WRITE (CHNWRK, WORK, W_KEY)
	RETURN

NO_WRK,

	CLEAR WORK

;;;	W_SLSMN = SAVMAN
	W_CUST = SAVCUS
	W_NAME = NAME
	W_MTD = SALMTD
	W_YTD = SALYTD
	W_QORD = QORD
	W_QCNV = QCNV
	W_QQOT = QQOT

	STORE (CHNWRK, WORK, W_KEY)

	RETURN
;------------------------------------------------

;=============================================================
NEW_CUST,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (SAVCUS .EQ. -1) GOTO OUT_CUST

	CALL UPDATE_WORK

OUT_CUST,
	IF (OCUSNO .NE. SAVCUS) CALL GET_CUST
	
	SAVCUS = OCUSNO
;;;	SAVMAN = OSLMAN

	CLEAR QORD, QCNV, QQOT
	
	RETURN
;---------------------------------------------

GET_CUST,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	XCALL ISIO (CHN001, CUSMAS, OCUSNO, READ, LOKCTL)
	IF (LOKCTL .NE. 0) CLEAR CUSMAS
	
;;;	KEY = OCUSNO, 'XXXXXX'
;;;	XCALL SERCH (CHN002,CUSIDX,KEY,1,6,BSEND,BSMID,SRCCTL,4,7,11,0,0,0,0)
;;;	IF (SRCCTL) 
;;;	THEN	CLEAR CUSMAS
;;;	ELSE	BEGIN
;;;		LOKCTL = 1
;;;		XCALL IO (CHN001,CUSMAS,IRC001,READ,LOKCTL)
;;;		END

	RETURN
;---------------------------------------------


PRINT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (LPONSW .EQ. 0) CALL LPON

	XCALL LPOUT(LINCNT,PGCNT,PLINE,TITLE,HDR1,HDR,HDR,LEG1,
&		LEG,LEG,0,80,080,1,LPSW,RPTNUM,PRTTYP)
	RETURN
;-----------------------------------------------------------

LPON,
	IF (NITE .EQ. 1)
	THEN	LPSW = 9	;COMPRESSED LOCAL
	ELSE	LPSW = 1	; PRINT, SPOOL OR DISPLAY

	XCALL LPON (LPSW,SPLFIL)
	IF (LPSW.EQ.0) GO TO ENDOFF
	LPARG = 2
	IF (LPSW.EQ.2) LPARG = 4
	if (.not. nite) XCALL WATE (LPARG,V)
	LPONSW = 1
	RETURN
;-----------------------------------------------------------

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CLEAR OPNOK

	SWITCH = 1
	XCALL FILES (1,'SI',01,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN001 = 1

;;;	SWITCH = 1
;;;	XCALL FILES (2,'I',02,SWITCH)
;;;	IF (SWITCH .EQ. 9) RETURN
;;;	CHN002 = 2

	SWITCH = 5
	XCALL FILES (44, 'SI', 044, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN044 = 44

	SWITCH = 5
	XCALL FILES (83, 'SI', 083, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN083 = 83

	SWITCH = 5
	XCALL FILES (84, 'SI',184, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN184 = 84
	
	SWITCH = 5
	XCALL FILES (8,'I',54,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN054 = 8

	XCALL ISAMC (WRKFIL, 63, 1, KEY_SPEC)
	OPEN (7, SU, WRKFIL)
	CHNWRK = 7

;;;	XCALL IO (CHN001, CUSMAS, 1, READ, LOKCTL)
;;;	BSEND = ORG001


	OPNOK = 1
	RETURN
;-------------------------------------------


CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLOSE CHNWRK

	IF (CHN044) CLOSE CHN044
	IF (CHN054) CLOSE CHN054
	IF (CHN083) CLOSE CHN083
	IF (CHN184) CLOSE CHN184

	SWITCH = 4
	XCALL FILES (1, 'SI', 001, SWITCH)
	SWITCH = 4
;;;	XCALL FILES (2, 'I', 002, SWITCH)
	RETURN
;------------------------------------------

END

