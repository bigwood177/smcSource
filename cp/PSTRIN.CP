;PSTRIN.CP
;
;	POST ORDLIN to rocinv.rom.
;
;	add from SMC invoices, relieve from ROC invoices.
;	INVOIC->PSTRIN->POSTAR

;	01-04-05 ssq: Terry will receive inventory by order - don't process
;		SMC invoices.
;

RECORD	ROCINV
	.INCLUDE 'DEF:RD091A.DEF'

RECORD	ORDHDR
	.INCLUDE 'DEF:RD044A.DEF'

RECORD	ORDLIN				
	.INCLUDE 'DEF:RD045A.DEF'
RECORD,X
	.INCLUDE 'DEF:RD045M.DEF'
RECORD,X
	.INCLUDE 'DEF:RD045D.DEF'

RECORD	F_MEMOS
	.INCLUDE 'DEF:CPMEMO.DEF'

;
RECORD	CHANNEL
	CHN044	,D2
	CHN045	,D2
	CHN091	,D2

RECORD	VARS
	INVFIL	,A14	,'ROC:ROCINV.ROM'
	SAVORD	,D6
	CMPCOD	,A3
	TRXONH	,D6	;TO UPDATE OH-HAND
	TRXONO	,D6	;TO UPDATE ON-ORDER
	TRXCOM	,D6	;TO UPDATE COMMITED
	I	,D6
	SAVKEY	,A30
	TODAY	,D8
	TOTJG	,D10
	TOTTG	,D10
	OPNOK	,D1
	SMCORD	,D6
	ENTRY	,A30
	INXCTL	,D1
	CNGCTL	,D1
	WHATNO	,D2
	READ	,D1,0
	STORE	,D1,2
	WRITE	,D1,1
	LOKCTL	,D1
	SWITCH	,D1
	V	,D1
;
PROC
	XCALL TERID(V)
	XCALL OUTPT (2,1,2,'UPDATE ROCKFORD INVENTORY',1)

	XCALL WHO(CMPCOD)

	USING CMPCOD SELECT
	('ROC','TST'),	NOP
	(),		XCALL PGCHN ('CP:POSTAR',1)
	ENDUSING

	CALL OPENS
	IF (.NOT. OPNOK) GOTO EOF

	XCALL RDAT8(TODAY)

HLOOP,
	LOKCTL = 1
	XCALL IOS (CHN044, ORDHDR, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO EOF
	IF (OFLAG .NE. 2) GOTO HLOOP
	IF (CMPCOD.EQ.'SMC' .AND. OCUSNO.NE.63340) GOTO HLOOP	;ROCK ORDERS ONLY
	CALL NEWORD

	FIND (CHN045,ORDLIN,OORDNO) [ERR=LOOP]

LOOP,
	LOKCTL = 1
	XCALL IOS (CHN045, ORDLIN, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO EOF
	IF (LORDNO .NE. OORDNO) GOTO HLOOP	;NEW HEADER
	IF (LTYPE .EQ. 'M') GOTO LOOP		;MEMOS SB PROCESSED IN "NEWORD"

	CLEAR ROCINV

	R_ITEM = LCFGIM
	CLEAR R_F3KEY, R_F2KEY, R_F1KEY
	
	IF (LMSQ3.GT.0) R_F3KEY = F3_KEY(LMSQ3)
	IF (LMSQ2.GT.0) R_F2KEY = F2_KEY(LMSQ2)
	IF (LMSQ1.GT.0) R_F1KEY = F1_KEY(LMSQ1)
	SAVKEY = R_KEY

	USING CMPCOD SELECT
	('ROC'),	BEGIN
			TRXONH = -LQTYSH	;REDUCE ON-HAND
			TRXONO = 		;NO EFFECT ON ON-ORDER
			TRXCOM = 	;;;> -LQTYSH	;REDUCE COMMITED
			END
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	('SMC'),	BEGIN
;;;			TRXONH = LQTYSH		;INCREASE ON-HAND
;;;			TRXONO = -LQTYSH	;REDUCE ON-ORDER
;;;			TRXCOM =		;NO EFFECT ON COMMITTED
;;;			END
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	ENDUSING


	XCALL ISIO (CHN091, ROCINV, R_KEY, READ, LOKCTL)
	IF (LOKCTL .EQ. 0)
	THEN	BEGIN		;EXISTING RECORD
		R_QTYH = R_QTYH + TRXONH
		R_QTYC = R_QTYC + TRXCOM
		R_QTYO = R_QTYO + TRXONO
		R_ORDN = SAVORD
		R_DATE = TODAY
		XCALL ISIO (CHN091, ROCINV, R_KEY, WRITE, LOKCTL)
		END
	ELSE	BEGIN		;CREATE NEW RECORD
		CLEAR ROCINV
		R_KEY = SAVKEY
		R_DESC = LDESCR
		R_QTYH = TRXONH
		R_QTYC = TRXCOM
		R_QTYO = TRXONO
		R_ORDN = SAVORD
		R_DATE = TODAY
		R_MAT = LMAT
		STORE (CHN091, ROCINV, R_KEY)
		END

	GOTO LOOP	
;=============================================================
EOF,
	GOTO ENDOFF

NEWORD,
	SAVORD = OORDNO
	CALL GET_MEMOS		;BUILD MEMO ARRAY
	CLEAR TOTJG, TOTTG		;ssq 10-21-03
	RETURN

ENDOFF,
	CALL CLOSE
	XCALL PGCHN ('CP:POSTAR',1)
	STOP
;===============================================================
;===============================================================


GET_MEMOS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; LOAD MEMOS INTO ARRAYS
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CLEAR F1_NUM, F2_NUM, F3_NUM
	FOR I FROM 1 THRU F_MAX
		BEGIN
		CLEAR F1_MEMOS(I)
		CLEAR F2_MEMOS(I)
		CLEAR F3_MEMOS(I)

		CLEAR F1_MEMOL(I)
		CLEAR F2_MEMOL(I)
		CLEAR F3_MEMOL(I)
		END

	CLEAR ORDKEY
	LORDNO = OORDNO
	
	FIND (CHN045, ORDLIN, ORDKEY) [ERR=MLOOP, EOF=EOF_M]
MLOOP,
	LOKCTL = 1
	XCALL IOS (CHN045, ORDLIN, READ, LOKCTL)

	IF (LOKCTL .NE. 0) GOTO EOF_M
	IF (LORDNO .NE. SAVORD) GOTO EOF_M
	IF (LTYPE .NE. 'M') GOTO EOF_M		;SSQ 12-16-99
	IF (LMSQ1 .GT. 0) 
		BEGIN
		F1_MEMOS(LMSQ1) = M_SHORTD
		F1_MEMOL(LMSQ1) = M_LDESCR
		F1_KEY(LMSQ1) = M_KEY
		INCR F1_NUM
		END
	IF (LMSQ2 .GT. 0) 
		BEGIN
		F2_MEMOS(LMSQ2) = M_SHORTD
		F2_MEMOL(LMSQ2) = M_LDESCR
		F2_KEY(LMSQ2) = M_KEY
		INCR F2_NUM
		END
	IF (LMSQ3 .GT. 0) 
		BEGIN
		F3_MEMOS(LMSQ3) = M_SHORTD
		F3_MEMOL(LMSQ3) = M_LDESCR
		F3_KEY(LMSQ3) = M_KEY
		INCR F3_NUM
		END

	GOTO MLOOP
EOF_M,
	RETURN
;-------------------------------------

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK

	SWITCH = 5
	XCALL FILES (1,'SI',44,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN044 = 1

	SWITCH = 5
	XCALL FILES (2,'SI',45,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN045 = 2

	OPEN (3, SU, INVFIL)		;ROCINV
	IF (SWITCH .EQ. 9) RETURN
	CHN091 = 3

	OPNOK = 1
	RETURN
;-------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (CHN044) CLOSE CHN044
	IF (CHN045) CLOSE CHN045
	IF (CHN091) CLOSE CHN091

	RETURN
;-------------------------------------
	END

