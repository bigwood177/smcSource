;MMXMNT.CP
;	COP TABLE MAINTENANCE
;	MEMOS CODES
;
RECORD	COPTBL
	.INCLUDE 'DEF:RD182A.DEF'


RECORD	CHANNEL
	CHN182	,D2


RECORD	PRINT
	TITLE	,A*,	'MEMO TABLE'
	HD	,A6,	'NO HDR'
	LG	,A9,	'NO LEGEND'
	PLINE	,A132
	PRNTON	,D1
	LINCNT	,D2,60
	PGCNT	,D6
	LPSW	,D2
	SPLFIL	,A14
	RPTNUM	,D3
	PRTTYP	,A1
	PRTCTL	,D3,132
	LPARG	,D1
	PRNTSW	,D1
	PRTCTR	,D1

RECORD	HD1
		,A*,	'CODE  SHORT DESC    LONG DESC'
		,A*,	'                      L  PP  KEY  MAT-MULT'

RECORD	VARS
	ALPHA	,A12
	OPNOK	,D1
	BLANKS	,A30

	ST_MEMO	,D5
	EN_MEMO	,D5
	MEMO	,D5
	DESC	,A30
	PGM	,D1
	ROW	,D2
	ENTRY	,A30
	INXCTL	,D1
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	DELETE	,D1,3
	LOKCTL	,D1
	WHATNO	,D2
	SELECT	,D1
	CNGCTL	,D1
	I	,D3
	SWITCH	,D1
	V	,D1

PROC
	XCALL TERID (V)
	XCALL OUTPT (1,1,2,'MEMO TABLE',1)

	CALL OPENS
	IF (.NOT. OPNOK) GOTO CLOSE

MENU,
	XCALL OUTPT (1,1,2,'MEMO TABLE',1)
	XCALL OUTPT (3,9,0,'PLEASE SELECT APPLICATION',1)
	XCALL OUTPT (5,15,0,'1. TABLE MAINTENANCE',1)
	XCALL OUTPT (6,15,0,'2. PRINT TABLE',1)
MINPUT,
	XCALL INPUT (3,36,1,1,'#E',ENTRY,INXCTL,1)
	GOTO (MINPUT,ENDOFF), INXCTL
	PGM = ENTRY(1,1)
	GOTO (DISPLA,PRINT_TABLE),PGM
	GOTO MINPUT

DISPLA,
	CLEAR CNGCTL
	XCALL OUTPT (1,1,2,'MEMO TABLE',1)
	XCALL OUTPT ( 4,4,0,'1. CODE',1)
	XCALL OUTPT ( 6,4,0,'2. SHORT DESC',1)
	XCALL OUTPT ( 8,4,0,'3. LONG DESC',1)
	XCALL OUTPT (10,4,0,'4. VALID LEVEL',1)
;;;	XCALL OUTPT (12,4,0,'5. EZ JR RULE#           0 = NOT EZ JR',1)
	XCALL OUTPT (14,4,0,'5. VALID PP (Y/N)?',1)
	XCALL OUTPT (16,4,0,'6. ITEM KEY (Y/N)?',1)
	XCALL OUTPT (18,4,0,'7. PRICE MULT',1)

MM_KEY,
	XCALL INPUT (4,24,05,00,'#E',ENTRY,INXCTL,1)
	GOTO (DISPLA,MENU),INXCTL
	MEMO = ENTRY(1,5)

	CLEAR TBL_KEY
	TBL_KEY(1,2) = 'MM'
	MM_KEY = MEMO
	XCALL ISIO (CHN182,COPTBL,TBL_KEY,READ,LOKCTL)
	IF (LOKCTL .EQ. 0)
		BEGIN
		SELECT = 2
		CALL DSPREC
		GOTO ANYCNG
		END


	SELECT = 1			;ADD MODE
	CLEAR COPTBL

MM_SHORT,
	XCALL INPUT (6,24,12,00,'A ',ENTRY,INXCTL,1)
	GOTO (DISPLA),INXCTL
	MM_SHORT = ENTRY(1,12)
	GOTO (ANYCNG), CNGCTL
MM_LONG,
	XCALL INPUT (8,24,30,00,'A ',ENTRY,INXCTL,1)
	GOTO (DISPLA),INXCTL
	MM_LONG = ENTRY(1,30)
	GOTO (ANYCNG), CNGCTL
MM_VALID,
	XCALL INPUT (10,24,01,00,'# ',ENTRY,INXCTL,1)
	GOTO (DISPLA),INXCTL
	MM_VALID = ENTRY(1,1)
	USING MM_VALID SELECT
	(0, 1, 2, 3),	GOTO (ANYCNG),CNGCTL
	(),		GOTO MM_VALID
	ENDUSING
	GOTO (ANYCNG), CNGCTL

MM_PP,
	XCALL INPUT (14,24,01,00,'YN',ENTRY,INXCTL,1)
	MM_PP = INXCTL
	GOTO (ANYCNG),CNGCTL

MM_IK,
	XCALL INPUT (16,24,01,00,'YN',ENTRY,INXCTL,1)
	MM_IK = INXCTL - 1	;0=YES, 1=NO 
	GOTO (ANYCNG),CNGCTL

MM_MULT,
	IF (MM_VALID .NE. 1) GOTO ANYCNG

	XCALL INPUT (18,24,04,00,'$ ',ENTRY,INXCTL,1)
	GOTO (DISPLA),INXCTL
	MM_MULT = ENTRY(1,4)
	GOTO (ANYCNG),CNGCTL

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;MM_JR,
;;;	XCALL INPUT (12,24,01,00,'# ',ENTRY,INXCTL,1)
;;;	GOTO (DISPLA),INXCTL
;;;	MM_JR = ENTRY(1,1)
;;;	GOTO (ANYCNG),CNGCTL
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
ANYCNG,
	XCALL OUTPT (24,1,1,'FIELD # TO CHANGE            <TAB> = DELETE',1)
	XCALL INPUT (24,20,02,00,'#T',ENTRY,INXCTL,1)
	IF (INXCTL .EQ. 3)
		BEGIN
		XCALL OUTPT (24,1,1,'DELETE, ARE YOU SURE ?',1)
		XCALL INPUT (24,24,01,01,'YN',ENTRY,INXCTL,1)
		GOTO (ANYCNG),INXCTL-1
		XCALL ISIO (CHN182,COPTBL,TBL_KEY,DELETE,LOKCTL)
		GOTO DISPLA
		END

	WHATNO = ENTRY(1,2)
	IF (WHATNO .EQ. 0)
	THEN 	CLEAR CNGCTL
	ELSE 	CNGCTL = 1

	GOTO (PROCES,CNGBR),CNGCTL+1
CNGBR,
	GOTO (MM_KEY, MM_SHORT, MM_LONG, MM_VALID, MM_PP, MM_IK, MM_MULT),WHATNO
	GOTO ANYCNG

PROCES,
	CASE SELECT OF
	BEGINCASE
	1:	BEGIN
		TBLCOD = 'MM'
		MM_KEY = MEMO
	;;;	TBLKEY = MEMO
		XCALL ISIO (CHN182,COPTBL,TBL_KEY,STORE,LOKCTL)
		END
	2:	XCALL ISIO (CHN182,COPTBL,TBL_KEY,WRITE,LOKCTL)
	ENDCASE
	GOTO DISPLA

ENDOFF,
	CALL CLOSE
	XCALL PGCHN ('CP:TBLMNU',1)
	STOP


DSPREC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; DISPLAY RECORD
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	ENTRY(1,5) = MM_KEY	,'ZZZZX'
	XCALL OUTPT (4,24,1,ENTRY(1,5),1)
	XCALL OUTPT (6,24,1,MM_SHORT,1)
	XCALL OUTPT (8,24,1,MM_LONG,1)
	ENTRY(1,1) = MM_VALID,'X'
	XCALL OUTPT (10,24,1,ENTRY(1,1),1)
	USING MM_PP SELECT
	(1),	XCALL OUTPT (14,24,1,'Y',1)
	(2),	XCALL OUTPT (14,24,1,'N',1)
	ENDUSING

	USING MM_IK SELECT
	(1),	XCALL OUTPT (16,24,1,'N',1)
	(),	XCALL OUTPT (16,24,1,'Y',1)
	ENDUSING

	ENTRY(1,4) = MM_MULT,	'ZX.XX' [LEFT]
	XCALL OUTPT (18,24,1,ENTRY(1,4),1)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	IF (MM_JR .GE. 1)
;;;		BEGIN
;;;		ENTRY(1,1) = MM_JR,'X'
;;;		XCALL OUTPT (12,24,1,ENTRY(1,1),1)
;;;		END
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	RETURN
;-----------------------------------


;===================================================================
PRINT_TABLE,
;===================================================================
	LINCNT = 66
	PGCNT  = 0
	
PDISP,
	CNGCTL = 
	XCALL OUTPT (1,1,2,'PRINT MEMO TABLE',1)
	XCALL OUTPT (4,4,0,'1. STARTING CODE',1)
	XCALL OUTPT (6,4,0,'2. ENDING   CODE',1)
ST_MEMO,
	XCALL INPUT (4,25,05,00,'#E',ENTRY,INXCTL,1)
	GOTO (PDISP,PDONE),INXCTL
	ST_MEMO = ENTRY(1,5)
	IF (ST_MEMO .EQ. 0)
		BEGIN
		EN_MEMO = 99999
		XCALL OUTPT (4,25,1,'ALL',1)
		XCALL OUTPT (6,25,1,' ',1)
		GOTO P_ANY
		END
	GOTO (P_ANY),CNGCTL
EN_MEMO,
	XCALL INPUT (6,25,05,00,'# ',ENTRY,INXCTL,1)
	GOTO (PDISP),INXCTL
	EN_MEMO = ENTRY(1,5)
	IF (EN_MEMO .EQ. 0)
		BEGIN
		EN_MEMO = ST_MEMO
		ENTRY(1,5) = EN_MEMO	,'ZZZZX' [LEFT]
		XCALL OUTPT (6,25,0,ENTRY(1,5),1)
		END
P_ANY,
	XCALL ANYCN(CNGCTL,WHATNO)
	GOTO (P_PRINT,P_CNGBR),CNGCTL + 1
P_CNGBR,
	GOTO (ST_MEMO,EN_MEMO),WHATNO
	GOTO P_ANY

P_PRINT,
	CLEAR TBL_KEY
	TBLCOD = 'MM'
	MM_KEY = ST_MEMO
	FIND (CHN182,COPTBL,TBL_KEY)[ERR=PLOOP]

PLOOP,
	XCALL IOS (CHN182,COPTBL,READ,LOKCTL)
	IF (LOKCTL .NE. 0) GOTO EOF
	IF (TBLCOD .NE. 'MM') GOTO EOF
	IF (MM_KEY .LT. ST_MEMO) GOTO PLOOP
	IF (MM_KEY .GT. EN_MEMO) GOTO EOF

	PLINE(1,5) = MM_KEY	,'ZZZZX' [left]
	PLINE(7,19) = MM_SHORT
	PLINE(21,50) = MM_LONG
	PLINE(52,52) = MM_VALID,	'X'
	IF (MM_PP .EQ. 1) PLINE(55,55) = 'Y'
	IF (MM_IK .EQ. 1) PLINE(60,60) = 'N'
	PLINE (67,71) = MM_MULT,	'ZX.XX'
	
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	IF (MM_JR .GE. 1) 
;;;		BEGIN
;;;		PLINE(56,66) = 'EZ JR RULE:'
;;;		PLINE(68,68) = MM_JR,	'X'
;;;		END
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CALL PRINT
	GOTO PLOOP

EOF,
	IF (PRNTON.EQ.1)  XCALL LPOFF(LPSW,SPLFIL,PGCNT)
	PRNTON  = 0

PDONE,
	GOTO MENU

PRINT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (PRNTON .EQ. 0) CALL PRNTON
	XCALL LPOUT(LINCNT,PGCNT,PLINE,TITLE,HD1,HD,HD
&		,LG,LG,LG,0,132,PRTCTL,0,LPSW,RPTNUM,PRTTYP)
	RETURN
;-------------------------------------------------------------
PRNTON,
	SPLFIL (5,6) = 'EF'
	LPSW = 1		;PRINT,SPOOL, OR DISPLAY
	XCALL LPON (LPSW,SPLFIL)
	IF (LPSW.EQ.0) GOTO ENDOFF
	LPARG = 2
	IF (LPSW.EQ.2) LPARG = 4
	XCALL WATE (LPARG,V)
	PRNTON = 1
	RETURN
;-------------------------------------------------------------
;===================================================================


OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK

	SWITCH = 5
	XCALL FILES (1,'SU',182,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN182 = 1

	OPNOK = 1
	RETURN
;----------------------------------------------------

CLOSE,
	CLOSE CHN182
	RETURN
;----------------------------------------------------
	
	
;CODE  SHORT DESC    LONG DESC                      L  PP  KEY  MAT-MULT
; ZX   AAAAAAAAAAAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA X  A    A      ZX.XX
;12345678901234567890123456789012345678901234567890123456789012345678901234
;         1         2         3         4         5         6         7
