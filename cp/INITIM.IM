;  INITIM / IM 
;
;:
;		PROGRAM TO INITIALIZE ALL FILES IN THE INVENTORY MANAGEMENT
;		SYSTEM

RECORD FILES
	IM1	,A14,	'   :ITMMAS.   '
	IM2	,A14,	'   :ITMIDX.   '
	IM3	,A14,	'   :INVTRX.   '
	IM4	,A14,	'   :PURCHS.   '
	IM5	,A14,	'   :INVTAG.   '
	IM6	,A14,	'   :RINVMS.   '
	IM7	,A14,	'   :RINVIX.   '
	IM8	,A14,	'   :USGHST.   '
RECORD ,X
	IM	,8A14
RECORD FILBL
	FILE	,A14
RECORD DEVICE
			.INCLUDE 'DEF:DEV001.DEF'
RECORD
	PHYDEV	,A3
	CPYEXT	,A3
RECORD COMPNY
			.INCLUDE 'DEF:CMP001.DEF'
RECORD CTLVAR
		,D10,	0000100001
	MAXREC	,D5
		,D3,	000
RECORD ICTLVR
	TYPSYS	,D1
	NUMPRC	,D2
	NUMLOC	,D2
	NUMVEN	,D2
		,A2
		,D10,	0000100001
	MAXRC1	,D5
		,D3,	000
RECORD BRACKS
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD
			.INCLUDE 'DEF:RD041S.DEF'
			.INCLUDE 'DEF:RD042S.DEF'
			.INCLUDE 'DEF:RD043S.DEF'
			.INCLUDE 'DEF:RD053S.DEF'
			.INCLUDE 'DEF:RD040S.DEF'
			.INCLUDE 'DEF:RD132S.DEF'
			.INCLUDE 'DEF:RD133S.DEF'
			.INCLUDE 'DEF:RD134S.DEF'
RECORD,X
	RECSIZ	,8D4
RECORD
	WRTREC	,A1500
	FILCNT	,D2,	00
	MAXCNT	,8D5
	BLKSIZ	,8D5
	ENTRY	,A6
	FILSIZ	,D5
	INXCTL	,D1
	DECMAL	,D18
	CNGCTL	,D1
	ERROR	,D3
	WHATNO	,D2
	RECCNT	,D5
	JSTIFY	,D1
	SIZE	,D4
	CHAR	,A1
	V	,D1
	DFLTLO	,A2
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1
	CTLFLG	,D1
	SAVTYP	,D1
	TERM	,A1
	NOABRT	,D1,	1
	CPNTR	,D2
	SWITCH	,D1
PROC (5)
	V = -1
	XCALL TERID (V)
	XCALL OPENF (2,'I','UT:COMPNY.DDF',ERROR,0,SWITCH)
	IF (SWITCH) STOP
	LOKCTL = 1
	XCALL IO (2,COMPNY,1,READ,LOKCTL)
	CLOSE 2
	XCALL OPENF (2,'I','UT:DEVICE.DDF',ERROR,0,SWITCH)
	IF (SWITCH) STOP
DISPLA,
	CNGCTL =
	XCALL OUTPT (1,1,2,'INITIALIZE I/M FILES',V)
	XCALL OUTPT (3,25,0,'1. COMPANY CODE',V)
	XCALL OUTPT (4,5,0,'PLEASE ENTER THE MAX # OF RECORDS',V)
	XCALL OUTPT (4,39,0,'TO ALLOW FOR EACH FILE BELOW:',V)
	XCALL OUTPT (5,25,0,'2. ITEM MASTER',V)
	XCALL OUTPT (6,25,0,'3. USAGE TRX',V)
	XCALL OUTPT (7,25,0,'4. PURCHASING FILE',V)
	XCALL OUTPT (8,25,0,'5. INVENTORY TAGS',V)
	XCALL OUTPT (9,25,0,'6. RAW MATERIAL INV',V)
	XCALL OUTPT (10,25,0,'7. USAGE HISTORY FILE',V)
	XCALL OUTPT (21,25,0,'(Enter 0 or press RETURN to',1)
	XCALL OUTPT (22,27,0,'bypass creating a file.)',1)
INPTCE,
	XCALL INPUT (3,47,3,3,'AE',ENTRY,INXCTL,V)
	GO TO (DISPLA,END), INXCTL
	CPYEXT = ENTRY(1,3)
	CPNTR =
FINDCO,
	INCR CPNTR
	IF (CPNTR.GT.8) GO TO CMPNTF
	IF (COMCOD(CPNTR).NE.CPYEXT) GO TO FINDCO
	GO TO (ANYCNG), CNGCTL
	GO TO INPUT1
CMPNTF,
	XCALL MESAG ('INVALID COMPANY CODE',1)
	GO TO INPTCE
;**************************************************************
INPUT1,
	CTL = '05,47,05,00,#E'
	CALL INPUT
	GO TO (DISPLA,END), INXCTL
	MAXCNT(1) = ENTRY(1,5)
	MAXCNT(2) = ENTRY(1,5)
	GO TO (ANYCNG), CNGCTL
INPUT2,
	CTL = '06,47,05,00,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	MAXCNT(3) = ENTRY(1,5)
	GO TO (ANYCNG), CNGCTL
INPUT3,
	CTL = '07,47,04,00,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	MAXCNT(4) = ENTRY(1,5)
	GO TO (ANYCNG), CNGCTL
INPUT4,
	CTL = '08,47,05,00,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	MAXCNT(5) = ENTRY(1,5)
	GOTO (ANYCNG), CNGCTL
INPUT5,
	CTL = '09,47,05,00,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	MAXCNT(6) = ENTRY(1,5)
	MAXCNT(7) = ENTRY(1,5)
	GOTO (ANYCNG), CNGCTL
INPUT6,
	CTL = '10,47,05,00,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	MAXCNT(8) = ENTRY(1,5)
	GO TO ANYCNG
CNGBR,
	GO TO (INPTCE,INPUT1,INPUT2,INPUT3,INPUT4,INPUT5,INPUT6), WHATNO
	GO TO ANYCNG
PROCES,
	IF (MAXCNT(1).EQ.0) GO TO CNGSYS
	XCALL OUTPT (2,1,2,'\',1)
	XCALL OUTPT (2,5,0,'ENTER PARAMETER SELECTIONS FOR',V)
	XCALL OUTPT (2,36,0,'THE ITEM MASTER FILE:',V)
	XCALL OUTPT (3,20,0,'1. DEFAULT LOCATION',V)
	XCALL OUTPT (4,20,0,'2. TYPE OF I/M SYSTEM (1-4)',V)
	XCALL OUTPT (5,20,0,'3. NUMBER OF PRICES (1-42)',V)
	XCALL OUTPT (6,20,0,'4. NUMBER OF LOCATIONS (1-99)',V)
	XCALL OUTPT (7,20,0,'5. NUMBER OF VENDORS (1-10)',V)
	XCALL OUTPT (8,20,0,'6. RIGHT JUSTIFY NUMERIC ITEMS ?',V)
	XCALL OUTPT (5,58,0,'DEFAULT = 5',V)
	XCALL OUTPT (6,58,0,'DEFAULT = 5',V)
	XCALL OUTPT (7,58,0,'DEFAULT = 3',V)
INPT12,
	CTL = '03,53,02,01,AE'
	CALL INPUT
	GO TO (DISPLA,END), INXCTL
	DFLTLO = ENTRY(1,2)
	GO TO (ANYCN1), CNGCTL
INPT13,
	XCALL OUTPT (9,16,2,'1 = INVENTORY MGMT',V)
	XCALL OUTPT (10,16,0,'2 = INVENTORY MGMT & CUSTOMER ORDER PROC',V)
	XCALL OUTPT (11,16,0,'3 = INVENTORY MGMT & BILL OF MATERIAL',V)
	XCALL OUTPT (12,16,0,
&	'4 = INVENTORY MGMT, CUSTOMER ORDER PROC, & BILL OF MATERIAL',V)
	CTL = '04,53,01,00,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	TYPSYS = ENTRY(1,1)
	IF (TYPSYS.LT.1.OR.TYPSYS.GT.4) GO TO INPT13
	IF (CTLFLG) RETURN
	CALL CLRBOT
	GO TO (ANYCN1), CNGCTL
INPT14,
	CTL = '05,53,02,00,# '
	CALL DSPWRN
	CALL INPUT
	GO TO (DISPLA), INXCTL
	NUMPRC = ENTRY(1,2)
	IF (NUMPRC.EQ.0) NUMPRC = 5
	DECMAL = NUMPRC
	CALL DSPNUM
	IF (NUMPRC.LT.1.OR.NUMPRC.GT.42) GO TO INPT14
	CALL CLRBOT
	GO TO (ANYCN1), CNGCTL
INPT15,
	CTL = '06,53,02,00,# '
	CALL DSPWRN
	CALL INPUT
	GO TO (DISPLA), INXCTL
	NUMLOC = ENTRY(1,2)
	IF (NUMLOC.EQ.0) NUMLOC = 5
	DECMAL = NUMLOC
	CALL DSPNUM
	IF (NUMLOC.LT.1.OR.NUMLOC.GT.99) GO TO INPT15
	CALL CLRBOT
	GO TO (ANYCN1), CNGCTL
INPT16,
	CTL = '07,53,02,00,# '
	CALL DSPWRN
	CALL INPUT
	GO TO (DISPLA), INXCTL
	NUMVEN = ENTRY(1,2)
	IF (NUMVEN.EQ.0) NUMVEN = 3
	DECMAL = NUMVEN
	CALL DSPNUM
	IF (NUMVEN.LT.1.OR.NUMVEN.GT.10) GO TO INPT16
INPT17,
	CTL = '08,53,01,01,YN'
	CALL INPUT
	IF (INXCTL.EQ.2) JSTIFY = 0
	IF (INXCTL.EQ.1) JSTIFY = 1
	CALL CLRBOT
	GO TO ANYCN1
CLRBOT,
	XCALL OUTPT (9,1,2,'\',V)
	RETURN
DSPWRN,
	XCALL OUTPT (9,5,0,
&	'If you wish to use a value other than the DEFAULT value ',V)
	XCALL OUTPT (0,0,0,'you must make minor',V)
	XCALL OUTPT (10,5,0,
&	'modifications to the source code before proceeding to',V)
	XCALL OUTPT (0,0,0,' use the system.  See',V)
	XCALL OUTPT (11,5,0,
&	'the Installation Instructions in your documentation.',V)
	RETURN
CNGBR1,
	GO TO (INPT12,INPT13,INPT14,INPT15,INPT16), WHATNO
	GO TO ANYCN1
PROCS1,
	XCALL WATE (4,V)
	LOKCTL = NOABRT
	XCALL IO (2,DEVICE,41,READ,LOKCTL)			; ITMMAS
	IM1(1,3) = DEVNAM(CPNTR)
	IF (IM1(1,3).EQ.'   ') GO TO NODEV
	IM1(12,14) = CPYEXT
	LOKCTL = NOABRT
	XCALL IO (2,DEVICE,42,READ,LOKCTL)			; ITMIDX
	IM2(1,3) = DEVNAM(CPNTR)
	IF (IM2(1,3).EQ.'   ') GO TO NODEV
	IM2(12,14) = CPYEXT
	LOKCTL = NOABRT
	XCALL IO (2,DEVICE,43,READ,LOKCTL)			; INVTRX
	IM3(1,3) = DEVNAM(CPNTR)
	IF (IM3(1,3).EQ.'   ') GO TO NODEV
	IM3(12,14) = CPYEXT
	LOKCTL = NOABRT
	XCALL IO (2,DEVICE,53,READ,LOKCTL)			; PURCHS
	IM4(1,3) = DEVNAM(CPNTR)
	IF (IM4(1,3).EQ.'   ') GO TO NODEV
	IM4(12,14) = CPYEXT
	LOKCTL = NOABRT
	XCALL IO (2,DEVICE,40,READ,LOKCTL)			; INVTAG
	IM5(1,3) = DEVNAM(CPNTR)
	IF (IM5(1,3).EQ.'   ') GO TO NODEV
	IM5(12,14) = CPYEXT
	LOKCTL = NOABRT
	XCALL IO (2,DEVICE,132,READ,LOKCTL)
	IM6(1,3) = DEVNAM(CPNTR)
	IF (IM6(1,3).EQ.'   ') GO TO NODEV
	IM6(12,14) = CPYEXT
	LOKCTL = NOABRT
	XCALL IO (2,DEVICE,133,READ,LOKCTL)
	IM7(1,3) = DEVNAM(CPNTR)
	IF (IM7(1,3).EQ.'   ') GO TO NODEV
	IM7(12,14) = CPYEXT
	LOKCTL = NOABRT
	XCALL IO (2,DEVICE,134,READ,LOKCTL)
	IM8(1,3) = DEVNAM(CPNTR)
	IF (IM8(1,3).EQ.'   ') GO TO NODEV
	IM8(12,14) = CPYEXT

	FILCNT =
BLOCKS,
	INCR FILCNT
	BLKSIZ(FILCNT) = (((RECSIZ(FILCNT)+2)*(MAXCNT(FILCNT)+2))/512)+1
	IF (FILCNT.LT.8) GO TO BLOCKS
	FILCNT =
WRLOOP,
	INCR FILCNT
	IF (FILCNT.GT.8) GO TO DISPLA
	IF (MAXCNT(FILCNT).EQ.0) GO TO WRLOOP
	MAXREC = MAXCNT(FILCNT) + 1
	IF (FILCNT.EQ.1) MAXRC1 = MAXCNT(FILCNT) + 1
	IF (FILCNT.NE.1.AND.FILCNT.NE.2.AND.FILCNT.NE.7)
&		WRTREC(RECSIZ(FILCNT)-17,RECSIZ(FILCNT)) = CTLVAR
	IF (FILCNT.EQ.1) WRTREC(RECSIZ(FILCNT)-26,RECSIZ(FILCNT)) = ICTLVR
	IF (FILCNT.EQ.1) WRTREC(78,79) = DFLTLO
	IF (FILCNT.EQ.1) WRTREC(77,77) = JSTIFY
	FILE = IM(FILCNT)
	FILSIZ = BLKSIZ(FILCNT)
	XCALL OPENF (1,'O',FILBL,FILSIZ,RECSIZ(FILCNT),SWITCH)
	IF (SWITCH) GO TO NOROOM
	RECCNT = 1
	LOKCTL = 1
	XCALL IO (1,WRTREC(1,RECSIZ(FILCNT)),RECCNT,WRITE,LOKCTL)
WRBRKS,
	INCR RECCNT
	LOKCTL = 1
	XCALL IO (1,BRACKS(1,RECSIZ(FILCNT)),RECCNT,WRITE,LOKCTL)
	IF (RECCNT.LE.MAXREC) GO TO WRBRKS
	CLOSE 1
	WRTREC =
	GO TO WRLOOP
END,
	CLOSE 15
	XCALL PGMND
;******************************************************************
NODEV,
	XCALL MESAG
&	 ('ERROR--NO DEVICE SPECIFIED VIA SECURITY SYSTEM - EXITING',2)
	CLOSE 2
	XCALL PGMND
;******************************************************************
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
;*******************************************************************
ANYCNG,
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (PROCES,CNGBR), CNGCTL+1
;*******************************************************************
ANYCN1,
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (PROCS1,CNGBR1), CNGCTL+1
;*******************************************************************
DSPNUM,
	XCALL DSPLY(MAX,ROW,COL,DECMAL,1,V)
	RETURN
;*******************************************************************
CNGSYS,
	XCALL OUTPT (2,1,2,'\',1)
	XCALL OUTPT (5,16,0,
&	'DO YOU WISH TO CHANGE THE IM SYSTEM DEFAULTS ?',V)
	CTL = '05,64,01,00,YN'
	CALL INPUT
	GO TO (PROCS1), INXCTL - 1
	CTLFLG = 1
SCREEN,
	CNGCTL =
	CALL CLRBOT
	XCALL OUTPT (1,1,2,'INITIALIZE I/M FILES',V)
	XCALL OUTPT (5,20,0,'PLEASE ENTER:',V)
	XCALL OUTPT (6,25,0,'1. DEFAULT LOCATION',V)
	XCALL OUTPT (7,25,0,'2. TYPE OF I/M SYSTEM (1-4)',V)
IN12,
	CTL = '06,54,02,01,AE'
	CALL INPUT
	GO TO (SCREEN,PROCS1), INXCTL
	DFLTLO = ENTRY(1,2)
	GO TO (CHANGE), CNGCTL
IN13,
	XCALL OUTPT (9,16,2,'1 = INVENTORY MGMT',V)
	XCALL OUTPT (10,16,0,'2 = INVENTORY MGMT & CUSTOMER ORDER PROC',V)
	XCALL OUTPT (11,16,0,'3 = INVENTORY MGMT & BILL OF MATERIAL',V)
	XCALL OUTPT (12,16,0,
&	'4 = INVENTORY MGMT, CUSTOMER ORDER PROC, & BILL OF MATERIAL',V)
	CTL = '07,54,01,01,# '
	CALL INPUT
	GO TO (SCREEN), INXCTL
	TYPSYS = ENTRY(1,1)
	IF (TYPSYS.LT.1.OR.TYPSYS.GT.4) GO TO IN13
	CALL CLRBOT
CHANGE,
	CNGCTL = 2
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (SCREEN), CNGCTL
	SAVTYP = TYPSYS
	CTLFLG = 0
	XCALL WATE (4,V)
	LOKCTL = NOABRT
	XCALL IO (2,DEVICE,41,READ,LOKCTL)			; ITMMAS
	IM1(1,3) = DEVNAM(CPNTR)
	IF (IM1(1,3).EQ.'   ') GO TO NODEV
	IM1(12,14) = CPYEXT
	OPEN (1,U,IM(1))
	LOKCTL = 1
	XCALL IO (1,WRTREC,1,READ,LOKCTL)
	XCALL RSTAT (SIZE,TERM)
	RECSIZ(1) = SIZE
	ICTLVR = WRTREC (SIZE-26,SIZE)
	TYPSYS = SAVTYP
	WRTREC (SIZE-26,SIZE) = ICTLVR
	WRTREC(78,79) = DFLTLO
	LOKCTL = 1
	XCALL IO (1,WRTREC(1,SIZE),1,WRITE,LOKCTL)
	CLOSE 1
	GO TO PROCS1
NOROOM,
	XCALL MESAG ('NO ROOM ON DEVICE FOR IM FILES',1)
	GO TO DISPLA
END
