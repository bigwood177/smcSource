;SYNCIM.CP	isam
;
;	Update Rockford Inventory prices from SMC.
;	8-23-05 update costs
;	1-14-10 descriptions.
;	1-7-19 weights

RECORD	ITMMAS
	.INCLUDE 'DEF:RD041A.DEF'

RECORD	ITMKEY
	.INCLUDE 'DEF:RD041K.DEF'


RECORD	SYNC		;+13, +17
	S_ITEM	,A15
	S_MAT	,A1
	S_F1	,A3
	S_F2	,A3
	S_F3	,A5
		,A1
	S_DESCR	,A30	;+31
		,A1
	S_PRICE	,D9
		,A1
	S_AVGCST,D9
		,A1
	S_LSTCST,D9
		,A1
	S_REC	,D6
		,A1
	S_SUOFM	,A2
		,A1
	S_BOCODE	,D1		; BACK ORDER CODE
		,A1
	S_TXFLAG	,A1		; TAX FLAG
		,A1
	S_FTBNDL	,D3		; FT/BUNDLE
		,A1
	S_FTCASE	,D4		; FT/CASE
		,A1
	S_INN	,D1		; 1 = NO NOTES, SET IF1, IF2, IF3 TO ZEROS
		,A1
	S_IPIC	,A6		; PICTURE NUMBER FOR PRODUCT LABELS
		,A1
	S_ICFG	,D1		; 1 = CFG ITEM, 2 = REGULAR ITEM
		,A1
	S_IBXQTY	,D4		; QTY PER BOX
		,A1
	S_IBXSIZ	,A8		; BOX DIMENSIONS
		,A1
	S_IGA	,D2		; GUAGE
		,A1
	S_IMDPT	,A2		; MFG DEPT
		,A1
	S_IMAT2	,A3		; MAT FOR PRICE/LB PRICING
		,A1
	S_PRCOD	,A3		; PRICE CODE
		,A1
	S_FLAG	,D1	;0=REG, 1=]]]DEL, 2=PROCESSED, 3=UPDATED ROC

		,A1
	S_PRDCAT,A2	;4-11-11
		,A1
	S_WEIGHT	,D6		; ITEM WEIGHT	(X,XXX.XX)
		,A1
	S_IP_WGT	,D6		; PRODUCTION WEIGHT (Z,ZZX.XX)
		,A1
	S_IP_UM	,A2		; PRODUCTION WEIGHT U OF M

RECORD,X
	S_KEY	,A27

RECORD	ERROR
	ER_ITEM	,A27
		,A1
	ER_MSG	,A30

RECORD	DIS
	II	,D5

RECORD	CHANNEL
	ROC041	,D2
	ROC042	,D2
	SMC041	,D2
	SMC042	,D2
	CHNSYN	,D2
	CHNERR	,D2
;
RECORD	VARS
	OPNOK	,D1
	RECNO	,D6
	CNGD	,D1	;1=IMPORTANT FIELD CHANGED, UPDATE ROC..
;
PROC
	OPEN(15,I,'TT:')
;;;	DISPLAY(15,$SCR_CLR(SCREEN),'SYNCIM')
	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF

	CALL CLEAR_SYNC
	CALL READ_SMC
	CALL UPDATE_ROC

ENDOFF,
	CALL CLOSE
	XCALL FLAGS(7000000)
	STOP

CLEAR_SYNC,	;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; CLEAR SYNCIM.ISM FILE
		;;;;;;;;;;;;;;;;;;;;;;;;;

	FIND (CHNSYN, SYNC, ^FIRST) [ERR=CS_EOF]
	DO FOREVER
		BEGIN
		READS (CHNSYN, SYNC, CS_EOF)
		DELETE (CHNSYN)
		END
CS_EOF,
	RETURN
;----------------------------------------
READ_SMC,	;;;;;;;;;;;;;;;;;;;;;;;;;
	RECNO = 1
	READ (SMC041, ITMMAS, ^FIRST)		;FIRST RECORD
	DO FOREVER
		BEGIN
		READS (SMC041, ITMMAS, RS_EOF)
		IF(ITMMAS .EQ. ']]]]]]') GOTO RS_EOF
		INCR RECNO
		S_DESCR = DESCR		;SSQ 1-14-10
		S_SUOFM = SUOFM		;SSQ 4-5-06
		S_ITEM = ITEMNO
		S_PRICE = PRICE
		S_AVGCST = AVGCST	;SSQ 8-23-05
		S_LSTCST = LSTCST	;SSQ 8-23-05
		S_REC = RECNO
		S_MAT = IMAT
		S_F1 = IF1
		S_F2 = IF2
		S_F3 = IF3

		S_BOCODE = BOCODE		; BACK ORDER CODE
		S_TXFLAG = TXFLAG		; TAX FLAG
		S_FTBNDL = FTBNDL		; FT/BUNDLE
		S_FTCASE = FTCASE		; FT/CASE
		S_INN = INN			; 1 = NO NOTES, SET IF1, IF2, IF3 TO ZEROS
		S_IPIC = IPIC			; PICTURE NUMBER FOR PRODUCT LABELS
		S_ICFG = ICFG			; 1 = CFG ITEM, 2 = REGULAR ITEM
		S_IBXQTY = IBXQTY		; QTY PER BOX
		S_IBXSIZ = IBXSIZ		; BOX DIMENSIONS
		S_IGA = IGA			; GUAGE
		S_IMDPT = IMDPT			; MFG DEPT
		S_IMAT2 = IMAT2			; MAT FOR PRICE/LB PRICING
		S_PRCOD = PRCOD			; PRICE CODE
		S_PRDCAT = PRDCAT		; PRDCAT 4-11-11
		S_WEIGHT = WEIGHT		; WEIGHT 1-7-19
		S_IP_WGT = IP_WGT		; PROD WEIGHT 1-7-19
		S_IP_UM = IP_UM			; PROD WEIGHT UM 1-7-19
		IF(DESCR.EQ.']]]DEL')
		THEN	S_FLAG = 1
		ELSE	BEGIN
			S_FLAG = 0
		;;;	STORE (CHNSYN, SYNC, S_ITEM)
			STORE (CHNSYN, SYNC, S_KEY)
			END
		END
RS_EOF,
	RETURN
;----------------------------------------

UPDATE_ROC,	;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	RECNO = 1
;;;	ITEMNO = '!!!!!!!!!!!!!!!'
;;;	READ (ROC041, ITMMAS, ITEMNO) [ERR=UR_LOOP]

	FIND (ROC041, ITMMAS, ^FIRST) [ERR=UR_LOOP]
UR_LOOP,
	READS (ROC041, ITMMAS, UR_EOF)
	IF (ITMMAS .EQ. ']]]]]]') GOTO UR_EOF

	CLEAR ITMKEY
	K_ITEM = ITEMNO
	K_MAT = IMAT
	K_F1 = IF1
	K_F2 = IF2
	K_F3 = IF3

	READ (CHNSYN, SYNC, ITMKEY) [ERR=NOF]
	IF(S_FLAG .EQ. 0)
		BEGIN
		S_FLAG = 2


	;;;	IF (PRICE .NE. S_PRICE)
	;;;	IF (PRICE.NE.S_PRICE .OR. AVGCST.NE.S_AVGCST .OR. LSTCST.NE.S_LSTCST)
	;;;	IF (PRICE.NE.S_PRICE .OR. AVGCST.NE.S_AVGCST .OR. 
	;;;& 		LSTCST.NE.S_LSTCST .OR. SUOFM.NE.S_SUOFM)

		CLEAR CNGD
		IF (PRICE  .NE. S_PRICE)  CNGD = 1
		IF (AVGCST .NE. S_AVGCST) CNGD = 1
		IF (LSTCST .NE. S_LSTCST) CNGD = 1
		IF (SUOFM  .NE. S_SUOFM)  CNGD = 1
		IF (DESCR  .NE. S_DESCR)  CNGD = 1

		IF (BOCODE .NE. S_BOCODE) CNGD=1		; BACK ORDER CODE
		IF (TXFLAG .NE. S_TXFLAG) CNGD=1		; TAX FLAG
		IF (FTBNDL .NE. S_FTBNDL) CNGD=1		; FT/BUNDLE
		IF (FTCASE .NE. S_FTCASE) CNGD=1		; FT/CASE
		IF (INN .NE. S_INN) CNGD=1			; 1 = NO NOTES, SET IF1, IF2, IF3 TO ZEROS
		IF (IPIC .NE. S_IPIC) CNGD=1			; PICTURE NUMBER FOR PRODUCT LABELS
		IF (ICFG .NE. S_ICFG) CNGD=1			; 1 = CFG ITEM, 2 = REGULAR ITEM
		IF (IBXQTY .NE. S_IBXQTY) CNGD=1		; QTY PER BOX
		IF (IBXSIZ .NE. S_IBXSIZ) CNGD=1		; BOX DIMENSIONS
		IF (IGA .NE. S_IGA) CNGD=1			; GUAGE
		IF (IMDPT .NE. S_IMDPT) CNGD=1			; MFG DEPT
		IF (IMAT2 .NE. S_IMAT2) CNGD=1			; MAT FOR PRICE/LB PRICING
		IF (PRCOD .NE. S_PRCOD) CNGD=1			; PRICE CODE
		IF (PRDCAT.NE. S_PRDCAT) CNGD = 1		; PRDCAT 4-11-11
		IF (WEIGHT .NE. S_WEIGHT) CNGD = 1		; WEIGHT 1-7-19
		IF (IP_WGT .NE. S_IP_WGT) CNGD = 1		; PROD WEIGHT 1-7-19
		IF (IP_UM .NE. S_IP_UM) CNGD = 1		; PROD WEIGHT UM 1-7-19
		IF (CNGD .EQ. 1)
			BEGIN
			SUOFM = S_SUOFM
			PRICE = S_PRICE
			AVGCST = S_AVGCST
			LSTCST = S_LSTCST
			DESCR = S_DESCR

			BOCODE = S_BOCODE		; BACK ORDER CODE
			TXFLAG = S_TXFLAG		; TAX FLAG
			FTBNDL = S_FTBNDL		; FT/BUNDLE
			FTCASE = S_FTCASE		; FT/CASE
			INN = S_INN			; 1 = NO NOTES, SET IF1, IF2, IF3 TO ZEROS
			IPIC = S_IPIC			; PICTURE NUMBER FOR PRODUCT LABELS
			ICFG = S_ICFG			; 1 = CFG ITEM, 2 = REGULAR ITEM
			IBXQTY = S_IBXQTY		; QTY PER BOX
			IBXSIZ = S_IBXSIZ		; BOX DIMENSIONS
			IGA = S_IGA			; GUAGE
			IMDPT = S_IMDPT			; MFG DEPT
			IMAT2 = S_IMAT2			; MAT FOR PRICE/LB PRICING
			PRCOD = S_PRCOD			; PRICE CODE
			PRDCAT = S_PRDCAT		; PRDCAT 4-11-11
			WEIGHT = S_WEIGHT		; WEIGHT 1-7-19
			IP_WGT = S_IP_WGT		; PROD WEIGHT 1-7-19
			IP_UM = S_IP_UM			; PROD WEIGHT UM 1-7-19

			WRITE (ROC041, ITMMAS, ITEMNO)
			S_FLAG = 9
			END
		WRITE (CHNSYN, SYNC, ITMKEY)
		END
	GOTO UR_LOOP
NOF,
	CLEAR ITMKEY
	K_ITEM = ITEMNO
	K_MAT = IMAT
	K_F1 = IF1
	K_F2 = IF2
	K_F3 = IF3

	ER_ITEM = ITMKEY
	ER_MSG = 'Not found in SYNC file'
	WRITES(CHNERR,ERROR)
	GOTO UR_LOOP

UR_EOF,
	FIND (CHNSYN, SYNC, ^FIRST) [ERR=URE_EOF]
	DO FOREVER
		BEGIN
		READS (CHNSYN, SYNC, URE_EOF)
		USING S_FLAG SELECT
		(0),	CALL ADD_ITEM
		ENDUSING

		IF (S_FLAG .LT. 2)
			BEGIN
			ER_ITEM = S_KEY
		;;;	ER_MSG = 'Did not update Rockford'
			IF (S_FLAG.EQ.1) ER_MSG(25,30) = 'DELETE'
			WRITES (CHNERR, ERROR)
			END
		END
URE_EOF,
	RETURN
;----------------------------------------

ADD_ITEM,	;;;;;;;;;;;;;;;;;;;;;;;;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	READ (SMC041, ITMMAS, S_REC) [ERR=E1]		;NOT IN ROCKFORD ITMMAS
;;;	READ (ROC041, ITMCTL, 1) [ERR=E2]
;;;
;;;	INCR REC041
;;;	CLEAR USEMTD, USEYTD, QTYMTD, QTYYTD, SLSMTD, SLSYTD,
;;;&		CSTMTD, CSTYTD, QTYONH, QTYONO, QTYCOM
;;;
;;;	WRITE (ROC041,ITMMAS, REC041) [ERR=E3]
;;;	WRITE (ROC041, ITMCTL, 1) [ERR=E4]
;;;
;;;	IITMNO = ITEMNO
;;;	IRC041 = REC041
;;;	IPRCAT = PRDCAT
;;;	WRITE (ROC042, ITMIDX, REC041) [ERR=E5]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	READ (SMC041, ITMMAS, S_KEY, keynum:1) [ERR=E1]

	CLEAR USEMTD, USEYTD, QTYMTD, QTYYTD, SLSMTD, SLSYTD,
&		CSTMTD, CSTYTD, QTYONH, QTYONO, QTYCOM

	STORE (ROC041, ITMMAS, ITEMNO) [ERR=E3]

	S_FLAG = 3			;WROTE NEW ROCKFORD RECORD
	RETURN
;----------------------------------------
E1,
	ER_MSG = 'Could not read SMC itmmas'
	RETURN
E2,
	ER_MSG = 'Could not read ROC header'
	RETURN
E3,
	ER_MSG = 'Could not write ROC itmmas'
	RETURN
E4,
	ER_MSG = 'Could not write ROC header'
	RETURN
E5,
	ER_MSG = 'Could not write ROC itmidx'
	RETURN
;----------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLOSE SMC041
	CLOSE ROC041
	CLOSE CHNSYN
	CLOSE CHNERR

	RETURN
;----------------------------------------

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	OPEN(1,SI,'SMC:ITMMAS.SMM')
	SMC041 = 1

	OPEN(3,SU,'ROC:ITMMAS.ROM')
;;;	OPEN(3,SU,'TST:ITMMAS.TSM')
	ROC041 = 3

	OPEN(5,SU,'SMC:SYNCIM.ISM')
	CHNSYN = 5

	OPEN(6,O,'SMC:SYNCIM.ERR')
	CHNERR = 6

	OPNOK = 1
	RETURN
;----------------------------------------
