SUBROUTINE X_INPT ; (W_ID,ROW,COL,INMAX,MIN,INTYPE,ENTRY,INXCTL)
;
;
;
;		STANDARD ROUTINE TO INPUT & EDIT
;		DATA FROM THE VIDEO TERMINAL IN A WINDOW ENVIRONMENT
;
	W_ID	,D	; WINDOW NUMBER ID
	ROW	,D	; WINDOW ROW
	COL	,D	; WINDOW COLUMN
	INMAX	,D	; MAXIMUM # OF CHARACTERS ALLOWED
	MIN	,D	; MINIMUM # OF CHARACTERS ALLOWED
	INTYPE	,A	; TYPE OF DATA INPUT (SEE BELOW)
	ENTRY	,A	; FIELD DATA IS PASSED BACK IN
	INXCTL	,D	; CONTROLS POST EXECUTION BRANCH

	.DEFINE POOLSIZE	,25000
	.DEFINE WNDCHNL		,15
	.DEFINE MAXWINS		,5
	.INCLUDE 'def:WINDOWS.DEF'

RECORD DOTS
		,A50,	'..................................................'
		,A30,	'..............................'

RECORD	VARS			; WORK FIELDS
	F_KEY	,D3	; OPTIONAL FUNCTION KEY 
	SAVE_ENTRY	,A60
	STAT	,D1
	DEC1	,D3
	D1	,D1
	D3	,D3
	CHAR	,D2
	COL2	,D2
	DECMAL	,D18
	TCHAR	,D3
	TYPE	,A2
	MAX	,D2
	SAVMAX	,D2
	SYSTEM	,D1
	SAV_COL	,D2

			;ALPHA ONLY
			; ***** TYPE CODES *****
			;	"A " = ALPHANUMERIC
			;	"?E" = WHEN "E" IS SECOND CHARACTER OF ANY TYPE,
			;	       THAT FIELD WILL TAKE "END"
			;	"?T" = ALLOWS TAB FOR TERM CHAR & SETS INXCTL = 3

			; ***** INXCTL RETURN CODES *****
			;	0 = INPUT OK, NO MESSAGE
			;	1 = "Y" ANSWER TO YES/NO TYPE FIELD OR ABORT RECORD
			;	2 = "N" ANSWER TO YES/NO TYPE FIELD, OR
			;	    "END" HAS BEEN TYPED IF "?E" TYPE FIELD
			;	3 = TAB KEY USED TO DEFAULT ON "?T" TYPE FIELD
PROC
	TYPE = INTYPE			; REASSIGN TO VARIABLE SO A LITERAL CAN BE PASSED IN
	SAVE_ENTRY = ENTRY

	XCALL FLAGS (10000000)		; RELEASE VERSION

	IF (TYPE(1,1).EQ.'L') XCALL FLAGS (10000010)
	SAVMAX = INMAX
	SYSTEM = 1

	XCALL W_DISP(W_ID,WD_POS,ROW,COL,ENTRY)
CLRLIN,
	MAX = SAVMAX
	INXCTL =
	CHAR =
	XCALL W_DISP(W_ID,WD_MOVE,0,-(MAX+1))
	SAV_COL = COL-1
INPUT1,
	INCR SAV_COL
	INCR CHAR
INPUT2,
	XCALL W_DISP(W_ID,WD_ACCEPT,TCHAR) ; INPUT 1 DECIMAL CHARACTER AT A TIME
	IF (TCHAR.EQ.27)  GO TO ESCAPE	; TEST ESCAPE SEQ
	IF (TCHAR.EQ.127) GO TO DELETE	; DELETE KEY
	IF (TCHAR.EQ.21)  GO TO CLRLIN	; CTRL/U - ERASE LINE
	IF (TCHAR.EQ.23)  GO TO RESTRT	; CTRL/W - ABORT RECORD
	IF (TCHAR.EQ.13)  GO TO ACPTLF	; CARRIAGE RETURN
	IF (TCHAR.EQ.9)   GO TO DEFALT	; TAB DEFAULT OPTION
	IF (TCHAR.EQ.8)   GO TO ENDFLD	; BACK SPACE OPTION = 'END'
	IF (TCHAR.LT.32.OR.TCHAR.GT.122) GO TO INPUT2	; IGNORES INVALID CHARACTERS
	IF (TCHAR.EQ.45.AND.TYPE(2,2).EQ.'-'.AND.SAVMAX.EQ.MAX) MAX = MAX + 1 ;TEST FOR MINUS
	IF (CHAR.GT.MAX) GO TO TOOLNG
	XCALL ASCII (TCHAR,ENTRY(CHAR,CHAR))	; CONVERTS CHARACTERS TO ASCII
	GO TO INPUT1

;-----------------------------------------------
ESCAPE,
	XCALL FLAGS (10000,1)
	DO	BEGIN
		XCALL TTSTS (STAT)
		IF (STAT) ACCEPT (15,DEC1)
		END
	UNTIL (STAT .EQ. 0)
	XCALL FLAGS (10000,0)
	F_KEY = DEC1
	IF (F_KEY .EQ. 67) GOTO RT_A
	IF (F_KEY .EQ. 68) GOTO LF_A
	RETURN
;----------------------------------------

DELETE,					; ERASES 1 CHARACTER ON SCREEN & IN CORE
	IF (CHAR.EQ.1) GO TO INPUT2
	CHAR = CHAR-1
	SAV_COL = SAV_COL-1
	ENTRY(CHAR,CHAR) =

	XCALL W_DISP(W_ID,WD_MOVE,0,-1)
	XCALL W_DISP(W_ID,WD_POS,ROW,SAV_COL,'.')
	XCALL W_DISP(W_ID,WD_MOVE,0,-1)

	GO TO INPUT2
RESTRT,					; SETS INXCTL TO 1 FOR ABORT/RESTART
	INXCTL = 1
	GO TO RETRN
ACPTLF,
	IF (SYSTEM.NE.1) XCALL W_DISP(W_ID,WD_ACCEPT,TCHAR)
	IF (%PASSED(F_KEY) ) F_KEY = 13
ENDFLD,					; BRANCH FOR EDITING AFTER CR
	IF (TCHAR.EQ.8.AND.TYPE(2,2).NE.'E'.AND.TYPE(2,2).NE.'X') GO TO INPUT2
	IF (TCHAR.EQ.8.AND.(TYPE(2,2).EQ.'E'.OR.TYPE(2,2).EQ.'X')) 
		BEGIN
		INXCTL = 2
		XCALL W_DISP(W_ID,WD_POS,ROW,COL,'END')
		XCALL W_UPDT
		GOTO RETRN
		END
	IF (INXCTL.EQ.2) GO TO RETRN
	IF (CHAR-1.LT.MIN) GO TO TOSHRT	; TEST FOR TOO SHORT
	GO TO RETRN

DEFALT,			; SETS INXCTL = 3 WHEN TERM CHAR IS TAB & TYPE = "?T"
	IF (ENTRY.NE.'   '.OR.(TYPE(2,2).NE.'T'.AND.
&		TYPE(2,2).NE.'X')) GO TO INPUT2
	INXCTL = 3
	GO TO RETRN
TOOLNG,					; ENTRY TOO LONG
	DISPLAY (15,7,7)
	COL2 = COL + CHAR - 1
	GO TO CLRLIN
TOSHRT,					; ENTRY TOO SHORT
	GO TO CLRLIN

RT_A,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; RIGHT ARROW
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (CHAR.GE.MAX) GO TO INPUT2
	CHAR = CHAR+1
	SAV_COL = SAV_COL+1
	XCALL W_DISP(W_ID,WD_MOVE,0,1)
	GO TO INPUT2
;-------------------------------------------

LF_A,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; LEFT ARROW
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (CHAR.EQ.1) GO TO INPUT2
	CHAR = CHAR-1
	SAV_COL = SAV_COL-1
	XCALL W_DISP(W_ID,WD_MOVE,0,-1)
	XCALL W_DISP(W_ID,WD_POS,ROW,SAV_COL,'.')
	XCALL W_DISP(W_ID,WD_MOVE,0,-1)

	GO TO INPUT2
;-------------------------------------------

RETRN,
	IF (TYPE(1,1).EQ.'L') XCALL FLAGS (10000000)
	RETURN
