;DPTPCK.CP	- ORDER PACKED
;
EXTERNAL FUNCTION
	GU_NAME	,A

RECORD	ORDHDR
	.INCLUDE 'DEF:RD044A.DEF'

RECORD	ORDLIN
	.INCLUDE 'DEF:RD045A.DEF'

RECORD	SALMAN
	.INCLUDE 'DEF:RD054A.DEF'

RECORD	COPTBL
	.INCLUDE 'DEF:RD182A.DEF'

RECORD	DPTSTS
	.INCLUDE 'DEF:RD193A.DEF'

RECORD	DUCACC
	.INCLUDE 'DEF:RD175A.DEF'

RECORD	HLINE
	,A*,'DATE ENTERED  SALESMAN   EXT  PO NUMBER  JOB NUMBER  SHIP VIA'

RECORD	HLINE2
;;;	,A*,'  DEPARTMENT           STATUS   COMMENT'
	,A*,'  DEPARTMENT           COMPLT   PACKED   COMMENT'

RECORD	DPT_DATA
	DPTARA	,20A2
	NUMDPT	,D2

RECORD	CHANNEL
	CHN044	,D2
	CHN045	,D2
	CHN054	,D2
	CHN175	,D2
	CHN182	,D2
	CHN193	,D2

RECORD	VARS
	GOTP	,D1
	GOTO	,D1
	UNAME	,A25
	I	,D5
	OLDSTS	,D1
	XDATE	,D8
	D_LINE	,A63
	DCHAR	,D3
	TCHAR	,D3
	OPNOK	,D1
	XORD	,D6
	ROW	,D2
	COL	,D2
	ENTRY	,A30
	INXCTL	,D1
	CNGCTL	,D1
	WHATNO	,D2
	WDEPT	,A2
	LOKCTL	,D1

	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	SWITCH	,D1
	V	,D1

.PROC
	XCALL TERID (V)
	UNAME = %GU_NAME
	UPCASE UNAME
	
	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF

DISPLA,
	CLEAR CNGCTL
	XCALL OUTPT (1,1,2,'ORDER PACKING STATUS',1)
	XCALL OUTPT (3,4,0,'ORDER #',1)
	XCALL INPUT (3, 14, 06, 00 , '#E', ENTRY, INXCTL, 1)
	GOTO (DISPLA, ENDOFF), INXCTL
	XORD = ENTRY(1,6)

	CALL GETORD
	IF (LOKCTL) GOTO DISPLA

	CALL DSPDPT

ANYCN,
	XCALL OUTPT (24,1,1,'DEPT TO CHANGE:         ',1)
	XCALL INPUT (24, 19, 02, 00, 'AE' ,ENTRY, INXCTL, 1)
	GOTO (DISPLA, PROCES), INXCTL
	WDEPT = ENTRY(1,2)
	IF (WDEPT .EQ. '  ') GOTO DISPLA

	FOR I FROM 1 THRU NUMDPT	IF (WDEPT .EQ. DPTARA(I))
						BEGIN
						CALL CNGDPT
						EXITLOOP
						END
	GOTO ANYCN

CNGDPT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	S_ORDN = OORDNO
	S_DEPT = WDEPT(1,1)
	XCALL ISIO (CHN193, DPTSTS, S_KEY, READ, LOKCTL)
	IF (LOKCTL) RETURN

	ROW = I + 8
	IF (S_PACK .EQ. 1)
		BEGIN
		S_PACK = 0
		XCALL OUTPT (ROW, 33, 0, 'OPEN  ', 1)
	;;;	CLEAR S_COMM
		XCALL ISIO (CHN193, DPTSTS, S_KEY, WRITE, LOKCTL)
		RETURN
		END

	S_PACK = 1
	XCALL OUTPT (ROW, 33, 0, 'PACKED', 1)
	COL = 62
	CALL ACCEPT
	IF (TCHAR .EQ. 9) 		;<TAB>
		BEGIN
		XCALL INPUT (ROW, 42, 20, 00, 'A ', ENTRY, INXCTL, 1)
		IF (INXCTL .EQ. 0) 	S_COMM = ENTRY(1,20)
		END
	XCALL ISIO (CHN193, DPTSTS, S_KEY, WRITE, LOKCTL)

	RETURN
;---------------------------------------------------------


PROCES,
	GOTO DISPLA

ENDOFF,
	CALL CLOSE
	IF (UNAME(1,5) .EQ. 'PLANT')
		BEGIN
		XCALL PGCHN('CP:SHPMNU')
		END
	XCALL PGCHN ('CP:CPLMNU',1)
	
DSPDPT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL OUTPT (8,1,1,HLINE2,1)
	CLEAR GOTP, GOTO
	READ (CHN175, DUCACC, OORDNO) [ERR=FNDDUC]
FNDDUC,
	WHILE (DUCTOR .EQ. OORDNO)
		BEGIN
		USING STY SELECT
		(1,4,5),	GOTP=1
		(2,3,6),	GOTO=1
		ENDUSING
		READS(CHN175, DUCACC, EOF_FDD)
		END
EOF_FDD,	
	CLEAR DPTSTS
	S_ORDN = OORDNO
	IF(GOTP)
		BEGIN
		S_DEPT(1,1) = 'P'
		XCALL ISIO (CHN193, DPTSTS, S_KEY, STORE, LOKCTL)
		END

	IF(GOTO)
		BEGIN
		S_DEPT(1,1) = 'O'
		XCALL ISIO (CHN193, DPTSTS, S_KEY, STORE, LOKCTL)
		END
;;;	FIND (CHN175, DUCACC, OORDNO) [ERR=FNDLIN]
;;;	CLEAR DPTSTS
;;;	S_ORDN = OORDNO
;;;	S_DEPT = 'O'
;;;	XCALL ISIO (CHN193, DPTSTS, S_KEY, STORE, LOKCTL)
FNDLIN,
	FIND (CHN045, ORDLIN, OORDNO) [ERR=NXTLIN]
NXTLIN,
	XCALL IOS (CHN045, ORDLIN, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO EOF_LIN
	IF (LORDNO .NE. OORDNO) GOTO EOF_LIN
	IF (LTYPE .EQ. 'M') GOTO NXTLIN		;SKIP MEMOS
	IF (S_DEPT .EQ. '**') GOTO NXTLIN		;6-21-17 HEADER

; create a DPTSTS record for every dept in order.  If there are
; already records in DPTSTS file, they will not be over-written.
	CLEAR DPTSTS
	S_ORDN = LORDNO
	S_DEPT = LDEPT(1,1)
	XCALL ISIO (CHN193, DPTSTS, S_KEY, STORE, LOKCTL)
;;;	STORE (CHN193, DPTSTS, S_KEY)
	GOTO NXTLIN

EOF_LIN,
	CLEAR DPT_DATA
	ROW = 8
	NUMDPT = 0
	FIND (CHN193, DPTSTS, OORDNO) [ERR=NXTDPT]
NXTDPT,
	XCALL IOS (CHN193, DPTSTS, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO EOF_DPT
	IF (S_ORDN .NE. OORDNO) GOTO EOF_DPT
	IF (S_DEPT .EQ. '**') GOTO NXTDPT		;6-21-17 HEADER

	CLEAR TBL_KEY
	TBLCOD = 'DD'
;;;	DD_DEPT = S_DEPT	
	DD_DEPT = S_DEPT(1,1)
	XCALL ISIO (CHN182, COPTBL, TBL_KEY, READ, LOKCTL)
	IF (LOKCTL) DD_DESC = '* NOT ON FILE *'

	D_LINE(3,4) = DD_DEPT
	D_LINE(6,20) = DD_DESC
	USING S_STAT SELECT
	(0),	D_LINE(24,28) = 'OPEN '
	(1),	D_LINE(24,28) = 'COMPL'
	ENDUSING

	USING S_PACK SELECT
	(0),	D_LINE(33,38) = 'OPEN  '
	(1),	D_LINE(33,38) = 'PACKED'
	ENDUSING

	D_LINE(42,61) = S_COMM
	INCR ROW
	XCALL OUTPT (ROW, 1, 0, D_LINE, 1)
	IF (S_PACK) XCALL XYB(ROW,33,'PACKED')

	INCR NUMDPT
	DPTARA(NUMDPT) = S_DEPT
	GOTO NXTDPT
;  DEPARTMENT           COMPLT   PACKED   COMMENT'
;                       OPEN     PACKED   AAA
;123456789012345678901234567890123456789012345678901234567890
;         1         2         3         4         5         6
EOF_DPT,
	RETURN
;---------------------------------------------------------


GETORD,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL ISIO (CHN044, ORDHDR, XORD, READ, LOKCTL)
	IF (LOKCTL)
		BEGIN
		XCALL MESAG ('ORDER NOT ON FILE',1)
		RETURN
		END
	XCALL IO (CHN054, SALMAN, OSLMAN, READ, LOKCTL)
	IF (LOKCTL) CLEAR SALMAN

	XCALL OUTPT (3,23,0,OCUSNM,1)
	XCALL OUTPT (5,1,0,HLINE,1)

	XDATE(1,4) = OORDDT(5,8)
	XDATE(5,8) = OORDDT(1,4)
	ENTRY(1,10) = XDATE,	'XX/XX/XXXX'
	XCALL OUTPT (6,3,0,ENTRY(1,10),1)

;;;	XCALL OUTPT (6,15,0,SLSNM(1,10),1)
	XCALL XYB(6,15,SLSNM(1,10))
	ENTRY(1,3) = SLSTNO,'XXX'
	XCALL XYB(6,26,ENTRY(1,3))
;;;	XCALL OUTPT (6,26,0,ENTRY(1,3),1)

	XCALL OUTPT (6,31,0,OPONO,1)
	XCALL OUTPT (6,42,0,OJOBNO,1)
	
	TBLCOD = 'SC'
	SC_SCAC = OSCAC
	XCALL ISIO (CHN182, COPTBL, TBL_KEY, READ, LOKCTL)
	IF (LOKCTL) SC_NAME = '* NOT ON FILE *'
	XCALL OUTPT (6,54,0,SC_NAME,1)


	RETURN
;---------------------------------------------------------

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK

	SWITCH = 5
	XCALL FILES (4, 'SI', 044, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN044 = 4

	XCALL FILES (5, 'SI', 045, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN045 = 5

	XCALL FILES (6, 'I', 054, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN054 = 6

	XCALL FILES (7, 'SI', 175, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN175 = 7

	XCALL FILES (8, 'SI',  182, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN182 = 8 

	XCALL FILES (9, 'SU', 193, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN193 = 9

	OPNOK = 1
	RETURN
;---------------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	IF (CHN044) CLOSE CHN044
	IF (CHN045) CLOSE CHN045
	IF (CHN054) CLOSE CHN054
	IF (CHN175) CLOSE CHN175
	IF (CHN193) CLOSE CHN193

	RETURN
;---------------------------------------------
ACCEPT,
	XCALL FLAGS (00010000,1)
	XCALL OUTPT (ROW,COL,0,'\',1)
	ACCEPT (15,TCHAR)
	IF (TCHAR.EQ.10) GOTO ACCEPT
	IF (TCHAR.EQ.13) ACCEPT (15,DCHAR)
	XCALL FLAGS (00010000,0)
	RETURN
.END

.SUBROUTINE XYB
	X	,D
	Y	,D
	TEXT	,A

.PROC
	DISPLAY (15, $SCR_ATT(REVERSE), $SCR_POS(X,Y), TEXT)
;;;	DISPLAY (15, $SCR_ATT(BOLD), $SCR_POS(X,Y), TEXT)
	DISPLAY (15, $SCR_ATT(CLEAR))
	RETURN
.END

