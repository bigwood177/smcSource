;winne.cp
SUBROUTINE WINne ; (W_ID,ROW,COL,INMAX,MIN,INTYPE,ENTRY,INXCTL,F_KEY)
;
;
;
;		STANDARD ROUTINE TO INPUT & EDIT
;		DATA FROM THE VIDEO TERMINAL IN A WINDOW ENVIRONMENT
;
	W_ID	,D	; WINDOW NUMBER ID
	ROW	,D	; WINDOW ROW
	COL	,D	; WINDOW COLUMN
	INMAX	,D	; MAXIMUM # OF CHARACTERS ALLOWED
	MIN	,D	; MINIMUM # OF CHARACTERS ALLOWED
	INTYPE	,A	; TYPE OF DATA INPUT (SEE BELOW)
	ENTRY	,A	; FIELD DATA IS PASSED BACK IN
	INXCTL	,D	; CONTROLS POST EXECUTION BRANCH
	F_KEY	,D	; OPTIONAL FUNCTION KEY 

	.DEFINE POOLSIZE	,25000
	.DEFINE WNDCHNL		,15
	.DEFINE MAXWINS		,5
	.INCLUDE 'def:WINDOWS.DEF'


RECORD	D_STUFF
	D_OUT	,D6
	D_OUTR	,D8
	D_FMT	,A10
	D_SW	,A2

RECORD DOTS
		,A50,	'..................................................'
		,A30,	'..............................'

RECORD	VARS			; WORK FIELDS
	end	,d1	;1 = end key allowed
	IS_FKEY	,D1
	STAT	,D1
	DEC1	,D3
	D1	,D1
	D3	,D3
	CHAR	,D2
	COL2	,D2
	DATE8	,D8
	DECMAL	,D18
	TCHAR	,D3
	TYPE	,A2
	MAX	,D2
	SAVMAX	,D2
	SYSTEM	,D1
	SAV_COL	,D2

			; ***** TYPE CODES *****
			;	"A " = ALPHANUMERIC
			;	"L " = ALPHANUMERIC UPPER AND LOWER CASE
			;	"D " = DATE, EDITED FOR VALID DAY & MONTH
			;	       & REDISPLAYED IN MM/DD/YY FORMAT
			;	"# ' = NUMERIC, POSITIVE ONLY
			;	"#-" = NUMERIC, POSITIVE OR NEGATIVE
			;	"#N" = NUMERIC, DISPLAY ONLY 1 BLANK AFTER DOTS
			;	"N " = SAME AS # BUT DOESN'T DISPLAY DEFAULT 0 VALUE
			;	"NN" = SAME AS N BUT DISPLAY ONLY 1 BLANK AFTER DOTS
			;	"C " = ACCEPT CR ONLY - SETS MAX TO 0
			;	"$ " = DOLLAR FIELD, POSITIVE ONLY
			;	"$-" = DOLLAR FIELD, POSITIVE OR NEGATIVE
			;	       BOTH $ TYPES DISPLAYED IN
			;	       FORMAT "ZZ,ZZZ,ZZZ,ZZZ.XX"
			;	"H " = HOURS FIELD, PROCESSED SAME AS $ FIELD
			;	"?E" = WHEN "E" IS SECOND CHARACTER OF ANY TYPE,
			;	       THAT FIELD WILL TAKE "END"
			;	"?T" = ALLOWS TAB FOR TERM CHAR & SETS INXCTL = 3
			;	"?X" = ALLOWS TAB OR END AS IN ?E AND ?T ABOVE
			;	"YN" = YES/NO ANSWERS, ACCEPTS ONLY "Y" OR "N"
			;	"YE" = YES/NO/END ANSWERS, ALLOWS END IN Y/N
			;	"YY" = YES/NO ANSWERS, DEFAULT TO "Y" ON CR

			; ***** INXCTL RETURN CODES *****
			;	0 = INPUT OK, NO MESSAGE
			;	1 = "Y" ANSWER TO YES/NO TYPE FIELD OR ABORT RECORD
			;	2 = "N" ANSWER TO YES/NO TYPE FIELD, OR
			;	    "END" HAS BEEN TYPED IF "?E" TYPE FIELD
			;	3 = TAB KEY USED TO DEFAULT ON "?T" TYPE FIELD
PROC
	TYPE = INTYPE			; REASSIGN TO VARIABLE SO A LITERAL CAN BE PASSED IN
	IF (%PASSED(F_KEY) ) 
	THEN	BEGIN
		CLEAR F_KEY
		IS_FKEY = 1
		END
	ELSE	IS_FKEY = 0


	clear end

	using type(2,2) select
	('Z'),		begin
			end = 1
			type(2,2) = '-'
			end

	('E','X'),	end = 1
	endusing

	XCALL FLAGS (10000000)		; RELEASE VERSION

	IF (TYPE(1,1).EQ.'L') XCALL FLAGS (10000010)
	SAVMAX = INMAX
	SYSTEM = 1
CLRLIN,
	MAX = SAVMAX
NOTTSX,
;;;	XCALL W_DISP(W_ID,WD_POS,ROW,COL,DOTS(1,MAX))
	XCALL W_DISP(W_ID,WD_POS,ROW,COL,DOTS(1,MAX)," ")
	IF (TYPE.EQ.'C') MAX = 0
	ENTRY =
	INXCTL =
	CHAR =
	XCALL W_DISP(W_ID,WD_MOVE,0,-MAX)
	XCALL W_DISP(W_ID,WD_MOVE,0,-1)
;;;	XCALL W_DISP(W_ID,WD_MOVE,0,-(MAX+1))
	SAV_COL = COL-1
INPUT1,
	INCR SAV_COL
	INCR CHAR
INPUT2,
	XCALL W_DISP(W_ID,WD_ACCEPT,TCHAR) ; INPUT 1 DECIMAL CHARACTER AT A TIME
;;;	IF (TCHAR.EQ.0 .AND. IS_FKEY)  GO TO ESCAPE	; TEST ESCAPE SEQ
	IF (TCHAR.EQ.0)  GO TO ESCAPE	; TEST ESCAPE SEQ
;;;	IF (TCHAR.EQ.127) GO TO DELETE	; DELETE KEY
	IF (TCHAR.EQ.8) GO TO DELETE	; DELETE KEY
	IF (TCHAR.EQ.21)  GO TO CLRLIN	; CTRL/U - ERASE LINE
	IF (TCHAR.EQ.23)  GO TO RESTRT	; CTRL/W - ABORT RECORD
	IF (TCHAR.EQ.13)  GO TO ACPTLF	; CARRIAGE RETURN
	IF (TCHAR.EQ.9)   GO TO DEFALT	; TAB DEFAULT OPTION
;;;	IF (TCHAR.EQ.8)   GO TO ENDFLD	; BACK SPACE OPTION = 'END'
	IF (TCHAR.EQ.27)  GO TO endfld	; TEST ESCAPE SEQ
	IF (TCHAR.LT.32.OR.TCHAR.GT.122) GO TO INPUT2	; IGNORES INVALID CHARACTERS
	IF (TCHAR.EQ.45.AND.TYPE(2,2).EQ.'-'.AND.SAVMAX.EQ.MAX) MAX = MAX + 1 ;TEST FOR MINUS
	IF (CHAR.GT.MAX) GO TO TOOLNG
	XCALL ASCII (TCHAR,ENTRY(CHAR,CHAR))	; CONVERTS CHARACTERS TO ASCII
	GO TO INPUT1

;-----------------------------------------------
ESCAPE,
	XCALL FLAGS (10000,1)
	DO	BEGIN
		XCALL TTSTS (STAT)
		IF (STAT) ACCEPT (15,DEC1)
		END
	UNTIL (STAT .EQ. 0)
	XCALL FLAGS (10000,0)
	IF (IS_FKEY)	F_KEY = DEC1
	USING DEC1 SELECT
	(079,133),	BEGIN
			TCHAR = 27
			GOTO ENDFLD
			END
	ENDUSING

	IF (IS_FKEY) GOTO RETRN
	GOTO ENDFLD

;----------------------------------------

DELETE,					; ERASES 1 CHARACTER ON SCREEN & IN CORE
	IF (CHAR.EQ.1) GO TO INPUT2
	CHAR = CHAR-1
	SAV_COL = SAV_COL-1
	IF (ENTRY(CHAR,CHAR).EQ.'-') MAX = SAVMAX
	ENTRY(CHAR,CHAR) =

	XCALL W_DISP(W_ID,WD_MOVE,0,-1)
	XCALL W_DISP(W_ID,WD_POS,ROW,SAV_COL,'.')
	XCALL W_DISP(W_ID,WD_MOVE,0,-1)

	GO TO INPUT2
RESTRT,					; SETS INXCTL TO 1 FOR ABORT/RESTART
	IF (TYPE(1,1).EQ.'Y') GO TO BADANS
	INXCTL = 1
;;	IF (ROW.NE.24) XCALL WMESG('NOT PROCESSED',2)
	XCALL BEEP
	GO TO RETRN
ACPTLF,
	IF (SYSTEM.NE.1) XCALL W_DISP(W_ID,WD_ACCEPT,TCHAR)
	IF (%PASSED(F_KEY) ) F_KEY = 13
ENDFLD,					; BRANCH FOR EDITING AFTER CR
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (TCHAR.EQ.27 .AND. END.EQ.0) GOTO INPUT2
	IF (TCHAR.EQ.27 .AND. END.EQ.1) 
		BEGIN
		INXCTL = 2
		XCALL W_DISP(W_ID,WD_POS,ROW,COL,'END')
		XCALL W_UPDT
		GOTO RETRN
		END

;;;	IF (TCHAR.EQ.27.AND.TYPE(2,2).NE.'E'.AND.TYPE(2,2).NE.'X') GO TO INPUT2
;;;	IF (TCHAR.EQ.27.AND.(TYPE(2,2).EQ.'E'.OR.TYPE(2,2).EQ.'X')) 
;;;		BEGIN
;;;		INXCTL = 2
;;;		XCALL W_DISP(W_ID,WD_POS,ROW,COL,'END')
;;;		XCALL W_UPDT
;;;		GOTO RETRN
;;;		END
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	IF (INXCTL.EQ.2) GO TO RETRN
	IF (CHAR-1.LT.MIN) GO TO TOSHRT	; TEST FOR TOO SHORT
	IF (TYPE(1,1).EQ.'Y') GO TO TSTANS
	IF (TYPE.EQ.'#'.OR.TYPE.EQ.'N') GO TO TSTNUM
	IF (TYPE.EQ.'D') GO TO TSTDTE
	IF (TYPE.EQ.'$'.OR.TYPE.EQ.'H') GO TO TSTDLR
	GO TO RETRN
DEFALT,			; SETS INXCTL = 3 WHEN TERM CHAR IS TAB & TYPE = "?T"
	IF (ENTRY.NE.'   '.OR.(TYPE(2,2).NE.'T'.AND.
&		TYPE(2,2).NE.'X')) GO TO INPUT2
	INXCTL = 3
	GO TO RETRN
TOOLNG,					; ENTRY TOO LONG
	IF (TYPE.EQ.'YN'.OR.TYPE.EQ.'YY') GO TO BADANS
	DISPLAY (15,7,7)
	COL2 = COL + CHAR - 1
	GO TO CLRLIN
TOSHRT,					; ENTRY TOO SHORT
	GO TO CLRLIN
TSTNUM,					; NUMERIC EDITING
	ON ERROR BADNUM
	DECMAL = ENTRY(1,MAX)
	IF (TYPE(2,2).EQ.'-') GO TO RETRN
	IF (DECMAL.LT.0) GO TO NOTPOS
	GO TO RETRN
BADNUM,
;;	IF (ROW.NE.24) XCALL WMESG ('MUST BE NUMERIC',1)
	XCALL BEEP
	GO TO CLRLIN
NOTPOS,
;;	IF (ROW.NE.24) XCALL WMESG ('NEGATIVE NOT ALLOWED',1)
	XCALL BEEP
	GO TO CLRLIN
TSTDTE,					; EDITING FOR VALID DATE
	IF (ENTRY(1,3).EQ.'   ') GO TO RETRN
	ON ERROR BADDTE
	DECMAL(1,6) = ENTRY(1,6)
	date8 = ENTRY
	XCALL DATE8(DATE8,D_OUT,D_OUTR,D_FMT,D_SW)
	IF (D_SW .EQ. '99') GOTO BADDTE
	XCALL W_DISP(W_ID, WD_POS,ROW,COL, D_FMT)
	ENTRY(1,8) = D_OUTR
	GOTO RETRN
BADDTE,
;;	XCALL WMESG ('USE FORMAT MMDDYY',1)
	XCALL BEEP
	GO TO CLRLIN
TSTDLR,					; EDITING FOR DOLLAR FIELD
	ON ERROR BADDLR			; REDISPLAYS FORMATTED
	DECMAL = ENTRY(1,MAX)
	IF (TYPE(2,2).NE.'-'.AND.TYPE(2,2).NE.'T'.AND.DECMAL.LT.0) GO TO NOTPOS
	XCALL WDSPL (W_ID,MAX,ROW,COL,DECMAL,3)
	GO TO RETRN
BADDLR,
;;	XCALL WMESG (' ',3)
	XCALL BEEP
	GO TO CLRLIN
TSTANS,					; EDITING FOR "Y" OR "N" ANSWER
	IF (ENTRY.EQ.' '.AND.TYPE.EQ.'YY') ENTRY = 'Y'
	IF (ENTRY.EQ.' ') ENTRY = 'N'
	IF (ENTRY.EQ.'Y'.OR.ENTRY.EQ.'y') INXCTL = 1
	IF (ENTRY.EQ.'N'.OR.ENTRY.EQ.'n') INXCTL = 2
	IF (INXCTL.EQ.0) GO TO BADANS
	XCALL W_DISP(W_ID,WD_POS,ROW,COL,ENTRY(1,1))
	XCALL W_UPDT
	GO TO RETRN
BADANS,
;;	DISPLAY (15,7)
	GO TO CLRLIN
RETRN,
	IF (TYPE(1,1).EQ.'L') XCALL FLAGS (10000000)
	RETURN

