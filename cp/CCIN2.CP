
SUBROUTINE CCIN2		;revised CCINF (6/5/02)
	C_WND	,D	;CCINF W_ID
	CHN137	,D	;CHANNEL CCINFO OPEN ON
	CUST	,D	;CUSTOMER # - MUST BE VALID CUST
	CCDATA	,A	;CCINFO - MAY ALREADY CONTAIN INFO
	OPT	,D	;1-ADD, 2-CHANGE, 3-DELETE, 4-BY CUST, 5-BY ALPH, 6-4DIG
;			;neg value for opt means no updates allowed.
	CASH_CUST,D	;1 = CASH CUSTOMER

	;NOTES:
	; set CI_ALPH to customer name in calling routine.

.INCLUDE 'WND:WINDOWS.DEF'

EXTERNAL FUNCTION
	R1	,D

RECORD	POP
	.INCLUDE 'DEF:POP1.DEF'

RECORD	FUNKEY
	.INCLUDE 'DEF:FUNKEY.DEF'

RECORD	CCINFO
	.INCLUDE 'DEF:RD137A.DEF'

RECORD	CUST_KEY
	CK_CUST		,D6
	CK_NUMBR	,D16

RECORD	ALPH_KEY
	AK_ALPH		,A25
	AK_NUMBR	,D16

RECORD	DIG4_KEY
	DK_DIG4		,D4
	DK_NUMBR	,D16
	DK_TYPE		,A1

RECORD
		,A8,	'MVDAXXXX'
		,A20,	'MASTER CARD         '
		,A20,	'VISA                '
		,A20,	'DISCOVER            '
		,A20,	'AMERICAN EXPRESS    '
		,A20,	'INVALID             '
		,A20,	'INVALID             '
		,A20,	'INVALID             '
		,A20,	'INVALID             '
;                        12345678901234567890
RECORD,X
	CTYP	,8A1
	CDES	,8A20

RECORD	CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD
	MMYY	,D4
RECORD,X	
	MM	,D2
	YY	,D2

RECORD	WVARS
	WND_1	,D4
	W1_NAME	,A6

RECORD	VARS
	DEC3	,D3
	CVV	,D4
	BCD	,D6		;BILLING STREET NUMBER
	ZIP	,D5		;BILLING ZIP
	X_NUMBR	,D16
	X_CCNUM	,D16
	TSTAT	,D1
	ALPHA	,A16
	BADDAT	,D1
	SAVNUM	,D16
	TODAY	,D6
	UPDATE	,D1
	BLANKS	,A25
	DESC_OK	,D1
	F_KEY	,D3
	SELECT	,D1
	ERR	,D1
	POS	,D3
	SAVRFA	,A6
	WND1	,D4
	CCNUM	,D16
	NAME	,A25
	I	,D5
	XDATE	,D8
	XDAT1	,D4	;YYMM
	XDAT2	,D4	;YYMM
	ENTRY	,A30
	CNGCTL	,D1
	INXCTL	,D1
	WHATNO	,D1
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	LOKCTL	,D1
	SWITCH	,D1

;
PROC
	XCALL RDATE(TODAY)
	CALL INIT_WINDOW
	IF (CUST .EQ. 0) GOTO ABORT

	IF (CASH_CUST)
		BEGIN
		CLOSE CHN137
		SWITCH = 5
		XCALL FILES (CHN137, 'SU', 104, SWITCH)	;104 - MISCCI
		END

	CALL PAINT

	SELECT = 1		;ASSUME ADD MODE
	CCINFO = CCDATA		;RECORD PASSED
	CCNUM = CI_NUMBR	;SAVE THE CC#, IF ANY

	X_CCNUM = %R1(CCNUM, 'D')	;dcrypted version of ccnum

	NAME = CI_ALPH		;SAVE THE NAME

	IF (OPT .LT. 0)		;IF OPT IS NEG, NO UPDATES
	THEN	BEGIN
		OPT = -OPT
		UPDATE = %FALSE
		END
	ELSE	UPDATE = %TRUE
	USING OPT SELECT	;INCOMMING OPTION
	(1),	GOTO DISPLA	;ADD
	(2),	BEGIN		;CHANGE
		IF (CI_NUMBR .GT. 0) 	;WAS A CC# PASSED?
		THEN	BEGIN
			CK_CUST = CUST	
			CK_NUMBR = CI_NUMBR
			READ(CHN137, CCINFO, CUST_KEY) [ERR=DISPLA]
	;;;		XCALL ISIO (CHN137, CCINFO, CI_NUMBR, READ, LOKCTL)
	;;;		IF (LOKCTL .NE. 0) GOTO DISPLA		;NO RECORD
			GOTO DISP_CC
			END
		ELSE	GOTO DISPLA
		END
	(3),	OPT = 3			;LATER
	(4),	CALL BY_CUST
;;;	(5),	CALL BY_ALPH
;;;	(6),	CALL BY_4DIG
	(),	BEGIN
		XCALL WNMSG(WND_1,10,'BAD OPT CODE',1)
		GOTO ABORT
		END
	ENDUSING
;;;	IF(NUMARA.GT.0) XCALL W_DISP(WND_1, WD_READS, ENTRY)
	XCALL TTSTS(TSTAT)
	IF (TSTAT) XCALL W_DISP(WND_1,WD_READS,ENTRY)

PLOOP,
	IF(NUMARA .LE. 0) GOTO DISPLA	;NO EXISTING CC'S
	IF(CUST .EQ. 10) GOTO DISPLA	;TOO MANY IF CASH ACCT
	DLINE = '   CREDIT CARD NUMBER    EXP-DATE'
	XCALL POP1(POP)
	USING P_ACTION SELECT
	(0),	GOTO DISPLA		;NOTHING SELECTED
	(1,4),	BEGIN			;SELECTED
		SAVRFA = PARRFA(PI)
		READ(CHN137, CCINFO,RFA:SAVRFA)
		GOTO DISP_CC
		END
	(2),	GOTO DISPLA		;INSERT
	ENDUSING
	GOTO PLOOP

DISPLA,
	CLEAR CNGCTL, CCINFO
	CALL PAINT
CUST,
	ENTRY(1,6) = CUST, 'ZZZZZX' [LEFT]
	XCALL W_DISP(WND_1, WD_POS,2,24,ENTRY(1,6))
	XCALL W_UPDT
	GOTO(ANYCNG),CNGCTL
XNUMBR,
	IF(CUST.NE.10) GOTO NUMBR
	CLEAR CCINFO
CNUMBR,
	XCALL TTSTS(TSTAT)
	IF (TSTAT) 
		BEGIN
		ENTRY =
	;;;	XCALL W_DISP(WND_1,WD_ACCEPT,DEC3)
		XCALL W_DISP(WND_1,wd_pos,row,col,WD_ACCEPT,DEC3)

		END

;;;	XCALL W_DISP(WND_1, WD_READS, ENTRY)	;don't know why
	POS = 0
;;;	CTL = '04,24,16,16,#E'
	CTL = '03,24,16,16,#E'	;7-2-18
	XCALL W_DISP(WND_1, WD_POS,ROW,COL, WD_CLR,WDC_EOL)
	CK_CUST =  CUST
	CK_NUMBR = 0
;;;	READ (CHN137,CCINFO,CUST_KEY,KRF=1) [ERR=SAMCUS]
	READ (CHN137,CCINFO,CUST_KEY) [ERR=SAMCUS]
SAMCUS,
	IF(CI_CUST.NE.CUST)
		BEGIN
		CLEAR CCINFO
		GOTO NUMBR	;NOTHING FOR THIS CUST
		END
NXTDIG,
	XCALL WCINP(WND_1,ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,POS)
	GOTO(DISPLA,ABORT,CNUMBR,GOT_NUM),INXCTL
	IF (POS.GT.0) 
		BEGIN
		CK_NUMBR(1,POS) = ENTRY(1,POS)
		CK_NUMBR = %R1(CK_NUMBR,'E')
		READ(CHN137,CCINFO,CUST_KEY(1,pos+6)) [KEY=NXTDIG, EOF=NXTDIG]
		X_NUMBR = %R1(CI_NUMBR,'D')
		END
K_SO_FAR,
;;;	ALPHA = CI_NUMBR,	'ZZZZZZZZZZZZZZZZ' [LEFT]
	ALPHA = X_NUMBR,	'ZZZZZZZZZZZZZZZZ' [LEFT]
	CK_NUMBR = CI_NUMBR
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,ALPHA)
	GOTO NXTDIG
GOT_NUM,
	READ(CHN137,CCINFO,CUST_KEY) [ERR=NO_CARD]
	IF(CI_CUST .EQ. CUST) GOTO DISP_CC
NO_CARD,
	CLEAR CCINFO
	CI_NUMBR = ENTRY
	CI_NUMBR = %R1(CI_NUMBR,'E')	;ENCRYPT
	GOTO NUMBR2
NUMBR,
	CTL = '03,24,16,16,#E'
	XCALL W_DISP(WND_1, WD_POS,ROW,COL, WD_CLR,WDC_EOL)
	CALL INPUT
	GOTO(DISPLA,ABORT),INXCTL
	IF (ENTRY .EQ. BLANKS)
		BEGIN
		ENTRY = CCNUM,	'XXXXXXXXXXXXXXXX' [LEFT]
		END
NUMBR2,
	CI_NUMBR = ENTRY(1,16)
	ENTRY(1,19) = CI_NUMBR,	'XXXX-XXXX-XXXX-XXXX'
	CI_NUMBR = %R1(CI_NUMBR, 'E')	;ENCRYPT
	XCALL W_DISP(WND_1, WD_POS, ROW, COL, ENTRY(1,19))
	GOTO(ANYCNG),CNGCTL

;;;TYPE,
;;;	CTL = '05,24,01,01,AE'
;;;	CALL INPUT
;;;	GOTO(DISPLA,ABORT),INXCTL
;;;	CI_TYPE = ENTRY(1,1)
;;;
;;;	CALL GET_CC_DESC
;;;	IF (DESC_OK) 
;;;	THEN	XCALL W_DISP(WND_1, WD_POS,5,26,CDES(I))
;;;	ELSE	BEGIN
;;;		XCALL WNMSG(WND_1,10,'Invalid Type',1)
;;;		GOTO TYPE
;;;		END
;;;	XCALL W_UPDT
;;;
;;;	GOTO(ANYCNG),CNGCTL

ALPH,
	CTL = '04,24,25,00,AE'
	CALL INPUT
	GOTO(DISPLA,ABORT),INXCTL
	IF (ENTRY(1,25) .EQ. BLANKS)
		BEGIN
		IF (CI_ALPH.EQ.BLANKS) CI_ALPH = NAME
		ENTRY = CI_ALPH
		XCALL W_DISP(WND_1,WD_POS,ROW,COL,ENTRY)
		XCALL W_UPDT
		END
	CI_ALPH = ENTRY(1,25)
	GOTO(ANYCNG),CNGCTL
EXDAT,
	CTL = '05,24,04,04,#E'
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,WD_CLR,WDC_EOL)
	CALL INPUT
	GOTO(DISPLA,ABORT),INXCTL
	MMYY = ENTRY(1,4)
	IF (MM.LT.0 .OR. MM.GT.12)
		BEGIN
		XCALL WNMSG(WND_1,10,'DATE FORMAT IS MMYY',1)
		GOTO EXDAT
		END

	ENTRY(1,5) = MMYY,	'XX/XX'
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,ENTRY(1,5))
	XCALL W_UPDT
	CI_EXDAT = MMYY
	CALL CHKDAT
	GOTO(EXDAT),BADDAT
	GOTO(ANYCNG),CNGCTL
CVV,
	CTL = '06,24,04,00,# '
	CALL INPUT
	GOTO (DISPLA),INXCTL
	CI_CVV = ENTRY(1,4)
	GOTO (ANYCNG),CNGCTL
BCD,
	CTL = '07,24,06,00,# '
	CALL INPUT
	GOTO (DISPLA),INXCTL
	CI_ADDR = ENTRY(1,6)
	GOTO (ANYCNG),CNGCTL
ZIP,
	CTL = '08,24,05,00,# '
	CALL INPUT
	GOTO (DISPLA),INXCTL
	CI_ZIP = ENTRY(1,5)
	GOTO ANYCNG


DISP_CC,
	SELECT = 2		;CHANGE MODE

	ENTRY(1,6) = CI_CUST,	'ZZZZZX' [LEFT]
	XCALL W_DISP(WND_1, WD_POS,2,24,ENTRY(1,6))
;;;	XCALL W_DISP(WND_1, WD_POS,3,24,CI_ALPH)

	X_NUMBR = %R1(CI_NUMBR, 'D')
	ENTRY(1,19) = X_NUMBR,	'XXXX-XXXX-XXXX-XXXX'
;;;	ENTRY(1,19) = CI_NUMBR,	'XXXX-XXXX-XXXX-XXXX'
	XCALL W_DISP(WND_1, WD_POS,3,24,ENTRY(1,19))

	XCALL W_DISP(WND_1, WD_POS,4,24,CI_ALPH)

	ENTRY(1,5) = CI_EXDAT,	'XX/XX'
	XCALL W_DISP(WND_1, WD_POS,5,24,ENTRY(1,5))

	ENTRY(1,4) = CI_CVV, 'ZZZX' [LEFT]
	XCALL W_DISP(WND_1, WD_POS,6,24,ENTRY(1,4))

	ENTRY(1,6) = CI_ADDR,	'ZZZZZX' [LEFT]
	XCALL W_DISP(WND_1, WD_POS,7,24,ENTRY(1,6))

	ENTRY(1,6) = CI_ZIP,	'XXXXX' 
	XCALL W_DISP(WND_1, WD_POS,8,24,ENTRY(1,5))


	CALL CHKDAT

ANYCNG,
	XCALL W_UPDT
;;;	XCALL WANCN(WND_1, 9, CNGCTL, WHATNO)
	XCALL WANFK(WND_1, 9, CNGCTL, WHATNO, F_KEY, '<F1>=LOOK-UP')

	USING F_KEY SELECT
	(F_01),	BEGIN
		CALL BY_CUST
		GOTO PLOOP
		END
	ENDUSING

	GOTO (PROCES,CNGBR),CNGCTL+1
CNGBR,
	GOTO(CUST,XNUMBR,ALPH,EXDAT,CVV,BCD,ZIP),WHATNO
;;;	GOTO(CUST,ALPH,XNUMBR,EXDAT,CVV,BCD,ZIP),WHATNO
	GOTO ANYCNG
PROCES,
	IF(CI_NUMBR .LE. 0)
		BEGIN
		XCALL WNMSG(WND_1,10,'Enter CC Number',1)
		GOTO ANYCNG
		END

	CALL CHKDAT
	GOTO(ANYCNG),BADDAT

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	IF(CI_TYPE .EQ. '  ')
;;;		BEGIN
;;;		XCALL WNMSG(WND_1,10,'Enter CC Type',1)
;;;		GOTO ANYCNG
;;;		END
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	IF(CI_EXDAT .LE. 0)
		BEGIN
		XCALL WNMSG(WND_1,10,'Enter CC Ex Date',1)
		GOTO ANYCNG
		END

	CCDATA = CCINFO		;DATA TO RETURN
	IF (UPDATE .EQ. %FALSE) GOTO FINI

	CI_CUST = CUST
	USING SELECT SELECT
	(1),	BEGIN
		XCALL ISIO(CHN137, CCINFO, CI_NUMBR, STORE, LOKCTL, WND_1)
	;;;	store(chn137,ccinfo,ci_numbr)
		IF (LOKCTL .NE. 0)
			BEGIN
			XCALL WNMSG(WND_1,10,'CC Already on File',1)
			GOTO DISPLA
			END			
		END	
	(2), 	BEGIN
		IF (CI_NUMBR.NE.SAVNUM)
		THEN	BEGIN			;CHANGED THE CC NUMBER
			DELETE(CHN137, SAVNUM)
			STORE(CHN137, CCINFO, CI_NUMBR)
			END			
		ELSE	WRITE(CHN137, CCINFO, CI_NUMBR)
		END
	ENDUSING
FINI,
	C_WND = WND_1		;LEAVE WINDOW ON SCREEN
;;;	XCALL W_PROC(WP_DELETE, WND_1)
	XCALL W_PROC(WP_MOVE, WND_1, 10,20)

	IF (CASH_CUST)
		BEGIN
		CLOSE CHN137
		SWITCH = 5
		XCALL FILES (CHN137,'SU',137,SWITCH)	;FILE #137 -- CCINFO.ISM
		END

	XRETURN

ABORT,
	OPT = 9		;ERROR CONDITION
	GOTO FINI
;=========================================================

PAINT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL W_DISP(WND_1, WD_CLEAR)
	XCALL W_DISP(WND_1, WD_POS,2,1,'1. CUST NO')
	XCALL W_DISP(WND_1, WD_POS,3,1,'2. NUMBER')
	XCALL W_DISP(WND_1, WD_POS,4,1,'3. ALPHA')
	XCALL W_DISP(WND_1, WD_POS,5,1,'4. EXP DATE')
	XCALL W_DISP(WND_1, WD_POS,6,1,'5. SEC CODE')
	XCALL W_DISP(WND_1, WD_POS,7,1,'6. BILL ADR')
	XCALL W_DISP(WND_1, WD_POS,8,1,'7. ZIP CODE')
	XCALL W_UPDT

	RETURN
;-------------------------------------------------------

CHKDAT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; CHECK FOR EXPIRED CC
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	
	CLEAR BADDAT
	XDAT1(1,2) = CI_EXDAT(3,4)
	XDAT1(3,4) = CI_EXDAT(1,2)
	XDAT2(1,2) = TODAY(5,6)
	XDAT2(3,4) = TODAY(1,2)

	IF (XDAT2 .GT. XDAT1) 
		BEGIN
		XCALL WNMSG(WND_1,10,'Card has Expired!',1)
		BADDAT = 1
		END
	RETURN
;-------------------------------------------------

BY_CUST,
	CK_CUST = CUST	
	CK_NUMBR =
	FIND(CHN137, CCINFO, CUST_KEY) [ERR=GET_CC]
	GOTO GET_CC
BY_ALPH,
	AK_ALPH = NAME
	AK_NUMBR = 0
	FIND(CHN137, CCINFO, ALPH_KEY, KRF=2) [ERR=GET_CC]
	GOTO GET_CC
BY_4DIG,
	DK_DIG4 = CCNUM
	DK_NUMBR =
	DK_TYPE =
	FIND(CHN137, CCINFO, DIG4_KEY, KRF=3) [ERR=GET_CC]
GET_CC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	FOR I FROM 1 THRU MAXARA
		BEGIN
		CLEAR PARRY(I)
		CLEAR PARRFA(I)
		CLEAR PFLAGS(I)
		END
	CLEAR I
	IF(CUST .EQ. 10) RETURN		;SSQ 6/17/02 WOULD BE TOO MANY

;;;	FIND(CHN137, CCINFO, CI_NUMBR) [ERR=GC_LOOP]
GC_LOOP,
	READS(CHN137, CCINFO, GC_EOF, GETRFA:SAVRFA)
	IF (OPT.NE.5 .AND. CI_CUST.NE.CUST) GOTO GC_EOF
	X_NUMBR = %R1(CI_NUMBR, 'D')	;DECRYPT
	DLINE(1,19) = X_NUMBR,	'XXXX-XXXX-XXXX-XXXX'
	dline(1,15) = 'XXXX-XXXX-XXXX-'
;;;	DLINE(21,21) = CI_TYPE
	DLINE(23,27) = CI_EXDAT,	'XX/XX'
	INCR I
	PARRY(I) = DLINE
	PARRFA(I) = SAVRFA
	IF (I .LT. MAXARA) GOTO GC_LOOP
;;;	GOTO GC_LOOP
GC_EOF,
	NUMARA = I
	RETURN
;------------------------------------

GET_CC_DESC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR DESC_OK

	FOR I FROM 1 THRU 8
		BEGIN
		IF (CTYP(I).EQ.'X')EXITLOOP
		IF (CTYP(I).EQ.CI_TYPE) 
			BEGIN
			DESC_OK = 1
			EXITLOOP
			END
		END
	RETURN
;------------------------------------


INPUT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL WINPT(WND_1,ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,F_KEY)

	RETURN
;------------------------------------

INIT_WINDOW,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL W_PROC(WP_FIND, WND_1, W1_NAME)
	IF (WND_1) 
		BEGIN
		XCALL W_PROC (WP_DELETE, WND_1)
		XCALL W_UPDT
		END

	W1_NAME = 'CCINF'
	XCALL W_PROC(WP_FIND, WND_1, W1_NAME)
	IF (.NOT. WND_1) XCALL W_PROC(WP_CREATE,WND_1,W1_NAME,10,50)
	XCALL W_BRDR(WND_1,WB_TITLE,'Credit Card Information',
&		WB_TPOS,WBT_TOP,WBT_CENTER)
	XCALL W_PROC(WP_PLACE, WND_1, 8, 8)
	XCALL W_DISP(WND_1, WD_CLEAR)

	MAXARA = 20
	PLEN = 33
	NUMROW = 5
	WX = 
	WY = 
	POP_WID = 'CC_TBL'
	POP_TITLE = 'Credit Cards'
		
	RETURN
;-------------------------------------------------------------------

END
