SUBROUTINE S_CHANGE
	S_OORDNO	,D



	.include 'wnd:tools.def'

RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR



GLOBAL ORDH
RECORD ORDHDR   	
		.INCLUDE 'DEF:RD044A.DEF'
ENDGLOBAL

GLOBAL ORDL
RECORD ORDLIN		
		.INCLUDE 'DEF:RD045A.DEF'
RECORD	,X
		.INCLUDE 'DEF:RD045E.DEF'
ENDGLOBAL

GLOBAL DUCK
	.INCLUDE 'DEF:RD175D.DEF'
ENDGLOBAL

GLOBAL IMS
RECORD INVMAS
	.INCLUDE 'DEF:RD041A.DEF'
RECORD DUMINV,X
	.INCLUDE 'DEF:RD041B.DEF'
RECORD ITMIDX 
	.INCLUDE 'DEF:RD042A.DEF'
ENDGLOBAL

GLOBAL PAR	
RECORD PARAM
	.INCLUDE 'DEF:PARAM.DEF'
ENDGLOBAL
;----- END GLOBALS -----


	.INCLUDE 'DEF:HPSUB.DEF'

RECORD	WRKKEY
	.INCLUDE 'DEF:RD183A.DEF'


RECORD
	.INCLUDE 'DEF:RD001W.DEF'

RECORD	CHANNEL
	CHN001	,D2
	CHN002	,D2
	CHN041	,D2
	CHN042	,D2
	CHN044	,D2
	CHN060	,D2
	CHN182	,D2
	CHN183	,D2

RECORD	VARS
	OPNOK	,D1
	OORSEQ	,D3
	CREDIT	,D8
	ODATE	,D8
	MAXRC2	,D5
	TAXTOT	,D8

	X_FRT	,D1
	NEG_ZERO	,D1,1
	ZERO		,D1,0
	A_FRT	,A6
	E_FRGHT	,D6
	SAVFRT	,D6
	SAVLOC	,A2
	O_QTY	,D6
	SCUSTP	,A2
	FULL	,D1
	ORGINV	,D5
	MAXINV	,D5
	INXCTL  ,D1
	ENTRY	,A30
	ANS	,A1
	CNGCTL	,D1
	WHATNO	,D2
	ENTFLG	,D1
	PRICES	,D2
	LOCTNS	,D2
	SAVTYP	,D1
	PMAX	,D2
	SWITCH	,D1
	D	,D1
	V	,D1
	TAXFLG	,D1
	READ	,D1,	0
	WRITE	,D1,	1
	STORE	,D1,	2
	LOKCTL	,D1
	CTR	,D2
	FILNAM	,A14	;;;
	FIL045	,A14	;;;
	SELECT	,D1	;;;
	SAVSEQ	,D3
	OEFLAG	,D1	;0=NO CHANGE, 1=ORD TO EST, 2=EST TO ORD
	KEY	,A6
	BSEND	,D5
	BSMID	,D5
	SRCCTL	,D1
	DECMAL	,D10

PROC
;;;	XCALL TERID(V)
	V = 2

	xcall u_start("lib:smc_wnd",,,,,,,100)
	xcall e_sect("Change",D_CAPTION)

	CALL OPENS

DISPLA,
	CLEAR INXCTL
	XCALL OUTPT (1,67,1,'\',V)

	OORDNO = S_OORDNO
	XCALL ORDCX (ORDHDR,SCUSTP,INXCTL,CNGCTL,D,V,TAXFLG,OEFLAG)
	IF (INXCTL.EQ.2) GO TO ENDOFF
DISPL2,
;;;	XCALL FFILE (45,FIL045,SWITCH)	;;;
;;;	FIL045 (14,14) = 'M'
;;;	OPEN (5,SU,FIL045)		;;;
	FIL045 = 'TST:NEWLIN.TSM'
	OPEN (5, SU, 'TST:NEWLIN.TSM')

	IF (OEFLAG .GT. 0) CALL CNGOE1	;ORD/EST FLAG CHANGED TO O 

DISP2A,
	SAVSEQ = ORDSEQ
	XCALL SCRNX (SCUSTP,PCODES,PDISCS,PMAX,DCODES,DDISCS,DMAX,TYPSYS,
&		ORDSEQ,OORDNO,TAXFLG,MAXRC2,ORGINV,LOCTNS,PRICES,
&		FULL,ODISC,OLOC,OCUSNM,TAXTOT,V,CREDIT,ODATE)
	CLOSE 5				;;;

	IF (SAVSEQ.EQ.ORDSEQ) GOTO DISPL3		;;;
	XCALL OUTPT (24,1,1,'UPDATING ORDER SEQUENCE',1);;;
	SAVSEQ = ORDSEQ					;;;
	LOKCTL = 1					;;; 6/8/93
	XCALL ISIO (4,ORDHDR,OORDNO,READ,LOKCTL)	;;; 6/8/93
	ORDSEQ = SAVSEQ					;;;
	LOKCTL = 1					;;;
	XCALL ISIO (4,ORDHDR,OORDNO,WRITE,LOKCTL)	;;;

DISPL3,
	XCALL OUTPT (3,1,2,'\',1)	;;;
	XCALL FFILE (175,FILNAM,SWITCH)	;;;
	FILNAM (14,14) = 'M'		;;;
	OPEN (5,SU,FILNAM)		;;;
	SELECT =
	XCALL DUCCN (OORDNO,TAXFLG,ORGINV,FULL,OCUSNM,OLOC,SELECT)	;;;
	IF (SELECT.GE.4) 
		BEGIN
		E_FRGHT = OFRGHT
		XCALL SCRN5 (OORDNO,FULL,SELECT,OLOC,FIL045,ORGINV,TAXFLG,E_FRGHT)
		CALL RE_WRITE
		END


	CLOSE 5
ASK_PRINT,
	XCALL OUTPT (2,1,2,' ',1)
	XCALL OUTPT (24,1,1,'Reprint Work Order (Y/N/F) ? ',1)
	XCALL INPUT (24,30,01,00,'A ',ENTRY,INXCTL,1)
	ANS = ENTRY(1,1)
	USING ANS SELECT
	('F'),	BEGIN
		SAVFRT = OFRGHT
		E_FRGHT = OFRGHT
		CALL FREIGHT
		IF (E_FRGHT .NE. SAVFRT) CALL RE_WRITE
		GOTO ASK_PRINT
		END
	('N'),	NOP
	('Y'),	INXCTL = 1
	(' '),	BEGIN
		INXCTL = 2
		XCALL OUTPT (24,30,1,'N',1)
		END
	(),	GOTO ASK_PRINT
	ENDUSING

	  IF (INXCTL.EQ.1) 
		BEGIN
		USING OLOC SELECT
		('O'),	XCALL PRORD(OORDNO)
		('E'),	XCALL PREST(OORDNO)	
		ENDUSING
		END

	XCALL OUTPT (24,1,1,'Print Dept Work Orders ? ',1)
	XCALL INPUT (24,28,01,00,'A ',ENTRY,INXCTL,1)
	ANS = ENTRY(1,1)
	IF (ANS .EQ. 'Y') XCALL PRWOD (OORDNO)

	GOTO ENDOFF
;;;	GOTO DISPLA
;-

FREIGHT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR ENTRY, CNGCTL
	XCALL OUTPT (22,10,2,'FREIGHT',1)
	CALL GET_NEG_ZERO
	CALL D_FRT
	GOTO ANYF
FRGHT2,
	XCALL INPUT (22,18,06,00,'$ ',ENTRY,INXCTL,1)
	IF (INXCTL) RETURN
	E_FRGHT = ENTRY(1,6)
	IF (E_FRGHT.EQ.0) SAVFRT = 1	;FORCE RE_WRITE
	CALL GET_NEG_ZERO
	CALL D_FRT
ANYF,
	CNGCTL = 2
	XCALL ANYCN(CNGCTL,WHATNO)
	GOTO (FRGHT2),CNGCTL
	RETURN

D_FRT,
	USING X_FRT SELECT
	(NEG_ZERO),	ENTRY(1,3) = 'N/C'
	(9),		ENTRY(1,8) = E_FRGHT,	'Z,ZZX.XX' [LEFT]
	ENDUSING
	XCALL OUTPT (22,18,1,ENTRY(1,8),1)
	RETURN
;----------------------------------------------------

RE_WRITE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	LOKCTL = 1					;SSQ 7-23-99
	XCALL ISIO (4,ORDHDR,OORDNO,READ,LOKCTL)	;SSQ 7-23-99
	OFRGHT = E_FRGHT
	LOKCTL = 1					;SSQ 7-23-99
	XCALL ISIO (4,ORDHDR,OORDNO,WRITE,LOKCTL)	;SSQ 7-23-99

	RETURN
;---------------------------------------------------------

ENDOFF,
	CALL CLOSE
	IF (FULL) XCALL MESAG
&	('THE "ORDLIN" FILE IS NOW FULL - REORGANIZE BEFORE CONTINUING',2)

	XCALL u_finish
	RETURN
;;;	XCALL PGCHN ('CP:SSQMNU',1)
;-------- END OF SUBROUTINE -------------


CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (CHN044) CLOSE 4
	IF (CHN042) XCALL FILES (CHN042, 'I', 42, 4)
	IF (CHN041) XCALL FILES (CHN041, 'U', 41, 4)

	IF (CHN182) CLOSE CHN182
	IF (CHN183) CLOSE CHN183
	IF (CHN060) CLOSE CHN060

	IF (CHN002) XCALL FILES (CHN002, 'I', 02, 4)
	IF (CHN001) XCALL FILES (CHN001, 'I', 01, 4)

	RETURN
;-----------------------------------------------


;
;
OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK

	SWITCH = 5
	XCALL FILES (4,'SU',44,SWITCH)		;FILE # 44 -- ORDHDR FILE
	IF (SWITCH.EQ.9) RETURN
	CHN044 = 4

	SWITCH = 1
	XCALL FILES (2,'I',42,SWITCH)		;FILE # 42 -- ITMIDX FILE
	IF (SWITCH.EQ.9) RETURN
	CHN042 = 2

	SWITCH = 1
	XCALL FILES (1,'U',41,SWITCH)		;FILE # 41 -- INVMAS FILE
	IF (SWITCH.EQ.9) RETURN
	CHN041 = 1

	SWITCH = 5				;SSQ 5-16-97
	XCALL FILES (17,'SI',182,SWITCH)	;FILE #182 -- COPTBL
	IF (SWITCH .EQ. 9) RETURN
	CHN182 = 17

;;;	XCALL FILES (18,'SU',183,SWITCH)	;FILE #183 -- ROLO.ISM
	XCALL FILES (18,'SI',183,SWITCH)	;FILE #183 -- ROLO.ISM
	IF (SWITCH .EQ. 9) RETURN
	CHN183 = 18

	LOKCTL = 1
	XCALL IO (1,INVMAS,1,READ,LOKCTL)
	UNLOCK 1
	ORGINV = ORG041

	SWITCH = 1
	XCALL FILES (7,'I',02,SWITCH)		;FILE # 02 -- CUSIDX FILE
	IF (SWITCH .EQ. 9) RETURN
	CHN002 = 7

	XCALL FILES (6,'I',01,SWITCH)		;FILE # 01 -- CUSMAS FILE
	IF (SWITCH.EQ.9) RETURN
	CHN001 = 6


	SWITCH = 5
	XCALL FILES (3,'I',60,SWITCH)
	IF (SWITCH.EQ.9) RETURN
	CHN060 = 3

	OPNOK = 1
	RETURN
;--------------------------------------------------


CNGOE1,
	LORDNO = OORDNO
	LOKCTL = 1
	XCALL ISIO (5,ORDLIN,LORDNO,READ,LOKCTL)
	IF (LOKCTL.NE.0) GOTO NOFORL
CNGOEL,
	XCALL OUTPT (24,1,1,'FLAGGING ESTIMATE AS ORDER',1)
	LLOC = OLOC
	LOKCTL = 1
	XCALL ISIO (5,ORDLIN,KEY045,WRITE,LOKCTL)
	IF (LSTOKT.EQ.'S') CALL COMMIT
	LOKCTL = 1
	XCALL IOS (5,ORDLIN,READ,LOKCTL)
	IF (LORDNO.NE.OORDNO.OR.LOKCTL.NE.0) RETURN
	GOTO CNGOEL
NOFORL,
	XCALL MESAG ('NO LINE ITEMS FOUND FOR THIS ORDER',2)
	RETURN
COMMIT,
	XCALL OUTPT (0,0,0,' ... COMMITTING INVENTORY',1)
	KEY = LITMNO

	USING OEFLAG SELECT
	(1),	O_QTY = LQTYOR		;FROM EST TO ORDER
	(2),	O_QTY = -LQTYOR		;FROM ORDER TO EST
	ENDUSING

;;;
;	LOGIC TO SHIFT COMMITTED TO MASTER ITEM
;;;
	IF (LITMNO.EQ.'X'.OR.LITMNO.EQ.'CD'.OR.
&	   (LITMNO.GE.'CR0'.AND.LITMNO.LE.'CR9') .OR. 
&	   (LITMNO.GE.'EDS0' .AND. LITMNO.LE.'EDS9') )
	  USING LITMNO SELECT
	  ('X','CD'),		BEGIN
				  KEY = LITMNO(1,3)
				  KEY(4,4) = '0'
				END
	  ('CR0' thru 'CR9'),	KEY = LITMNO(1,4)
	  ('EDS0' THRU 'EDS9'), KEY = LITMNO(1,9)
	  (),			KEY = LITMNO
	  ENDUSING
;;;------------------------------------------------------------

	BSEND = ORGINV
	XCALL SERCH (2,ITMIDX,KEY,1,15,BSEND,BSMID,SRCCTL,4,16,20,0,0,0,0)
	IF (SRCCTL.OR.IRC041.EQ.0)
	BEGIN
	  SRCCTL = 1
	  INVMAS =
	  ITMIDX =
	  XCALL OUTPT (0,0,0,' ... FAILED, ITMIDX RECORD NOT FOUND',1)
	  RETURN
	END
	LOKCTL = 1
	XCALL IO (1,INVMAS,IRC041,READ,LOKCTL)
	IF (STOCK.EQ.'S')
	THEN BEGIN
	  DECMAL = QTYONH-QTYCOM+QTYONO
;;;	  IF (LQTYOR.GT.DECMAL)
	  IF (O_QTY.GT.DECMAL)
	  BEGIN
	    XCALL OUTPT (23,1,0,'ITEM: ',1)
	    DISPLAY (15,LITMNO,'   ',LDESCR)
	    XCALL MESAG ('WARNING: QTY ORDERED EXCEEDS AVAILABLE INVENTORY',2)
	  END
;;;	  QTYCOM = QTYCOM + LQTYOR
	  QTYCOM = QTYCOM + O_QTY
	  LOKCTL = 1
	  XCALL IO (1,INVMAS,IRC041,WRITE,LOKCTL)

;;;	xcall comlg(litmno, itemno, o_qty, lordno, lloc, "Change")
	  
	END
	ELSE XCALL OUTPT (0,0,0,' ... FAILED, ITMMAS NOT FLAGGED AS STOCK',1)

	UNLOCK 1
	RETURN
;---------------------------------------------------
;-
GET_NEG_ZERO,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	A_FRT = E_FRGHT
	USING A_FRT SELECT
	('    -0'),	X_FRT = NEG_ZERO
	('     0'),	X_FRT = ZERO
	(),		X_FRT = 9
	ENDUSING

	RETURN
;--------------------------------------------
;-

END


