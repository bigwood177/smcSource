;rquire.cp - read reverse
;INQUIR.CP
;
;	10-23-98 SSQ:	REVERT TO ORDER LIST AFTER SELECTING AN ORDER.
;	12-9-98 ssq:	dup key error storing records in t*****.ism work
;			file, lincnt reset to 3 for credits caused prob.
;			see "lstlin"
;
;	01-07-02 SSQ:	values for FYEAR: 51 = 1. current year
;					  52 = 2. current years history
;					  00 = year 2000
;				 	  01 = year 2001
;	06-07-05 SSQ: if tmpcus (cust# 10) look up cust info in tmpcus.ism (139)
;	 11-01-05 ssq: use okeydt to compute disc. date
;	DDEPT 5-29-14
;	5-30-18 ssq: make cusmas isam
;	1-18-21 ssq: ordhdr.odisc has been removed.


	.include 'wnd:tools.def'

	.DEFINE POOLSIZE	,25000
	.DEFINE WNDCHNL		,15
	.DEFINE MAXWINS		,10
	.INCLUDE 'DEF:WINDOWS.DEF'

EXTERNAL FUNCTION
	GU_NAME	,A

EXTERNAL FUNCTION
	TRN3	,D

RECORD	COINFO
	.INCLUDE 'DEF:COINFO.DEF'

RECORD	CRHOLD
	.INCLUDE 'DEF:RD195A.DEF'

RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR

RECORD	WN_NAME
		,A6,	'INQUIR'
	WN_TNMBR,D4

;
RECORD	ORDNOT
	.INCLUDE 'DEF:RD075A.DEF'

RECORD	UPSDATA
	.INCLUDE 'DEF:UPSDAT.DEF'

RECORD	POP
	.INCLUDE 'DEF:POP.DEF'

RECORD	DPTSTS
	.INCLUDE 'DEF:RD193A.DEF'

RECORD ORDHDR
	.INCLUDE 'DEF:RD044A.DEF'

RECORD ORDLIN
	.INCLUDE 'DEF:RD045A.DEF'
RECORD,X
	.INCLUDE 'DEF:RD045M.DEF'

;;;RECORD	ORDLIN1
;;;	.INCLUDE 'DEF:RD045X.DEF'

RECORD	DUCWRK
	.INCLUDE 'DEF:WRKDUC.DEF'

RECORD DUCACC
	.INCLUDE 'DEF:RD175A.DEF'
RECORD SLHDUC	,X
	.INCLUDE 'DEF:RD186A.DEF'
RECORD PARAM
	.INCLUDE 'DEF:PARAM2.DEF'
RECORD DARR
	SACCRC	,100A66	;SUMMARIZED ACCESSORY INFORMATION (SEE ACCREC BELOW)
	I	,D3
	II	,D3
RECORD
	MAXACC	,D3,100

RECORD
	MAXDUC	,D3,150
	QTY	,D5
	ITM	,A15
	DES	,A30
	PRC	,D7
	COMPA	,A15
	COMPB	,A15
RECORD
	SDUCRC	,150A28	;SUMMARIZED DUCT CONFIGURATIONS   (SEE DUCREC BELOW)
	LINSQF	,8D6	;SUMMARIZE LINER SQUARE FEET
RECORD DUCREC
	DUCCFG	,D7	;CONFIGURATION CODE
	DUCSQF	,D7	;SQ FEET OF MATERIAL
	DUCPND	,D7	;POUNDS OF MATERIAL
	DUCGPR	,D7	;GAUGE PRICE
RECORD ACCREC
	.INCLUDE 'DEF:ACCREC.DEF'
;
RECORD BLHEAD
		.INCLUDE 'DEF:RD178A.DEF'
RECORD BLLINE
		.INCLUDE 'DEF:RD179A.DEF'
RECORD ARTERM
		.INCLUDE 'DEF:RD170A.DEF'
RECORD ARTCTL	,X
		.INCLUDE 'DEF:RD170B.DEF'

RECORD	COPTBL
	.INCLUDE 'DEF:RD182A.DEF'

RECORD	TMPCUS	;SSQ 6-7-05
	.INCLUDE 'DEF:RD139A.DEF'

RECORD CUSMAS
		.INCLUDE 'DEF:RD001A.DEF'
RECORD CUSCTL	,X
		.INCLUDE 'DEF:RD001B.DEF'
;;;RECORD CUSIDX
;;;		.INCLUDE 'DEF:RD002A.DEF'
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
		,A1
	POS	,D2
RECORD TFILE
		,A4,	'SPL:'
		,A1,'T'
	TTIME	,D6
		,A1,'.'
	TEXT	,A3
RECORD	WRKFIL
		,A4,	'SPL:'
		,A1,	'W'
	WFORD	,A6
		,A4,	'.ISM'
RECORD	OUTFIL
		,A4,	'SPL:'
		,A1,	'X'
	OFORD	,A6
		,A4,	'.ISM'

RECORD	DUCFIL
		,A4,	'SPL:'
		,A1,	'D'
	WRORD	,A6
		,A4,	'.ISM'


RECORD	F_MEMOS
	.INCLUDE 'DEF:CPMEMO.DEF'

RECORD	FOR_ISAMC
	KEYSPEC,	A*,	'START=1:116, LEN=55:8, DUPS, ASCEND'

;---------------------------
RECORD	LINE			
	WSEQ1	,D2		;reversed
	WSEQ2	,D2
	WSEQ3	,D2	
	WDEPT	,A2
	WSQNO	,A2
	WITEM	,A15
	WDESC	,A90
	WPRICE	,D8
	WTYPE	,A1		;L=LINE, M=MEMO
	WQTY	,D5
	WQTYSH	,D5
	WUM	,A2
RECORD	MEMO,X
	MSEQ	,D6
	MDEPT	,A2
	MSQNO	,A2
	MITEM	,A15
	MMEMO	,3A30
		,D8
		,A1
		,D5
		,D5
		,A2
RECORD	,X
		,D6
		,A2
		,A2
		,A15
	M_LONG	,A63
		,A27
		,D8
		,A1
		,D5
		,D5
		,A2
RECORD,X
;;;	W_KEY	,A63
	W_KEYA	,A55		;FIRST PART OF KEY
		,A60
	W_KEYB	,A8		;PRICE
RECORD,X
		,D2
	COMSEQ	,D4
		,A2		;reversed
;---------------------------
RECORD	LINE2			
	WSEQ12	,D2		
	WSEQ22	,D2
	WSEQ32	,D2	;REVERSE
	WDEPT2	,A2
	WSQNO2	,A2
	WITEM2	,A15
	WDESC2	,A30
	WADD2	,A60	;FILLER
	WPRICE2	,D8
	WTYPE2	,A1		;L=LINE, M=MEMO
	WQTY2	,D5
	WQTYSH2	,D5
	WUM2	,A2
RECORD,X
;;;	W_KEY2	,A63
	W_KEY2A	,A55		;FIRST PART OF KEY
		,A60
	W_KEY2B	,A8		;PRICE

RECORD,X
		,D2
	COMSEQ2	,D4
		,A2		;not reversed
;---------------------------
;---------------------------
RECORD 	UPS_LIN
	PK1	,A2
		,A*, ' OF '
	PK2	,A2
		,A2
		,A*,	'TRACKING#'
		,A1
	TK1	,A20
		,A7
		,A*,	'PKG WT: '
	TK2	,A8

RECORD
	HD1	,A80,'   -------ORDER-------  CUSTOMER               P/O         JOB         SLS      '
	HD2	,A80,'   NO.    O/E   DATE    NAME                   NUMBER      NUMBER      PER      '
	H1	,A80,'+-----+---+----------+-----------+--------------------+--------+---------------+'
	H2	,A80,'|CUST#|SLM|PO NUMBER |JOB NUMBER |SHIP VIA     COL/PPD|SHIP DT |TERMS          |'
	H3	,A80,'+------+---------------+-----------------------------+---------+--+------------+'
	H4	,A80,'|Q-ORDR|ITEM NUMBER    |DESCRIPTION                  | U-PRICE |UM|  EXT-PRICE |'
	H5	,A80,'+------------------------------------------------------------------+-----------+'
	H6	,A80,'|              |                  |                                |           |'
	H7	,A80,'+------+---------+-------------------------------------+--------+-----+--------+'
	H8	,A80,'|      |         |                                     |        |     |xXxXxXxX|'

RECORD
	K	,D2
	KEYS	,20D6
	DATE	,D6
	FSELEC	,D2
	FYEAR	,D2
	RFA	,20A6
;;;	RFA	,20D6
RECORD	,X
		,A1
	AK	,A1
	AKEYS	,20A6
	MM	,D2
	DD	,D2
	YY	,D2
	AFSELEC	,A2

RECORD PLINE2
	PRTITL	,A15
		,A1
	PRDATE	,A9
		,A2
	PRTIME	,A8
		,A40
		,A1,'('
	PRPAGE	,D2
		,A1,')'
		,A1		;4-3-98 GOT'S TO HAVE IT
RECORD	,X
	HDRPLN	,A75
			
RECORD	CHANNEL
	CHN075	,D2
	CHN175	,D2
	CHN182	,D2
	CHN193	,D2
	CHN195	,D2
	CHN045	,D2
	CHNWRK	,D2
	CHNOUT	,D2
	CHNUPS	,D2
	CHNDUC	,D2

RECORD	WRK_DATE
	XCC	,D2
	XYY	,D2
	XMM	,D2
	XDD	,D2

RECORD
	MDAYS,	12D2,	31,28,31,30,31,30,31,31,30,31,30,31


RECORD	TIME_STAMP
	TS_TIME	,A5
		,A1
	TS_AM	,A2

record	Vvars
	sts	,d1
	font_id		,d4
	face_name	,a50
	point_size	,d4

RECORD	VARSX
	XDATE	,D6
	D_TRY	,D1
	D_DAYS	,D2
	D_DATE	,D6
	D_30_DATE	,D6
	D_AMT	,D6
	D_LIN1	,A50
	D_LIN2	,A50
	D_LIN3	,A50
	DI	,D2

RECORD
	TM2	,A90
	TM3	,A90
RECORD,X
	TM2A	,3A30
	TM3A	,3A30

RECORD	ORDFMT
	OF_ORD	,A6
		,A1,	'.'
	OF_NUM	,D1

RECORD	HFF
		,A*,	'HISTORY FILES FROM '
	HFFC	,D2
	HFFY	,D2

RECORD	VARS
	s_ocusnm	,a15
	s_okeydt	,d8
	s_opono		,a10
	s_ojobno		,a10

	PATH	,A100
	q_pct	,d1
	W2_ON	,D1
	LNAM	,A25
	SNAM	,A12
	SINT	,A3
	IS_NOTE		,D1
	SZ1		,D3
	SZ2		,D3
	SAVJOINT	,D5
	SAVFEET		,D6
	SAVFLIN		,D6
	SAVLBS		,D6
	TS_FLAG	,D1		;1=PRINTED DATE TIME STAMP
	PKG	,D2
	TEL	,D10
	U_NAME	,A25
	LL	,D2
	TL	,D2
	SEQNO	,D2
	SAVSEQ	,D2
	SAVSQ1	,D2
	SAVSQ2	,D2
	SAVSQ3	,D2
	SAVDPT	,A2
	SAVCOM	,D4
	W_KEY	,A63
	W_KEY2	,A63
	SAVKEY	,A63
	FIRST_PAGE	,D1
	MULTLINE	,D5
	SKIP_LINE	,D1
	MEMO_ON	,D1
	SAVQTY	,D5
	SAVSHP	,D5
	SAVRFA	,A6
	TMPDSC	,A62
	MAXLIN	,D2
	REM	,D2
	tbl_scac	,a4
	ESC	,A1
	WND_1	,D4
	WND_2	,D4
	W_ID	,D4
	OPNOK	,D1
	KK	,D2
	LPSW	,D1
	PGCNT	,D5
	SPLFIL	,A14
	UP_ARROW	,D3,	991
	DN_ARROW	,D3,	992
	STYPE	,D1
	FOUND	,D3
	CREDIT	,D1
	CONFIG	,D7
	ACCUOM	,A2
	TAX	,D6
	ENTRY	,A30
	INXCTL	,D1
	CNGCTL	,D1
	WHATNO	,D2
	V	,D1
	SWITCH	,D1
	ALPHA	,A8
	DUM	,A10
	READ	,D1,0
	PCATAR	,20A2
	PCATCOMP,20D1
	WRITE	,D1,1
	LOKCTL	,D1
	PAGENO	,D2
	BSEND	,D5
	BSMID	,D5
	SRCCTL	,D1
	BLANKS	,A80
	BLANK90	,A90
	KLINE	,D2
	KSHIPTO	,A25
	KITEM	,A25
	ACHAR	,A10
	DCHAR	,D3
	STAT	,D1
	DEC3	,D3
	PAGE	,D1	,-1
	KRF	,D1
	AKRF	,A7
	KRF2	,D1
	AKRF2	,A7
	INIT	,20A3,	'JJM','PDS','LAM','DEG','JTH',
&			'DLH','JIM','SJM','CJM','BIL',
&			'MAW','PAT','BJZ','JPV','MJM',
&			'JWS','GJK','   ','   ','   '
	MASK	,A12,'ZZZZ,ZZZ.XX-'
	MASK1	,A6,'ZZZZX-'
	MASK2	,A6,'ZXXXXX'
	MASK3	,A8,'XX/XX/XX'
	MASK4	,A9,'ZZZZZ.XXX'
	STARZ	,A9,'*********'
	NUMASK	,A7,'ZZZ,ZZX'
	TOTSAL	,D8
	EXEPRC	,D8
	DECMAL	,D18
	ORGSHV	,D5
	ORGART	,D5
	ORGCUS	,D5
	FIL170	,A14
	FIL172	,A14
	FIL001	,A14
	FIL002	,A14
	FIL139	,A14	;SSQ 6-7-05
	FILON24	,A14
	FILON25	,A14
	FILON26	,A14
	FILON28	,A14
	FILON29	,A14
	J	,D2
	STBC	,A5,'|/-\-'
	L	,D1
;;;	LSTLIN	,D3
	LSTLIN	,D4			;ssq 3/18/04 gots to be 4
	TUNITS	,D5,	0
	TWGHT	,D6,	0
	SLMFLG	,D2
	OEFLAG	,A1
	DASHES	,A30,	'------------------------------'

RECORD ASHIPNO
	AORDNO	,A6
		,A1,'.'
	AHDRN	,A1
		,A1,'.'
	ASHPN	,A2

RECORD OPLINE
	LINCNT	,D4
	PLINE	,A80
RECORD	,X
	ALINCNT	,A4
PROC
	XCALL TERID (V)
	XCALL RDATE (DATE)
	CALL INIT_WINDOW
	XCALL ASCII (27,ESC)
	goto fselec

FSELEC,
	XCALL W_DISP(WND_1,WD_CLR,WDC_WND)
	XCALL W_DISP(WND_1,WD_POS,1,1,'INQUIRE')
	XCALL W_DISP(WND_1,WD_POS, 4,10,'PLEASE SELECT <1>: ')
	XCALL W_DISP(WND_1,WD_POS, 6,10,'1. CURRENT ORDER FILES')
	XCALL W_DISP(WND_1,WD_POS, 8,10,'2. CURRENT YEAR HISTORY FILES')
	XCALL W_DISP(WND_1,WD_POS,10,10,'YY. PREVIOUS YEAR HISTORY FILES')
	XCALL W_DISP(WND_1,WD_POS,14,10,'SEARCH TYPE <1>: ')
	XCALL W_DISP(WND_1,WD_POS,16,10,'1. REGULAR')
	XCALL W_DISP(WND_1,WD_POS,18,10,'2. SHIP TO SCAN')
	XCALL W_DISP(WND_1,WD_POS,20,10,'3. LINE ITEM SCAN')
	XCALL W_UPDT

	XCALL WINPT (W_ID, 4,30,02,00,'#E',ENTRY,INXCTL)
	FSELEC = ENTRY
	GOTO (FSELEC,ABORT), INXCTL
	FYEAR=51			;"ZERO" VALUE (current year)

	using entry(1,1) select
	('0','1'),	fyear = entry
	endusing

;;;	IF(ENTRY(1,1).EQ.'0') FYEAR=ENTRY
	IF (ENTRY.EQ.BLANKS)
	BEGIN
	  ENTRY = '1'
	  XCALL W_DISP(WND_1,WD_POS,4,30,ENTRY(1,1))
	END
	FSELEC = ENTRY
	IF(FSELEC.GT.98) FYEAR=FSELEC
;;;	IF(FSELEC.EQ.2) FYEAR = 52
	IF(FSELEC.EQ.2 .AND. FYEAR.NE.02) FYEAR = 52

	IF(FYEAR .GT. 92) 
	THEN	HFFC = 19
	ELSE	HFFC = 20
;;;	IF(FYEAR .GT. 92) HFFC = 19
;;;	IF(FYEAR .LT. 50)HFFC = 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	HFFY = FYEAR
		

STYPE,
	XCALL WINPT(W_ID,14,30,02,00,'#E',ENTRY,INXCTL)
	STYPE = ENTRY
	GOTO (FSELEC,ABORT), INXCTL
	IF (ENTRY.EQ.BLANKS)
	BEGIN
	  ENTRY = '1'
	  XCALL W_DISP(WND_1,WD_POS,14,30,ENTRY(1,1))
	  XCALL W_UPDT
	END
	STYPE = ENTRY
	IF (STYPE.LT.1.OR.STYPE.GT.3) GOTO STYPE

;======================================================

	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF
;======================================================
DISPLA,
	XCALL W_DISP(WND_1,WD_CLR,WDC_WND)
;;;	USING FSELEC SELECT
	USING FYEAR SELECT
	(51),	XCALL W_DISP(WND_1,WD_POS,1,1,'CURRENT ORDER FILES')
	(52),	XCALL W_DISP(WND_1,WD_POS,1,1,'CURRENT YEAR HISTORY FILES')
	(),	XCALL W_DISP(WND_1,WD_POS,1,1,HFF)
	ENDUSING
	XCALL W_UPDT

;;;	READ (24,ORDHDR,^FIRST) [ERR=H_EMPTY]
	READ (24,ORDHDR,^last) [ERR=H_EMPTY]
	PAGE = -1
	FOR K FROM 1 THRU 20
	BEGIN
	  KEYS (K) =
	  RFA (K) =
	END

	ROW = 12
	PLINE = HD1
;;;	IF (FSELEC.GT.1) PLINE(10,16) = 'INVOICE'
;;;	IF (FSELEC.GT.1 .OR. FYEAR.NE.88) PLINE(10,16) = 'INVOICE'
	IF (FYEAR.NE.51) PLINE(10,16) = 'INVOICE'

	IF (STYPE.EQ.2) PLINE (48,80) =	'SHIP-TO'
	IF (STYPE.EQ.3) PLINE (48,80) = 'ITEM'
	XCALL W_DISP(WND_1,WD_CLR,WDC_EOW)
	XCALL W_DISP(WND_1,WD_POS,ROW,1,PLINE)

	INCR ROW
	PLINE = HD2

;;;	IF (FSELEC.GT.1) PLINE (11,13) =
;;;	IF (FSELEC.GT.1 .OR. FYEAR.NE.88) PLINE (11,13) =
	IF (FYEAR.NE.51) PLINE (11,13) =

	IF (STYPE.GE.2) PLINE (48,80) = 'INFORMATION'
	XCALL W_DISP(WND_1,WD_POS,ROW,1,PLINE)
	PLINE =
	IF (STYPE.GE.2) GOTO STP2

	XCALL W_DISP(WND_1,WD_POS, 4,10,'* ORDER #')
	XCALL W_DISP(WND_1,WD_POS, 6,10,'* KEY DATE                 (CCYYMMDD)')
	XCALL W_DISP(WND_1,WD_POS, 8,10,'* CUSTOMER NAME')
	XCALL W_DISP(WND_1,WD_POS,10,10,'* PO NUMBER')
	XCALL W_DISP(WND_1,WD_POS,11,10,'* JOB NUMBR')
	XCALL W_DISP(WND_1,WD_POS, 7,50,'* ORD / EST  <BOTH>')
	XCALL W_DISP(WND_1,WD_POS, 9,50,'* SALESPERSON <ALL>')
	XCALL W_UPDT

	XCALL TTSTS (STAT)
	IF (STAT)	XCALL W_DISP(WND_1,WD_ACCEPT,DEC3)
;;;
ASK1,
	CTL = '04,26,06,00,#X,00'
ASK1B,
	CALL CINPUT
	GOTO (DISPLA,RESELEC,ASK2,ASK1C), INXCTL
	IF (POS) OORDNO(1,POS) = ENTRY(1,POS)
	IF (POS) READ (24,ORDHDR,OORDNO(1,POS)) [KEY=ASK1B, EOF=ASK1B]
	ALPHA(1,6) = OORDNO
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,ALPHA(1,6))
	GOTO ASK1B	
ASK1C,
	IF (OORDNO.EQ.0) GOTO ASK2
	ROW = 13
	KRF = 0
	AKRF = 'OORDNO'
	GOTO SCREEN
ASK2,
	CTL = '06,26,08,00,#X,00'
ASK2B,
	CALL CINPUT
	GOTO (DISPLA,RESELEC,ASK3,ASK2C), INXCTL
	IF (POS) OKEYDT(1,POS) = ENTRY(1,POS)
	IF (POS) READ (24,ORDHDR,OKEYDT(1,POS)) [KEY=ASK2B, EOF=ASK2B]
	ALPHA(1,8) = OKEYDT
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,ALPHA(1,8))
	GOTO ASK2B
ASK2C,
	IF (OKEYDT.EQ.0) GOTO ASK3
	ROW = 13
	KRF = 5
	AKRF = 'OKEYDT'

	s_okeydt = okeydt
	do	reads (24,ordhdr,eo_2)
	until (okeydt .gt. s_okeydt)
eo_2,
	GOTO SCREEN
ASK3,
	CTL = '08,26,25,00,AX,00'
ASK3B,
	CALL CINPUT
	GOTO (DISPLA,RESELEC,ASK4,ASK3C), INXCTL
	OCUSNM = ENTRY
	IF (POS) READ (24,ORDHDR,OCUSNM(1,POS)) [KEY=ASK3B, EOF=ASK3B]
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,OCUSNM)
	GOTO ASK3B
ASK3C,
	IF (OCUSNM.EQ.BLANKS) GOTO ASK4
	ROW = 13
	KRF = 2
	AKRF = 'OCUSNM'

	s_ocusnm = ocusnm
	do	reads (24,ordhdr,eo_3)
	until (ocusnm .gt. s_ocusnm)
eo_3,	
	GOTO SCREEN

ASK4,
	CTL = '10,26,10,00,AX,00'
ASK4B,
	CALL CINPUT
	GOTO (DISPLA,RESELEC,ASK41,ASK4C), INXCTL
	OPONO = ENTRY
	IF (POS) READ (24,ORDHDR,OPONO(1,POS)) [KEY=ASK4B, EOF=ASK4B]
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,OPONO)
	XCALL W_UPDT
	GOTO ASK4B
ASK4C,
	IF (OPONO.EQ.BLANKS) GOTO ASK1
	ROW = 13
	KRF = 3
	AKRF = 'OPONO'

	s_opono = opono
	do	reads (24,ordhdr,eo_4)
	until (opono .gt. s_opono)
eo_4,
	GOTO SCREEN
ASK41,
	CTL = '11,26,10,00,AX,00'
ASK41B,
	CALL CINPUT
	GOTO (DISPLA,RESELEC,ASK1,ASK41C), INXCTL
	OJOBNO = ENTRY
	IF (POS) READ (24,ORDHDR,OJOBNO(1,POS)) [KEY=ASK41B, EOF=ASK41B]
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,OJOBNO)
	XCALL W_UPDT
	GOTO ASK41B
ASK41C,
	IF (OJOBNO.EQ.BLANKS) GOTO ASK1
	ROW = 13
	KRF = 4
	AKRF = 'OJOBNO'

	s_ojobno = ojobno
	do	reads (24,ordhdr,eo_4)
	until (ojobno .gt. s_ojobno)
eo_5,
	GOTO SCREEN
;;;
STP2,		;SHIP TO SCAN
	XCALL W_DISP(WND_1,WD_POS, 4,10,'* SEARCH START DATE                  (CCYYMMDD)')
	XCALL W_DISP(WND_1,WD_POS, 6,10,'* SEARCH SHIP TO FOR: ')
	XCALL W_DISP(WND_1,WD_POS, 8,10,'* SCAN ITEMS FOR: ')


ASK5,
	CTL = '04,36,08,00,#X,00'
ASK5B,
	CALL CINPUT
	GOTO (DISPLA,RESELEC,NXT5,ASK5C), INXCTL
	IF (POS) OKEYDT(1,POS) = ENTRY(1,POS)
	IF (POS) READ (24,ORDHDR,OKEYDT(1,POS)) [KEY=ASK5B, EOF=ASK5B]
	ALPHA(1,8) = OKEYDT
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,ALPHA(1,8))
	GOTO ASK5B
ASK5C,
	IF (OKEYDT.EQ.0) GOTO NXT5
	ROW = 13
	KRF = 5
	AKRF = 'OKEYDT'
NXT5,
	GOTO (ASK6,ASK7), STYPE-1
	GOTO ASK5
ASK6,
	CTL = '06,36,25,00,AX,00'
ASK6B,
	CALL CINPUT
	GOTO (DISPLA,RESELEC,ASK5,ASK6C), INXCTL
	KSHIPTO = ENTRY
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,KSHIPTO)
	GOTO ASK6B
ASK6C,
	IF (KSHIPTO.EQ.BLANKS) GOTO ASK5
	ROW = 13
	KRF = 5
	AKRF = 'OKEYDT'
	DO BEGIN
	  READS (24,ORDHDR,ASK6D,reverse)
	  XCALL INSTR (1,OSHPNM(1,120),KSHIPTO(1,POS),FOUND)
	END UNTIL (FOUND.GT.0)
	GOTO RDSCRN
ASK6D,
	XCALL MESAG ('COULD NOT FIND ANY SHIP TO WITH THAT KEY',2)
	GOTO DISPLA
;;;
;	;ITEM NUMBER SCAN
;;;
STP3,	

ASK7,
	CTL = '08,36,25,00,AX,00'
ASK7B,
	CALL CINPUT
	GOTO (DISPLA,RESELEC,ASK5,ASK7C), INXCTL
	KITEM = ENTRY
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,KITEM)
	GOTO ASK7B
ASK7C,
	IF (KITEM.EQ.BLANKS) GOTO ASK5
	ROW = 13
	KRF = 5
	AKRF = 'OKEYDT'
	KRF2 = 0
	AKRF2 = 'LORDNO'
	LORDNO = OORDNO
	FIND (25,ORDLIN,LORDNO) [KEY=ASK7C2, EOF=ASK7D]
ASK7C2,
	DO BEGIN
	  READS (25,ORDLIN,ASK7D)
; just item #, don't search desc...
;;;	  XCALL INSTR (1,ORDLIN(12,26),KITEM(1,POS),FOUND)
; search item # & descr ssq 7-09-01...
	  XCALL INSTR (1,ORDLIN(12,56),KITEM(1,POS),FOUND)
	END UNTIL (FOUND.GT.0)
	OORDNO = LORDNO
	LOKCTL = 1
	XCALL ISIO (24,ORDHDR,OORDNO,READ,LOKCTL)
	GOTO RDSCRN
ASK7D,
	XCALL MESAG ('COULD NOT FIND ANY ITEMS CONTAINING THAT STRING',2)
	GOTO DISPLA
SCREEN,

OEFLAG,
	XCALL WINPT(W_ID,07,70,01,00,'A ',ENTRY,INXCTL)
	GOTO (DISPLA), INXCTL
	OEFLAG = ENTRY
	IF (OEFLAG.NE.' '.AND.OEFLAG.NE.'O'.AND.OEFLAG.NE.'E') GOTO OEFLAG
SLMFLG,
	XCALL WINPT(W_ID,09,70,02,00,'# ',ENTRY,INXCTL)
	GOTO (DISPLA), INXCTL
	SLMFLG = ENTRY
	IF(SLMFLG .EQ. 0) GOTO SLM0
	XCALL SREP(SLMFLG, LNAM, SNAM, SINT)
	IF(LNAM.EQ.BLANKS .OR. LNAM.EQ.']]]]]]')	
;;;	IF (SLMFLG.LT.0.OR.SLMFLG.GT.17) 
		BEGIN
		XCALL W_DISP(WND_1,WD_BELL)
		GOTO SLMFLG
		END
	XCALL W_DISP(WND_1,WD_POS,09,75,SINT)
;;;	IF (SLMFLG) XCALL W_DISP(WND_1,WD_POS,09,75,INIT(SLMFLG))

slm0,
; If need to match .vs. salesman(SLMFLG) or order/est(OEFLAG) then
; the following test will determin if we already have our first
; matching ORDHDR record...
	IF (STYPE.EQ.1.AND.(SLMFLG.OR.OEFLAG.NE.' '))
	   BEGIN
	   FOUND = 
	   IF (OEFLAG.EQ.' ') 
		THEN INCR FOUND
		ELSE IF (OLOC.EQ.OEFLAG) INCR FOUND
	   IF (SLMFLG.EQ.0) 
		THEN INCR FOUND
		ELSE IF (OSLMAN.EQ.SLMFLG) INCR FOUND
	   IF (FOUND.NE.2) PAGE =
	   END

; Display one screen full of info, PAGE = -1 implies we have not
; found a matching record yet...
RDSCRN,
	FOR ROW FROM 14 THRU 22
	  BEGIN
; Regular, match salesman and order type...
	  IF (PAGE.NE.-1.AND.STYPE.EQ.1) 
	  DO BEGIN
	     FOUND = 
	     READS (24,ORDHDR,FSCRN,reverse)
	     IF (OEFLAG.EQ.' ') 
	       THEN INCR FOUND
	       ELSE IF (OLOC.EQ.OEFLAG) INCR FOUND
	     IF (SLMFLG.EQ.0) 
	       THEN INCR FOUND
	       ELSE IF (OSLMAN.EQ.SLMFLG) INCR FOUND
	     END UNTIL (FOUND.EQ.2)

; Ship-to scan, match ship-to...
	  IF (PAGE.NE.-1.AND.STYPE.EQ.2) 
	  DO BEGIN
	     READS (24,ORDHDR,FSCRN,reverse)
	     XCALL INSTR (1,OSHPNM(1,120),KSHIPTO(1,POS),FOUND)
	     END UNTIL (FOUND.GT.0)

	  IF (PAGE.NE.-1.AND.STYPE.EQ.3) 
	     BEGIN
	     DO BEGIN
	        READS (25,ORDLIN,FSCRN)
	;;;	XCALL INSTR (1,ORDLIN(12,26),KITEM(1,POS),FOUND)
		XCALL INSTR (1,ORDLIN(12,56),KITEM(1,POS),FOUND)
	        END UNTIL (FOUND.GT.0)

	     OORDNO = LORDNO
	     LOKCTL = 1
	     XCALL ISIO (24,ORDHDR,OORDNO,READ,LOKCTL)
	     END

	  PAGE = 1

; Save the ORDHDR or ORDLIN RFA, depending on type of search;
; (STYLE=3 is Line item)...
	  IF (STYPE.NE.3) 
	  THEN BEGIN
	       XCALL GETRFA (24,RFA(ROW-13))	;order header
	       KEYS(ROW-13) = OORDNO
	       END
	  ELSE BEGIN
	       XCALL GETRFA (25,RFA(ROW-13))	;order line
	       KEYS(ROW-13) = LORDNO
	       END

	  CALL WRTLIN
	END
; ***************************** RDSCRN LOOP *****************************

	PAGE =
	GOTO ACT1	  
FSCRN,
	FOR ROW FROM ROW THRU 22 
		BEGIN
		KEYS(ROW-13) =
		RFA(ROW-13) =
		END
	PAGE =
	GOTO ACT1

; Read reverse...
RDREV,
	IF (STYPE.EQ.1) 
	DO  BEGIN
	    FOUND = 
	    ;;;READS (24,ORDHDR,ACT1,REVERSE)
	    READS (24,ORDHDR,ACT1)

	    IF (OEFLAG.EQ.' ') 
	    THEN INCR FOUND 
	    ELSE IF (OLOC.EQ.OEFLAG) INCR FOUND

	    IF (SLMFLG.EQ.0) 
	    THEN INCR FOUND 
	    ELSE IF (OSLMAN.EQ.SLMFLG) INCR FOUND

	    END UNTIL (FOUND.EQ.2)

	IF (STYPE.EQ.2)
	DO  BEGIN
	    ;;;READS (24,ORDHDR,ACT1,REVERSE)
	    READS (24,ORDHDR,ACT1)
	    XCALL INSTR (1,OSHPNM(1,120),KSHIPTO(1,POS),FOUND)
	    END UNTIL (FOUND.GT.0)

	IF (STYPE.EQ.3)
	    BEGIN
	    DO  BEGIN
	        READS (25,ORDLIN,ACT1,REVERSE)
; just item #, don't search desc...
	        ;;;XCALL INSTR (1,ORDLIN(12,26),KITEM(1,POS),FOUND)
	        XCALL INSTR (1,ORDLIN(12,56),KITEM(1,POS),FOUND)	;ssq 7-9-01
	        END UNTIL (FOUND.GT.0)

	    OORDNO = LORDNO
	    LOKCTL = 1
	    XCALL ISIO (24,ORDHDR,OORDNO,READ,LOKCTL)
	    END

	PAGE =
	ROW = 14

	IF (STYPE.NE.3) 
	THEN  BEGIN
	      XCALL GETRFA (24,RFA(ROW-13))
	      KEYS(ROW-13) = OORDNO
	      END
	ELSE  BEGIN
	      XCALL GETRFA (25,RFA(ROW-13))
	      KEYS(ROW-13) = LORDNO
	      END

	GOTO WRTLIN	
RDFWD,
;       Regular...
	IF (STYPE.EQ.1) 
	DO  BEGIN
	    FOUND = 
	    READS (24,ORDHDR,ACT1,reverse)

	    IF (OEFLAG.EQ.' ') 
	    THEN INCR FOUND 
	    ELSE IF (OLOC.EQ.OEFLAG) INCR FOUND

	    IF (SLMFLG.EQ.0) 
	    THEN INCR FOUND 
	    ELSE IF (OSLMAN.EQ.SLMFLG) INCR FOUND

	    END UNTIL (FOUND.EQ.2)

;       Scan ORDHDR for Ship-to...
	IF (STYPE.EQ.2)
	DO  BEGIN
	    READS (24,ORDHDR,ACT1,reverse)
	    XCALL INSTR (1,OSHPNM(1,120),KSHIPTO(1,POS),FOUND)
	    END UNTIL (FOUND.GT.0)

;	Scan ORDLIN for Item # ...
	IF (STYPE.EQ.3)
	   BEGIN
	   DO  BEGIN
	       READS (25,ORDLIN,ACT1)
;;;	       XCALL INSTR (1,ORDLIN(12,26),KITEM(1,POS),FOUND)
	       XCALL INSTR (1,ORDLIN(12,56),KITEM(1,POS),FOUND)
	       END UNTIL (FOUND.GT.0)

	   OORDNO = LORDNO
	   LOKCTL = 1
	   XCALL ISIO (24,ORDHDR,OORDNO,READ,LOKCTL)
	   END

	PAGE =
	ROW = 22

	IF (STYPE.NE.3) 
	THEN  BEGIN
	      XCALL GETRFA (24,RFA(ROW-13))
	      KEYS(ROW-13) = OORDNO
	      END
	ELSE  BEGIN
	      XCALL GETRFA (25,RFA(ROW-13))
	      KEYS(ROW-13) = LORDNO
	      END

	GOTO WRTLIN	

; Display a line of data to screen...
WRTLIN,
	XCALL ASCII (ROW+35,PLINE(1,1))
	PLINE (2,3) = ') '
	PLINE (4,9) = OORDNO,'ZZZZZX'
	PLINE (12,13) = OLOC
;;;	IF (FSELEC.GT.1.AND.OLOC.EQ.'O') PLINE (12,13) = 'I '
	IF (FYEAR.NE.51.AND.OLOC.EQ.'O') PLINE (12,13) = 'I '

;--------------------------------------------------------
	D_IN = OORDDT

;;;	IF (FSELEC .GT. 1) D_IN = OINVDT
	IF (FYEAR .NE. 51) D_IN = OINVDT

	XCALL DATE8(D_IN, D_OUT, D_OUTR, D_FMT, D_SW)
	PLINE (15,24) = D_FMT
	PLINE (26,45) = OCUSNM
	IF (OMETRO.NE.BLANKS) PLINE(34,45) = OMETRO
;--------------------------------------------------------

;ZZZZZX E XX/XX/XX XX/XX/XX ZZZZZX AAAAAAAAAA AAAAAAAAAA AAA
;                                  AAAAAAAAAAAAAAAAAAAAAAAAA
;12345678901234567890123456789012345678901234567890123456789012345678901234567890
;         1         2         3         4         5         6         7         8
	IF (STYPE.EQ.1)
		BEGIN
		PLINE (48,57) = OPONO
		PLINE (60,69) = OJOBNO
	  XCALL SREP(OSLMAN, LNAM, SNAM, SINT)		;SSQ 11-28-01
	;;;	PLINE (72,74) = INIT(OSLMAN)
		PLINE (72,74) = SINT
		END
	IF (STYPE.EQ.2)
	BEGIN
	  IF (FOUND.GE.1.AND.FOUND.LE.30) PLINE (48,80) = OSHPNM
	  IF (FOUND.GE.31.AND.FOUND.LE.60) PLINE (48,80) = OSHAD1
	  IF (FOUND.GE.61.AND.FOUND.LE.90) PLINE (48,80) = OSHAD2
	  IF (FOUND.GE.91.AND.FOUND.LE.120) PLINE (48,80) = OSHAD3
	END
	IF (STYPE.EQ.3)
	BEGIN
	  IF (FOUND.GE.1.AND.FOUND.LE.15) PLINE (48,80) = LITMNO
	  IF (FOUND.GE.16.AND.FOUND.LE.45) PLINE (48,80) = LDESCR
	END

	FIND(CHN195,CRHOLD,OORDNO) [ERR=SKIP_ATTR]
	pline (12,13) = 'H'
	XCALL W_DISP(WND_1,WD_ATTR,ATTR_SET+ATTR_RVRS)
SKIP_ATTR,
	XCALL W_DISP(WND_1,WD_POS,ROW,1,PLINE)
	XCALL W_UPDT
	XCALL W_DISP(WND_1,WD_ATTR,ATTR_CLR+ATTR_RVRS)

	PLINE =
	IF (PAGE) RETURN

ACT1,
	XCALL W_DISP(WND_1,WD_POS,24,1,'..   <enter> NEXT PAGE; <line #> TO INQUIRE; <f11> NEW SEARCH')
	XCALL W_UPDT
; function keys...
	CLEAR DEC3
	XCALL FLAGS (10000,1)
	XCALL W_DISP(WND_1,WD_ACCEPT,DCHAR)
	XCALL TTSTS (STAT)
	IF (STAT)	XCALL W_DISP(WND_1,WD_ACCEPT,DEC3)

	USING DEC3 SELECT
	(79,133),		;<F11>, <END>
		DCHAR = 27
	(72),	DCHAR = UP_ARROW
	(80),	DCHAR = DN_ARROW
	ENDUSING

	XCALL FLAGS (10000,0)

	USING DCHAR SELECT
	(27),		GOTO DISPLA
	(23), 		GOTO DISPLA
	(13),	BEGIN
		IF ( DCHAR.EQ.13.AND.KEYS(8) )
		   BEGIN
		   PAGE = 1
		   KEYS(1,6) = KEYS(43,48)
		   RFA(1,6) = RFA(43,48)
		   FOR K FROM 2 THRU 9 KEYS(K)=
		   FOR K FROM 2 THRU 9 RFA(K)=

		   IF (STYPE.NE.3)
		   THEN BEGIN
			XCALL POSRFA(24,RFA(1),KRF)
			READS (24,ORDHDR,ACT1,reverse)
			END
		   ELSE BEGIN
			XCALL POSRFA(25,RFA(1),KRF2)
			READS (25,ORDLIN,ACT1)
			IF (LORDNO.NE.OORDNO) 
			   BEGIN
			   OORDNO = LORDNO
			   LOKCTL = 1
			   XCALL ISIO (24,ORDHDR,OORDNO,READ,LOKCTL)
			   END
			END
		   END
		  XCALL W_DISP(WND_1,WD_POS,14,1,WD_CLR,WDC_EOW)
	;;;	  XCALL W_DISP(WND_1,WD_POS,14,1,2,'\')
		  GOTO RDSCRN
		END
	(49 THRU 57),   GOTO GENORD
	(UP_ARROW),	IF (KEYS(1))			;UP-ARROW
		   BEGIN
		   FOR K FROM 9 THRU 2 BY -1
			BEGIN
			XCALL W_DISP(WND_1,WD_POS,K+13,1,AK)
			KEYS(K) = KEYS(K-1)
			RFA(K)  = RFA(K-1)
			END
		   KEYS(1) =
		   RFA(1) =

		   IF (STYPE.NE.3)
		   THEN BEGIN
			XCALL POSRFA(24,RFA(2),KRF)
		;;;	READS (24,ORDHDR,ACT1,REVERSE)
			READS (24,ORDHDR,ACT1)
			END
		   ELSE BEGIN
			XCALL POSRFA(25,RFA(2),KRF2)
		;;;	READS (25,ORDLIN,ACT1,REVERSE)
			READS (25,ORDLIN,ACT1)
			IF (LORDNO.NE.OORDNO) 
			   BEGIN
			   OORDNO = LORDNO
			   LOKCTL = 1
			   XCALL ISIO (24,ORDHDR,OORDNO,READ,LOKCTL)
			   END
			END

		   PAGE =
		   GOTO RDREV
		   END
	(DN_ARROW),					;DOWN-ARROW
		IF (KEYS(9))
		   BEGIN
		   FOR K FROM 1 THRU 8 
		     BEGIN
	             XCALL W_DISP(WND_1,WD_POS,K+13,1,AK)
	             KEYS(K) = KEYS(K+1)
	             RFA(K)  = RFA (K+1)
	   	     END
		   KEYS(9) =
		   RFA(9) =

		   IF (STYPE.NE.3)
		   THEN  BEGIN
			 XCALL POSRFA(24,RFA(8),KRF)
			 READS (24,ORDHDR,ACT1,reverse)
			 END
		   ELSE  BEGIN
			 XCALL POSRFA(25,RFA(8),KRF2)
			 READS (25,ORDLIN,ACT1)
			 IF (LORDNO.NE.OORDNO) 
			    BEGIN
			    OORDNO = LORDNO
			    LOKCTL = 1
			    XCALL ISIO (24,ORDHDR,OORDNO,READ,LOKCTL)
			    END
			 END
		   PAGE =
		   GOTO RDFWD
		   END
	(), 		GOTO ACT1
	ENDUSING

;-----------------------------------------------------------------




	GOTO ACT1
EOF,
	XCALL MESAG ('NO MORE ORDERS FOR THIS KEY',1)
	GOTO DISPLA
;;;
;	GENERATE ORDER/HIST IMAGE INTO TEMP FILE IN INVOICE FORMAT
;;;
GENORD,
	SAVRFA = RFA(1)
	K =
	XCALL ASCII (DCHAR,AK)

	FOR I FROM 1 THRU 20 
	BEGIN
	  PCATAR(I) =
	  PCATCOMP(I) =
	END

	OORDNO = KEYS(K)
	xcall o_note(oordno,1)	;if note exists, automatically display it....
	LOKCTL = 1
	XCALL ISIO (24,ORDHDR,OORDNO,READ,LOKCTL)

	IF (LOKCTL.OR.OORDNO.NE.KEYS(K)) 
	BEGIN
	  XCALL W_DISP(WND_1,WD_POS,23,1,1,AK)
	  XCALL W_DISP(WND_1,WD_POS,23,10,AKEYS(K))
	  XCALL MESAG ('HEADER NOT ON FILE',2)
	  GOTO ACT1
	END
gen2,
	CREDIT =
	XCALL W_DISP(WND_1,WD_POS,24,1,'GENERATING ')
	IF (OSALE+OMISC+OTAX(1)+OTAX(2)+OTAX(3)+OFRGHT.LT.0) CREDIT = 1
;;;	IF (FSELEC.EQ.1)
	IF (FYEAR.EQ.51)
	BEGIN
	  IF (CREDIT)      XCALL W_DISP(WND_1,WD_POS,24,12,'CREDIT ')
	  IF (OLOC.EQ.'O') XCALL W_DISP(WND_1,WD_POS,24,12,'ORDER ')
	  IF (OLOC.EQ.'E') XCALL W_DISP(WND_1,WD_POS,24,12,'QUOTE ')
	END

;;;	IF (FSELEC.GE.2)
	IF (FYEAR.NE.51)
	BEGIN
	  XCALL W_DISP(WND_1,WD_POS,24,12,'HISTORICAL ')
	  IF (CREDIT) XCALL W_DISP(WND_1,WD_POS,0,0,'CREDIT ')
	  XCALL W_DISP(WND_1,WD_POS,0,0,'INVOICE ')
	END
	XCALL W_DISP(WND_1,WD_POS,0,0,'IMAGE PLEASE STAND BY ')

	TOTSAL =
	LINCNT =
	FOR K FROM 1 THRU 20
	BEGIN
	  KEYS (K) =
	  RFA (K) =
	END
	XCALL TIME (TTIME)
	TEXT = 'ISM'
	XCALL ISAMC (TFILE,84,1,'START=1,LENGTH=4,NAME=LINCNT,NODUPS,ASCEND')
	OPEN (99,SU,TFILE)
	XCALL FFILE (170,FIL170,SWITCH)
	OPEN (8,I,FIL170)
	LOKCTL = 1
	XCALL IO (8,ARTCTL,1,READ,LOKCTL)
	ORGART = ORG170
	CLOSE 8

	XCALL FFILE (001,FIL001,SWITCH)
;;;	XCALL FFILE (002,FIL002,SWITCH)
	XCALL FFILE (139,FIL139,SWITCH)	;SSQ 6-7-05
	FIL139(14,14) = 'M'		;SSQ 6-7-05
	FIL001(14,14) = 'M'		;SSQ 5-30-18
	
;;;	OPEN (1,I,FIL001)
;;;	LOKCTL = 1
;;;	XCALL IO (1,CUSCTL,1,READ,LOKCTL)
;;;	ORGCUS = ORG001
;;;	CLOSE 1

;-----------------MEMOS----------------
	MEMO_ON = 1
	CALL LOAD_MEMOS
	CALL LOAD_WORK
	CALL CONSOLIDATE

	CALL LOAD_DUCT
	CALL CONS_DUCT
;---------------------------------

	PAGE = 1
	MAXLIN = 34

	CALL PRTHDR
;---------------------------------

;;; Add memos to output file...
	CLEAR SAVCOM, SAVSQ1, SAVDPT

	FIND (CHNWRK, LINE, ^FIRST) [ERR=EOF_BM]

BM_LOOP,
	READS (CHNWRK, LINE, EOF_BM)
	IF (WDEPT .NE. SAVDPT) CALL NEWDPT
	IF (WSEQ1 .NE. SAVSQ1) CALL NEWSQ1
	IF (COMSEQ .NE. SAVCOM) CALL NEWCOM

	GOTO BM_LOOP
EOF_BM,
	FIND (CHNWRK, LINE, ^FIRST) [ERR=EOF_FIN]
FIN_LOOP,
	READS (CHNWRK, LINE, EOF_FIN)

	W_KEY = W_KEYA + W_KEYB
	STORE (CHNOUT, LINE, W_KEY)
	GOTO FIN_LOOP
EOF_FIN,
	CLOSE CHNWRK
	CALL WRTMEM		;INTERNAL ROUTINE TO WRITE WORKSHEETS
	CALL GETDUC		;PROCESS DUCTWORK
	CALL ENDORD

	GOTO RDSCRN
;;;	CLOSE 14
;;;	LPQUE (SPLFIL, copies:1, delete)
;;;	STOP


PRTHDR,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; HERE
; completion status...
	FIND (CHN193, DPTSTS, OORDNO) [ERR=DPXX]
DPXX,
	FOR I FROM 1 THRU 20
		BEGIN
		XCALL IOS (CHN193, DPTSTS, READ, LOKCTL)
		IF (S_ORDN.NE.OORDNO .OR. LOKCTL.NE.0) EXITLOOP
		IF (S_DEPT.EQ.'**') NEXTLOOP
		PCATAR(I) = S_DEPT
		IF (S_STAT)
		THEN	PCATCOMP(I) = 9
		ELSE	PCATCOMP(I) = 0
		IF (S_PACK) PCATCOMP(I) = 8	;PACKED
		END

	PAGENO = 1
	CALL GETCUS
;-
	IF (W2_ON .EQ. 1)
		BEGIN
		CALL MAKE_W2
		CALL DELETE_W2
		END
;-

	IF (OLOC.EQ.'E') PLINE (50,69) = '           QUOTE: '
	IF (OLOC.EQ.'O') PLINE (50,69) = '           ORDER: '
	OF_ORD = OORDNO,	MASK2
	OF_NUM = OPRTF
	PLINE(68,75) = ORDFMT

;;;	IF (FSELEC.GE.2)
	IF (FYEAR.NE.51)
	BEGIN
	  PLINE (50,69) = 'HISTORICAL INVOICE: '
	  PLINE (70,75) = OINVNO,MASK2
	END
	IF (CREDIT) PLINE (59,67) = ' CREDIT: '

	PLINE (1,46) = C_NAME	;SSQ
	CALL PRINT
	PLINE (1,50) = C_ADD1		;SSQ

	CALL PRINT
	PLINE (54,67) = '  ORDER DATE: '
	IF (CREDIT) PLINE (54,60) = 'CREDIT '

	XCALL DATE8(OORDDT, D_OUT, D_OUTR, D_FMT, D_SW)
	PLINE (68,77) = D_FMT

	PLINE (1,50) = C_ADD2	;SSQ
	CALL PRINT

;;;	IF (FSELEC.GE.2) 
	IF (FYEAR.NE.51)
	BEGIN
	  PLINE (52,69) = '    INVOICE DATE: '
	  XCALL DATE8(OINVDT, D_OUT, D_OUTR, D_FMT, D_SW)
	  PLINE (70,79) = D_FMT
	  IF (CREDIT) PLINE (52,62) = 'CREDIT MEMO'
	END
	PLINE (1,12) = C_LD,	'XXX-XXX-XXXX'
	PLINE (15,26) = C_LOC,	'XXX-XXX-XXXX'
	PLINE (29,32) = 'FAX:'
	PLINE (34,45) = C_FAX,	'XXX-XXX-XXXX'
	CALL PRINT
	PLINE (1,9) = "WEB SITE:"
	PLINE (11,50) = C_WEB
	CALL PRINT
	PLINE(42,57) = ':::CREDIT CODE:'	;SSQ 6-8-04
	PLINE(59,64) = CRDLMT,'XXXXXX'		;SSQ 6-8-04
	CALL PRINT
	PLINE (4,12) = 'BILL TO: '
	PLINE (13,37) = OCUSNM		;;;
	PLINE (42,50) = 'SHIP TO: '
	PLINE (51,80) = OSHPNM		
	CALL PRINT
	PLINE (13,37) = ADD1		
	PLINE (51,80) = OSHAD1		
	CALL PRINT
	PLINE (13,37) = ADD2		
	PLINE (51,80) = OSHAD2		
	CALL PRINT
	PLINE (13,27) = CITY		
	PLINE (29,30) = STATE		
	PLINE (32,41) = ZIP		
	PLINE (51,80) = OSHAD3		
	CALL PRINT

	PLINE (13,24) = PHONE,	'ZZZ ZZZ-XXXX'
	CALL PRINT

	CALL PRINT
	PLINE = H1
	CALL PRINT
	PLINE = H2

;;;	IF (FSELEC.GE.2) PLINE (56,63) = 'SHIP DAT'
	IF (FYEAR .NE. 51)PLINE (56,63) = 'SHIP DAT'

	CALL PRINT
	PLINE = H1
	CALL PRINT
	PLINE (1,6) = OCUSNO,MASK2
;;;	PLINE (8,10) = INIT(OSLMAN)
	PLINE (8,10) = SINT
	PLINE (12,21) = OPONO
	PLINE (23,32) = OJOBNO

	tbl_scac = oscac
	CALL GET_SCAC
	PLINE (35,49) = SC_NAME

;;;	IF (OSHVIA.NE.'1' .OR. OSHVIA.NE.'WC')
;;;	IF (OSHVIA.NE.'WC')
	IF (OSCAC.NE.'WC')
	BEGIN
	  IF (OCLPPD.EQ.'C') PLINE (50,54) = '(COL)'
	  IF (OCLPPD.EQ.'D') PLINE (50,54) = '(COD)'
	  IF (OCLPPD.EQ.'P') PLINE (50,54) = '(PPD)'
	END

	D_IN = OPROMD

;;;	IF (FSELEC .GE. 2) D_IN = OSHDAT
	IF (FYEAR .NE. 51) D_IN = OSHDAT
	XCALL DATE8(D_IN, D_OUT, D_OUTR, D_FMT, D_SW)
	PLINE (56,65) = D_FMT

	OPEN (8,I,FIL170)
	SRCCTL = 2
	BSEND = ORGART
	XCALL SERCH (8,ARTERM,OTERMS,1,1,BSEND,BSMID,SRCCTL,4,2,7,0,0,0,0)
	CLOSE 8
	IF (SRCCTL.EQ.1) ARTRDS = '*NF*'
	PLINE (67,80) = ARTRDS
	CALL PRINT
;-
	CLEAR TS_FLAG
	IF(OSHDTE.NE.0)		;DATE & TIME STAMP
		BEGIN
		XDATE(1,4) = OSHDTE(5,8)
		XDATE(5,6) = OSHDTE(3,4)
		PLINE(35,42) = XDATE, 'XX/XX/XX'
		IF (OSHTIM.GE.1300)
		THEN	BEGIN
			TS_AM = 'PM'
			TS_TIME = (OSHTIM-1200), 'ZX:XX'
			END
		ELSE	BEGIN
			TS_AM = 'AM'
			TS_TIME = OSHTIM,	'ZX:XX'
			END

		PLINE(44,51) = TIME_STAMP
		TS_FLAG = 1
		CALL PRINT
		END
;-

	PLINE = H1
	CALL PRINT
;;;	IF (FSELEC.EQ.1) 
	IF (FYEAR.EQ.51)
	  THEN LINCNT = LINCNT + 6
	  ELSE CALL PRINT

	PLINE = H3
	CALL PRINT
	PLINE = H4
;;;	IF (FSELEC.GE.2) PLINE (4,7) = 'SHIP'
	IF (FYEAR.NE.51) PLINE (4,7) = 'SHIP'
	CALL PRINT
	PLINE = H3
	CALL PRINT

	RETURN
;-------------------------------------------------------------

;-----------------MEMOS----------------
PRTLIN,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR PLINE
	QTY = WQTY
;;;	IF (FSELEC.GE.2) QTY = WQTYSH
	IF (FYEAR.NE.51) QTY = WQTYSH

	PLINE (1,7) = QTY, MASK1
	PLINE (9,23) = WITEM

	PLINE (25,54) = WDESC
	PLINE (55,63) = WPRICE,MASK4
	PLINE (65,66) = WUM
	EXEPRC = (QTY*WPRICE) #1
	PLINE (68,79) = EXEPRC, MASK
	CALL PRINT
	TOTSAL = TOTSAL + EXEPRC
	RETURN
;--------------------------------------

GETDUC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	DUCREC =
	DUCCFG =
	FOR I FROM 1 THRU MAXDUC	SDUCRC(I) = DUCREC

	READ(CHNDUC,DUCWRK,^FIRST) [ERR=GETDUC_EOF]
	GOTO CONDUC

NXTDUC,
	READS(CHNDUC,DUCWRK,GETDUC_EOF) [ERR=GETDUC_EOF]
CONDUC,
	WSIZE3 = 100-WSIZE3
	WSIZE2 = 1000000-WSIZE2
	WSIZE1 = 1000000-WSIZE1
	WSTY=10-WSTY
	SZ1 = %TRN3(WSIZE1)
	SZ2 = %TRN3(WSIZE2)
	CALL PRTDUC
SUMDUC,

	CONFIG(1,3) = WGAUGE
	IF (WDUTYPE.EQ.2.OR.WDUTYPE.EQ.3) CONFIG(1,3) = WTHICK
	CONFIG(4,4) = WDUTYPE
	CONFIG(5,5) = WCAT
	CONFIG(6,6) = WSTY
	CONFIG(7,7) = WSEAM

		; Check to see if the configuration has all ready 
		; been on this order
	I =
	DO BEGIN
	  INCR I
	  DUCREC = SDUCRC(I)
	END
	UNTIL (DUCCFG.EQ.CONFIG.OR.DUCCFG.EQ.0.OR.I.GE.MAXDUC)
	IF (I.GE.MAXDUC) GOTO BADCON

	DUCCFG = CONFIG
	DUCSQF = DUCSQF + WSQFEET
	DUCPND = DUCPND + WPOUNDS
	DUCGPR = WGPRICE
	SDUCRC(I) = DUCREC

	IF (WLINER.GE.1.AND.WLINER.LE.8.AND.WLINER.NE.4)
&		LINSQF(WLINER) = LINSQF(WLINER) + WSQFLIN

	GOTO NXTDUC

GETDUC_EOF,
	CALL PRTSDU
	CLOSE CHNDUC
	XCALL DELET(DUCFIL)
	RETURN
;--------------------------------------------------

BADCON,
	PLINE =
	CALL PRINT
	PLINE (32,60) = 'DUCT INFORMATION IS '	
	CALL PRINT
	GOTO ERRMSG
BADACC,
	PLINE =
	CALL PRINT
	PLINE (32,60) = 'ACCESSORY INFORMATION IS'	
	CALL PRINT
ERRMSG,
	PLINE (32,60) = 'PRESENTLY OVERFLOWING THE'
	CALL PRINT
	PLINE (32,60) = 'ARRAY BOUNDARIES.  PLEASE CALL'
	CALL PRINT
	PLINE (32,60) = 'SOFTWARE SUPPORT TO CORRECT THE'
	CALL PRINT
	PLINE (32,60) = 'PROBLEM'
	CALL PRINT
	RETURN
			;Print duct record
PRTDUC,
	PLINE =
	CALL PRINT
	PLINE (1,7) = WJOINT,MASK1
	PLINE (8,9) = 'JT'
	IF (WDUTYPE.NE.2.AND.WDUTYPE.NE.3)
	BEGIN
	  PLINE (25,26) = WGAUGE,'XX'
	  PLINE (27,28) = 'GA'
	END
	IF (WDUTYPE.EQ.2.OR.WDUTYPE.EQ.3)
	BEGIN
	  PLINE (25,28) = WTHICK,'.XXX'
	END
	PLINE (10,12) = SZ1,'ZZX'
	PLINE (13,13) = 'x'
	PLINE (14,16) = SZ2,'ZZX'
	PLINE (17,17) = 'x'
	PLINE (18,19) = WSIZE3,'ZX'
	IF (WDUTYPE) 
	THEN PLINE (30,33) = DTYPE(WDUTYPE) 
	ELSE PLINE (30,33) = STARZ
	IF (WCAT) 
	THEN PLINE (35,40) = DCAT(WCAT) 
	ELSE PLINE (34,40) = STARZ
	IF (WSTY) 
	THEN PLINE (42,44) = DSTY(WSTY) 
	ELSE PLINE (42,44) = STARZ
	IF (WSEAM) 
	THEN PLINE (46,48) = DSEAM(WSEAM) 
	ELSE PLINE (46,48) = STARZ
	IF (WSEAL.EQ.1) PLINE (50,53) = 'SEAL'
	PLINE (55,63) = WGPRICE,MASK4
	DECMAL = ( WPOUNDS * WGPRICE ) # 1
	PLINE (65,66) = 'LB'
	PLINE (68,79) = DECMAL,MASK
	TOTSAL = TOTSAL + DECMAL		;DUCT
	CALL PRINT

	PLINE (  1,7  ) = WPOUNDS,MASK1
	PLINE (  8,8  ) = '#'
	IF (WLINER) 
	THEN PLINE ( 30,36 ) = DLINER( WLINER ) 
	ELSE PLINE ( 30,36 ) = STARZ
	IF (WSQFLIN.NE.0) 
	BEGIN
	  PLINE ( 10,15 ) = WSQFLIN,MASK1
	  PLINE ( 18,22 ) = 'SQ FT'
	  PLINE ( 37,41 ) = 'LINR '
 	END
	PLINE ( 41,55 ) = WLOCAT
	PLINE ( 57,63 ) = WLINPRC,MASK4
	PLINE ( 65,66 ) = 'SF'
	DECMAL = ( WLINPRC * WSQFLIN ) # 1
	PLINE (68,79) = DECMAL,MASK
	TOTSAL = TOTSAL + DECMAL		;LINER
	CALL PRINT

	RETURN
;--------------------------------------------------------

PRTSDU,
		;Print summarized duct from this order
	PLINE =
	CALL PRINT
	FOR I FROM 1 THRU MAXDUC
	  BEGIN
	  DUCREC = SDUCRC(I)
	  IF (DUCCFG.EQ.0) GOTO PRTSD2
	  PLINE (1,7) = DUCPND,MASK1
	  PLINE (8,8) = '#'
	  PLINE (15,16) = DUCCFG(1,3),'XX'
	  PLINE (18,19) = 'GA'
	  IF (DUCCFG(4,4).EQ.2.OR.DUCCFG(4,4).EQ.3)
	  BEGIN
	    PLINE (15,19) = DUCCFG(1,3),'.XXX'
	  END
	  IF (DUCCFG(4,4)) 
	  THEN	PLINE (30,33) = DTYPE(DUCCFG(4,4)) 
	  ELSE 	PLINE (30,33) = STARZ
	  IF (DUCCFG(5,5)) 
	  THEN	PLINE (35,40) = DCAT(DUCCFG(5,5)) 
	  ELSE	PLINE (30,33) = STARZ
	  IF (DUCCFG(6,6)) 
	  THEN	PLINE (42,44) = DSTY(DUCCFG(6,6)) 
	  ELSE	PLINE (30,33) = STARZ
	  IF (DUCCFG(7,7)) 
	  THEN	PLINE (46,48) = DSEAM(DUCCFG(7,7)) 
	  ELSE	PLINE (30,33) = STARZ
	  CALL PRINT
	  SDUCRC(I) =
	END
PRTSD2,
	FOR I FROM 1 THRU 6
	  BEGIN
	  IF (LINSQF(I).NE.0)
	  BEGIN
	    PLINE (1,7) = LINSQF(I),MASK1
	    PLINE (15,19) = 'SQ FT'
	    PLINE (30,36) = DLINER(I)
	    PLINE (37,42) = ' LINER'
	    CALL PRINT
	    LINSQF(I) =
	  END
	END
	RETURN	
;---------------------------------------------
;================================================

NEWDPT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	SAVDPT = WDEPT
;;;	SAVSQ1 = 0	;setting this to zero causes maim-memo to print
			;each time dept changes...
	SAVCOM = 0
	RETURN
;------------------------------------------

NEWSQ1,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	SAVSQ1 = WSEQ1
	IF (WSEQ1 .LE. 0) RETURN
	CLEAR LINE2
	WSEQ12 = SAVSQ1
	CLEAR WSEQ22, WSEQ32
	WITEM2 = '   F1'
	WTYPE2 = 'M'
	WDESC2 = F1_MEMOL(WSEQ12)
	WDEPT2 = SAVDPT

	W_KEY = W_KEYA + W_KEYB
	STORE (CHNOUT, LINE2, W_KEY)

	RETURN
;------------------------------------------
NEWCOM,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; COMBINATION OF SEQ2 & SEQ3
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	SAVCOM = COMSEQ
	CLEAR TM2, TM3
	IF (WSEQ2 .NE. 0) TM2 = F2_MEMOL(WSEQ2)
	IF (WSEQ3 .NE. 0) TM3 = F3_MEMOL(WSEQ3)


	FOR J FROM 1 THRU 3
		BEGIN
		CLEAR LINE

		WSEQ1 = SAVSQ1
		COMSEQ = SAVCOM
	;;;	WITEM = '   MB'
		WITEM = 
		WTYPE = 'M'
		WDEPT = SAVDPT
		WDESC(1,30) = TM2A(J)
		WDESC(34,63) = TM3A(J)
		IF (WDESC .EQ. BLANK90) NEXTLOOP
		IF (TM2A(J).NE.BLANKS) WITEM(4,5) = 'F2'
		IF (TM3A(J).NE.BLANKS) 
			BEGIN
			WITEM(4,5) = 'F3'
			WDESC(32,32) = '*'
			END
		IF (TM2A(J).NE.BLANKS .AND. TM3A(J).NE.BLANKS) 
			BEGIN
			WITEM(4,8) = 'F2&F3'
			END
		WITEM (10,10) = J,'X'

		W_KEY = W_KEYA + W_KEYB
		STORE (CHNOUT, LINE, W_KEY)
		END

	RETURN
;-------------------------------------------------


;  MEMO LOADS, ETC
LOAD_MEMOS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; Read thru ordlin file, and
		;;; load memo arrays
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CLEAR F1_NUM, F2_NUM, F3_NUM
	FOR J FROM 1 THRU F_MAX
		BEGIN
		CLEAR F1_MEMOS(J)
		CLEAR F2_MEMOS(J)
		CLEAR F3_MEMOS(J)

		CLEAR F1_MEMOL(J)
		CLEAR F2_MEMOL(J)
		CLEAR F3_MEMOL(J)
		END

	FIND (CHN045, ORDLIN, OORDNO) [ERR=MLOOP]
MLOOP,
	READS (CHN045, ORDLIN, EOF_M)
	IF (LINSEQ .NE. 0) GOTO EOF_M
	IF (LMSQ1 .GT. 0) 
		BEGIN
		F1_MEMOS(LMSQ1) = M_SHORTD
		F1_MEMOL(LMSQ1) = M_LDESCR
		END
	IF (LMSQ2 .GT. 0) 
		BEGIN
		F2_MEMOS(LMSQ2) = M_SHORTD
		F2_MEMOL(LMSQ2) = M_LDESCR
		END
	IF (LMSQ3 .GT. 0) 
		BEGIN
		F3_MEMOS(LMSQ3) = M_SHORTD
		F3_MEMOL(LMSQ3) = M_LDESCR
		END
	GOTO MLOOP
EOF_M,
	RETURN
;-------------------------------------------------

LOAD_WORK,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; Move non-memo line items
		;;; into work file
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;Create work file...
	WFORD = OORDNO,'XXXXXX'
;;;	XCALL ISAMC (WRKFIL, 136, 1, 'START=1, LENGTH=63, DUPS, ASCEND')
	XCALL ISAMC (WRKFIL, 136, 1, KEYSPEC)
	OPEN (33, SU, WRKFIL)
	CHNWRK = 33

;Create output file...
	OFORD = OORDNO,'XXXXXX'
;;;	XCALL ISAMC (OUTFIL, 136, 1, 'START=1, LENGTH=63, DUPS, ASCEND')
	XCALL ISAMC (OUTFIL, 136, 1, KEYSPEC)
	OPEN (34, SU, OUTFIL)
	CHNOUT = 34
;---------------------------------------------------------------

	FIND (CHN045, ORDLIN, OORDNO) [ERR=LOOP]
LOOP,
	READS (CHN045, ORDLIN, L_EOF)
	IF (LORDNO .NE. OORDNO) GOTO L_EOF
	IF (LTYPE .EQ. 'M') GOTO LOOP

	WTYPE = 'L'
;;;	WDEPT = LDEPT
	WDEPT = LPRDCD(1,1)		;ssq 6-22-00

	WSEQ1 = LMSQ1
	WSEQ2 = LMSQ2
	WSEQ3 = LMSQ3
	WSQNO = LSRTSQ
	WITEM = LITMNO
	using witem select
	('JEB','JEF','JJG','JTG'), WITEM = LITMNO(2,15)	;SKIP THE "J"
	endusing

	WDESC = LDESCR
	IF (LDAMPR) WITEM(10,15) = 'Damper'
	WQTY = LQTYOR
	WQTYSH = LQTYSH
	WUM = LUOFM
	WPRICE = LPRICE
;;;	WCPFLG = LCPFLG

	W_KEY = W_KEYA + W_KEYB
	STORE (CHNWRK, LINE, W_KEY)
	GOTO LOOP

L_EOF,
	RETURN
;----------------------------------------------

CONSOLIDATE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; Consolidate line items for the
		;;; same part #
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	FIND (CHNWRK, LINE, ^FIRST) [ERR=EOF_CON]
	SAVKEY = '***'
CONLOOP,
	READS(CHNWRK, LINE, EOF_CON)
;;;	IF (W_KEY.NE.SAVKEY .OR. WCPFLG)

	W_KEY = W_KEYA + W_KEYB
	IF (W_KEY .NE. SAVKEY)
	THEN	CALL NEWKEY
	ELSE	BEGIN
		INCR MULTLINE
		SAVQTY = SAVQTY + WQTY
		SAVSHP = SAVSHP + WQTYSH
		DELETE (CHNWRK)
		END
	GOTO CONLOOP

NEWKEY,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (SAVKEY .EQ. '***') GOTO OUTKEY
	IF (MULTLINE .EQ. 0) GOTO OUTKEY

	READ (CHNWRK, LINE, SAVKEY)
	WQTY = SAVQTY
	WQTYSH = SAVSHP
	W_KEY = W_KEYA + W_KEYB			;ssq 6-19-03
	WRITE (CHNWRK, LINE, SAVKEY)
OUTKEY,
	SAVKEY = W_KEY
	SAVQTY = WQTY
	SAVSHP = WQTY
	CLEAR MULTLINE
	RETURN
;-----------------------------------------------

EOF_CON,
	CALL NEWKEY
	RETURN
;-----------------------------------------------

LOAD_DUCT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; LOAD DUCTWORK INTO WORKFILE
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;Create work file...
	WRORD = OORDNO,'XXXXXX'
	XCALL ISAMC (DUCFIL, 111, 1, 'START=1, LENGTH=83, DUPS, ASCEND')
	OPEN (39, SU, DUCFIL)
	CHNDUC = 39

;Note: only the ductwork data is moved into the work file,
; it is assumed that all the acc info has already been moved
; to the ordlin file...
;;;	IF (FSELEC.GT.1)GOTO D_HST
	IF (FYEAR.NE.51)GOTO D_HST

	FIND(CHN175,DUCACC,OORDNO) [ERR=LD_LOOP]
LD_LOOP,
	LOKCTL = 1
	XCALL IOS (CHN175,DUCACC,READ,LOKCTL)
	IF (LOKCTL.NE.0.OR.DUCTOR.NE.OORDNO) GOTO LD_EOF

	XCALL DDEPT (GAUGE,SIZE3,DUTYPE,WD_DEPT,STY)
;;;	USING STY SELECT
;;;	(1,4,5),	WD_DEPT='P'		;TDC
;;;	(2,3,6),	WD_DEPT='O'		;S&D
;;;	ENDUSING

	WDUTYPE = DUTYPE	; Type of duct 
	WSTY = 10-STY		; Style		descending
	WLINER = LINER		; Liner 
	WSEAM = SEAM		; Seam  
	WSEAL = SEAL		; Seal
	WGAUGE = GAUGE		; Gauge ( 26,24,22,20,18 )
	WSIZE3 = 100-SIZE3	; LENGTH	descending
	WSIZE1 = 1000000-SIZE1	; SLIP		descending
	WTHICK = THICK		; Dec. Thickness .024-24g .032-22g .040-20g .050-18g
	WCAT = CAT		; Catagory 
	WJOINT = JOINT		; Number of joints ( quantity)
	WSIZE2 = 1000000-SIZE2	; DRIVE		descending	

	WLOCAT = LOCAT
	WSQFEET = SQFEET
	WPOUNDS = POUNDS
	WSQFLIN = SQFLIN
	WGPRICE = GPRICE
	WLINPRC = LINPRC
	WDPUNCH = DPUNCH
	WDSEQ = DSEQ	
	STORE(CHNDUC,DUCWRK,WD_KEY)

	GOTO LD_LOOP
LD_EOF,
	RETURN
;-----------------------------------------------
D_HST,
	FIND(CHN175,SLHDUC,OORDNO) [ERR=LH_LOOP]
LH_LOOP,
	LOKCTL = 1
	XCALL IOS (CHN175,DUCACC,READ,LOKCTL)
	IF (LOKCTL.NE.0.OR.HDUCTOR.NE.OORDNO) GOTO LH_EOF

	XCALL DDEPT (HGAUGE,HSIZE3,HDUTYPE,WD_DEPT,HSTY)
;;;	USING HSTY SELECT
;;;	(1,4,5),	WD_DEPT='P'		;TDC
;;;	(2,3,6),	WD_DEPT='O'		;S&D
;;;	ENDUSING

	WDUTYPE = HDUTYPE	; Type of duct 
	WSTY = 10-HSTY		; Style		descending
	WLINER = HLINER		; Liner 
	WSEAM = HSEAM		; Seam  
	WSEAL = HSEAL		; Seal
	WGAUGE = HGAUGE		; Gauge ( 26,24,22,20,18 )
	WSIZE3 = 100-HSIZE3	; LENGTH	descending
	WSIZE1 = 1000000-HSIZE1	; SLIP		descending
	WTHICK = HTHICK		; Dec. Thickness .024-24g .032-22g .040-20g .050-18g
	WCAT = HCAT		; Catagory 
	WJOINT = HJOINT		; Number of joints ( quantity)
	WSIZE2 = 1000000-HSIZE2	; DRIVE		descending	

	WLOCAT = HLOCAT
	WSQFEET = HSQFEET
	WPOUNDS = HPOUNDS
	WSQFLIN = HSQFLIN
	WGPRICE = HGPRICE
	WLINPRC = HLINPRC
;;;	WDPUNCH = HDPUNCH
;;;	WDSEQ = HDSEQ	
	STORE(CHNDUC,DUCWRK,WD_KEY)

	GOTO LH_LOOP
LH_EOF,
	RETURN
;-----------------------------------------------
CONS_DUCT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; CONSOLIDATE DUCTWORK
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CLEAR MULTLINE, SAVJOINT, SAVFEET, SAVFLIN, SAVLBS
	FIND(CHNDUC,DUCWRK,^FIRST) [ERR=EOF_CD]
	SAV_WD_KEY = '***'

CD_LOOP,
	READS(CHNDUC,DUCWRK,EOF_CD)
	IF(WD_KEY .NE. SAV_WD_KEY)
	THEN	CALL WD_NEWKEY
	ELSE	BEGIN
		INCR MULTLINE
		SAVJOINT = SAVJOINT + WJOINT
		SAVFEET = SAVFEET + WSQFEET
		SAVFLIN = SAVFLIN + WSQFLIN
		SAVLBS = SAVLBS + WPOUNDS
		DELETE(CHNDUC)
		END
	GOTO CD_LOOP		
EOF_CD,
	CALL WD_NEWKEY
	RETURN

WD_NEWKEY,
	IF(SAV_WD_KEY .EQ. '***') GOTO OUT_WDKEY
	IF(MULTLINE .EQ. 0) GOTO OUT_WDKEY
	READ(CHNDUC,DUCWRK,SAV_WD_KEY)
	WJOINT = SAVJOINT
	WSQFEET = SAVFEET
	WPOUNDS = SAVLBS
	WSQFLIN = SAVFLIN
	WRITE(CHNDUC,DUCWRK,SAV_WD_KEY)

OUT_WDKEY,
	SAV_WD_KEY = WD_KEY
	SAVJOINT = WJOINT
	SAVFEET = WSQFEET
	SAVFLIN = WSQFLIN
	SAVLBS = WPOUNDS

	CLEAR MULTLINE
	RETURN
;-----------------------------------------------

WRTMEM,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; ROUTINE TO FORMAT AND PRINT WO'S
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; print top notes...
	CLEAR IS_NOTE
	OC_ORD = OORDNO
	OC_SEQ = 0
	FIND(CHN075,ORDNOT,COMKEY) [ERR=NXTNOT]
NXTNOT,
	XCALL IOS (CHN075, ORDNOT, READ, LOKCTL)
	IF(LOKCTL .NE. 0) GOTO EOF_NNT
	IF(OC_ORD .NE. OORDNO) GOTO EOF_NNT
	IF(OC_SEQ .GE. 900) GOTO EOF_NNT
	PLINE(35,64) = OC_COM
	CALL PRINT
	IS_NOTE = 1
	GOTO NXTNOT
EOF_NNT,
	IF(IS_NOTE)
		BEGIN
		CLEAR PLINE
		CALL PRINT
		END

;----------------------------------
	CLOSE CHNOUT
	OPEN (CHNOUT, SI, OUTFIL)
	SAVDPT = -1
	FIRST_PAGE = 1

W_LOOP,
	READS (CHNOUT, LINE, W_EOF)
	IF (WTYPE.EQ.'L' .AND. WQTY.EQ.0) GOTO W_LOOP		;SKIP OF QTY=0
	IF (WDEPT .NE. SAVDPT) CALL W_NEWDPT
	IF (WTYPE .EQ. 'M')
	THEN	BEGIN
		;;;XCALL HP(14,hpFONT,hpBOLD)
		IF (MEMO_ON .EQ. 0)
			BEGIN
			CLEAR PLINE
			CALL MEMO_PRINT
			MEMO_ON = 1
			END
		IF (MITEM.EQ.'   F1') 
		THEN	FOR J FROM 1 THRU 3
			BEGIN
			TMPDSC = MMEMO(J)
			CALL MAIN_MEMO
			PLINE (8,70) = TMPDSC
			IF (MMEMO(J) .NE. BLANKS) CALL MEMO_PRINT
			END
		ELSE	BEGIN
			PLINE(8,70) = M_LONG
			CALL MEMO_PRINT
			GOTO W_LOOP
			END

		END
	ELSE	BEGIN
		;bold all lines assoc w/ memos
	;;;	IF (MSEQ .EQ. 0);;;XCALL HP(14,hpFONT,hpMEDIUM)
		CALL PRTLIN
		END


	GOTO W_LOOP
;====================================================

MAIN_MEMO,	;;;;;;;;;;;;;;;;;;;;;;;;;;
	TL = %TRIM(TMPDSC)
;;;	REM = 62 - TL
	REM = 50 - TL
	REM = REM/2
	IF (REM.GT.0)
		BEGIN
		CLEAR TMPDSC
		TMPDSC(1,REM) = DASHES
		TMPDSC(REM+1,REM+TL) = MMEMO(J)
		TMPDSC(REM+1+TL,50) = DASHES
		END
	RETURN
;-----------------------------------------
W_EOF,
	CLOSE CHNOUT
	CLOSE CHNWRK
	XCALL DELET (WRKFIL)
	XCALL DELET (OUTFIL)
	RETURN
;===============================================

W_NEWDPT,
	SAVDPT = WDEPT
	RETURN
;------------------------------------
;---------------------------------------------

ENDORD,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; print bottom notes...
	CLEAR PLINE
	CALL PRINT

	OC_ORD = OORDNO
	OC_SEQ = 900
	FIND(CHN075,ORDNOT,COMKEY) [ERR=BXTNOT]
BXTNOT,
	XCALL IOS (CHN075, ORDNOT, READ, LOKCTL)
	IF(LOKCTL .NE. 0) GOTO EOF_BNT
	IF(OC_ORD .NE. OORDNO) GOTO EOF_BNT
	PLINE(35,64) = OC_COM
	CALL PRINT
	GOTO BXTNOT
EOF_BNT,

;;;	CALL PRTSAC
;;;	CALL PRTSDU

	CLEAR D_LIN1, D_LIN2, D_LIN3
;;;	IF (FSELEC.GE.2 .AND. OINVDT.NE.0) CALL DISPLA_DISC
	IF (FYEAR.NE.51 .AND. OINVDT.NE.0) CALL DISPLA_DISC

	PLINE =
	CALL PRINT
;;;	IF (ODISC.EQ.0) GO TO NOODSC
;;;	PLINE(23,45) = 'ORDER DISCOUNT PERCENT:'
;;;	PLINE(47,48) = ODISC
;;;	CALL PRINT
;;;	CALL PRINT
NOODSC,
	IF (TOTSAL.LT.0) CREDIT = 1
	PLINE (1,50) = D_LIN1
	PLINE (53,67) = '  SALE AMOUNT: '
	IF (CREDIT) PLINE (53,58) = 'CREDIT'
	PLINE (68,79) = TOTSAL, MASK
	IF (TOTSAL.EQ.0.AND.OSALE.NE.0) PLINE (52,52) = 'O'
	IF (TOTSAL.EQ.0.AND.OSALE.NE.0) PLINE (68,79) = OSALE, MASK
	IF (TOTSAL.NE.OSALE)
	BEGIN
	  PLINE (68,79) = TOTSAL,MASK
	END
	CALL PRINT
	PLINE(1,50) = D_LIN2
	CALL PRINT
	PLINE(1,50) = D_LIN3

	LSTLIN = LINCNT		;ssq 12-9-98
;-
;;;	IF(FSELEC.EQ.1 .AND. FYEAR.EQ.88)
	IF(FYEAR.EQ.51)
	THEN	BEGIN
		IF (CREDIT)
		BEGIN
		  LINCNT = 01
		  LOKCTL = 1
		  XCALL ISIO (99,OPLINE,LINCNT,READ,LOKCTL)
		  PLINE (59,67) = ' CREDIT: '
		  LOKCTL = 1
		  XCALL ISIO (99,OPLINE,LINCNT,WRITE,LOKCTL)
		  LINCNT = 03
		  LOKCTL = 1
		  XCALL ISIO (99,OPLINE,LINCNT,READ,LOKCTL)
		  PLINE (54,60) = ' CREDIT'
		  LOKCTL = 1
		  XCALL ISIO (99,OPLINE,LINCNT,WRITE,LOKCTL)
		END	
	      END
	ELSE	BEGIN
		TAX = OTAX(1) + OTAX(2) + OTAX(3)
		PLINE (45,67) = 'STATE SALES TAX (XXX): '
		PLINE (62,64) = OTAXFL		
		PLINE (68,79) = OTAX(1), MASK	
		CALL PRINT
		PLINE (52,67) = 'CITY SALES TAX: '
		PLINE (68,79) = (OTAX(2)+OTAX(3)),MASK
		CALL PRINT			
		PLINE (50,67) = 'SHIPPING CHARGES: '
		PLINE (68,79) = OFRGHT, MASK
		CALL PRINT
		IF (OMISC)
		BEGIN
		  PLINE (54,67) = 'MISC CHARGES: '
		  PLINE (68,79) = OMISC, MASK
		  CALL PRINT
		END
		CALL PRINT
		DECMAL = TOTSAL + OMISC + TAX + OFRGHT
		PLINE (61,67) = 'TOTAL: '
		PLINE (68,79) = DECMAL, MASK
		CALL PRINT
		LSTLIN = LINCNT		;12-9-98 ssq
	      END
;-
;;;
;	OPEN ORDER COMPLETION STATUS REPORT
;;;
;;;	IF (FSELEC.EQ.1.AND.OLOC.EQ.'O')
	IF (FYEAR.EQ.51.AND.OLOC.EQ.'O')
	BEGIN
;;;	  LINCNT = 16		;SSQ 9-12-97
	  LINCNT = 17		;SSQ 3-29-05 (for phone)
;;;	  IF(TS_FLAG)LINCNT = 17		;SSQ 8-11-00
	  IF(TS_FLAG)LINCNT = 18	;SSQ 3-29-05 for phone
	  FOR I FROM 1 THRU 6
	  BEGIN
	    IF (I.EQ.1) PLINE (1,12) = '|DEPARTMENT'
	    IF (I.EQ.2) PLINE (1,12) = '|COMPLETION'
	    IF (I.EQ.3) PLINE (1,12) = '|STATUS    '
	    IF (PCATAR(I).NE.'  '.OR.PCATAR(I+2).NE.'  '.OR.
&		  PCATAR(I+12).NE.'  ')
	    BEGIN
	      PLINE (1,1) = '|'
	      IF (PCATAR(I).NE.'  ') 
	      BEGIN
	        PLINE (16,17) = PCATAR(I)
	        IF (PCATCOMP(I).EQ.0) 
		THEN	PLINE (18,23) = ':NO   '
	        ELSE	BEGIN
			IF (PCATCOMP(I).EQ.9) PLINE (18,23) = ':COMPL'
			IF (PCATCOMP(I).EQ.8) PLINE (18,23) = ':PACKD'
			END
	      END

	      IF (PCATAR(I+6).NE.'  ') 
	      BEGIN
	        PLINE (27,28) = PCATAR(I+6)
	        IF (PCATCOMP(I+6).EQ.0) 
		THEN	PLINE (29,34) = ':NO   '
	        ELSE	BEGIN
			IF (PCATCOMP(I+6).EQ.9) PLINE (29,34) = ':COMPL'
			IF (PCATCOMP(I+6).EQ.8) PLINE (29,34) = ':PACKD'
			END
	      END

	      IF (PCATAR(I+12).NE.'  ') 
	      BEGIN
	        PLINE (38,39) = PCATAR(I+12)
	        IF (PCATCOMP(I+12).EQ.0) 
		THEN	PLINE (40,45) = ':NO   '
	        ELSE 	BEGIN
			IF (PCATCOMP(I+12).EQ.9) PLINE (40,45) = ':COMPL'
			IF (PCATCOMP(I+12).EQ.9) PLINE (40,45) = ':PACKD'
			END
	      END
	      PLINE (80,80) = '|'
	    END

;;;
;	B/L QUICK STATUS (5 B/Ls ONLY)
;;;
	    IF (I.EQ.1) PLINE (48,79) = ' B/L#  B/L DT    STAT   SHIP DT '
	    IF (I.EQ.2)
	    BEGIN
	      BHORDN = OORDNO
	      LOKCTL = 1
	      XCALL ISIO (28,BLHEAD,BHORDN,READ,LOKCTL)
	      IF (BHORDN.NE.OORDNO) LOKCTL = 1
	    END
	    IF (I.GT.2)
	    BEGIN
	      LOKCTL = 1
	      XCALL IOS (28,BLHEAD,READ,LOKCTL)
	      IF (BHORDN.NE.OORDNO) LOKCTL = 1
	    END
	    IF (I.NE.1.AND.LOKCTL.EQ.0)
	    BEGIN
	      PLINE (1,1) = '|'
	      AORDNO = BHORDN	
	      AHDRN = BHHDRN
	      ASHPN = BHSHPN,'XX'
	      PLINE(48,52) = ASHIPNO(7,11)

	      XCALL DATE8(BHBILD, D_OUT, D_OUTR, D_FMT, D_SW)
	      PLINE(55,62) = D_OUT,MASK3

	      USING BHSTATS SELECT
		(0),	PLINE (65,69) = 'OPEN '
		(1),	PLINE (65,69) = 'SELEC'
		(2),	PLINE (65,69) = 'PRNTD'
		(3),	PLINE (65,69) = 'COMPL'
		(9),	PLINE (65,69) = 'HIST '
		() ,	PLINE (65,69) = STARZ		;UNDFINED/ILLEGAL
	      ENDUSING

	      XCALL DATE8(BHSHPD, D_OUT, D_OUTR, D_FMT, D_SW)
	      PLINE(72,79) = D_OUT,MASK3

	      IF (BHTRACE.NE.BLANKS) PLINE(71,71) = 'T'
	      PLINE (80,80) = '|'
	    END
	    IF (PLINE.NE.BLANKS) CALL PRINT
	  END
	END

BL_REPORT,
;;;
;	COMPLETE B/L REPORT (B/L IMAGE)
;;;

	LINCNT = LSTLIN

	BHORDN = OORDNO
	LOKCTL = 1
	XCALL ISIO (28,BLHEAD,BHORDN,READ,LOKCTL)
PRTBL2,
;;;	IF (LOKCTL.OR.BHORDN.NE.OORDNO) GOTO ENDBLP
	IF (LOKCTL.OR.BHORDN.NE.OORDNO) 
		BEGIN
		CALL CHECK_UPS
		GOTO ENDBLP
		END

	TUNITS =
	TWGHT =
	PLINE =
	CALL PRINT
	PLINE = ':::BILL OF LADING INFO'
	CALL PRINT
	PLINE = H5
	CALL PRINT
	PLINE = H6
	PLINE (4,12) = 'CARRIER: '

	tbl_scac = bhscac
	CALL GET_SCAC
	PLINE (13,33) = SC_NAME

	PLINE (38,79) = 'STRAIGHT BILL OF LADING - SHORT FORM'
	CALL PRINT
;-----------------------------------
	CLEAR TEL
	IF(SC_TEL2 .NE. 0)
	THEN	TEL = SC_TEL2
	ELSE	TEL = SC_TEL1

	PLINE(4,9) = 'PHONE:'
	PLINE(11,22) = TEL,	'ZZZ XXX XXXX'
	CALL PRINT
;-----------------------------------
	PLINE = H5

	CALL PRINT
	PLINE = H6
	PLINE (4,33) =
	PLINE (69,79) = 'SHIPPERS #'
	CALL PRINT
	PLINE = H6
	PLINE (4,33) = BHSHPNM
	PLINE (35,67) = C_NAME
;;;	PLINE (38,66) = 'SHEET METAL CONNECTORS, INC.'
	AORDNO = BHORDN
	AHDRN = BHHDRN
	ASHPN = BHSHPN,'XX'
	PLINE (69,79) = ASHIPNO
	CALL PRINT
	PLINE = H6
	PLINE (4,33) = BHSHAD1
	PLINE(38,66) = C_ADD1
;;;	PLINE (38,66) = 'MINNEAPOLIS,  MN   55432-5439'
	PLINE (68,80) = '+-----------+'
	CALL PRINT
	PLINE = H6
	PLINE (4,33) = BHSHAD2
	PLINE (69,79) = 'PRO NO.'
	CALL PRINT
	PLINE = H6
	PLINE (4,33) = BHSHAD3
	PLINE (69,79) = BHPRON
	CALL PRINT
	PLINE = H5
	CALL PRINT
	PLINE = H6
	PLINE(4,12) = 'CUST PO #'
	PLINE(19,66) = 'SPECIAL INST'
	PLINE(69,79) = 'SHIP DATE'
	CALL PRINT
	PLINE = H6
	PLINE(4,13) = BHPONO
	PLINE(19,66) = BHSPIN1
	XCALL DATE8(BHSHPD, D_OUT, D_OUTR, D_FMT, D_SW)
	PLINE(69,78) = D_FMT

	CALL PRINT
	PLINE = H5
	CALL PRINT
	PLINE = H6
	PLINE (4,38) = 'SPECIAL INST-2'
	PLINE (69,79) = 'PPD/COL'
	CALL PRINT
	PLINE = H6
	PLINE (4,66) = BHSPIN2
	PLINE (69,79) = 'ERROR'
	IF (BHPPCL.EQ.'P') PLINE (69,79) = 'PREPAID'
	IF (BHPPCL.EQ.'C') PLINE (69,79) = 'COLLECT'
	CALL PRINT
	PLINE = H5
	CALL PRINT
;;;
;	B/L LINE ITEMS
;;;
	KEY179 = KEY178
	LOKCTL = 1
	XCALL ISIO (29,BLLINE,KEY179(1,9),READ,LOKCTL)
	IF (LOKCTL.EQ.0)
	BEGIN
	  PLINE = H7
	  CALL PRINT
	  PLINE = H8
	  PLINE (4,6) = 'QTY'
	  PLINE (10,16) = 'UNITS'
	  PLINE (20,54) = 'DESCRIPTION'
	  PLINE (58,63) = 'WEIGHT'
	  PLINE (67,69) = 'CLS'
	  PLINE (72,79) = 'XxXxXxXx'
	  CALL PRINT
	  PLINE = H7
	  CALL PRINT
	  PLINE = H8
	  CALL PRINT
	END
	DO BEGIN
	  IF (LOKCTL.NE.0) NEXTLOOP
	  PLINE = H8
	  PLINE (20,54) = BLDESC
	  IF (BLCLAS.NE.999)
	  BEGIN
	    PLINE (2,6) = BLQTY,NUMASK
	    PLINE (10,16) = BLUOM
	    PLINE (57,63) = BLWGHT,NUMASK
	    PLINE (67,69) = BLCLAS,NUMASK
	  END
	  PLINE (72,79) = 'XxXxXxXx'
	  CALL PRINT
	  PLINE = H8
	  CALL PRINT
	  TUNITS = TUNITS + BLQTY
	  TWGHT = TWGHT + BLWGHT
	  LOKCTL = 1
	  XCALL IOS (29,BLLINE,READ,LOKCTL)
	END UNTIL (LOKCTL.NE.0.OR.KEY179.NE.KEY178)	  
	PLINE = H7
	CALL PRINT
	PLINE = H8
	PLINE(2,6) = 'TOT Q'
	PLINE(58,63) = 'TOT WT'
	PLINE (72,79) =	'XxXxXxXx'
	CALL PRINT
	PLINE = H8
	PLINE(2,6) = TUNITS,NUMASK
	PLINE (57,63) = TWGHT,NUMASK
	CALL PRINT
	PLINE = H7
	CALL PRINT
	LOKCTL = 1
	XCALL IOS (28,BLHEAD,READ,LOKCTL)
	GOTO PRTBL2
ENDBLP,
;>dbg
;;;	FIND(CHN195,CRHOLD,OORDNO) [ERR=NOT_ON_HOLD]
	read(CHN195,CRHOLD,OORDNO) [ERR=NOT_ON_HOLD]
	if (ch_flag .eq. 'C')
	then	xcall olmsg(w_id,24,'Order has been processed on Credit Card',1)
	else	begin	
		point_size = 20
		sts = %u_wndfont(d_setfont, font_id, face_name, point_size)
		XCALL W_DISP(WND_1,wd_pos,1,1,WD_CLR,WDC_EOW)
		xcall olmsg(w_id,5,'Order is on Credit Hold!',1)
		point_size = 10
		sts = %u_wndfont(d_setfont, font_id, face_name, point_size)
		XCALL W_DISP(WND_1,wd_pos,1,1,WD_CLR,WDC_EOW)
		end
	xcall w_updt
NOT_ON_HOLD,
;>dbg

	XCALL W_DISP(WND_1,WD_POS,3,1,WD_CLR,WDC_EOW)

	CLOSE 99
	OPEN (99,SI,TFILE)
	READ (99,OPLINE,^FIRST)
	PAGE = -1

RDSCRN2,
	FOR ROW FROM 03 THRU 22
	BEGIN
	  IF (PAGE.NE.-1) READS (99,OPLINE,FSCRN2)
	  PAGE = 1
	  XCALL GETRFA (99,RFA(ROW-2))
	  KEYS(ROW-2) = LINCNT
	  CALL WRTLIN2
	END
	PAGE =
	GOTO ACT2
FSCRN2,
	FOR ROW FROM ROW THRU 22 
	BEGIN
	  KEYS(ROW-2) =
	  RFA(ROW-2) =
	END
	PAGE =
	GOTO ACT2
RDREV2,
	READS (99,OPLINE,ACT2,REVERSE)
;-
	FOR K FROM 20 THRU 2 BY -1
		BEGIN
		KEYS(K) = KEYS(K-1)
		RFA(K)  = RFA(K-1)
		END
	KEYS(1) =
	RFA(1) =
;-
	PAGE =
	ROW = 3
	XCALL GETRFA (99,RFA(ROW-2))
	KEYS(ROW-2) = LINCNT
	XCALL W_AREA(WND_1,WA_SCROLL,WAS_DOWN,1)
;;;	USING FSELEC SELECT
	USING FYEAR SELECT
	(51),	XCALL W_DISP(WND_1,WD_POS,1,1,'CURRENT ORDER FILES')
	(52),	XCALL W_DISP(WND_1,WD_POS,1,1,'CURRENT YEAR HISTORY FILES')
	(),	XCALL W_DISP(WND_1,WD_POS,1,1,HFF)
	ENDUSING
	XCALL W_UPDT
;-
	XCALL W_DISP(WND_1,WD_POS,2,1,WD_CLR,WDC_EOL)
	XCALL W_DISP(WND_1,WD_POS,ROW,1,WD_CLR,WDC_EOL )
	GOTO WRTLIN2
RDFWD2,
	READS (99,OPLINE,ACT2)
;-
	FOR K FROM 1 THRU 19
		BEGIN
		KEYS(K) = KEYS(K+1)
		RFA(K)  = RFA (K+1)
		END
	KEYS(20) =
	RFA(20) =
;-
	PAGE =
	ROW = 22
	XCALL GETRFA (99,RFA(ROW-2))
	KEYS(ROW-2) = LINCNT
	XCALL W_AREA(WND_1,WA_SCROLL,WAS_UP,1)
	XCALL W_DISP(WND_1,WD_POS,ROW+1,1,WD_CLR,WDC_EOL )
	GOTO WRTLIN2
WRTLIN2,
	XCALL W_DISP(WND_1,WD_POS,ROW,1,PLINE)
	IF (PAGE) RETURN
ACT2,
	CLEAR W2_ON
;;;	XCALL W_DISP(WND_1,WD_POS,24,1,'..   <enter> NEXT PAGE; <F11> NEW SEARCH; <arrowup>; <arrowdown>; <P>rint')
	XCALL W_DISP(WND_1,WD_POS,24,1,'..   <cr> NEXT PAGE; <F11> NEW SEARCH; <P>rint <Q> Ship-To <V>iew')

; function keys...
	CLEAR DEC3
	XCALL FLAGS (10000,1)
	XCALL W_DISP(WND_1,WD_ACCEPT,DCHAR)
	XCALL TTSTS (STAT)
	IF (STAT)	XCALL W_DISP(WND_1,WD_ACCEPT,DEC3)
	USING DEC3 SELECT
	(79,133),		;<F11>, <END>
		DCHAR = 27
	(72),	DCHAR = UP_ARROW
	(80),	DCHAR = DN_ARROW
	ENDUSING
	XCALL FLAGS (10000,0)

	USING DCHAR SELECT
	(27),		GOTO EOFIQL		;END
	(23), 		GOTO EOFIQL		;^W
	(78),		BEGIN			;"N"
			XCALL O_NOTE(OORDNO)
			END
	(80),		GOTO PRNTIT		;"P"
	(81),		GOTO CHANGS		;"Q"	;SSQ 9-30-03
	(86),		BEGIN			;"V"	;SSQ 1-05-05
			xcall o_note(oordno,1)	;show note if any
			XCALL CP_MAKP(OORDNO,PATH)
			XCALL ADO(PATH)
			END
		
	(13),	BEGIN				;<CR>
		IF (KEYS(20))
		   BEGIN
		   PAGE = 1
		   KEYS(1) = KEYS(20)
		   RFA(1) = RFA(20)
		   FOR K FROM 2 THRU 20 KEYS(K)=
		   FOR K FROM 2 THRU 20 RFA(K)=

		   XCALL POSRFA(99,RFA(1))
		   READS (99,OPLINE,ACT2)
		   XCALL W_DISP(WND_1,WD_POS,3,1,WD_CLR,WDC_EOW)
		   GOTO RDSCRN2
		   END
		END
	(UP_ARROW),
		IF (KEYS(1))		;;; arrow up
		   BEGIN
	;;;	   XCALL POSRFA(99,RFA(2))
		   XCALL POSRFA(99,RFA(1))
		   READS (99,OPLINE,ACT2,REVERSE)
		   PAGE =
		   GOTO RDREV2
		   END
(DN_ARROW),
		IF(KEYS(20))
		   	BEGIN
		   	XCALL POSRFA(99,RFA(20))
		   	READS (99,OPLINE,ACT2)
		   	PAGE =
		   	GOTO RDFWD2
		   	END
		(), 		GOTO ACT2
	ENDUSING

	GOTO ACT2



;code to allow changes to sold-to, ship-to, tax...
CHANGS,
	W2_ON = 1
	CLOSE 99
	TEXT = 'ISM'
	XCALL DELET (TFILE)
	call gen2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

PRNTIT,
;;;	LPSW = 6		;don't ask.
	LPSW = 8		;don't ask. 9-24-01
	XCALL LPON (LPSW,SPLFIL)
	READ (99,OPLINE,^FIRST)
	HDRPLN = PLINE
	PRPAGE = 1
PRLP,
	PLINE =
	WRITES (14,PLINE)
	WRITES (14,PLINE2)
	FOR I FROM 1 THRU 56
	  BEGIN
	  READS (99,OPLINE,ENDPR)
	  IF (PLINE.EQ.':::BILL') EXITLOOP
	  IF (PLINE(1,6).EQ.':::UPS') EXITLOOP
	  IF(PLINE(42,50) .eq. ':::CREDIT') CLEAR PLINE
	  WRITES (14,PLINE)
	  IF (PLINE(8,9).EQ.'JT'.AND.I.EQ.56) I = I - 1
	  END

	DISPLAY (14,ESC,'E')
	INCR PRPAGE
	GOTO PRLP
ENDPR,
	IF (I .GE. 56) I = 56
	FOR II FROM I THRU 56	WRITES (14,PLINE)

	HDRPLN =
	PRTITL = 'INQUIRY PRINT: '
	XCALL DATE (PRDATE)
	XCALL TIME (DECMAL)
	PRTIME = DECMAL,'XX:XX:XX'
	WRITES (14,PLINE2)
	WRITES (14,PLINE)
	XCALL LPOFF(LPSW,SPLFIL,PGCNT)
EOFIQL,
	CLOSE 99
	TEXT = 'ISM'
	XCALL DELET (TFILE)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; 10-23-98 SSQ:
	IF (STYPE.NE.3)
	THEN	XCALL POSRFA(24,SAVRFA,KRF)
	ELSE	XCALL POSRFA(25,SAVRFA,KRF2)
	PAGE =
	
	XCALL W_DISP(WND_1,WD_CLR,WDC_WND)
;;;	USING FSELEC SELECT
	USING FYEAR SELECT
	(51),	XCALL W_DISP(WND_1,WD_POS,1,1,'CURRENT ORDER FILES')
	(52),	XCALL W_DISP(WND_1,WD_POS,1,1,'CURRENT YEAR HISTORY FILES')
	(),	XCALL W_DISP(WND_1,WD_POS,1,1,HFF)
	ENDUSING
	XCALL W_UPDT

	XCALL W_DISP(WND_1,WD_POS, 4,10,'* ORDER #')
	XCALL W_DISP(WND_1,WD_POS, 6,10,'* KEY DATE                 (CCYYMMDD)')
	XCALL W_DISP(WND_1,WD_POS, 8,10,'* CUSTOMER NAME')
	XCALL W_DISP(WND_1,WD_POS,10,10,'* PO NUMBER')
	XCALL W_DISP(WND_1,WD_POS,11,10,'* JOB NUMBR')
	XCALL W_DISP(WND_1,WD_POS, 7,50,'* ORD / EST  <BOTH>')
	XCALL W_DISP(WND_1,WD_POS, 9,50,'* SALESPERSON <ALL>')
	XCALL W_UPDT

	CLEAR PLINE

	RETURN
;;;	GOTO RDSCRN
;===============================================================

GETCUS,
	IF (CUSNO.EQ.OCUSNO) RETURN

;----------------------------------------------------------------
;  ssq 6-7-05: look up tmpcus info for cust # 10...
	IF (OCUSNO .EQ. 10)
		BEGIN
		OPEN (1,SI,FIL139)
		XCALL ISIO (1, TMPCUS, OORDNO, READ, LOKCTL)
		CLOSE 1
		IF (LOKCTL .EQ. 0)
			BEGIN
			NAME = T_NAME
			OCUSNM = T_NAME
			ADD1 = T_ADD1
			ADD2 = T_ADD2
			CITY = T_CITY
			STATE = T_STATE
			ZIP = T_ZIP
			PHONE = T_PHONE
			IF (OSLMAN.LT.1 .OR. OSLMAN.GT.99) OSLMAN = 1
			XCALL SREP(OSLMAN, LNAM, SNAM, SINT)
			RETURN
			END
		END
;----------------------------------------------------------------
	OPEN (1,SI,FIL001)
	XCALL ISIO (1, CUSMAS, OCUSNO, READ, LOKCTL)
	CLOSE 1
	
	IF (LOKCTL .NE. 0)
	THEN	BEGIN
			CUSMAS =
			NAME = 'CUST NOT ON FILE'
			RETURN
			END
	 ELSE	BEGIN
			IF (OSLMAN.LT.1 .OR. OSLMAN.GT.99) OSLMAN = 1
			XCALL SREP(OSLMAN, LNAM, SNAM, SINT)		;SSQ 11-28-01
			END
			
;;;	BSEND = ORGCUS
;;;	OPEN (2,I,FIL002)
;;;	XCALL SERCH (2,CUSIDX,OCUSNO,1,6,BSEND,BSMID,SRCCTL,4,7,11,0,0,0,0)
;;;	CLOSE 2
;;;	IF (SRCCTL.EQ.1) 
;;;	BEGIN
;;;	  CUSIDX =
;;;	  CUSMAS =
;;;	  NAME = 'CUST NOT ON FILE'
;;;	  RETURN
;;;	END
;;;	LOKCTL = 1
;;;	IF (SRCCTL.EQ.0)
;;;	BEGIN
;;;	  OPEN (1,I,FIL001)
;;;	  XCALL IO (1,CUSMAS,IRC001,READ,LOKCTL)
;;;	  CLOSE 1
;;;	  IF (OSLMAN.LT.1 .OR. OSLMAN.GT.99) OSLMAN = 1
;;;	  XCALL SREP(OSLMAN, LNAM, SNAM, SINT)		;SSQ 11-28-01
;;;	END

	RETURN

OPNERR,
	XCALL W_DISP(WND_1,WD_POS,23,1,WD_CLR,WDC_EOW,'PROBLEM ACCESSING FILE: ')
	IF (SWITCH.EQ.0) XCALL W_DISP(WND_1,WD_POS,0,0,FILON24)
	IF (SWITCH.EQ.1) XCALL W_DISP(WND_1,WD_POS,0,0,FILON25)
	IF (SWITCH.EQ.2) XCALL W_DISP(WND_1,WD_POS,0,0,FILON26)
	IF (SWITCH.EQ.3) XCALL W_DISP(WND_1,WD_POS,0,0,FILON28)
	IF (SWITCH.EQ.4) XCALL W_DISP(WND_1,WD_POS,0,0,FILON29)
	XCALL MESAG ('CALL SUPPORT TO REPORT THIS PROBLEM',2)
	GOTO (ABORT,CLOSE1,CLOSE2), SWITCH + 1
	GOTO ENDOFF

H_EMPTY,
	xcall olmsg(w_id,5,'History file empty!',1)
RESELEC,
	FSELEC = -1
ENDOFF,
	CLOSE CHN182
	CLOSE CHN193
	CLOSE CHN075
	CLOSE 5

CLOSE5,
	CLOSE 29
CLOSE4,
	CLOSE 28
CLOSE3,
	CLOSE 26
CLOSE2,
	CLOSE 25
CLOSE1,
	CLOSE 24
ABORT,
	IF (FSELEC.EQ.-1) GOTO FSELEC
	U_NAME = %GU_NAME			;GET USER NAME
	UPCASE U_NAME
	IF (U_NAME(1,5).EQ.'PLANT' .OR. U_NAME.EQ.'UPS')
		BEGIN
		XCALL PGCHN ('CP:SHPMNU',1)
		END

	XCALL PGCHN ('CP:OEMNU',1)
	xcall flags (7000000)
	STOP
;-----------------------------------------------------
MEMO_PRINT,

PRINT,
	INCR LINCNT
	STORE (99,OPLINE,LINCNT)
	PLINE =
	RETURN
;-----------------------------------------------------

CINPUT,
	XCALL WCINP (W_ID,ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,POS)
	RETURN
;-----------------------------------------------------
CHECK_UPS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; CHECK FOR UPS TRACKING #'S
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	FIND (CHNUPS, UPSDATA, OORDNO) [ERR=UPS_OK]
UPS_OK,
	READS (CHNUPS, UPSDATA, EOF_UPS)
	IF (ORDER .NE. OORDNO) GOTO EOF_UPS

	CLEAR PKG
	PLINE =
	CALL PRINT
	PLINE = ':::UPS INFO'
	CALL PRINT
	CALL PRINT
	PLINE = 'UPS TRACING INFORMATION'
	CALL PRINT
	PLINE = H5
	CALL PRINT
;;;	PLINE = H6
;;;	CALL PRINT
	PLINE(4,33) = UNAME
	CALL PRINT
	PLINE(4,33) = UADD1
	CALL PRINT
	PLINE(4,33) = UADD2
	CALL PRINT
	ENTRY(1,15) = UCITY
	ENTRY(17,18) = USTAT
	ENTRY(20,30) = UZIP
	PLINE(4,33) = ENTRY
	CALL PRINT
	PLINE = H5
	CALL PRINT
	CALL PRINT
	PLINE = H5
	CALL PRINT
	GOTO UPS2
UPS_LOOP,
	READS (CHNUPS, UPSDATA, EOF_UPS)
UPS2,
	IF (ORDER .NE. OORDNO) GOTO EOF_UPS
	IF (VOID .EQ. 'Y') GOTO UPS_LOOP

	INCR PKG
	PK1 = PKG, 'ZX'
	PK2 = NPKG,	'ZX'
	TK1 = TRACK
	TK2 = PKGWGT
	PLINE = UPS_LIN
	CALL PRINT

	GOTO UPS_LOOP
EOF_UPS,	
	PLINE = H5
	CALL PRINT
	RETURN
;------------------------------------------------------

GET_SCAC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; COP TABLE SCAC LOOK-UP
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR TBL_KEY
	TBLCOD = 'SC'
	TBLKEY = tbl_scac
	XCALL ISIO (CHN182,COPTBL,TBL_KEY,READ,LOKCTL)
	IF (LOKCTL .NE. 0)
		BEGIN
		CLEAR COPTBL
		SC_NAME = "* NOT ON FILE *"
		END
	RETURN
;-----------------------------------------------------
;-
DISPLA_DISC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR D_LIN1, D_LIN2, D_LIN3

	D_DAYS = 30
	CALL MAKE_D_DATE
	D_30_DATE = D_DATE
	if (oinvdt .lt. 20040304)
	then	q_pct = 2
	else	q_pct = 1

	USING DSCODE SELECT
	(0),	BEGIN
		D_LIN1 = OCOMNT(1)
		D_LIN2 = OCOMNT(2)
		END
	(1),	BEGIN
		D_DAYS = 15
		CALL MAKE_D_DATE
		IF (DSAMT .EQ. 0)
	;;;	THEN	D_AMT = (2*OSALE)#2
		THEN	D_AMT = (q_pct*OSALE)#2
		ELSE	D_AMT = DSAMT

		D_LIN1 = "A discount of $"
		D_LIN1(16,23) = D_AMT, 'ZZZX.XX' [LEFT]
		DI = %TRIM(D_LIN1)
		D_LIN1(DI+1, 50) = " may be taken only if"
		
		D_LIN2 = "payment is received and in our office by"
		D_LIN2(42,49) = D_DATE, 'ZX/XX/XX' [LEFT]
		END
	(2),	BEGIN
		D_LIN1 = "Payment must be received in our office by"
		D_LIN1(43,50) = D_30_DATE, 'ZX/XX/XX' [LEFT]

		D_LIN2 = "for discounted delivered prices to be valid."
		END
	(3),	BEGIN
		D_LIN1 = "Payment must be received in our office by"
		D_LIN1(43,50) = D_30_DATE, 'ZX/XX/XX' [LEFT]

		D_LIN2 = "for discount to apply."
		END
	(4),	BEGIN
		D_LIN1 = "A discount of $"
		D_LIN1(16,23) = DSAMT, 'ZZZX.XX' [LEFT]
		DI = %TRIM(D_LIN1)
		D_LIN1(DI+1, 50) = " and the freight charges"

		D_LIN2 = "may be deducted only if this invoice"
		
		D_LIN3 = "is paid and in our office by"
		D_LIN3(30,37) = D_30_DATE, 'ZX/XX/XX' [LEFT]
		END
	(5),	BEGIN
		D_DAYS = 30
		CALL MAKE_D_DATE
		IF (DSAMT .EQ. 0)
	;;;	THEN	D_AMT = (2*OSALE)#2
		THEN	D_AMT = (q_pct*OSALE)#2
		ELSE	D_AMT = DSAMT

		D_LIN1 = "A discount of $"
		D_LIN1(16,23) = D_AMT, 'ZZZX.XX' [LEFT]
		DI = %TRIM(D_LIN1)
		D_LIN1(DI+1, 50) = " may be taken only if"
		
		D_LIN2 = "payment is received and in our office by"
		D_LIN2(42,49) = D_DATE, 'ZX/XX/XX' [LEFT]
		END
		
	ENDUSING
;-
	RETURN
;-------------------------------------------------------
MAKE_D_DATE,
;;;	WRK_DATE = INVDAT
	D_TRY=0
;;;	WRK_DATE = OINVDT
	WRK_DATE = okeydt	;ssq 11-01-05

	XDD = XDD + D_DAYS
D_FEB,
	IF (XDD .GT. MDAYS(XMM))
	   BEGIN
	   XDD = XDD - MDAYS(XMM)
	   XMM = XMM + 1
	   IF (XMM .GT. 12)
	      BEGIN
	      XYY = XYY + 1
	      XMM = 1
	      END
	   END
	INCR D_TRY
	IF(D_TRY.LE.1)GOTO D_FEB
	XCALL DATE8(WRK_DATE, D_DATE, D_OUTR, D_FMT, D_SW)
;;;	D_DATE = WRK_DATE
	RETURN
;-------------------------------------------------------

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CLEAR OPNOK

	SWITCH = 5
	XCALL FILES (75,'SI',075,SWITCH)
	CHN075 = 75
	XCALL FILES (3,'SI',182,SWITCH)
	CHN182 = 3
	
	XCALL OECO(CHN182,COINFO)

	XCALL FILES (4,'SI',193,SWITCH)
	CHN193 = 4

	OPEN(5,SI,'SMC:UPSDAT.ISM')
	CHNUPS = 5

	SWITCH = 5		;SSQ 12-19-01
	XCALL FILES(6,'SI',195,SWITCH)	;CRHOLD.ISM
	CHN195 = 6

;;;	USING FSELEC SELECT
	USING FYEAR SELECT

	(51), 	BEGIN
		XCALL FILES (24,'SI', 44,5)
		XCALL FILES (25,'SI', 45,5)
		XCALL FILES (26,'SI',175,5)
		XCALL FILES (28,'SI',178,5)
		XCALL FILES (29,'SI',179,5)
		END
	(52),  BEGIN
		XCALL FILES (24,'SI',184,5)
		XCALL FILES (25,'SI',185,5)
		XCALL FILES (26,'SI',186,5)
		XCALL FILES (28,'SI',188,5)
		XCALL FILES (29,'SI',189,5)
	      END
	(),  BEGIN
		XCALL FFILE (184,FILON24,SWITCH)
		XCALL FFILE (185,FILON25,SWITCH)
		XCALL FFILE (186,FILON26,SWITCH)
		XCALL FFILE (188,FILON28,SWITCH)
		XCALL FFILE (189,FILON29,SWITCH)
		FILON24(9,10) = FSELEC,'XX'
		FILON24(14,14) = 'M'
		FILON25(9,10) = FSELEC,'XX'
		FILON25(14,14) = 'M'
		FILON26(9,10) = FSELEC,'XX'
		FILON26(14,14) = 'M'
		FILON28(9,10) = FSELEC,'XX'
		FILON28(14,14) = 'M'
		FILON29(9,10) = FSELEC,'XX'
		FILON29(14,14) = 'M'
		ONERROR OPNERR
		SWITCH = 0
		OPEN (24,SI,FILON24)
		SWITCH = 1
		OPEN (25,SI,FILON25)
		SWITCH = 2
		OPEN (26,SI,FILON26)
		SWITCH = 3
		OPEN (28,SI,FILON28)
		SWITCH = 4
		OPEN (29,SI,FILON29)
		OFFERROR
	      END
	ENDUSING
	CHN175 = 26
	CHN045 = 25
	OPNOK = 1
	RETURN
;--------------------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLOSE 5
	CLOSE CHN182
	CLOSE 24
	CLOSE 25
	CLOSE 26
	CLOSE 28
	CLOSE 29
	RETURN
;--------------------------------------------------


INIT_WINDOW,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; SET UP INQUIR WINDOW
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL W_INIT(POOLSIZE,WNDCHNL,MAXWINS)
	XCALL TNMBR (WN_TNMBR)
	XCALL W_PROC(WP_FIND,WND_1,WN_NAME)
	IF (.NOT. WND_1)
		BEGIN
		XCALL W_PROC(WP_CREATE,WND_1,WN_NAME,24,80)
		END
	XCALL W_BRDR(WND_1,WB_TITLE,'ORDER INQUIRY',
&			WB_TPOS,WBT_TOP,WBT_CENTER)
	XCALL W_PROC(WP_PLACE,WND_1,1,1)	
	XCALL W_DISP(WND_1,WD_CLEAR)

	W_ID = WND_1

;; POP info...

	MAXARA = 9
	PLEN = 70
	NUMROW = 9
	WX = 21
	WY = 2
	POP_WID(1,5) = "IQPOP"
	POP_WID(6,8) = WN_TNMBR,	'XXX'
	POP_TITLE = "CUSTOMER ORDERS"
	RETURN
;-------------------------------------------------------------------

MAKE_W2,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL W_PROC(WP_CREATE, WND_2, 'SHIP',12, 77)
	XCALL W_PROC(WP_PLACE, WND_2, 3, 0)
	W_ID = WND_2

W2_DISP,
	CLEAR CNGCTL
	XCALL W_DISP(WND_2, WD_CLEAR)

	XCALL W_DISP(W_ID, WD_POS,1,10,'BILL-TO')
	XCALL W_DISP(W_ID, WD_POS,1,47,'SHIP-TO')

	XCALL W_DISP(W_ID, WD_POS,2,1,'1. NAME')
	XCALL W_DISP(W_ID, WD_POS,3,1,'2. ADD1')
	XCALL W_DISP(W_ID, WD_POS,4,1,'3. ADD2')
	XCALL W_DISP(W_ID, WD_POS,5,1,'4. CITY')
	XCALL W_DISP(W_ID, WD_POS,6,1,'5. STATE')
	XCALL W_DISP(W_ID, WD_POS,7,1,'6. ZIP')
	
	XCALL W_DISP(W_ID, WD_POS,2,43,' 7.')
	XCALL W_DISP(W_ID, WD_POS,3,43,' 8.')
	XCALL W_DISP(W_ID, WD_POS,4,43,' 9.')
	XCALL W_DISP(W_ID, WD_POS,5,43,'10.')
	XCALL W_DISP(W_ID, WD_POS,7,43,'11. TAX-1')
	XCALL W_DISP(W_ID, WD_POS,8,43,'12. TAX-2')
	XCALL W_DISP(W_ID, WD_POS,9,43,'13. TAX-3')

	XCALL W_DISP(W_ID, WD_POS, 2,10, OCUSNM)
	XCALL W_DISP(W_ID, WD_POS, 3,10, ADD1)
	XCALL W_DISP(W_ID, WD_POS, 4,10, ADD2)
	XCALL W_DISP(W_ID, WD_POS, 5,10, CITY)
	XCALL W_DISP(W_ID, WD_POS, 6,10, STATE)
	XCALL W_DISP(W_ID, WD_POS, 7,10, ZIP)

	XCALL W_DISP(W_ID, WD_POS, 2,47, OSHPNM)
	XCALL W_DISP(W_ID, WD_POS, 3,47, OSHAD1)
	XCALL W_DISP(W_ID, WD_POS, 4,47, OSHAD2)
	XCALL W_DISP(W_ID, WD_POS, 5,47, OSHAD3)
	XCALL W_UPDT
	goto w2_any		;ssq 10-25-05
NAME,
	CTL = '02,10,25,00,AE'
	CALL INP
	GOTO (W2_DISP,W2_ENDOF),INXCTL
	OCUSNM = ENTRY(1,25)
	GOTO (W2_ANY),CNGCTL
ADD1,
	ROW = 03
	CALL INP
	GOTO (W2_DISP),INXCTL
	ADD1 = ENTRY(1,25)
	GOTO (W2_ANY),CNGCTL
ADD2,
	CTL = '04,10,21,00,A '
	CALL INP
	GOTO (W2_DISP),INXCTL
	ADD2 = ENTRY(1,21)
	GOTO (W2_ANY),CNGCTL
CITY,
	CTL = '05,10,15,00,A '
	CALL INP
	GOTO (W2_DISP),INXCTL
	CITY = ENTRY(1,15)
	GOTO (W2_ANY),CNGCTL
STATE,
	CTL = '06,10,02,00,A '
	CALL INP
	GOTO (W2_DISP),INXCTL
	STATE = ENTRY(1,2)
	GOTO (W2_ANY),CNGCTL
ZIP,
	CTL = '07,10,10,00,A '
	CALL INP
	GOTO (W2_DISP),INXCTL
	ZIP = ENTRY(1,10)
	GOTO (W2_ANY),CNGCTL
SH1,
	CTL = '02,47,30,00,A '
	CALL INP
	GOTO (W2_DISP),INXCTL
	OSHPNM = ENTRY(1,30)
	GOTO (W2_ANY),CNGCTL
SH2,
	ROW = 03
	CALL INP
	GOTO (W2_DISP),INXCTL
	OSHAD1 = ENTRY(1,30)
	GOTO (W2_ANY),CNGCTL
SH3,
	ROW = 04
	CALL INP
	GOTO (W2_DISP),INXCTL
	OSHAD2 = ENTRY(1,30)
	GOTO (W2_ANY),CNGCTL
SH4,
	ROW = 05
	CALL INP
	GOTO (W2_DISP),INXCTL
	OSHAD3 = ENTRY(1,30)
	GOTO (W2_ANY),CNGCTL
TX1,
	CTL = '07,55,05,00,$ '
	CALL INP
	GOTO (W2_DISP),INXCTL
	OTAX(1) = ENTRY(1,5)
	GOTO (W2_ANY),CNGCTL
TX2,
	CTL = '08,55,05,00,$ '
	CALL INP
	GOTO (W2_DISP),INXCTL
	OTAX(2) = ENTRY(1,5)
	GOTO (W2_ANY),CNGCTL
TX3,
	CTL = '09,55,05,00,$ '
	CALL INP
	GOTO (W2_DISP),INXCTL
	OTAX(3) = ENTRY(1,5)
	GOTO (W2_ANY),CNGCTL

W2_ANY,
	XCALL WANCN(W_ID, 12, CNGCTL, WHATNO)
	GOTO (W2_PROC,W2_CNGBR),CNGCTL+1
W2_CNGBR,
	GOTO (NAME,ADD1,ADD2,CITY,STATE,ZIP,SH1,SH2,SH3,SH4,TX1,TX2,TX3),WHATNO
	GOTO W2_ANY
W2_PROC,
W2_ENDOF,
	RETURN

INP,
	XCALL WINPT (W_ID, ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL)
	RETURN
;-----------------------------------------------------------

DELETE_W2,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL W_PROC(WP_DELETE, WND_2)
	W_ID = WND_1
	RETURN
;-----------------------------------------------------------

END

