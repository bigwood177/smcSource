; SLMORD.COP - PROGRAM TO PRINT A LIST OF ORDER/ESTIMATES BY SALESPERSON
;		
;
;
RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR


RECORD ORDHDR
	.INCLUDE 'DEF:RD044A.DEF'
RECORD ORDLIN
	.INCLUDE 'DEF:RD045A.DEF'
RECORD DUCACC
	.INCLUDE 'DEF:RD175A.DEF'
RECORD ORDCTL
	.INCLUDE 'DEF:RD176B.DEF'
RECORD SALMAN
	.INCLUDE 'DEF:RD054A.DEF'
RECORD REDFIL
		,A4
	FILNAM	,A10
RECORD HDR1
	,A50,'----- ORDER -----   SL   -------- CUSTOMER -------'
	,A50,'--------------   P.O.           PROM     STATUS --'
	,A32,'--------------------------------'
RECORD HDR2
	,A50,'NUMBER     DATE     MN   NUMBER   NAME            '
	,A50,'                 NUMBER         DATE     FL SOURCE'
	,A32,'    TYPE         SALE AMT       '
RECORD LEG1
		,A14,'SALESPERSON:  '
	LSTSLM	,D2
		,A3
	SLMNAM	,A25
RECORD BRACKS
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A25,	']]]]]]]]]]]]]]]]]]]]]]]]]'
RECORD	
	V	,D1
	TITLE	,A41,	'OPEN ORDER / ESTIMATE LIST BY SALESPERSON'
	PLINE	,A132
	LPSW	,D1
	SPLFIL	,A14
	LINCNT	,D2,62
	PGCNT	,D3
	RPTNUM	,D3
	PRTTYP	,A1
	LPARG	,D1
	SWITCH	,D1
	WRCNT	,D5
	READ	,D1,	0
	WRITE	,D1,	1
	LOKCTL	,D1
	FILE	,D1
	LSTORD	,D8
	DTMASK	,A8,	'XX/XX/XX'
	INXCTL	,D1
	ENTRY	,A30
	FSTOPN	,D6,	0
	RECNO	,D5
	STORDR	,D8
	ENORDR	,D8
	TOTSAL	,D8
	EXEPRC	,D8
	DECMAL	,D10
	ORDEST	,A1
PROC 
	XCALL TERID (V)
	XCALL OUTPT (1,1,2,'OPEN ORDER/ESTIMATE LIST BY SALESPERSON',1)
	XCALL FFILE (68,REDFIL,SWITCH)
	FILNAM = 'SLMORD.DAT'
;;;	REDFIL='SMC:SLMORD.DAT'
ASK,
	XCALL OUTPT (10,20,0,'BUILD OR PRINT <P> ?',1)
	XCALL INPUT (10,45,01,00,'AE',ENTRY,INXCTL,1)
	GOTO (ASK,ABORT), INXCTL
	IF (ENTRY.EQ.' ') ENTRY = 'P'
	IF (ENTRY.NE.'P'.AND.ENTRY.NE.'B') GOTO ASK
	IF (ENTRY.NE.'B') GOTO PRINTIT
ASK2,
	XCALL OUTPT (12,20,0,'ORDER DT     ST:             END:       ',1)
	XCALL INPUT (12,37,08,00,'D ',ENTRY,INXCTL,1)
	GOTO (ASK), INXCTL
	STORDR = ENTRY
	IF (STORDR.EQ.0) XCALL OUTPT (12,45,0,'FIRST ',1)
	XCALL INPUT (12,54,08,00,'D ',ENTRY,INXCTL,1)
	GOTO (ASK), INXCTL
	ENORDR = ENTRY
	IF (ENORDR.EQ.0) 
	BEGIN
	  ENORDR = 99991231
	  XCALL OUTPT (12,59,0,'LAST  ',1)
	END
	IF (ENORDR.LT.STORDR) 
	BEGIN
	  XCALL MESAG ('ENDING DATE MUST BE GREATER OR EQUAL TO STARTING DATE',1)
	  GOTO ASK2
	END
ASK3,
	XCALL OUTPT (14,20,0,'<O>RDERS OR <E>STIMATES',1)
	XCALL INPUT (14,45,01,00,'A ',ENTRY,INXCTL,1)
	GOTO (ASK), INXCTL
	ORDEST = ENTRY
	IF (ORDEST.NE.'O'.AND.ORDEST.NE.'E') GOTO ASK3
BUILD,
;;;	OPEN (1,O,FILNAM)
	OPEN (1,O,REDFIL)	;SSQ 1-15-03
	ORDCTL =
	LOKCTL = 1
	XCALL IOS (1,ORDCTL,WRITE,LOKCTL)
	WRCNT = 1
OF1,
	XCALL WATE (2,2)
	XCALL OUTPT (2,1,0,'PROCESSING CURRENT ORDER FILE: ORDHDR',1)
	SWITCH = 1
	XCALL FILES (4,'SI',44,SWITCH)
	IF (SWITCH.EQ.9)
	BEGIN
	  XCALL MESAG ('ORDHDR FILE NOT AVAILABLE - CANNOT RUN THIS REPORT',1)
	  GOTO ABORT
	END
	FILE = 1
	OKEYDT = STORDR
	FIND (4,ORDHDR,OKEYDT) [KEY=RDLOOP]
	GOTO RDLOOP
OF2,
	XCALL FILES (4,'SI',44,4)
OF3,

RDLOOP,
	LOKCTL = 1
	XCALL IOS (4,ORDHDR,READ,LOKCTL)
	IF (LOKCTL.NE.0) GOTO EOF
	IF (ORDHDR.EQ.']]]]]]') GOTO EOF
	IF (OORDNO.EQ.0) GOTO RDLOOP
	IF (OKEYDT.LT.STORDR) GOTO RDLOOP
	IF (OKEYDT.GT.ENORDR) GOTO EOF
	IF (ORDEST.NE.OLOC) GOTO RDLOOP		;;;
	OLOC(2,2) = FILE
	LOKCTL = 1
	XCALL IOS (1,ORDHDR,WRITE,LOKCTL)
	INCR WRCNT
	GOTO RDLOOP
EOF,
	ORDHDR = BRACKS
	LOKCTL = 1
	XCALL IOS (1,ORDHDR,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IOS (1,ORDHDR,WRITE,LOKCTL)
	CLOSE 1

	OPEN (1,U,REDFIL)	;SSQ 1-15-04
;;;	OPEN (1,U,FILNAM)
	LOKCTL = 1
	XCALL IO (1,ORDCTL,1,READ,LOKCTL)
	REC176 = WRCNT
	MAX176 = WRCNT+1
	ORG176 = WRCNT
	ORDCTL(100,105) = 'SLMORD'
	LOKCTL = 1	
	XCALL IO (1,ORDCTL,1,WRITE,LOKCTL)
	CLOSE 1
	XCALL OUTPT (2,1,1,'SORTING TEMP FILE',1)
	SORT (INPUT=REDFIL,RECORD=ORDHDR,KEY=(OSLMAN/A,OKEYDT/A,OORDNO/A))
	XCALL MESAG ('READY TO PRINT',2)
PRINTIT,
	OPEN (1,I,REDFIL)
	SWITCH = 1
	XCALL FILES (5,'SI',045,SWITCH)
	SWITCH = 1
	XCALL FILES (6,'SI',175,SWITCH)

	LOKCTL = 1
	XCALL IOS (1,ORDHDR,READ,LOKCTL)
	IF (ORDHDR(100,105).NE.'SLMORD')
	BEGIN
	  XCALL MESAG ('FILE MUST BE REBUILT',2)
	  CLOSE 1
	  XCALL FILES (5,'SI',045,4)
	  XCALL FILES (6,'SI',175,4)
	  GOTO ASK
	END
	XCALL OUTPT (2,1,1,'OUTPUT LIST',1)
	LPSW = 1	; PRINT, SPOOL OR DISPLAY
	XCALL LPON (LPSW,SPLFIL)
	IF (LPSW.EQ.0) GO TO CLOSES
	LPARG = 2
	IF (LPSW.EQ.2) LPARG = 4
	XCALL WATE (LPARG,V)
	LSTSLM = -1
	LSTORD = -1
	RECNO = 1
OUTLP,
	INCR RECNO
	LOKCTL = 1
	XCALL IO (1,ORDHDR,RECNO,READ,LOKCTL)
	IF (ORDHDR.EQ.']]]]]]') GOTO EOF2
	IF (OORDNO.EQ.0) GOTO OUTLP
	IF (OSLMAN.NE.LSTSLM)
	BEGIN
	  LINCNT = 62
	  IF (LPSW.LT.0) 
	  BEGIN
	    LPSW = LPSW * -1
	    SLEEP 2
	  END
	  XCALL FILES (8,'I',54,5)
	  LOKCTL = 1
	  XCALL IO (8,SALMAN,OSLMAN,READ,LOKCTL)
	  CLOSE 8
	  LSTSLM = OSLMAN
	  SLMNAM = SLSNM
	END
OLP2,
	PLINE (1,6) = OORDNO

	XCALL DATE8(OORDDT, D_OUT, D_OUTR, D_FMT, D_SW)
	PLINE (10,17) = D_OUT, DTMASK
	PLINE (21,22) = OSLMAN
	PLINE (26,31) = OCUSNO
	PLINE (35,64) = OCUSNM
	PLINE (68,77) = OPONO
	XCALL DATE8(OPROMD, D_OUT, D_OUTR, D_FMT, D_SW)
	IF (D_OUT.NE.0) PLINE (81,88) = D_OUT, DTMASK
	PLINE (92,93) = OLOC
	USING OLOC(2,2) SELECT
	  ('1'),	PLINE (95,104) = 'OPEN      '
	  ('2'),	PLINE (95,104) = 'INVOICED  '
	  ('3'),	PLINE (95,104) = 'CANCELLED ' 
	ENDUSING
	USING OLOC(1,1) SELECT
	  ('E'),	PLINE (105,113) = 'ESTIMATE '
	  ('O'),	PLINE (105,113) = 'ORDER    '
	ENDUSING


	IF (OLOC(2,2).EQ.'1') CALL GETSAL

	CALL PRINT
	LSTORD = OORDNO
	LSTSLM = OSLMAN
	GOTO OUTLP
GETSAL,
	TOTSAL =
	LORDNO = OORDNO
	LOKCTL = 1
	XCALL ISIO (5,ORDLIN,LORDNO,READ,LOKCTL)
GS1A,
	if(ltype .ne. 'M')
		BEGIN
		IF (LOKCTL.OR.LORDNO.NE.OORDNO) GOTO GS1B
	;;;	DECMAL = ((LQTYOR*LPRICE) - (LDISC*LQTYOR*LPRICE)#2)#1
		DECMAL = (LQTYOR*LPRICE)#1
		EXEPRC = DECMAL ;;;- ((DECMAL*LODISC)#2)
		TOTSAL = TOTSAL + EXEPRC
		LOKCTL = 1
		END
	XCALL IOS (5,ORDLIN,READ,LOKCTL)
	GOTO GS1A
GS1B,
	DUCTOR = OORDNO
	LOKCTL = 1
	XCALL ISIO (6,DUCACC,DUCTOR,READ,LOKCTL)
GS2A,
	IF (LOKCTL.OR.DUCTOR.NE.OORDNO) GOTO GS2B
	DECMAL = ( POUNDS * GPRICE ) # 1
	TOTSAL = TOTSAL + DECMAL		;DUCT
	IF (SQFLIN.NE.0) 
	BEGIN
	  DECMAL = ( LINPRC * SQFLIN ) # 1
	  TOTSAL = TOTSAL + DECMAL		;LINER
	END
	LOKCTL = 1
	XCALL IOS (6,DUCACC,READ,LOKCTL)
	GOTO GS2A
GS2B,
	PLINE (115,125) = TOTSAL,'ZZZ,ZZZ.XX-'
	RETURN		

PRINT,
	XCALL LPOUT(LINCNT,PGCNT,PLINE,TITLE,HDR1,HDR2,'NO HDR',LEG1,
&		'NO LEGEND',' ',0,0,132,1,LPSW,RPTNUM,PRTTYP)
	RETURN
EOF2,
	PLINE =
	CALL PRINT
	XCALL LPOFF (LPSW,SPLFIL,PGCNT)
CLOSES,
	CLOSE 1
	XCALL FILES (5,'SI',045,4)
	XCALL FILES (6,'SI',175,4)
ABORT,
	XCALL PGCHN ('CP:SPCFUN',1)
END
