;CRDMNT.CP
;	input credit card info for historic invoices
;
;ORDMNT.DBL
;
;		AUTHOR: SHERWOOD S. QUIRING
;		DATE  : 3-DEC-1999
;
;	CUSTOMER ORDER MAINTENANCE
;
	.INCLUDE 'WND:TOOLS.DEF'
	.INCLUDE 'WND:WINDOWS.DEF'

EXTERNAL FUNCTION
	R1	,D

RECORD	EJECT
	E_CHAR	,A1		;<ESC>
		,A4,	"&l0H"	;PAGE EJECT

RECORD	HP_PROG
	HP_ESC	,A1	;ESC
	HP_BOLD	,A4,	'(s#B'

RECORD ORDHDR   	
	.INCLUDE 'DEF:RD044A.DEF'

RECORD ORDLIN		
	.INCLUDE 'DEF:RD045A.DEF'
RECORD	,X
	.INCLUDE 'DEF:RD045D.DEF'


	.INCLUDE 'DEF:HPSUB.DEF'

RECORD	CCINFO
	.INCLUDE 'DEF:RD137A.DEF'

RECORD	CCTRAN
	.INCLUDE 'DEF:RD138A.DEF'

RECORD	TMPCUS
	.INCLUDE 'DEF:RD139A.DEF'

RECORD	FUNKEY
	.INCLUDE 'DEF:FUNKEY.DEF'

RECORD	CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD	WINS
	W_ID	,D4
	WND_1	,D4
	C_WND	,D4

RECORD	WN_NAME
		,A5,	'CRDMM'
	WN_TNMBR,D4

RECORD	CHANNEL
	CHN041	,D2
	CHN044	,D2
	CHN045	,D2
	CHN137	,D2
	CHN138	,D2
	CHN139	,D2

RECORD	PBUF
	PLINE	,A80

RECORD
		,A8,	'MVDAXXXX'
		,A20,	'MASTER CARD         '
		,A20,	'VISA                '
		,A20,	'DISCOVER            '
		,A20,	'AMERICAN EXPRESS    '
		,A20,	'INVALID             '
		,A20,	'INVALID             '
		,A20,	'INVALID             '
		,A20,	'INVALID             '
;                        12345678901234567890
RECORD,X
	CTYP	,8A1
	CDES	,8A20

RECORD	
	MMYY	,D4
RECORD,X
	MM	,D2
	YY	,D2

RECORD	C1_LINE
		,A*,	'* Credit Card *   Auth:'
	C1_AUTH	,A6

RECORD	VARS
	X_CCNUM	,D16
	LNAM	,A25
	SNAM	,A12
	SINT	,A3
	SEXT	,D10
	OPT	,D1
	XCUST	,D6
	CCORD	,A1	;C = CREDIT CARD ORDER
	CORDN	,A6
	ABORT	,D1
	F_KEY	,D3
	I	,D4
	OPNOK	,D1
	DECMAL	,D18
	EXEPRC	,D10
	TAXTOT	,D8
	RUNTOT	,D8
	TAXAMT	,D8
	TODAY	,D6
	DSTFLG	,A1
	BLANKS	,A30
	ENTRY	,A30
	INXCTL	,D1
	LOKCTL	,D1
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	TMPORD	,D6
	FIRST	,D1
	SWITCH	,D1
	CLCTL	,D1
	V	,D1

PROC
	XCALL TERID (V)
	XCALL RDATE(TODAY)
	cmhpLPI = 12		;ssq

	CLEAR ABORT

BEGIN_ORDER,
	CALL INIT_WINDOW
	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF

DISPLA,
	INXCTL =
	DSTFLG = 'N'
	XCALL OE1W (DSTFLG,W_ID)
	XCALL W_DISP(W_ID,WD_POS,1,1,'Change Payment to Credit Card')
	XCALL W_UPDT
ORDNO,
	OFFERROR
	CTL = '04,16,06,00,#E'
	CALL INPUT
	GO TO (DISPLA,ENDOFF), INXCTL
	USING F_KEY SELECT
	(END_KEY,F_11), GOTO ENDOFF
	ENDUSING

	TMPORD = ENTRY(1,6)
	IF (TMPORD .EQ. 0) GOTO DISPLA

	CCORD = 'C'

	OORDNO = TMPORD

	LOKCTL = 1
	XCALL ISIO (CHN044,ORDHDR,OORDNO,READ,LOKCTL)
	IF (LOKCTL .NE. 0)
		BEGIN
		XCALL WNMSG(W_ID,24,"CAN'T FIND ORDER",1)
		GOTO DISPLA
		END

	CALL DISP_ORD

	USING OCCRD SELECT
	('C'),	XCALL WNMSG(W_ID,24,'ALREADY WAS A CREDIT CARD ORDER',1)
	('D'),	XCALL WNMSG(W_ID,24,'ALREADY CHANGED TO  CREDIT CARD ORDER',1)
	ENDUSING

	XCALL W_DISP(W_ID, WD_POS, 24, 1, 'RIGHT ORDER?')
	CTL = '24,16,01,00,YN'
	CALL INPUT
	GOTO (DISPLA),INXCTL-1

	XCALL W_DISP(W_ID, WD_POS, 24, 1, 'CHANGE TO CREDIT CARD ORDER?')
	CTL = '24,31,01,00,YN'
	CALL INPUT
	GOTO (DISPLA),INXCTL-1

	CALL GET_CCINFO
	IF(OPT .EQ. 9) goto displa
	;;;	BEGIN
	;;;	XCALL W_PROC(WP_DELETE, WND_1)
	;;;	XCALL U_FINISH
	;;;	GOTO BEGIN_ORDER
	;;;	END

	CALL C_TRAN
	CALL P_TRAN

	GOTO DISPLA

;======================================================

ENDOFF,
	XCALL W_PROC(WP_DELETE, WND_1)
	XCALL U_FINISH
	CALL CLOSE
	XCALL PGCHN ('CP:SPCFUN',1)
;=====================================================

INPUT,
	XCALL WINPT (W_ID,ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,F_KEY)
	RETURN
;-------------------------------------------------

DISP_ORD,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (OCCRD .NE. ' ')
		BEGIN
		XCALL ISIO (CHN138, CCTRAN, OORDNO, READ, LOKCTL)
		C1_AUTH = CT_AUTH,	'ZZZZZZ'
		XCALL W_DISP(W_ID, WD_POS, 2, 10, C1_LINE)
		XCALL W_UPDT
		END

	ENTRY(1,6) = OORDNO,	'ZZZZZX' [LEFT]
	XCALL W_DISP(W_ID, WD_POS, 4, 16, ENTRY(1,6))

	ENTRY(1,6) = OORDDT(5,8),	'XX/XX/'
	ENTRY(7,10) = OORDDT(1,4),	'XXXX'
	XCALL W_DISP(W_ID, WD_POS, 4, 38, ENTRY(1,10))

	ENTRY(1,6) = OPROMD(5,8),	'XX/XX/'
	ENTRY(7,10) = OPROMD(1,4),	'XXXX'
	XCALL W_DISP(W_ID, WD_POS, 4, 68, ENTRY(1,10))

	ENTRY(1,6) = OCUSNO,	'ZZZZZX' [LEFT]
	XCALL W_DISP(W_ID, WD_POS, 6, 16, ENTRY(1,6))

	XCALL W_DISP(W_ID, WD_POS, 6, 24, OCUSNM)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	IF (OCUSNO .EQ. 999000) 
;;;	THEN	BEGIN
;;;		XCALL OUTPT (7,4,1,'   ORIGINAL ORDER:',1)
;;;		XCALL OUTPT (7,23,0,OBIN,1)
;;;		END
;;;	ELSE	BEGIN
;;;		CLEAR OBIN
;;;		XCALL OUTPT (7,4,1,' ',1)
;;;		END
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	ENTRY(1,2) = OSLMAN,	'ZX' [LEFT]
	XCALL W_DISP(W_ID, WD_POS, 8, 16, ENTRY(1,2))

	XCALL SREP(OSLMAN,LNAM,SNAM,SINT)
	XCALL W_DISP(W_ID, WD_POS, 9, 9, SNAM)

	XCALL W_DISP(W_ID, WD_POS, 8, 35, OLOC)

	XCALL W_DISP(W_ID, WD_POS, 8, 53, OSCAC)

;;;	CALL GET_SCAC
;;;	XCALL W_DISP(W_ID, WD_POS, 9, 53, SC_NAME)

	IF (OMETRO .NE. BLANKS)
		BEGIN
		XCALL W_DISP(W_ID, WD_POS, 7,58,'12DPO:')
		XCALL W_DISP(W_ID, WD_POS, 7,66,OMETRO)
		END

	XCALL W_DISP(W_ID, WD_POS, 8, 69, OPONO)
	XCALL W_DISP(W_ID, WD_POS, 10, 53, OCLPPD)
	XCALL W_DISP(W_ID, WD_POS, 10, 69, OJOBNO)

	ENTRY(1,4) = OSHPTO,'ZZZZ'
	XCALL W_DISP(W_ID, WD_POS, 12,16,ENTRY(1,4))
	XCALL W_DISP(W_ID, WD_POS, 13,13,OSHPNM)
	XCALL W_DISP(W_ID, WD_POS, 14,13,OSHAD1)
	XCALL W_DISP(W_ID, WD_POS, 15,13,OSHAD2)
	XCALL W_DISP(W_ID, WD_POS, 16,13,OSHAD3)
	
	XCALL W_DISP(W_ID, WD_POS, 20,19,OCOMNT(1))
	XCALL W_DISP(W_ID, WD_POS, 21,19,OCOMNT(2))

	RETURN
;--------------------------------------------------


GET_CCINFO,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	SWITCH = 5
	XCALL FILES (47,'SU',137,SWITCH)
	XCALL FILES (49,'SI',139,SWITCH)
	CHN137 = 47
	CHN139 = 49
	XCALL ISIO (CHN139,TMPCUS,OORDNO,READ,LOKCTL)
	IF (LOKCTL.NE.0) CLEAR TMPCUS
	IF (T_CUSNO.NE.OORDNO) CLEAR TMPCUS

	OPT = 4				;FIND BY CUST #
	IF (T_CUSNO .GT. 0)
	THEN	BEGIN
	;;;	XCUST = T_CUSNO		;FROM TMPCUS
		XCUST = OCUSNO		;FROM ordhdr
		CI_ALPH = T_NAME
		END
	ELSE	BEGIN
		XCUST = OCUSNO		;FROM CUSMAS
		CI_ALPH = OCUSNM
		END

	XCALL CCIN2(C_WND, CHN137, XCUST, CCINFO, OPT)
	XCALL W_PROC(WP_DELETE, C_WND)
	CLOSE CHN137
	CLOSE CHN139
	RETURN
;-------------------------------------------------------

C_TRAN,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	FIND(CHN138, CCTRAN, OORDNO) [ERR=CT_STORE]

	XCALL ISIO (CHN138, CCTRAN, OORDNO, READ, LOKCTL)
	CT_NUMBR = CI_NUMBR
	CT_TYPE = CI_TYPE
	CT_EXDAT = CI_EXDAT
	XCALL ISIO (CHN138, CCTRAN, OORDNO, WRITE, LOKCTL)
	GOTO CT_UPDATE

CT_STORE,
	CLEAR CCTRAN
	CT_ORDER = OORDNO
	CT_NUMBR = CI_NUMBR
	CT_TYPE = CI_TYPE
	CT_EXDAT = CI_EXDAT
	XCALL ISIO (CHN138, CCTRAN, CT_ORDER, STORE, LOKCTL)

CT_UPDATE,
	XCALL ISIO (4,ORDHDR,OORDNO,READ,LOKCTL)
	OCCRD = 'D'	;3-4-04 D = was changed to cc order
;;;	OTERMS = 'C'		;SAVE ORIGINAL TERMS
	XCALL ISIO (4,ORDHDR,OORDNO,WRITE,LOKCTL)
	RETURN
;-------------------------------------------------------
P_TRAN,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL ASCII(27,HP_ESC)
	E_CHAR = HP_ESC

	XCALL SREP(OSLMAN,LNAM,SNAM,SINT,SEXT)

	OPEN(14,O,'SPL:OECC2.SPL')
	PLINE = 'Credit card info for Order:'
	PLINE(29,35) = OORDNO,	'XXXXXX'
	PLINE(40,47) = TODAY,	'XX/XX/XX'
	PLINE(50,61) = SNAM
	CALL PRINT

	PLINE = 'PO'
	PLINE(5,14) = OPONO
	PLINE(16,18) = 'Job'
	PLINE(20,29) = OJOBNO
	CALL PRINT

	PLINE(1,6) = OCUSNO,	'ZZZZZX'
	PLINE(8,38) = OCUSNM
	CALL PRINT

	PLINE = 'Credit Card #'

	X_CCNUM = %R1(CT_NUMBR, 'D')	;dcrypted version of ccnum
	PLINE(17,36) = X_CCNUM,	'XXXX-XXXX-XXXX-XXXX'
;;;	PLINE(17,36) = CT_NUMBR,	'XXXX-XXXX-XXXX-XXXX'

	CALL PRINT
	PLINE = 'Type'
	PLINE(17,37) = 'Invalid'
	FOR I FROM 1 THRU 8
		BEGIN
		IF (CTYP(I) .EQ. 'X') EXITLOOP
		IF (CTYP(I) .EQ. CT_TYPE) PLINE(17,37) = CDES(I)
		END

;;;	PLINE(17,37) = CDES(SAVIDX)
	CALL PRINT
	PLINE = 'Expiration Date'
	PLINE(17,21) = CT_EXDAT,		'XX/XX'
	CALL PRINT
	PLINE = 'Order Sub Total'
	PLINE(21,31) = OSALE,		'ZZZ,ZZX.XX-'
;;;	PLINE(21,31) = RUNTOT,		'ZZZ,ZZX.XX'
	CALL PRINT
	PLINE = 'Tax Code:'
	PLINE(11,14) = OTAXFL
;;;	PLINE(16,46) = ARTDSC
	CALL PRINT
	PLINE = 'Tax'
	TAXAMT = OTAX(1) + OTAX(2) + OTAX(3)
	PLINE(21,31) = TAXAMT,	'ZZZ,ZZX.XX-'
	CALL PRINT
	PLINE = 'Shipping & Handling'
	PLINE(21,31) = OFRGHT,	'ZZZ,ZZX.XX-'
	CALL PRINT

	HP_BOLD(3,3) = '3'	;BOLD
	PLINE = HP_PROG
	CALL PRINT
	PLINE = 'Order Total'
	PLINE(21,31) = (OSALE+TAXAMT+OFRGHT),	'ZZZ,ZZX.XX-'
	CALL PRINT
	HP_BOLD(3,3) = '0'	;MEDIUM
	PLINE = HP_PROG
	CALL PRINT
	PLINE = 'Auth # ___________________________'
	CALL PRINT

	IF (OCUSNO .EQ. 10) CALL TMP_CUS
	WRITES(14,EJECT)
	CLOSE 14
	LPQUE ('SPL:OECC2.SPL')
	RETURN
TMP_CUS,
	SWITCH = 5
	XCALL FILES (39,'SI',139,SWITCH)
	LOKCTL = 1
	XCALL ISIO (39,TMPCUS,OORDNO,READ,LOKCTL)
	IF (LOKCTL .NE. 0) GOTO NO_TMP_CUS

	CALL PRINT
	PLINE = T_NAME
	CALL PRINT
	PLINE = T_ADD1
	CALL PRINT
	PLINE = T_ADD2
	CALL PRINT
	PLINE = T_CITY
	PLINE(17,18) = T_STATE
	PLINE(20,29) = T_ZIP
	CALL PRINT
NO_TMP_CUS,
	CLOSE 39
	RETURN
;------------------------------------------------------
PRINT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	WRITES(14,PBUF)
	CLEAR PLINE
	WRITES(14,PBUF)
	RETURN
;------------------------------------------------

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK
	SWITCH = 5
	XCALL FILES (4, 'SU', 184, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN044 = 4

	XCALL FILES(5, 'SI', 185, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN045 = 5

	SWITCH = 5
	XCALL FILES (48,'SU',138,SWITCH)
	CHN138 = 48

	OPNOK = 1
	RETURN
;------------------------------------------------
CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (CHN044) CLOSE CHN044
	IF (CHN045) CLOSE CHN045
	RETURN
;------------------------------------------------


INIT_WINDOW,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; SET UP SCREEN 1 WINDOW
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL U_START("LIB:SMC_WND",,,,,,,100)
	XCALL E_SECT("Order Maintenance", D_CAPTION)
;;;	XCALL W_INIT(POOLSIZE,WNDCHNL,MAXWINS)
;;;	xcall u_start("lib:smc_wnd",,,,,,,35)
	XCALL TNMBR (WN_TNMBR)
	XCALL W_PROC(WP_FIND,WND_1,WN_NAME)
	IF (.NOT. WND_1)
		BEGIN
		XCALL W_PROC(WP_CREATE,WND_1,WN_NAME,24,78)
		END
	XCALL W_BRDR(WND_1,WB_TITLE,'ORDER MAINTENANCE',
&			WB_TPOS,WBT_TOP,WBT_CENTER)
	XCALL W_PROC(WP_PLACE,WND_1,1,1)	
	XCALL W_DISP(WND_1,WD_CLEAR)
	XCALL W_UPDT
	W_ID = WND_1
	xcall u_logwnd(wnd_1)
	RETURN



