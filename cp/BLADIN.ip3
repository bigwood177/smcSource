;BLADIN.CP	3-1-10 SSQ
;bladq1.dbl
;bladqq.dbl
;BLADIN.CP
;
;
;	INSTALLED ON NEW SYSTEM 3-30-98
;
;	ALPHA SCAC TEST 6-24-98
;	INSTALLED 7-1-98
;	24-May-2005: BLHTAG tag along xref file 
;	11-DEC-2019: MISCUS MOD
;	03-MAR-2020: pull data from dptloc(rd194a)
;
;	This code contains esc sequences which may need to be altered...
;
; BLADIN.COP - MAINTAIN BILL OF LADING FILE PRIOR TO PRINT AND HIST UPDATE
;
;	4/15/96 - SEFFREN - TECHNOLOGY MAXIMIZERS, INC.
;
	.include 'wnd:tools.def'

	.DEFINE POOLSIZE	,25000
	.DEFINE WNDCHNL		,15
	.DEFINE MAXWINS		,10
	.INCLUDE 'DEF:WINDOWS.DEF'


EXTERNAL FUNCTION
	GU_NAME	,A

record	tray
	te	,a1	;esc
		,a*,	'&l'
	tra	,d1,	4	;4 = tray 2 for lEXMARK
		,a*,	'H'


RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR

record	b6cpi
	b_esc	,a1
		,a6,	'(s3b6H'	;bold 6cpi
record	b8cpi
	b8_esc	,a1
		,a6,	'(s3b8H'	;bold 8cpi
RECORD	m10cpi
	m_ESC	,A1
		,A7,	'(s0b10H'	;med 10cpi

RECORD	C_ARAS
	CLAS_ARA	,200D5
	UOM_ARA		,200A7
	QTY_ARA		,200D6
	WT_ARA		,200D6
	DESC_ARA	,200A35
	W_IDX		,D6
	TAGA_ARA	,200D6	;TAG ALONG ORDERS
	T_IDX		,D6	;INDEX FOR TAGA_ARA
	IDX		,D6
	C_MAX		,D3,	200

RECORD	DPTLOC
	.INCLUDE 'DEF:RD194A.DEF'

RECORD	MISCUS
	.INCLUDE 'DEF:rD101A.DEF'

record	shipto
	.include 'def:rd171a.def'

record	popar
	.include 'def:blpop.def'

record	crhold			;ssq 3-24-10
	.include 'def:rd195a.def'

RECORD	BLHTAG			;SSQ 5-25-05
	.INCLUDE 'DEF:RD066A.DEF'

record	cusmas			;added for roldx - empty
	.include 'def:rd001a.def'
RECORD	DUMCUS
	.INCLUDE 'DEF:RD001B.DEF'

RECORD	ROLO
	.INCLUDE 'DEF:RD183A.DEF'

RECORD	POP
	.INCLUDE 'DEF:POP1.DEF'

RECORD	POP44
	.INCLUDE 'DEF:POP44.DEF'

RECORD	POP1A		;FOR COPTBL "D7" POP-UP
	.INCLUDE 'DEF:POP1A.DEF'

	
RECORD BLHEAD
	.INCLUDE 'DEF:RD178A.DEF'
RECORD BLLINE
	.INCLUDE 'DEF:RD179A.DEF'
RECORD ORDHDR
	.INCLUDE 'DEF:RD044A.DEF'
RECORD	COPTBL
	.INCLUDE 'DEF:RD182A.DEF'

RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
		,A1
	POS	,D2
RECORD
	BHKEY	,A9
RECORD	,X
	KORDNO	,D6
	KHDRN	,D1
	KSHPN	,D2
RECORD ASHIPNO
	AORDNO	,A6
		,A1,'.'
	AHDRN	,A1
		,A1,'.'
	ASHPN	,A2
RECORD
	UOM050	,7A7,	'CARTONS','PIECES ','BUNDLES','BOXES  ','CRATES ',
&			'SKIDS  ','GYLORDS'
	DES050	,6A30,
&			'SLIPS, DRIVES          106-260',
&			'R-ANGLE                       ',
&			'TDC ACCESSORIES               ',
&			'COMPANION RINGS               ',
&			'SPIRAL PIPE HANGERS           ',
&			'TDC BAR                       '

	UOM060	,9A7,	'CARTONS','PIECES ','LOTS   ','BOXES  ','CRATES ',
&			'SKIDS  ','GYLORDS','PANELS ','10'' BOX'
	DES060	,4A30,
&			'TURNING VANE RAIL             ',
&			'MISC. DUCT                    ',
&			'MISC. PLASMA FITTINGS         ',
&			'MISC. S/L PIPE-SEAM NOT CLOSED'

	UOM070	,3A7,	'BUNDLES','CRATES ','CARTONS'
	DES070	,2A30,
&			'GALV. TURNING VANE            ',
&			'STAINLESS STEEL TURNING VANE  '

	UOM125	,5A7,	'BOXES  ','GYLORDS','SKIDS  ','BUNDLES','PIECES '
	DES125	,4A30,
&			'FITTINGS - MISC. GALVANIZED   ',
&			'FITTINGS - MISC. PVS          ',
&			'FITTINGS - GORELOCK           ',
&			'FITTINGS - WELDED             '

	UOM150	,5A7,	'BOXES  ','GYLORDS','SKIDS  ','PIECES ','CRATES '
	DES150	,8A30,
&			'FITTINGS - MISC. GALVANIZED   ',
&			'FITTINGS - MISC. PVS          ',
&			'FITTINGS - GORELOCK           ',
&			'FITTINGS - WELDED             ',
&			'SPIRAL PIPE - GALVANIZED      ',
&			'SPIRAL PIPE - PVS             ',
&			'SPIRAL PIPE - PAINT GRIP      ',
&			'SPIRAL PIPE - STAINLESS STEEL '

RECORD	WN_NAME
		,A5,	'SCRN1'
	WN_TNMBR,D4

RECORD	FUNKEY
	.INCLUDE 'DEF:FUNKEY.DEF'

RECORD	CHANNEL
	CHN001	,D2
	CHN002	,D2
	CHN044	,D2
	CHN066	,D2		;SSQ 5-24-05
	CHN178	,D2
	CHN179	,D2
	CHN182	,D2
	CHN183	,D2
	CHN188	,D2
	CHN189	,D2
	CHN195	,D2
	chn101	,d3
	CHN194	,D3		;3-2-20

RECORD	WARS
	WND_1	,D4
	W_ID	,D4
	WND_7	,D4		;DPTLOC WINDOW

record	skey
	xcusno	,d6
	shpno	,d4

RECORD	VARS
	DR_CALLED	,D1	;DSPREC2 CALLED?
	numlin	,d6
	cash_cust	,d1	;customers 2,3,5,10
	A6	,A6
	D7_RFA	,A6
	NOLF	,D4
	ADJ	,D4
        barfil  ,a14,   'cp:c128s16.bar'
	b_data	,a100
	b_strng	,a100
	UNAME	,A15
	f_key	,d3
	CMPCOD	,A3	;SSQ 3-30-06
	SAVTAG	,D6		;TAG ALONG ORDER #
	LEN	,D4
	r_type	,d1
	update	,d1
	GOT_SCAC	,D1
	SAVRFA	,A6
	TSTAT	,D1
	OPNOK	,D1

	que_name	,a14
;			         123456789012345678901234567890

	BHSHPV	,A15	; SHIP VIA TRUCK LINE
	BL_FOUND	,D1
	SCAC	,A4
	SHP_ERR	,D1
	LOKCTL	,D1
	BSMID	,D5
	BSEND	,D5
	SRCCTL	,D1
	V	,D1
	I	,D3
	SWITCH	,D1
	TODAY	,D8
	TDATE	,D6
	TTIME	,D6
	ALPHA	,A15
	ENTRY	,A60
	INXCTL	,D1
	CNGCTL	,D1
	WHATNO	,D2
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	DELETE	,D1,3
	SELECT	,D2
	DTMASK	,A8,	'XX/XX/XX'
	TMASK	,A6,	'ZZZZZX'
	TUNITS	,D5
	TWGHT	,D6
	DCHAR	,D3
	ACHAR	,A1
	TTSTS	,D1
	ADDLIN	,D1
	SEQ	,D2
	GETHI	,D1
	KTRKNAM	,A15
	HIHDRN	,D1
	HISHPN	,9D2
	PLINE	,A92
	xline	,a92
	LINCNT	,D2
	LPSW	,D1
	SPLFIL	,A14
	PGCNT	,D1
	LPARG	,D1
	BLANKS	,A20
	DFLD	,D6
	NUMASK	,A7,	'ZZZ,ZZX'
	DLMASK	,A9,	'ZZ,ZZZ.XX'
	BLCONT	,D1,	0
	REPBL	,D1,	0
	INSTANTBL	,D1,	0
	ESC	,A1
	SAVKEY	,A9
	LINE	,A80	,'--------------------------------------------------------------------------------'

RECORD	,X
	ALOKCTL	,A1
PROC
	XCALL TERID (V)
	UNAME = %GU_NAME
	UPCASE UNAME
	XCALL WHO(CMPCOD)


; 3-28-18 ssq: new lexmark printers, print local for smc
; blank que name will print locally...
	TRA = 4			;Everyone now using the same Lexmark printer...
	USING CMPCOD SELECT
	('ROC'),	QUE_NAME = 'ROC_STEVEG'
	ENDUSING

;;;	USING CMPCOD SELECT
;;;	('ROC'),	BEGIN
;;;			QUE_NAME = 'ROC_SLS1'
;;;			TRA = 5
;;;			END
;;;	(),		TRA = 4			
;;;
;;;	ENDUSING
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	XCALL ASCII (27,ESC)
	b_esc = esc
	b8_esc = esc
	m_esc = esc
	te = esc

	XCALL RDATE (TDATE)
	XCALL DATE8(TDATE, D_OUT, TODAY, D_FMT, D_SW)

	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF

	CALL INIT_WINDOW


SELECT,
	W_ID = WND_1
	XCALL W_DISP(WND_1,WD_CLEAR)
	XCALL W_DISP(WND_1,WD_POS, 6,15,'PLEASE SELECT ACTION: ')
	XCALL W_DISP(WND_1,WD_POS, 8,15,'1. DISPLAY ALL B/L ACTIVITY FOR AN ORDER')
	XCALL W_DISP(WND_1,WD_POS, 9,15,'2. ADD NEW B/L HEADER (SHIP TO LOCATION)')
	XCALL W_DISP(WND_1,WD_POS,10,15,'3. ADD NEW B/L SHIPMENT (TO AN EXISTING HEADER)')
	XCALL W_DISP(WND_1,WD_POS,11,15,'4. CHANGE OPEN B/L')
	XCALL W_DISP(WND_1,WD_POS,12,15,'5. DELETE OPEN B/L')
	XCALL W_DISP(WND_1,WD_POS,13,15,'6. SELECT B/Ls FOR PRINTING')
	XCALL W_DISP(WND_1,WD_POS,14,15,'7. PRINT SELECTED B/Ls')
	XCALL W_DISP(WND_1,WD_POS,15,15,'8. ENTER FREIGHT CHARGES TO SHIPPED B/Ls')
	XCALL W_DISP(WND_1,WD_POS,16,15,'9. MANUALLY FLAG B/L TO HISTORY')
	XCALL W_DISP(WND_1,WD_POS,17,14,'10. MAINTAIN TRUCK LINE INFO')
	XCALL W_UPDT
	CTL = '06,37,02,00,#E'
	CALL INPUT
	GOTO (SELECT,ENDOFF), INXCTL
	SELECT = ENTRY

	ROW = 2
	COL = 1
	USING SELECT SELECT
	(1), BEGIN
		XCALL W_DISP(WND_1,WD_POS,ROW,COL,'DISPLAY ALL B/L ACTIVITY FOR AN ORDER')
		GOTO DSPACT
	     END
	(2), XCALL W_DISP(WND_1,WD_POS,ROW,COL,'ADD NEW B/L HEADER (SHIP TO LOCATION)')
	(3), XCALL W_DISP(WND_1,WD_POS,ROW,COL,'ADD NEW B/L SHIPMENT (TO AN EXISTING HEADER)')
	(4), XCALL W_DISP(WND_1,WD_POS,ROW,COL,'CHANGE OPEN B/L')
	(5), XCALL W_DISP(WND_1,WD_POS,ROW,COL,'DELETE OPEN B/L')
	(6), XCALL W_DISP(WND_1,WD_POS,ROW,COL,'SELECT B/Ls FOR PRINTING')
	(7), BEGIN
		XCALL W_DISP(WND_1,WD_POS,ROW,COL,'PRINT B/Ls')
		GOTO PRINTBL
	     END
	(8), XCALL W_DISP(WND_1,WD_POS,ROW,COL,'ENTER FREIGHT CHARGES TO SHIPPED B/Ls')
	(9), XCALL W_DISP(WND_1,WD_POS,ROW,COL,'MANUALLY MOVE B/L TO HISTORY')
	(10), BEGIN
		CALL CLOSES
		XCALL PGCHN ('CP:TRKMNT',1)
	      END
	(), GOTO SELECT
	ENDUSING

DISPLA1,
	DR_CALLED = 0
	CNGCTL =
	BHKEY =
	BLHEAD =
	BLLINE =
	SAVKEY =
	UNLOCK 8
	UNLOCK 9
	XCALL W_DISP(WND_1,WD_POS,4,1,WD_CLR,WDC_EOW,'6. SHIP TO')
	XCALL W_DISP(WND_1,WD_POS,4,49,'1. SHIPPERS NO.')
	XCALL W_DISP(WND_1,WD_POS,5,49,'2. B/L DATE')
	XCALL W_DISP(WND_1,WD_POS,6,49,'3. SHIP VIA')
	XCALL W_DISP(WND_1,WD_POS,7,49,'4. CARRIERS NO.')
	XCALL W_DISP(WND_1,WD_POS,8,49,'5. DATE SHIPPED')
	XCALL W_DISP(WND_1,WD_POS,11,1,'7. CUST PO NO')
	XCALL W_DISP(WND_1,WD_POS,11,18,'8. SPECIAL INSTRUCTIONS')
	XCALL W_DISP(WND_1,WD_POS,16,1,' 9. PPD/COL/THIRD')
	XCALL W_DISP(WND_1,WD_POS,18,1,'10. TRACER ID #')
	XCALL W_DISP(WND_1,WD_POS,20,1,'    STATUS CODE')

BHORDN,					; ORDER NUMBER
	CTL = '04,66,06,01,#E'
	CALL INPUT
	GOTO (DISPLA1,SELECT), INXCTL
	KORDNO = ENTRY
	AORDNO = KORDNO
	AHDRN = 
	ASHPN = 
	IF (KORDNO.EQ.0)
	BEGIN
	  KHDRN = 0
	  KSHPN = 0
	  AHDRN = KHDRN
	  ASHPN = KSHPN,'XX'
	  GOTO BHSHPN2
	END
;-
	OORDNO = KORDNO
	LOKCTL = 1
	XCALL ISIO (4,ORDHDR,OORDNO,READ,LOKCTL)
	IF (LOKCTL.OR.OORDNO.NE.KORDNO) xcall olmsg (w_id,24,'No Order',1)
;-

	XCALL W_DISP(WND_1,WD_POS,ROW,COL,ASHIPNO)
	IF (SELECT.GE.2.AND.SELECT.LE.3) 
	BEGIN
	  GETHI = 1
	  CALL GETHIGH
	  GETHI = 
	END

BHHDRN,					; B/L HEADER NUMBER (USED WHEN MULTI SHIP TO DIFF ADDR)
	CTL = '04,73,01,00,# '
	CALL INPUT
	GOTO (BHORDN), INXCTL
	KHDRN = ENTRY
		;IF ADD HEADER - INCR HIGH HEADER # AND DISPLAY

	IF (SELECT.EQ.2.AND.KHDRN.EQ.0) KHDRN = HIHDRN + 1	;IF ADD HEADER
								;INCR HIGH HDR #
								;AND DISPLAY
	IF (KHDRN.EQ.0) KHDRN = 1
	AHDRN = KHDRN
	XCALL W_DISP(WND_1,WD_POS,ROW,66,ASHIPNO)
	
BHSHPN,					; B/L SHIPMENT NUMBER (MULTI SHIP TO SAME HEADER)
	CTL = '04,75,02,00,# '
	CALL INPUT
	GOTO (BHORDN), INXCTL
	KSHPN = ENTRY

		;IF ADD SHIPMENT - INCR HIGH SHIPMENT # AND DISPLAY

	IF (SELECT.EQ.3.AND.KSHPN.EQ.0) KSHPN = HISHPN(KHDRN) + 1
								
	IF (KSHPN.EQ.0) KSHPN = 1
	ASHPN = KSHPN,'XX'

BHSHPN2,
	XCALL W_DISP(WND_1,WD_POS,ROW,66,ASHIPNO)
	KEY178 = BHKEY
	CALL GET_BLHEAD			;FETCH BLHEAD RECORD
;-----------------------------------------------------------
	IF (BL_FOUND)
	THEN	USING SELECT SELECT		;header found...
		(2 thru 3),		BEGIN
				;;;	XCALL MESAG('THIS KEY ALREADY ON CURRENT FILE - CANNOT ADD ANOTHER',2)
				XCALL OLMSG(W_ID,24,'THIS KEY ALREADY ON CURRENT FILE - CANNOT ADD ANOTHER',2)
					GOTO DISPLA1
					END
		(),			GOTO DSPREC1
		ENDUSING

	ELSE	USING SELECT SELECT		;header not found...
		(4 thru 6, 8 thru 10),	BEGIN
				;;;	XCALL MESAG('NO CURRENT B/L''s ON FILE MATCHING THIS KEY',2)
					XCALL OLMSG(W_ID,24,'NO CURRENT B/L''s ON FILE MATCHING THIS KEY',2)
					GOTO DISPLA1
					END
		(),			GOTO ADDMODE
		ENDUSING
;-----------------------------------------------------------
	GOTO SELECT
	
ADDMODE,
	IF (SELECT.EQ.3)
	BEGIN
	  KEY178 = BHKEY
	  LOKCTL = 1
	  XCALL ISIO (8,BLHEAD,KEY178(1,7),READ,LOKCTL)
	  IF (LOKCTL.EQ.0) 
	  BEGIN
	    KEY178 = BHKEY
	    BHBILD = 
	    BHSHPV = 
	    BHSCAC =
	    BHPRON =
	    BHSHPD =
	    BHPPCL =
	    BHTRACE =
	    BHSTATS =
	    GOTO DSPREC1
	  END
	  KEY178 = BHKEY
	  LOKCTL = 1
	  XCALL ISIO (28,BLHEAD,KEY178(1,7),READ,LOKCTL)
	  IF (LOKCTL.EQ.0) 
	  BEGIN
	    KEY178 = BHKEY
	    BHBILD = 
	    BHSHPV = 
	    BHSCAC =
	    BHPRON =
	    BHSHPD =
	    BHPPCL =
	    BHTRACE =
	    BHSTATS =
	    GOTO DSPREC1
	  END
	XCALL OLMSG(W_ID,24,'NO PREVIOUS HEADER FOUND - SWITCHING TO ADD HEADER MODE',2)
	SELECT = 2
	XCALL W_DISP(WND_1,WD_POS,2,1,wd_clr,wdc_lin,'ADD NEW B/L HEADER (SHIP TO LOCATION)')
	END

	BLHEAD =
	KEY178 = BHKEY
	IF (KORDNO.EQ.0) GOTO BHBILD
	OORDNO = KORDNO
	LOKCTL = 1
	XCALL ISIO (4,ORDHDR,OORDNO,READ,LOKCTL)
	IF (LOKCTL.OR.OORDNO.NE.KORDNO)
	BEGIN
	  XCALL OLMSG(W_ID,24,'OPEN ORDER NOT FOUND - CANNOT ENTER B/L',2)
	  GOTO DISPLA1
	END
	IF (OLOC.NE.'O')
	BEGIN
	  XCALL OLMSG(W_ID,24,'THIS ORDER # IS FLAGGED AS AN ESTIMATE - CANNOT ENTER B/L',2)
	  GOTO DISPLA1
	END

	READ (CHN195, CRHOLD, OORDNO) [ERR=NOT_ON_HOLD]
	XCALL OLMSG (W_ID,24,'ORDER ON HOLD - CHECK WITH AR',2)

NOT_ON_HOLD,


	BHCUSNM = OCUSNM
;;> rolo stuff here
; display rolodex info if there are shipping notes
	read (chn183,rolo,ocusno) [err=bad_rolo]
	XCALL TRIM(R_SHIP,LEN)
	IF (LEN .GT. 1)	CALL ROLODEX
	GOTO BHBILD
BAD_ROLO,
;;> rolo stuff here

BHBILD,					; B/L DATE (DATE TRUCK LINE CALLED)
	CTL = '05,66,08,00,D '
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHBILD = ENTRY
	IF (BHBILD.EQ.0)
	BEGIN
	  BHBILD = TODAY
	  XCALL DATE8(BHBILD, D_OUT, D_OUTR, D_FMT, D_SW)
	  XCALL W_DISP(WND_1,WD_POS,ROW,COL, D_FMT)
	END
	GOTO (ANYCN1), CNGCTL
BHSHPV,					; SHIP VIA
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	CTL = '06,66,15,01,A ,00'
;;;ASK1B,
;;;	CALL CINPUT
;;;	GOTO (DISPLA1,DISPLA1,BHSHPV,ASK1C), INXCTL
;;;	KTRKNAM = ENTRY
;;;	IF (POS) TRKNAM(1,POS) = ENTRY(1,POS)
;;;	IF (POS) XCALL W_DISP(WND_1,WD_POS,ROW,COL,ENTRY(1,MAX))
;;;	IF (POS) READ (80,TRKMAS,TRKNAM(1,POS)) [KEY=ASK1B, EOF=ASK1B]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CTL = '06,66,04,00,A '
	CALL INPUT
	GOTO (DISPLA1),INXCTL
	SCAC = ENTRY(1,4)
	CALL GET_SCAC
	GOTO (BHSHPV),SHP_ERR

	XCALL W_DISP(WND_1,WD_POS,ROW,COL,SC_NAME)
	XCALL W_DISP(WND_1,WD_POS,16,63,SC_NAME)
	XCALL W_DISP(WND_1,WD_POS,17,63,LINE(1,15))

	ALPHA(1,13) = SC_TEL1,'(XXX)XXX-XXXX'
	IF (SC_TEL1(1,3).EQ.0) ALPHA(1,13) = SC_TEL1,'ZZZZZXXX-XXXX'
	XCALL W_DISP(WND_1,WD_POS,18,50,'TRAFFIC PHONE# ')
	XCALL W_DISP(WND_1,WD_POS,18,63,ALPHA(1,13))

	ALPHA(1,13) = SC_TEL2,'(XXX)XXX-XXXX'
	IF (SC_TEL2(1,3).EQ.0) ALPHA(1,13) = SC_TEL2,'ZZZZZXXX-XXXX'
	XCALL W_DISP(WND_1,WD_POS,20,50,'TRACING PHONE# ')
	XCALL W_DISP(WND_1,WD_POS,20,63,ALPHA(1,13))
	xcall w_updt

	BHSHPV = SC_NAME
	BHSCAC = SC_SCAC
	GOTO (ANYCN1), CNGCTL

BHPRON,					; PRO NUMBER (TRUCK LINE ASSIGNED)
	CTL = '07,66,10,00,A '
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHPRON = ENTRY
	GOTO (ANYCN1), CNGCTL

BHSHPD,					; SHIP DATE
	CTL = '08,66,08,00,D '
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSHPD = ENTRY
	IF (BHSHPD.EQ.0) 
	BEGIN
	  BHSHPD = TODAY
	  ENTRY(1,8) = BHSHPD,DTMASK
	  XCALL DATE8(BHSHPD, D_OUT, D_OUTR, D_FMT, D_SW)
	  XCALL W_DISP(WND_1,WD_POS,ROW,COL, D_FMT)
	  xcall w_updt
	END
	GOTO (ANYCN1), CNGCTL
shipto,
	CTL = '05,04,30,00,A '
	IF (SELECT.EQ.2)
	BEGIN
	  BHSHPNM = OSHPNM
	  BHSHAD1 = OSHAD1
	  BHSHAD2 = OSHAD2
	  BHSHAD3 = OSHAD3
	END

	XCALL W_DISP(WND_1,WD_POS,ROW,COL,BHSHPNM)
	XCALL W_DISP(WND_1,WD_POS,ROW+1,COL,BHSHAD1)
	XCALL W_DISP(WND_1,WD_POS,ROW+2,COL,BHSHAD2)
	XCALL W_DISP(WND_1,WD_POS,ROW+3,COL,BHSHAD3)


	XCALL W_DISP(WND_1,WD_POS,23,1,'<ENTER> TO ACCEPT; <TAB> TO OVERRIDE')
	xcall w_updt	
BHSHPNM,				; SHIP-TO-NAME
	CTL = '05,04,30,00,A '
	CALL ACCEPT
	IF (DCHAR.EQ.13) GOTO BHSHAD1
	IF (DCHAR.NE.9) GOTO BHSHPNM

	switch = 5
	if (cash_cust)
	then	xcall files (88,'SI',102,switch)
	else	xcall files (88,'SI',171,switch)

	xcall w_disp(wnd_1,wd_pos,24,1,wd_clr,wdc_eol)
	xcall w_disp(wnd_1,wd_pos,24,1,'<f1>=display ship-to list')
	ctl = '05,04,04,00,N '
	call input
	xcall w_disp(wnd_1,wd_pos,24,1,wd_clr,wdc_eol)


	IF (INXCTL)
	BEGIN
	  CLOSE 88
	  GOTO DISPLA1
	END

	IF (F_KEY .EQ. F_01) 
		BEGIN
		CALL M_SHIPTO
		GOTO(shipto),INXCTL		;ABORT
		XCALL W_DISP(WND_1,WD_POS,ROW,COL,ENTRY(1,4))
		END		
;--------------------

	OSHPTO = ENTRY
	IF (ENTRY.EQ.BLANKS.OR.OSHPTO.EQ.0) 
	BEGIN
	  CLOSE 88
	  GO TO DFBLTO
	END
	IF (OSHPTO.EQ.9999) 
	BEGIN
	  CLOSE 88
	  GO TO bhshpnm
	END

	using cash_cust select
	(1),	xcusno = omicus
	(),	xcusno = ocusno
	endusing

;;;	XCUSNO = OCUSNO
	SHPNO = OSHPTO
	XCALL ISIO (88,SHIPTO,SKEY,READ,LOKCTL)
	CLOSE 88
	IF (LOKCTL .NE. 0) GOTO BADSHP

	  BHSHPNM = shtona
	  BHSHAD1 = shtoad(1)
	  BHSHAD2 = shtoad(2)
	  BHSHAD3 = shtoad(3)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;un-commented ssq 9-13-12
	XCALL FILES (44,'SU',044,SWITCH)
	IF(SWITCH.NE.9)
		BEGIN
		READ(44, ORDHDR, BHORDN) [ERR=OH_ERR2]

	OSHPNM = SHTONA
	OSHAD1 = SHTOAD(1)
	OSHAD2 = SHTOAD(2)
	OSHAD3 = SHTOAD(3)
	OTAXFL = SHTOTC		;SSQ 4/24/02
; change taxcode from IL to ILR for Rockford orders, unless code is "IRL"
	IF (OORDNO.LT.500000 .AND. OTAXFL(1,2).EQ.'IL' .AND. 
&		OTAXFL(3,3).NE.'N') OTAXFL(3,3) = 'R'

; update ordhdr record:


		WRITE(44, ORDHDR, BHORDN)
		CLOSE 44
		END
OH_ERR2,	

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CALL DSPSHP
	GO TO (ANYCN1), CNGCTL
	GO TO bhpono
DFBLTO,

	CALL DSPSHP
	GO TO (ANYCN1), CNGCTL
;----------------------------------
	
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSHPNM = ENTRY
BHSHAD1,				; SHIP-TO ADDRESS LINE 1
	CTL = '06,04,30,00,A '
	CALL ACCEPT
	IF (DCHAR.EQ.13) GOTO BHSHAD2
	IF (DCHAR.NE.9) GOTO BHSHAD1
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSHAD1 = ENTRY
BHSHAD2,				; SHIP-TO ADDRESS LINE 2
	CTL = '07,04,30,00,A '
	CALL ACCEPT
	IF (DCHAR.EQ.13) GOTO BHSHAD3
	IF (DCHAR.NE.9) GOTO BHSHAD2
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSHAD2 = ENTRY
BHSHAD3,				; SHIP-TO ADDRESS LINE 3
	CTL = '08,04,30,00,A '
	CALL ACCEPT
	IF (DCHAR.EQ.13) GOTO ENDSHAD
	IF (DCHAR.NE.9) GOTO BHSHAD3
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSHAD3 = ENTRY
ENDSHAD,
	GOTO (ANYCN1), CNGCTL

	CTL = '12,04,10,00,A '
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,OPONO)
BHPONO,					; PO NUMBER
	CTL = '12,04,10,00,A '
	CALL ACCEPT
	IF (DCHAR.EQ.13)
	BEGIN
	  BHPONO = OPONO
	  GOTO ENDPONO
	END
	IF (DCHAR.NE.9) GOTO BHPONO
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHPONO = ENTRY
ENDPONO,
	GOTO (ANYCN1), CNGCTL

BHSPIN1,				; SPECIAL INSTRUCTIONS
	CTL = '12,21,45,00,A '
	CALL ACCEPT
	IF (DCHAR.EQ.13) GOTO BHSPIN2
	IF (DCHAR.NE.9) GOTO BHSPIN1
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSPIN1 = ENTRY
BHSPIN2,				; SPECIAL INST LINE 2
;;;	CTL = '13,21,60,00,A '
	CTL = '13,21,57,00,A '
	CALL ACCEPT
	IF (DCHAR.EQ.13) GOTO ENDIN2
	IF (DCHAR.NE.9) GOTO BHSPIN2
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSPIN2 = ENTRY
ENDIN2,
	GOTO (ANYCN1), CNGCTL
	
BHPPCL,					; PREPAID OR COLLECT (P OR C)
	CTL = '16,21,01,00,A '
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHPPCL = ENTRY
	IF (BHPPCL.NE.'P'.AND.BHPPCL.NE.'C'.AND.BHPPCL.NE.'T') GOTO BHPPCL
	GOTO (ANYCN1), CNGCTL
	IF (SELECT.EQ.3) GOTO ANYCN1

BHTRACE,				; TRACER ID NUMBER (TRUCK LINE ASSIGNED)
	CTL = '18,21,10,00,A '
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHTRACE = ENTRY
	GOTO ANYCN1
BHSTATS,
	CTL = '20,21,01,00,# '
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSTATS = ENTRY
	USING BHSTATS SELECT
	(0),	ALPHA = 'X   OPEN B/L'
	(1),	ALPHA = 'X   SELECTED'
	(2),	ALPHA = 'X   PRINTED'
	(3),	ALPHA = 'X   COMPLETE'
	(4),	ALPHA = 'X   POSTING'
	(9),	ALPHA = 'X   HIST B/L'
	(),	ALPHA = 'X   UNDEF'
	ENDUSING
	ALPHA(1,2) = BHSTATS,'X-'
	CTL = '20,21'
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,ALPHA)
	xcall w_updt
	GOTO ANYCN1

DSPREC1,
	CTL = '04,66,06,00,#E'
	AORDNO = BHORDN
	AHDRN = BHHDRN
	ASHPN = BHSHPN,'XX'
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,ASHIPNO)

	CTL = '05,66,06,00,D '
	XCALL DATE8(BHBILD, D_OUT, D_OUTR, D_FMT, D_SW)
	XCALL W_DISP(WND_1,WD_POS,ROW,COL, D_FMT)

	CTL = '06,66,15,01,A ,00'
;;;=>	XCALL W_DISP(WND_1,WD_POS,ROW,COL,BHSHPV)
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,BHSCAC)
	CTL = '07,66,10,00,A '
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,BHPRON)

	CTL = '08,66,06,00,D '
	XCALL DATE8(BHSHPD, D_OUT, D_OUTR, D_FMT, D_SW)
	XCALL W_DISP(WND_1,WD_POS,ROW,COL, D_FMT)

	CTL = '05,04,30,00,A '
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,BHSHPNM)
	CTL = '06,04,30,00,A '
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,BHSHAD1)
	CTL = '07,04,30,00,A '
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,BHSHAD2)
	CTL = '08,04,30,00,A '
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,BHSHAD3)
	CTL = '12,04,10,00,A '
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,BHPONO)
	CTL = '12,21,45,00,A '
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,BHSPIN1)
	CTL = '13,21,60,00,A '
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,BHSPIN2)
	CTL = '16,21,01,00,A '
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,BHPPCL)
	CTL = '18,21,10,00,A '
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,BHTRACE)
	DCHAR = BHSTATS
	USING BHSTATS SELECT
	(0),	ALPHA = 'X   OPEN B/L'
	(1),	ALPHA = 'X   SELECTED'
	(2),	ALPHA = 'X   PRINTED'
	(3),	ALPHA = 'X   COMPLETE'
	(4),	ALPHA = 'X   POSTING'
	(9),	ALPHA = 'X   HIST B/L'
	(),	ALPHA = 'X   UNDEF'
	ENDUSING
	ALPHA(1,2) = BHSTATS,'X-'
	CTL = '20,21'
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,ALPHA)

	GOTO 	(DISPLA1,DISPLA1,BHBILD,ANYCN1,ASKDEL1,SELECBL,PRINTBL,
&		 ENTFRT,MANUPD), SELECT
	GOTO DISPLA1
ANYCN1,
	xcall w_updt
	IF (BHSTATS.GT.3) GOTO NOCN1
	CNGCTL = 6

;;;	XCALL ANYCN (CNGCTL,WHATNO)
	XCALL WANCN (W_ID,23,CNGCTL,WHATNO)
	IF (CNGCTL.EQ.-1) GOTO DISPLA1
	IF (CNGCTL) 
	BEGIN
	  IF (BHSHPN.NE.1) GOTO (BADCN1,BHBILD,BHSHPV,BHPRON,BHSHPD,BADCN1,BADCN1,BHSPIN1,BHPPCL,BHTRACE,BHSTATS), WHATNO
	  GOTO (BADCN1,BHBILD,BHSHPV,BHPRON,BHSHPD,BHSHPNM,BHPONO,BHSPIN1,BHPPCL,BHTRACE,BHSTATS), WHATNO
	  GOTO ANYCN1
	END
	GOTO (SELECT,ADD1,ADD1,CHANGE1), SELECT
	GOTO DISPLA1
BADCN1,
	XCALL OLMSG(W_ID,24,'INVALID CHANGE',1)
	GOTO ANYCN1
NOCN1,
	USING BHSTATS SELECT
	(1),	XCALL OLMSG(W_ID,24,'CANNOT CHANGE OR DELETE B/L SELECTED FOR PRINTING',2)
	(2),	XCALL OLMSG(W_ID,24,'CANNOT CHANGE OR DELETE B/L ALREADY PRINTED',2)
	(3),	XCALL OLMSG(W_ID,24,'CANNOT CHANGE OR DELETE B/L FLAGGED COMPLETE',2)
	(4),	XCALL OLMSG(W_ID,24,'CANNOT CHANGE OR DELETE B/L FLAGGED POSTING',2)
	(9),	XCALL OLMSG(W_ID,24,'NO CHANGES OR DELETIONS ALLOWED TO HISTORICAL B/L',2)
	ENDUSING
	GOTO DISPLA1
ASKDEL1,
	IF (BHSTATS.GT.3) GOTO NOCN1
	IF (CNGCTL) 
	  THEN XCALL W_DISP(WND_1,WD_POS,23,1,wd_clr,wdc_lin,'CANNOT CHANGE SHIPPERS NUMBER - DELETE B/L <N> ?')
	  ELSE XCALL W_DISP(WND_1,WD_POS,23,1,wd_clr,wdc_lin,' ARE YOU SURE YOU WISH TO DELETE THIS B/L <N> ?')
	CTL = '23,49,01,00,YN'
	CALL INPUT
	IF (INXCTL.NE.1) GOTO DISPLA1
DELETE1,
	IF (BHSTATS.GT.3) GOTO NOCN1
	IF (SELECT.EQ.5)
	BEGIN
	  LOKCTL = 1
	  XCALL ISIO (8,BLHEAD,KEY178,DELETE,LOKCTL)
	  IF (LOKCTL.NE.0) 
	  BEGIN
	    XCALL W_DISP(WND_1,WD_POS,23,1,wd_clr,wdc_lin,ALOKCTL)
	    DISPLAY (15,':  ',BLHEAD(1,9))
	    XCALL OLMSG(W_ID,24,'PROBLEM DELETING HEADER',2)
	  END
	END
	XCALL W_DISP(WND_1,WD_POS,23,1,2,'--- HEADER DELETED ---')
	KEY179 = BHKEY
	LOKCTL = 1
	XCALL ISIO (9,BLLINE,KEY179(1,9),READ,LOKCTL)
	IF (LOKCTL.NE.0.OR.KEY179(1,9).NE.BHKEY) GOTO DEL2
	DO BEGIN
	  LOKCTL = 1
	  XCALL ISIO (9,BLLINE,KEY179,DELETE,LOKCTL)
	  IF (LOKCTL.NE.0)
	  BEGIN
	    XCALL W_DISP(WND_1,WD_POS,23,1,wd_clr,wdc_lin,ALOKCTL)
	    DISPLAY (15,':  ',BLLINE(1,9))
	    XCALL OLMSG(W_ID,24,'PROBLEM DELETING LINE ITEM',2)
	  END
	  LOKCTL = 1
	  XCALL IOS (9,BLLINE,READ,LOKCTL)
	END UNTIL (LOKCTL.NE.0.OR.KEY179(1,9).NE.BHKEY)
	XCALL W_DISP(WND_1,WD_POS,23,20,'--- LINE ITEMS DELETED ---')
DEL2,
	XCALL OLMSG(W_ID,24,'B/L DELETED',2)
	GOTO DISPLA1
CHANGE1,
	LOKCTL = 1
	XCALL ISIO (8,BLHEAD,KEY178,WRITE,LOKCTL)
	IF (SELECT.GE.8) GOTO DISPLA1
	GOTO LINES
ADD1,
	LOKCTL = 1
	XCALL ISIO (8,BLHEAD,KEY178,STORE,LOKCTL)
	IF (LOKCTL.NE.0) 
	BEGIN
	  XCALL W_DISP(WND_1,WD_POS,23,1,wd_clr,wdc_lin,ALOKCTL)
	  DISPLAY (15,':  ',BLHEAD(1,9))
	  XCALL OLMSG(W_ID,24,'PROBLEM STORING RECORD',2)
	  GOTO DISPLA1
	END
	GOTO LINES

;;;
;	Line item screens
;;;
LINES,
	XCALL W_DISP(WND_1,WD_POS,4,1,'   SHIP TO')
	XCALL W_DISP(WND_1,WD_POS,4,49,'   SHIPPERS NO.')
	XCALL W_DISP(WND_1,WD_POS,5,49,'   B/L DATE')
	XCALL W_DISP(WND_1,WD_POS,6,49,'   SHIP VIA')
	XCALL W_DISP(WND_1,WD_POS,7,49,'   CARRIERS NO.')
	XCALL W_DISP(WND_1,WD_POS,8,49,'   DATE SHIPPED')
	XCALL W_DISP(WND_1,WD_POS,10,1,WD_CLR,WDC_EOW,'LN  CLASS   QTY     UOM       DESCRIPTION                          WEIGHT#')
	XCALL W_DISP(WND_1,WD_POS,11,1,'--  -----  ------   -------   -----------------------------------  -------')
	XCALL W_DISP(WND_1,WD_POS,21,1,'           ------                                                  -------')
	ROW = 11
	SEQ =
	IF (SELECT.EQ.4)
	BEGIN
	  KEY179 = BHKEY
	  LOKCTL = 1
	  XCALL ISIO (9,BLLINE,KEY179(1,9),READ,LOKCTL)
;;;	read (9,blline,key179(1,9) )
	  IF (LOKCTL)
	  BEGIN
	    UNLOCK 9
	    XCALL W_DISP(WND_1,WD_POS,23,1,2,'NO LINE ITEMS ON FILE')
	    GOTO ADDLIN
	  END	
	  SEQ = BLLINN
	END

;check for dptloc records...
	for pi4 from 1 thru maxara4
		begin
		clear parry4(pi4)
		clear parrfa4(pi4)
		clear pflags4(pi4)
		end
	clear numara4
	if (select .eq. 2) call get_dptloc
	pi4 = 1

ADDROW,
	INCR ROW
	INCR SEQ
	INXCTL =

;dptloc records?
	if (pi4 .le. numara4)
		begin
		IF (ROW.GT.20) call scroll_up
		call set_blline
		incr pi4
		goto dsprec2
		end

	GOTO DISPLA2
CTRLW,
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,wd_clr,wdc_lin)
DISPLA2,
	IF (ROW.GT.20) call scroll_up

;;;	IF (ROW.GT.20)
;;;	BEGIN
;;;	  ROW = 20
;;;	  DISPLAY (15,ESC,'[12;20r',ESC,'[20;01H',ESC,'D')
;;;	  DISPLAY (15,ESC,'[01;24r')
;;;	END

	IF (SELECT.EQ.4.AND.ADDLIN.EQ.0) GOTO DSPREC2

	BLLINE =
	KEY179 = BHKEY
	BLLINN = SEQ

	IF ((SELECT.GE.2.AND.SELECT.LE.3).OR.ADDLIN)
	BEGIN
	  LOKCTL = 1
	  XCALL ISIO (9,BLLINE,KEY179,READ,LOKCTL)
	  IF (LOKCTL.EQ.0)
	  BEGIN
	    INCR SEQ
	    GOTO DISPLA2
	  END
	BLLINE =
	KEY179 = BHKEY
	BLLINN = SEQ
	END
BLLINN,
	CTL(4,8) = '01,02'
	ALPHA(1,2) = BLLINN
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,ALPHA(1,2))
BLCLAS,
	CTL (4,14) = '07,03,00,#E'
	IF (CNGCTL)
	BEGIN
	  CALL ACCEPT
	  IF (DCHAR.EQ.13) GOTO BLQTY
	  IF (DCHAR.EQ.23) GOTO CTRLW
	  IF (DCHAR.NE.9.AND.DCHAR.NE.21) GOTO BLCLAS
	END
	CALL INPUT
	GOTO (CTRLW,ENDLIN), INXCTL
	DCHAR = ENTRY
	IF (DCHAR.EQ.0) GOTO ASKDEL2
	BLCLAS = ENTRY
	USING BLCLAS SELECT
	  (50),	NOP
	  (60),	NOP
	  (70),	NOP
	  (125),NOP
	  (150),NOP
	  (200),NOP
	  (250),NOP
	  (300),NOP
	  (777),NOP
	  (888),NOP
	  (999),NOP
	  (),	BEGIN
		  XCALL OLMSG(W_ID,24,'INVALID FREIGHT CLASS',1)
		  GOTO BLCLAS
		END
	ENDUSING
BLQTY,
	IF (BLCLAS.EQ.999) GOTO BLDESC
	IF (BLCLAS.EQ.888) GOTO BLUOM
	IF (BLCLAS.EQ.777)
	BEGIN
	  XCALL W_DISP(WND_1,WD_POS,ROW,12,LINE(12,74))
	  GOTO ANYCN2
	END
	CTL (4,14) = '13,05,00,# '
	IF (CNGCTL)
	BEGIN
	  CALL ACCEPT
	  IF (DCHAR.EQ.13) GOTO BLUOM
	  IF (DCHAR.EQ.23) GOTO CTRLW
	  IF (DCHAR.NE.9.AND.DCHAR.NE.21) GOTO BLQTY
	  IF (DCHAR.NE.9) GOTO BLQTY
	END
	CALL INPUT
	GOTO (CTRLW), INXCTL
	DCHAR = ENTRY
	IF (DCHAR.EQ.0) GOTO ASKDEL2
	BLQTY = ENTRY
BLUOM,
	IF (CNGCTL) ENTRY = BLUOM
	I =
	CTL (4,14) = '21,07,00,A '

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; SSQ 3-28-1997
;;;	IF (CNGCTL.EQ.0.AND.BLCLAS.EQ.888) 
	IF (BLCLAS.EQ.888)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	BEGIN
	  BLDESC = 'TAG ALONG'
	  XCALL W_DISP(WND_1,WD_POS,ROW,31,BLDESC)
	  GOTO OVRUOM
	END
BLUOM2,
	CALL ACCEPT
	IF (DCHAR.EQ.13) GOTO ACCUOM		;<ENTER> ACCEPT DISPLAYED UOM
	IF (DCHAR.EQ.21) GOTO OVRUOM		;<CTRL/U> HAND TYPE UOM
	IF (DCHAR.EQ.23) GOTO CTRLW		;<CTRL/W> ABORT LINE
	IF (DCHAR.EQ.9)				;<TAB> CYCLE THRU STD UOMs
	BEGIN
	  INCR I
	  USING BLCLAS SELECT
	  (50),	BEGIN
	  	  IF (I.GT.7) I = 1
	  	  ENTRY = UOM050(I)
	  	  XCALL W_DISP(WND_1,WD_POS,ROW,COL,ENTRY(1,7))
		END
	  (60),	BEGIN
	  	  IF (I.GT.9) I = 1
	  	  ENTRY = UOM060(I)
	  	  XCALL W_DISP(WND_1,WD_POS,ROW,COL,ENTRY(1,7))
		END
	  (70),	BEGIN
	  	  IF (I.GT.3) I = 1
	  	  ENTRY = UOM070(I)
	  	  XCALL W_DISP(WND_1,WD_POS,ROW,COL,ENTRY(1,7))
		END
	  (125),BEGIN
;;; SSQ 8-8-97	  	  IF (I.GT.3) I = 1
	  	  IF (I.GT.5) I = 1
	  	  ENTRY = UOM125(I)
	  	  XCALL W_DISP(WND_1,WD_POS,ROW,COL,ENTRY(1,7))
		END
	  (150),BEGIN
	  	  IF (I.GT.5) I = 1
	  	  ENTRY = UOM150(I)
	  	  XCALL W_DISP(WND_1,WD_POS,ROW,COL,ENTRY(1,7))
		END
	  (),	GOTO OVRUOM
	  ENDUSING
	END
	GOTO BLUOM2				;GO AROUND
OVRUOM,
	IF (BLCLAS.EQ.888) TYPE = '# '
	CALL INPUT
	GOTO (CTRLW), INXCTL
ACCUOM,
	
	IF (BLCLAS.EQ.888)
	THEN BEGIN
	  DFLD = ENTRY
	  BLUOM = DFLD,'XXXXXX'
	  SAVTAG = DFLD				;SSQ 5-26-05
	END
	ELSE BLUOM = ENTRY
	IF (BLCLAS.EQ.888) 
	BEGIN
	  BLQTY =
	  BLWGHT =
	  GOTO ANYCN2
	END
BLDESC,
	IF (CNGCTL) ENTRY = BLDESC
	I =
	CTL (4,14) = '31,35,00,A '
	IF (CNGCTL.EQ.0.AND.BLCLAS.EQ.999) GOTO OVRDESC
BLDESC2,
	CALL ACCEPT
	IF (DCHAR.EQ.13) GOTO ACCDESC		;<ENTER> ACCEPT DISPLAYED DESC
	IF (DCHAR.EQ.21) GOTO OVRDESC		;<CTRL/U> HAND TYPE DESC
	IF (DCHAR.EQ.23) GOTO CTRLW		;<CTRL/W> ABORT LINE
	IF (DCHAR.EQ.9)				;<TAB> CYCLE THRU STD DESCs
	BEGIN
	  INCR I
	  USING BLCLAS SELECT
	  (50),	BEGIN
	  	  IF (I.GT.6) I = 1
	  	  ENTRY = DES050(I)
	  	  XCALL W_DISP(WND_1,WD_POS,ROW,COL,ENTRY(1,30))
		END
	  (60),	BEGIN
	  	  IF (I.GT.4) I = 1
	  	  ENTRY = DES060(I)
	  	  XCALL W_DISP(WND_1,WD_POS,ROW,COL,ENTRY(1,30))
		END
	  (70),	BEGIN
	  	  IF (I.GT.2) I = 1
	  	  ENTRY = DES070(I)
	  	  XCALL W_DISP(WND_1,WD_POS,ROW,COL,ENTRY(1,30))
		END
	  (125),BEGIN
	  	  IF (I.GT.4) I = 1
	  	  ENTRY = DES125(I)
	  	  XCALL W_DISP(WND_1,WD_POS,ROW,COL,ENTRY(1,30))
		END
	  (150),BEGIN
	  	  IF (I.GT.8) I = 1
	  	  ENTRY = DES150(I)
	  	  XCALL W_DISP(WND_1,WD_POS,ROW,COL,ENTRY(1,30))
		END
	  (),	GOTO OVRDESC
	  ENDUSING
	END
	GOTO BLDESC2				;GO AROUND
OVRDESC,
	CALL INPUT
	GOTO (CTRLW), INXCTL
ACCDESC,
	BLDESC = ENTRY
	IF (BLCLAS.EQ.999)
	BEGIN
	  BLQTY =
	  BLUOM =
	  BLWGHT =
	  GOTO ANYCN2
	END
BLWGHT,
	CTL (4,14) = '69,06,00,# '
	IF (CNGCTL)
	BEGIN
	  CALL ACCEPT
	  IF (DCHAR.EQ.13) GOTO ANYCN2
	  IF (DCHAR.EQ.23) GOTO CTRLW
	  IF (DCHAR.NE.9.AND.DCHAR.NE.21) GOTO BLWGHT
	END
	CALL INPUT
	GOTO (CTRLW), INXCTL
	BLWGHT = ENTRY
	GOTO ANYCN2
DSPREC2,
	CTL(4,8) = '01,02'
	ALPHA(1,2) = BLLINN
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,1,ALPHA(1,2))
	CTL (4,14) = '07,03,00,#X'
	ALPHA(1,3) = BLCLAS
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,ALPHA(1,3))
	IF (BLCLAS.EQ.777)
	BEGIN
	  XCALL W_DISP(WND_1,WD_POS,ROW,12,LINE(12,74))
	  GOTO ANYCN2
	END
	CTL (4,14) = '31,35,00,A '
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,BLDESC)
	IF (BLCLAS.NE.999)
	BEGIN
	  CTL (4,14) = '21,07,00,A '
	  XCALL W_DISP(WND_1,WD_POS,ROW,COL,BLUOM)
	END
	IF (BLCLAS.NE.999.AND.BLCLAS.NE.888)
	BEGIN
	  CTL (4,14) = '13,05,00,# '
	  ALPHA(1,5) = BLQTY
	  XCALL W_DISP(WND_1,WD_POS,ROW,COL,ALPHA(1,5))
	  CTL (4,14) = '69,06,00,# '
	  ALPHA(1,6) = BLWGHT
	  XCALL W_DISP(WND_1,WD_POS,ROW,COL,ALPHA(1,6))
	END

	IF (DR_CALLED) RETURN		;ALSO ACTS AS AN INTERNAL ROUTINE

ANYCN2,
	xcall w_updt
	CNGCTL = 4
;;;	XCALL ANYCN (CNGCTL,WHATNO)
	XCALL WANCN (W_ID,23,CNGCTL,WHATNO)

	IF (CNGCTL.EQ.-1) GOTO ENDLIN
	IF (CNGCTL) GOTO BLLINN

	TUNITS = TUNITS + BLQTY
	TWGHT = TWGHT + BLWGHT
	ALPHA(1,5) = TUNITS,TMASK
	ALPHA(6,11) = TWGHT,TMASK
	XCALL W_DISP(WND_1,WD_POS,22,13,ALPHA(1,5))
	XCALL W_DISP(WND_1,WD_POS,22,69,ALPHA(6,11))
	
	GOTO (SELECT,ADD2,ADD2,CHANGE2), SELECT
	GOTO ANYCN2
ASKDEL2,
	XCALL W_DISP(WND_1,WD_POS,23,1,wd_clr,wdc_lin,'DELETE THIS LINE ITEM <N> ?')
	XCALL WINPT (W_ID,23,30,01,00,'YN',ENTRY,INXCTL)
	IF (INXCTL.NE.1) GOTO (DSPREC2,BLCLAS), ADDLIN + 1
DELETE2,
	IF (SELECT.EQ.4.AND.ADDLIN.EQ.0)
	BEGIN
	  LOKCTL = 1
	  XCALL ISIO (9,BLLINE,KEY179,DELETE,LOKCTL)
	END
	XCALL W_DISP(WND_1,WD_POS,ROW,03,1,'  -----  ------   -------   ------------- DELETED -------------   ------')
	XCALL OLMSG(W_ID,24,'LINE ITEM DELETED',2)
	IF (BLCLAS.NE.888) GOTO CHANGE2B
	XCALL W_DISP(WND_1,WD_POS,23,1,2,'*** WARNING, THE B/L FOR TAG ALONG ORDER: ')
	DISPLAY (15,BLUOM,' WAS NOT DELETED')
	XCALL OLMSG(W_ID,24,'*** PLEASE NOTE AND DELETE MANUALLY',2)
	GOTO CHANGE2B
CHANGE2,
	IF (ADDLIN) GOTO ADD2
	LOKCTL = 1
	XCALL ISIO (9,BLLINE,KEY179,WRITE,LOKCTL)
CHANGE2B,
	SEQ = BLLINN
	LOKCTL = 1
	XCALL IOS (9,BLLINE,READ,LOKCTL)
	IF (LOKCTL.OR.KEY179.NE.BHKEY)
	BEGIN
	  XCALL W_DISP(WND_1,WD_POS,23,1,2,'NO MORE LINE ITEMS TO DISPLAY')
	  GOTO ADDLIN
	END
	INCR ROW
	GOTO DISPLA2
ADDLIN,
	ADDLIN =
	XCALL W_DISP(WND_1,WD_POS,23,31,'- ADD LINES <N> ?')
	XCALL WINPT (W_ID,23,50,01,00,'YN',ENTRY,INXCTL)
	IF (INXCTL.NE.1) GOTO ENDLIN
	ADDLIN = 1
	CNGCTL =
	GOTO ADDROW
ADD2,
	LOKCTL = 1
	XCALL ISIO (9,BLLINE,KEY179,STORE,LOKCTL)
	IF (LOKCTL.NE.0) 
	BEGIN
	  XCALL W_DISP(WND_1,WD_POS,23,1,wd_clr,wdc_lin,ALOKCTL)
	  DISPLAY (15,':  ',BLLINE(1,11))
	  XCALL OLMSG(W_ID,24,'PROBLEM STORING RECORD',2)
	  GOTO DISPLA2
	END
	IF (BLCLAS.NE.888) GOTO ADDROW

	IF (SAVKEY.EQ.BLANKS) SAVKEY = KEY178	
	OORDNO = BLUOM
	LOKCTL = 1
	XCALL ISIO (4,ORDHDR,OORDNO,READ,LOKCTL)
	IF (LOKCTL.EQ.0)
	BEGIN
	  BHCUSNM = OCUSNM
	  BHSHPNM = OSHPNM
	  BHSHAD1 = OSHAD1
	  BHSHAD2 = OSHAD2
	  BHSHAD3 = OSHAD3
	  BHPONO = OPONO
	END
	BHORDN = BLUOM
	BHHDRN = 1
	BHSHPN = 1
	BHSTATS = 3		;COMPLETE
ADD3,
	LOKCTL = 1
	XCALL ISIO (8,BLHEAD,KEY178,STORE,LOKCTL)
	IF (LOKCTL.NE.0) 
	BEGIN
	  IF (LOKCTL.EQ.4)
	  BEGIN
	    INCR BHSHPN
	    GOTO ADD3
	  END
	  XCALL W_DISP(WND_1,WD_POS,23,1,wd_clr,wdc_lin,'BLHEAD: ')
	  DISPLAY (15,BLHEAD(1,9),' : ',ALOKCTL)
	  XCALL OLMSG(W_ID,24,'PROBLEM STORING RECORD',2)
	  GOTO DISPLA2
	END
	BLORDN = BHORDN 
	BLHDRN = BHHDRN
	BLSHPN = BHSHPN
	BLLINN = 1
	BLCLAS = 999
	BLDESC = 'ORDER SHIPPED W/ '
	BLDESC(18,28) = ASHIPNO
	BLUOM =
	LOKCTL = 1
	XCALL ISIO (9,BLLINE,KEY179,STORE,LOKCTL)
	IF (LOKCTL.NE.0) 
	BEGIN
	  XCALL W_DISP(WND_1,WD_POS,23,1,wd_clr,wdc_lin,'BLLINE: ')
	  DISPLAY (15,BLLINE(1,11),' : ',ALOKCTL)
	  XCALL OLMSG(W_ID,24,'PROBLEM STORING RECORD',2)
	  GOTO DISPLA2
	END
	KEY178 = SAVKEY
	LOKCTL = 1
	XCALL ISIO (8,BLHEAD,KEY178,READ,LOKCTL)
	UNLOCK 8

;---------------------------------------------------
; ssq 5-24-05 added  tag along xref file (#66)

	CLEAR BLHTAG
	BT_TAG = SAVTAG		;TAG ALONG ORDER #
	BT_ORD = BHORDN		;BOL #
	LOKCTL = 1
	XCALL ISIO (CHN066, BLHTAG, BT_TAG, STORE, LOKCTL)
	IF (LOKCTL .NE. 0)
		BEGIN
		XCALL OLMSG(W_ID, 24, 'PROBLEM STORING BLHTAG RECORD',2)
		END

;---------------------------------------------------

	if (select .eq. 2) call get_dptloc	;tag along order
	pi4 = 1

	GOTO ADDROW
ENDLIN,
	XCALL W_DISP(WND_1,WD_POS,23,1,WD_CLR,WDC_LIN,'CONSOLIDATE <Y> ?')
	XCALL WINPT (W_ID,23,21,01,00,'YY',ENTRY,INXCTL)
	IF (INXCTL .EQ. 1)
		BEGIN
		CALL CONSOLIDATE
	;;;	GOTO ANYCN2
		END

	ADDLIN =
	TUNITS =
	TWGHT =

	XCALL W_DISP(WND_1,WD_POS,23,1,wd_clr,wdc_lin,'PRINT B/L NOW <Y> ?')
	XCALL WINPT (W_ID,23,21,01,00,'YY',ENTRY,INXCTL)
	IF (INXCTL.NE.1) GOTO DISPLA1

	CLEAR ADJ
	IF (UNAME(1,4) .EQ. 'PAUL')
		BEGIN
		XCALL W_DISP(WND_1,WD_POS,23,1,wd_clr,wdc_lin,'DOWN 1 <Y> ?')
		XCALL WINPT (W_ID,23,22,01,00,'YY',ENTRY,INXCTL)
		IF (INXCTL.EQ.1) ADJ = 1
		END
INSTBL,
	LINCNT =
	TUNITS =
	TWGHT =
	REPBL =
	BLCONT =

;;;	LPSW = 6		;DON'T ASK
	LPSW = 8		;DON'T ASK 9-24-01 ssq
	XCALL LPON (LPSW,SPLFIL)
;;;	IF (UNAME.NE.'PAULS')display (14, tray)
	display (14, tray)

	INSTANTBL = 1
	CALL PBLLP2
	INSTANTBL =

	using cmpcod select
	('ROC'),	XCALL blOFF (LPSW,SPLFIL,PGCNT, que_name)
	(),		XCALL blOFF (LPSW,SPLFIL,PGCNT)
	endusing

;;;	XCALL blOFF (LPSW,SPLFIL,PGCNT, que_name)
;;;	XCALL BLOFF (LPSW,SPLFIL,PGCNT,QUE_NAME)
	UNLOCK 8
	UNLOCK 9
	XCALL W_DISP(WND_1,WD_POS,23,1,wd_clr,wdc_lin,'REPRINT B/L   <N> ?')
	XCALL WINPT (W_ID,23,21,01,00,'YN',ENTRY,INXCTL)
	IF (INXCTL.EQ.1) GOTO INSTBL
	LOKCTL = 1
	XCALL ISIO (8,BLHEAD,KEY178,READ,LOKCTL)
	BHSTATS = 2
	LOKCTL = 1
	XCALL ISIO (8,BLHEAD,KEY178,WRITE,LOKCTL)
	IF (LOKCTL.NE.0) 
	BEGIN
	  XCALL W_DISP(WND_1,WD_POS,23,1,wd_clr,wdc_lin,ALOKCTL)
	  DISPLAY (15,':  ',BLHEAD(1,9))
	  XCALL OLMSG(W_ID,24,'PROBLEM WRITING RECORD STATUS',2)
	END
	GOTO DISPLA1
;;;
;---------------------------------------------------------------------------
;;;

;;;
;	SELECT=1 DISPLAY ALL B/L ACTIVITY (CURRENT AND HISTORY)
;;;
DSPACT,
;	ROUTINE TO GET HEADER & SHIP NUMBERS
;;;
	UNLOCK 8
	UNLOCK 9
	XCALL W_DISP(WND_1,WD_POS,4,2,2,'1. ORDER NUMBER ')
	CTL = '04,18,06,00,#E'
	CALL INPUT
	GOTO (DSPACT,SELECT), INXCTL
	KORDNO = ENTRY

	ROW = 5

GETHIGH,
	HIHDRN =
	FOR I FROM 1 THRU 9 HISHPN(I) =
	BHORDN = KORDNO
	LOKCTL = 1
;;;	XCALL ISIO (8,BLHEAD,BHORDN,READ,LOKCTL)
	XCALL CP_ISIO (8,BLHEAD,BHORDN,READ,LOKCTL,wnd_1)
	IF (LOKCTL.NE.0.OR.BHORDN.NE.KORDNO) 
	BEGIN
	  IF (GETHI.EQ.0) XCALL W_DISP(WND_1,WD_POS,23,1,WD_CLR,WDC_LIN,'--- NO OPEN B/L FOUND ---')
;;;	  IF (GETHI.EQ.0) XCALL W_DISP(WND_1,WD_POS,23,WD_CLR,WDC_LIN,'--- NO OPEN B/L FOUND ---')
	  GOTO CHKHST
	END
	IF (GETHI.EQ.0) XCALL W_DISP(WND_1,WD_POS,4,27,BHCUSNM)

	DO BEGIN
	  IF (BHHDRN.GT.HIHDRN) HIHDRN = BHHDRN
	  IF (BHSHPN.GT.HISHPN(BHHDRN)) HISHPN(BHHDRN) = BHSHPN
	  IF (GETHI.EQ.0)
	  BEGIN
	    AORDNO = BHORDN
	    AHDRN = BHHDRN
	    ASHPN = BHSHPN,'XX'
	    USING BHSTATS SELECT
	      (0),	PLINE = 'X  OPEN B/L'
	      (1),	PLINE = 'X  SELECTED'
	      (2),	PLINE = 'X  PRINTED '
	      (3),	PLINE = 'X  COMPLETE'
	      (4),	PLINE = 'X  POSTING'
	      (9),	PLINE = 'X  HIST B/L'
	      (),	PLINE = 'X  UNDEF   '
	    ENDUSING
	    PLINE(1,1) = BHSTATS,'X'
	    PLINE (15,25) = ASHIPNO
	    PLINE (29,58) = BHSHPNM
	    CALL OUTLINE
	    PLINE (29,58) = BHSHAD1
	    CALL OUTLINE
	    PLINE (29,58) = BHSHAD2
	    CALL OUTLINE
	    PLINE (29,58) = BHSHAD3
	    CALL OUTLINE
	    PLINE =
	    CALL OUTLINE
	  END
	  LOKCTL = 1
	  XCALL IOS (8,BLHEAD,READ,LOKCTL)
	END UNTIL (LOKCTL.OR.BHORDN.NE.KORDNO)

CHKHST,
	BHORDN = KORDNO
	LOKCTL = 1
	XCALL ISIO (28,BLHEAD,BHORDN,READ,LOKCTL)
	IF (LOKCTL.NE.0.OR.BHORDN.NE.KORDNO) 
	BEGIN
	  IF (GETHI.EQ.0) XCALL W_DISP(WND_1,WD_POS,23,26,'--- NO HISTORICAL B/L FOUND ---')
	  GOTO ENDACT
	END
	IF (GETHI.EQ.0) XCALL W_DISP(WND_1,WD_POS,4,27,BHCUSNM)

	DO BEGIN
	  IF (BHHDRN.GT.HIHDRN) HIHDRN = BHHDRN
	  IF (BHSHPN.GT.HISHPN(BHHDRN)) HISHPN(BHHDRN) = BHSHPN
	  IF (GETHI.EQ.0) 
	  BEGIN
	    AORDNO = BHORDN
	    AHDRN = BHHDRN
	    ASHPN = BHSHPN,'XX'
	    USING BHSTATS SELECT
	      (0),	PLINE = 'X HOPEN B/L'
	      (1),	PLINE = 'X HSELECTED'
	      (2),	PLINE = 'X HPRINTED '
	      (3),	PLINE = 'X HCOMPLETE'
	      (4),	PLINE = 'X HPOSTING'
	      (9),	PLINE = 'X  HIST B/L'
	      (),	PLINE = 'X HUNDEF   '
	    ENDUSING
	    PLINE(1,1) = BHSTATS,'X'
	    PLINE (15,25) = ASHIPNO
	    PLINE (29,58) = BHSHPNM
	    CALL OUTLINE
	    PLINE (29,58) = BHSHAD1
	    CALL OUTLINE
	    PLINE (29,58) = BHSHAD2
	    CALL OUTLINE
	    PLINE (29,58) = BHSHAD3
	    CALL OUTLINE
	    PLINE =
	    CALL OUTLINE
	  END
	  LOKCTL = 1
	  XCALL IOS (28,BLHEAD,READ,LOKCTL)
	END UNTIL (LOKCTL.OR.BHORDN.NE.KORDNO)

ENDACT,
	IF (GETHI) RETURN
	XCALL OLMSG(W_ID,24,'END OF ACTIVITY DISPLAY',2)
	GOTO DSPACT
OUTLINE,
	INCR ROW
	IF (ROW.GE.20)
	BEGIN
	  XCALL OLMSG(W_ID,24,'FOR NEXT PAGE',2)
	  ROW = 06
	  XCALL W_DISP(WND_1,WD_POS,ROW,1,2,wd_clr,wdc_lin)
	END
	XCALL W_DISP(WND_1,WD_POS,ROW,1,PLINE)
	PLINE =
	RETURN
;;;
;	ROUTINE TO SELECT B/L's
;;;
SELECBL,
	IF (BHSTATS.LE.1)
	THEN BEGIN
	  XCALL W_DISP(WND_1,WD_POS,23,1,wd_clr,wdc_lin,'ORDER STATUS    :     <TAB> TO TOGGLE')
	  XCALL WINPT (W_ID,23,19,01,00,'#T',ENTRY,INXCTL)
	  GOTO (DISPLA1,DISPLA1), INXCTL
;;;	  IF (BHSTATS.LT.0.AND.ENTRY.NE.BLANKS)
;;;	  BEGIN
;;;	    INXCTL = 3
;;;	    DCHAR = ENTRY
;;;	    ENTRY =
;;;	  END
	  IF (ENTRY.NE.BLANKS) GOTO SELECBL
	  IF (INXCTL.EQ.3)
	  BEGIN
	    IF (DCHAR.EQ.0) THEN DCHAR = 1 ELSE IF (DCHAR.EQ.1) DCHAR = 0
	    USING DCHAR SELECT
	      (0),	ALPHA = 'X   OPEN B/L'
	      (1),	ALPHA = 'X   SELECTED'
	      (2),	ALPHA = 'X   PRINTED'
	      (3),	ALPHA = 'X   COMPLETE'
	      (4),	ALPHA = 'X   POSTING'
	      (9),	ALPHA = 'X   HIST B/L'
	      () ,	ALPHA = 'X   UNDEF'
	    ENDUSING
	    ALPHA(1,1) = DCHAR,'X'
	    CTL = '20,21'
	    XCALL W_DISP(WND_1,WD_POS,ROW,COL,ALPHA)
	    GOTO SELECBL
	  END
	  IF (DCHAR.NE.BHSTATS)
	  BEGIN
	    BHSTATS = DCHAR
	    LOKCTL = 1
	    XCALL ISIO (8,BLHEAD,KEY178,WRITE,LOKCTL)
	  END
	END
	ELSE BEGIN
	  XCALL OLMSG(W_ID,24,'INQUIRY ONLY: NO CHANGES ALLOWED WITH THIS STATUS CODE',2)

;;;	  XCALL W_DISP(WND_1,WD_POS,23,1,1,'INQUIRY ONLY: NO CHANGES ALLOWED WITH THIS STATUS CODE           CR TO CONTINUE')
;;;	  XCALL INPUT (23,80,1,'#T',ENTRY,INXCTL,1)
;;;	  IF (INXCTL.EQ.3) 
;;;	  BEGIN
;;;	    BHSTATS = BHSTATS * -1
;;;	    GOTO DSPREC1
;;;	  END

	END
	UNLOCK 8
	GOTO DISPLA1
;;;
;	ROUTINE TO PRINT B/L's
;;;
PRINTBL,
	READ (8,BLHEAD,^FIRST) [KEY=ENDPBL, EOF=ENDPBL, LOCK=PRINTBL]
	LINCNT =
	TUNITS =
	TWGHT =
	REPBL =
PRINTBL2,
;;;	LPSW = 6		;DON'T ASK
	LPSW = 8		;DON'T ASK 9-24-01 ssq
	XCALL LPON (LPSW,SPLFIL)
;;;	IF (UNAME.NE.'PAULS')display (14, tray)
	display (14, tray)

	        lpque (barfil)              ;cp:c128s16.bar - insure barcode loaded

;;;	LPSW = 1	; PRINT, SPOOL OR DISPLAY
;;;	XCALL LPON (LPSW,SPLFIL)
;;;	IF (LPSW.EQ.0) GO TO ENDPBL
;;;	LPARG = 2
;;;	IF (LPSW.EQ.2) LPARG = 4
;;;	XCALL WATE (LPARG,V)

PBLLP,
	IF (BHSTATS.EQ.1)
	BEGIN
PBLLP2,
;---------------------------------------------------
;date/time stamp 8-11-00 ssq
	XCALL FILES (44,'SU',044,SWITCH)
	IF(SWITCH.NE.9)
		BEGIN
		XCALL TIME(TTIME)
		READ(44, ORDHDR, BHORDN) [ERR=OH_ERR]
		OSHDTE = TODAY
		OSHTIM = TTIME(1,4)
		WRITE(44, ORDHDR, BHORDN)
		CLOSE 44
		END
OH_ERR,	
;---------------------------------------------------

;new ssq 9-30-98
	CLEAR TBL_KEY
	TBLCOD = 'SC'
	TBLKEY = BHSCAC
	XCALL ISIO (80,COPTBL,TBL_KEY,READ,LOKCTL)
	IF (LOKCTL .EQ. 0) 
	THEN	BHSHPV = SC_NAME
	ELSE	CLEAR BHSHPV

	  clear pline
; 4-17-14 ssq to fix difference in spacing between Jason's and
; Jim's printers.

	NOLF = 4
	ADJ = 1
	USING UNAME(1,4) SELECT
	('PAUL'),	FOR I FROM 1 THRU (NOLF+ADJ) CALL PRINT

	(),		BEGIN
			FOR I FROM 1 THRU (NOLF+ADJ) CALL PRINT
		;;;	INCR LINCNT
			END
	ENDUSING

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	  call print
;;;	  call print
;;;	  call print
;;;	  call print		;added 5-11-12 ssq
;;;
;;;	  if (UNAME .ne.'PAULS')
;;;	   then	call print		;1-16-14 for Jason's printer
;;;	   else incr lincnt
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


	  pline (3,10) = b6cpi
	  PLINE (15,32) = BHSHPV
	  pline (33,40) = m10cpi

	B_DATA(1,2) = 'S~'
	B_DATA(3,8) = bhordn, 'XXXXXX'

	XCALL B128(B_DATA, B_STRNG, 70)
	XCALL OF128
	pline (45,80) = b_strng

	  CALL PRINT			;5
	  INCR LINCNT
	  XCALL LINFD (1)		;6
		
	  AORDNO = BHORDN
	  AHDRN = BHHDRN
	  ASHPN = BHSHPN,'XX'
	  PLINE (69,79) = ASHIPNO
	  PLINE (4,33) = BHSHPNM
	  CALL PRINT			;7
	  PLINE (4,33) = BHSHAD1
	  CALL PRINT			;8
	  PLINE (4,33) = BHSHAD2
	  CALL PRINT			;9
	  PLINE (4,33) = BHSHAD3
	  CALL PRINT			;10
	  PLINE (69,79) = BHPRON
	  CALL PRINT			;11
	  INCR LINCNT
	  XCALL LINFD (1)		;12
	  PLINE (4,13) = BHPONO
	  PLINE (25,64) = BHSPIN1

	  XCALL DATE8(BHSHPD, D_OUT, D_OUTR, D_FMT, D_SW)
	  PLINE (69,78) = D_FMT

	  CALL PRINT			;13
	  INCR LINCNT
	  XCALL LINFD (1)		;14
	  PLINE (4,63) = BHSPIN2
	  CALL PRINT			;15

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;ssq 5-12-12
		call print
		call print
;;;	  LINCNT = LINCNT + 4
;;;	  XCALL LINFD (4)		;16-17-18-19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	  IF (BLCONT) RETURN
;;;
;	B/L LINE ITEMS
;;;
	  KEY179 = KEY178
	  LOKCTL = 1
	  XCALL ISIO (9,BLLINE,KEY179(1,9),READ,LOKCTL)
	  DO BEGIN
	    IF (LOKCTL.NE.0) NEXTLOOP
	    IF (LINCNT.GE.49) CALL BLCONT
	    PLINE (16,45) = BLDESC
	    IF (BLCLAS.NE.999)
	    BEGIN
	      PLINE (1,5) = BLQTY,NUMASK
	      PLINE (8,14) = BLUOM
	      PLINE (49,55) = BLWGHT,NUMASK
	      PLINE (59,61) = BLCLAS,NUMASK
	    END
	    IF (BLCLAS.EQ.888)
	    BEGIN
	      PLINE (49,55) =
	      PLINE (59,61) =
	    END

;;;	    IF (LINCNT.EQ.23) CALL PPCL
	    IF (LINCNT.EQ.25) CALL PPCL	;ssq 5-11-12
	    IF (BLCLAS.EQ.777) PLINE (2,61) = LINE(2,61)
	    CALL PRINT
	    IF (LINCNT.EQ.25) CALL PPCL	;ssq 5-11-12
;;;	    IF (LINCNT.EQ.23) CALL PPCL
	    CALL PRINT
	    TUNITS = TUNITS + BLQTY
	    TWGHT = TWGHT + BLWGHT
	    LOKCTL = 1
	    XCALL IOS (9,BLLINE,READ,LOKCTL)
	  END UNTIL (LOKCTL.NE.0.OR.KEY179(1,9).NE.KEY178)	  
;;;	  IF (LINCNT.LE.22) 
	  IF (LINCNT.LE.24) 
	  BEGIN
;;;	    IF (LINCNT.LT.23) DO BEGIN
	    IF (LINCNT.LT.25) DO BEGIN
	      XCALL LINFD (1)
	      INCR LINCNT
;;;	    END UNTIL (LINCNT.EQ.23)
	    END UNTIL (LINCNT.EQ.25)
	  CALL PPCL
	  CALL PRINT
	  END

;;;	  IF (LINCNT.LT.50)
	  IF (LINCNT.LT.52)
	  BEGIN
	    DO BEGIN
	      XCALL LINFD (1)
	      INCR LINCNT
;;;	    END UNTIL (LINCNT.EQ.50)
	    END UNTIL (LINCNT.EQ.52)
	    PLINE (1,5) = TUNITS,NUMASK
	    PLINE (49,55) = TWGHT,NUMASK
	    CALL PRINT
	  END
	  XCALL LINFD (0)
	  LINCNT =
	  IF (INSTANTBL) RETURN
	END

	IF (REPBL.EQ.0)
	BEGIN
	  LOKCTL = 1
	  XCALL IOS (8,BLHEAD,READ,LOKCTL)
	  IF (LOKCTL.EQ.0) GOTO PBLLP
	END
	PGCNT = -1

	using cmpcod select
	('ROC'),	XCALL blOFF (LPSW,SPLFIL,PGCNT, que_name)
	(),		XCALL blOFF (LPSW,SPLFIL,PGCNT)
	endusing
;;;	XCALL BLOFF (LPSW,SPLFIL,PGCNT,QUE_NAME)
ENDPBL,
	UNLOCK 8

	using cmpcod select
	('ROC'),	XCALL blOFF (LPSW,SPLFIL,PGCNT, que_name)
	(),		XCALL blOFF (LPSW,SPLFIL,PGCNT)
	endusing
;;;	XCALL BLOFF (LPSW,SPLFIL,PGCNT,QUE_NAME)
	XCALL W_DISP(WND_1,WD_POS,8,10,2,'DID ALL BILLS OF LADING PRINT OK <N> ?')
	XCALL WINPT (W_ID,8,50,1,0,'YN',ENTRY,INXCTL)
	IF (INXCTL.NE.1)
	BEGIN
	  XCALL W_DISP(WND_1,WD_POS,10,10,'ENTER BILL NUMBER TO REPRINT ')
	  CTL = '10,40,06,00,#E'
	  CALL INPUT
	  GOTO (DISPLA1,SELECT), INXCTL
	  KORDNO = ENTRY
	  AORDNO = KORDNO
	  AHDRN = 
	  ASHPN = 
	  XCALL W_DISP(WND_1,WD_POS,ROW,COL,ASHIPNO)
	  CTL = '10,47,01,00,# '
	  CALL INPUT
	  GOTO (BHORDN), INXCTL
	  KHDRN = ENTRY
	  AHDRN = KHDRN
	  ASHPN = 
	  XCALL W_DISP(WND_1,WD_POS,ROW,40,ASHIPNO)
	  CTL = '10,49,02,00,# '
	  CALL INPUT
	  GOTO (BHORDN), INXCTL
	  KSHPN = ENTRY
	  ASHPN = KSHPN,'XX'
	  XCALL W_DISP(WND_1,WD_POS,ROW,40,ASHIPNO)
	  KEY178 = BHKEY
	  LOKCTL = 1
	  XCALL ISIO (8,BLHEAD,KEY178,READ,LOKCTL)
	  IF (LOKCTL.EQ.0.AND.KEY178.EQ.BHKEY.AND.BHSTATS.EQ.1)
	  BEGIN
	    REPBL = 1
	    GOTO PRINTBL2
	  END
	  IF (LOKCTL.OR.KEY178.NE.BHKEY) XCALL OLMSG(W_ID,24,'B/L NOT FOUND',1)
	  IF (BHSTATS.EQ.0) XCALL OLMSG(W_ID,24,'B/L NOT SELECTED FOR PRINTING',1)
	  IF (BHSTATS.GT.2) XCALL OLMSG(W_ID,24,'INVALID STATUS CODE FOR B/L - CANNOT PRINT',1)
	  GOTO ENDPBL
	END
;;;
;	UPDATE BLSTATS TO REFLECT PRINTED STATUS
;;;
	XCALL W_DISP(WND_1,WD_POS,2,1,1,'PRINT B/Ls - UPDATING B/L STATUS FLAG')
	READ (8,BLHEAD,^FIRST)
	DO BEGIN
	  IF (BHSTATS.EQ.1)
	  BEGIN
	    BHSTATS = 2
	    LOKCTL = 1
	    XCALL ISIO (8,BLHEAD,KEY178,WRITE,LOKCTL)
	    IF (LOKCTL.NE.0) 
	    BEGIN
	      XCALL W_DISP(WND_1,WD_POS,23,1,wd_clr,wdc_lin,ALOKCTL)
	      DISPLAY (15,':  ',BLHEAD(1,9))
	      XCALL OLMSG(W_ID,24,'PROBLEM WRITING RECORD STATUS',2)
	    END
	  END
	  LOKCTL = 1
	  XCALL IOS (8,BLHEAD,READ,LOKCTL)
	END UNTIL (LOKCTL.NE.0)

	XCALL OLMSG(W_ID,24,'B/L STATUS FLAG UPDATED - PRINTING PROCESS COMPLETE',2)
	GOTO SELECT
PPCL,
	PLINE (63,70) = b8cpi		;ST EMPHASISED / DBL WID PRINTING
;;;	PLINE (66,66) = ESC
;;;	PLINE (68,68) = ESC
	IF (BHPPCL.EQ.'P') PLINE (72,78) = 'PREPAID'
	IF (BHPPCL.EQ.'C') PLINE (72,78) = 'COLLECT'
	IF (BHPPCL.EQ.'T') PLINE (72,78) = '3RD PTY'
	PLINE (79,86) = m10cpi
;;;	PLINE (78,82) = ' F W0'		; END EMPHASISED / DBL WID PRINTING
;;;	PLINE (78,78) = ESC
;;;	PLINE (80,80) = ESC
	RETURN
BLCONT,
	DO BEGIN
	  XCALL LINFD (1)
	  INCR LINCNT
	END UNTIL (LINCNT.EQ.55)
	PLINE (1,5) = 'CONT.'
	PLINE (48,56) = 'CONTINUED'
	CALL PRINT
	XCALL LINFD (0)
	LINCNT =
	BLCONT = 1
	CALL PBLLP2
	BLCONT =
	RETURN
;;;
;	ROUTINE TO ENTER FREIGHT CHARGES FROM TRUCKING CO.
;;;
ENTFRT,					; FREIGHT CHARGES & FLAG AS COMPLETE
	XCALL W_DISP(WND_1,WD_POS,16,28,'FREIGHT CHARGES')

;	IF (BHSTATS.LT.2)
;	BEGIN
;	  XCALL OLMSG(W_ID,24,'CANNOT ENTER FREIGHT CHARGES ON UNPRINTED B/Ls',1)
;	  GOTO DISPLA1
;	END


EFPRON,
	CTL = '07,66,10,00,A '
	IF (BHPRON.NE.BLANKS)
	BEGIN
	  XCALL W_DISP(WND_1,WD_POS,ROW,COL,BHPRON)
	  CALL ACCEPT
	  IF (DCHAR.EQ.13) GOTO EFSHPD
	  IF (DCHAR.EQ.23) GOTO DISPLA1
	  IF (DCHAR.NE.9) GOTO EFPRON
	END
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHPRON = ENTRY

EFSHPD,
	CTL = '08,66,08,00,D '
	IF (BHSHPD.NE.0)
	BEGIN
	  XCALL DATE8(BHSHPD, D_OUT, D_OUTR, D_FMT, D_SW)
	  XCALL W_DISP(WND_1,WD_POS,ROW,COL, D_FMT)
	  CALL ACCEPT
	  IF (DCHAR.EQ.13) GOTO EFFRTAM
	  IF (DCHAR.EQ.23) GOTO DISPLA1
	  IF (DCHAR.NE.9) GOTO EFSHPD
	END
	CALL INPUT
	GOTO (DISPLA1), INXCTL
	BHSHPD = ENTRY
	IF (BHSHPD.EQ.0) 
	BEGIN
	  BHSHPD = TODAY
	  XCALL DATE8(BHSHPD, D_OUT, D_OUTR, D_FMT, D_SW)
	  XCALL W_DISP(WND_1,WD_POS,ROW,COL, D_FMT)
	END

EFFRTAM,
	CTL = '16,45,07,00,$ '
	IF (BHFRTAM.NE.0)
	BEGIN
	  ALPHA(1,9) = BHFRTAM,DLMASK
	  XCALL W_DISP(WND_1,WD_POS,ROW,COL,ALPHA(1,9))
	  CALL ACCEPT
	  IF (DCHAR.EQ.13) GOTO EFFRTAM2
	  IF (DCHAR.EQ.23) GOTO DISPLA1
	  IF (DCHAR.NE.9) GOTO EFFRTAM
	END
	CALL INPUT
	XCALL W_DISP(WND_1,WD_POS,23,1,wd_clr,wdc_Lin)
	GOTO (DISPLA1), INXCTL
	BHFRTAM = ENTRY
EFFRTAM2,
;	IF (BHPPCL.EQ.'C')
;	BEGIN
;	  XCALL OLMSG(W_ID,24,'NO FREIGHT CHARGES ALLOWED ON COLLECT B/Ls',1)
;	  GOTO EFFRTAM
;	END

EFSTATS,
	BHSTATS = 3		;FLAG AS COMPLETE
	ALPHA = '3   COMPLETE'
	CTL = '20,21'
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,ALPHA)
	xcall w_updt
	CNGCTL = 4
	
;;;	XCALL ANYCN (CNGCTL,WHATNO)
	XCALL WANCN (W_ID,23,CNGCTL,WHATNO)

	IF (CNGCTL.EQ.-1) GOTO DISPLA1
	IF (CNGCTL.NE.0) GOTO ENTFRT
	XCALL OLMSG(W_ID,24,'B/L UPDATED AND FLAGGED COMPLETE',2)
	GOTO CHANGE1

;;;
;	ROUTINE TO MANUALLY UPDATE B/L's TO HISTORY
;;;
MANUPD,
	XCALL W_DISP(WND_1,WD_POS,16,28,'FREIGHT CHARGES')
	ALPHA(1,9) = BHFRTAM,DLMASK
	XCALL W_DISP(WND_1,WD_POS,16,45,ALPHA(1,9))
	XCALL W_DISP(WND_1,WD_POS,23,1,WD_CLR,WDC_EOW,'ARE YOU SURE YOU WANT TO MANUALLY MOVE THIS B/L TO HISTORY <N> ?')
	XCALL WINPT (W_ID,23,67,01,00,'YN',ENTRY,INXCTL)
	IF (INXCTL.NE.1) GOTO DISPLA1
	BHSTATS = 4		;FLAG AS POSTING IN PROCESS
	ALPHA = '4   POSTING'
	CTL = '20,21'
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,ALPHA)
	XCALL W_DISP(WND_1,WD_POS,23,1,WD_CLR,WDC_EOW,'B/L STATUS UPDATED')
	XCALL OLMSG(W_ID,24,'B/L WILL MOVE TO HISTORY WITH NEXT INVOICE POSTING',2)
	GOTO CHANGE1


CLOSES,
	XCALL FILES (4,'SI',044,4)
CLOSE5,
;;;	XCALL FILES (80,'SI',180,4)
	XCALL FILES (80,'SI',182,4)
CLOSE4,
	XCALL FILES (29,'SI',189,4)
CLOSE3,
	XCALL FILES (28,'SI',188,4)
CLOSE2,
	XCALL FILES (9,'SU',179,4)
CLOSE1,
	XCALL FILES (8,'SU',178,4)
	RETURN

GET_SCAC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; COP TABLE SCAC LOOK-UP
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	SHP_ERR = FALSE
	CLEAR TBL_KEY
	TBLCOD = 'SC'
	TBLKEY = SCAC
	XCALL ISIO (80,COPTBL,TBL_KEY,READ,LOKCTL)
	IF (LOKCTL .EQ. 0) RETURN

; Alpha lookup...
	CALL GET_ALPHA_SCAC

	XCALL TTSTS(TSTAT)
	IF (TSTAT) 
		begin
		xcall w_disp(wnd_1,wd_pos,1,1)
		XCALL W_DISP(WND_1,WD_READS,ENTRY)
		end
	IF (NUMARA .LE. 0) GOTO NO_SCAC

	DLINE = '  SCAC   NAME'
	XCALL POP1 (POP)
	IF (P_ACTION .EQ. 2) GOTO ADD_SCAC	
	IF (PI .EQ. 0) 
		BEGIN
		SHP_ERR = TRUE
		RETURN
		END

	SAVRFA = PARRFA(PI)
	READ (80,COPTBL,RFA:SAVRFA) [ERR=BAD_SCAC]

	RETURN
	
NO_SCAC,
	XCALL W_DISP(WND_1,WD_POS,23,1,WD_CLR,WDC_LIN,'NO RECORD FOR THIS CARRIER - ADD <Y> ?')
	CTL = '23,43,01,00,YY'
	CALL INPUT
	GOTO (ADD_SCAC,BAD_SCAC),INXCTL
BAD_SCAC,
	SHP_ERR = TRUE
	RETURN

ADD_SCAC,
	SHP_ERR = TRUE

	XCALL W_DISP(WND_1,WD_POS,16,63,WD_CLR,WDC_EOL,'NAME:')
	XCALL W_DISP(WND_1,WD_POS,17,63,LINE(1,15))
	XCALL W_DISP(WND_1,WD_POS,18,50,WD_CLR,WDC_LIN,'TRAFFIC PHONE# ')
	XCALL W_DISP(WND_1,WD_POS,20,50,WD_CLR,WDC_LIN,'TRACING PHONE# ')
	xcall w_updt
	call make_scac_code
	if (.not. got_scac) return

	XCALL WINPT (W_ID,16,63,15,00,'AE',ENTRY,INXCTL)
	GOTO (ABORT_SCAC),INXCTL-1
	SC_NAME = ENTRY(1,15)
	
	XCALL WINPT (W_ID,18,63,10,00,'#E',ENTRY,INXCTL)
	GOTO (ADD_SCAC,ABORT_SCAC),INXCTL
	SC_TEL1 = ENTRY
	ALPHA(1,13) = SC_TEL1,'(XXX)XXX-XXXX'
	IF (SC_TEL1(1,3).EQ.0) ALPHA(1,13) = SC_TEL1,'ZZZZZXXX-XXXX'
	XCALL W_DISP(WND_1,WD_POS,18,63,ALPHA(1,13))

	XCALL WINPT (W_ID,20,63,10,00,'#',ENTRY,INXCTL)
	SC_TEL2 = ENTRY
	ALPHA(1,13) = SC_TEL2,'(XXX)XXX-XXXX'
	IF (SC_TEL2(1,3).EQ.0) ALPHA(1,13) = SC_TEL2,'ZZZZZXXX-XXXX'
	XCALL W_DISP(WND_1,WD_POS,20,63,ALPHA(1,13))
	xcall w_updt

	CNGCTL = 2
;;;	XCALL ANYCN(CNGCTL,WHATNO)
	XCALL WANCN (W_ID,23,CNGCTL,WHATNO)
	GOTO (ADD_SCAC),CNGCTL

	XCALL FILES (81,'SU',182,5)
	LOKCTL = 1
	CLEAR TBL_KEY
	TBLCOD = 'SC'
	TBLKEY = SCAC
	XCALL ISIO (81,COPTBL,TBL_KEY,STORE,LOKCTL)
	CLOSE 81
	IF (LOKCTL) 
		BEGIN
		XCALL OLMSG(W_ID,24,'ERROR STORING NEW CARRIER - CARRIER NOT SAVED',2)
		SHP_ERR = TRUE
		END
	SHP_ERR = FALSE
		
ABORT_SCAC,
	RETURN
;--------------------------------------------------

GET_ALPHA_SCAC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; SCAC ALPHA LOOK-UP
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR NUMARA, I
	FIND (80,COPTBL,SCAC,KRF=1)[ERR=NXTSCC]
NXTSCC,
	DO BEGIN
	   READS (80,COPTBL,GETRFA:SAVRFA) [ERR=ENDSCC]
	   IF(TBLCOD.EQ.'SC')
		BEGIN
		   INCR I
		   DLINE(1,4) = SC_SCAC
		   DLINE(8,37) = SC_NAME
		   PARRY(I) = DLINE
		   PARRFA(I) = SAVRFA
		END
	   END
	UNTIL (I .GE. MAXARA)
ENDSCC,
	NUMARA = I
	RETURN

;SCAC NAME
;AAAA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
;12345678901234567890123456789012345678901234567890
;         1         2         3         4         5
	RETURN
;--------------------------------------------------

MAKE_SCAC_CODE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; Build new, unique scac code
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR SCAC, GOT_SCAC

	SCAC(1,1) = 'X'
	FOR I FROM 1 THRU 999
		BEGIN
		SCAC(2,4) = I,'XXX'
		CLEAR TBL_KEY
		TBLCOD = 'SC'
		TBLKEY = SCAC
		READ (80,COPTBL,TBL_KEY)[ERR=SCC_OK]
		END
	RETURN
SCC_OK,
	GOT_SCAC = 1
	RETURN
;-------------------------------------------------------

GET_BLHEAD,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; FETCH BLHEAD RECORD...
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	LOKCTL = 1
;;;	XCALL ISIO (8,BLHEAD,KEY178,READ,LOKCTL)
	XCALL CP_ISIO (8,BLHEAD,KEY178,READ,LOKCTL,wnd_1)
	IF (LOKCTL.EQ.0.AND.KEY178.EQ.BHKEY)	;FOUND
	THEN	BL_FOUND = TRUE
	ELSE	BL_FOUND = FALSE

	READ (CHN195, CRHOLD, OORDNO) [ERR=NOT_ON_HOLD2]
	XCALL OLMSG (W_ID,24,'ORDER ON HOLD - CHECK WITH AR',2)

NOT_ON_HOLD2,
	RETURN
;--------------------------------------------------

ENDOFF,
	CALL CLOSES
ABORT,
	xcall u_finish
	XCALL PGCHN ('CP:CPMENU',1)
ACCEPT,
	XCALL FLAGS (10000,1)
	XCALL W_DISP(WND_1,WD_POS,ROW,COL-1)
	xcall w_disp(wnd_1,wd_accept,dchar)
	DO BEGIN
	  XCALL TTSTS (TTSTS)
	  IF (TTSTS) xcall w_disp(wnd_1,wd_accept,achar)
	END UNTIL (TTSTS.EQ.0)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	ACCEPT (15,DCHAR)
;;;	DO BEGIN
;;;	  XCALL TTSTS (TTSTS,15)
;;;	  IF (TTSTS) ACCEPT (15,ACHAR)
;;;	END UNTIL (TTSTS.EQ.0)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	XCALL FLAGS (10000,0)
	RETURN
INPUT,
	XCALL WINPT (W_ID,ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL, f_key)
;;;	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	RETURN
CINPUT,
	XCALL CP_CINPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,POS)
	RETURN
PRINT,
	xline = pline (2,92)
	clear pline
	WRITES (14,xLINE(1,%trim(xline) ) )
	xLINE =
	INCR LINCNT
	RETURN

CONSOLIDATE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; CONSOLIDATE LINE ITEMS
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CLEAR C_ARAS
	C_MAX = 200
	T_IDX = 0

	CLEAR BLLINE
	BLORDN = BHORDN
	BLHDRN = BHHDRN
	BLSHPN = BHSHPN

	FIND (CHN179, BLLINE, KEY179) [ERR=C_LOOP]
C_LOOP,
	XCALL IOS (CHN179, BLLINE, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO C_EOF
	IF (KEY179(1,9) .NE. KEY178) GOTO C_EOF
	IF (BLCLAS .EQ. 888)
		BEGIN
		INCR T_IDX
		TAGA_ARA(T_IDX) = BLUOM
		GOTO C_LOOP
		END

	FOR W_IDX FROM 1 THRU C_MAX
		BEGIN
		USING CLAS_ARA(W_IDX) SELECT
		(0), 	  BEGIN
			  CALL C_ADDNEW
			  EXITLOOP
			  END
		(BLCLAS), IF (UOM_ARA(W_IDX).EQ.BLUOM)
			  	BEGIN
			  	QTY_ARA(W_IDX) = QTY_ARA(W_IDX) + BLQTY
			  	WT_ARA(W_IDX) = WT_ARA(W_IDX) + BLWGHT
			  	EXITLOOP
			  	END
			
		ENDUSING

		END
	IF (W_IDX .GT. C_MAX) 
		BEGIN
		XCALL WNMSG (W_ID, 24,'TOO MANY RECORDS TO CONSOLIDATE',1)
		RETURN		;FROM CONSOLIDATE
		END

	GOTO C_LOOP

C_EOF,
; delete the old records...
	ROW = 11
	CLEAR BLLINE

	BLORDN = BHORDN
	BLHDRN = BHHDRN
	BLSHPN = BHSHPN
	FIND (CHN179, BLLINE, KEY179) [ERR=CE_LOOP]
CE_LOOP,
	XCALL IOS (CHN179, BLLINE, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO CE_EOF
	IF (KEY179(1,9) .NE. KEY178) GOTO CE_EOF
	XCALL ISIO (CHN179, BLLINE, KEY179, DELETE, LOKCTL)

	GOTO CE_LOOP

; add the new records
CE_EOF,
	FOR ROW FROM 12 THRU 20 XCALL W_DISP(WND_1,WD_POS,ROW,1,WD_CLR, WDC_LIN)
	XCALL W_DISP(WND_1,WD_POS, ROW,1, WD_CLR, WDC_LIN)

	XCALL W_DISP(WND_1,WD_POS, ROW,1, WD_CLR, WDC_LIN)
	XCALL W_UPDT		;FOR CLEARED LINES
	DR_CALLED = 1		;MAKE DSPREC2 AN INTERAL ROUTINE
	ROW = 11		;START ROW

	FOR IDX FROM 1 THRU C_MAX
	IF (CLAS_ARA(IDX) .LE. 0)
	THEN	EXITLOOP
	ELSE	BEGIN
		CALL M_BL
		BLQTY = QTY_ARA(IDX)
		BLUOM = UOM_ARA(IDX)
		BLDESC = DESC_ARA(IDX)
		BLWGHT = WT_ARA(IDX)	
		BLCLAS = CLAS_ARA(IDX)
		XCALL ISIO (CHN179, BLLINE, KEY179, STORE, LOKCTL)
		CALL ROW_UP
		CALL DSPREC2
		END
	NUMLIN = IDX -1

	FOR IDX FROM 1 THRU C_MAX
		BEGIN
		IF (TAGA_ARA(IDX).LE.0) EXITLOOP
		CALL M_BL
		BLLINN = IDX + NUMLIN
		BLUOM = TAGA_ARA(IDX) ,'XXXXXX' [LEFT]
		BLCLAS = 888
		XCALL ISIO (CHN179, BLLINE, KEY179, STORE, LOKCTL)
		CALL ROW_UP
		CALL DSPREC2
		END

	DR_CALLED = 0
	RETURN
;-----------------------------------------
M_BL,
	CLEAR BLLINE
	BLORDN = BHORDN
	BLHDRN = BHHDRN
	BLSHPN = BHSHPN
	BLLINN = IDX
	RETURN
;------------------------------------------
ROW_UP,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	INCR ROW
	IF (ROW.GT.20) call scroll_up

;;;	IF (ROW.GT.20)
;;;	BEGIN
;;;	  ROW = 20
;;;	  DISPLAY (15,ESC,'[12;20r',ESC,'[20;01H',ESC,'D')
;;;	  DISPLAY (15,ESC,'[01;24r')
;;;	END

	RETURN
;------------------------------------------------------
scroll_up,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	xcall w_area (wnd_1, wa_set, 12, 1, 9, 78)
	xcall w_area (wnd_1, wa_scroll, was_up, 1)
	row = 20
	xcall w_updt
	xcall w_area (wnd_1, wa_set, 1, 23, 23, 78)
	xcall w_updt

	return
;------------------------------------------------------------

C_ADDNEW,
	CLAS_ARA(W_IDX) = BLCLAS
	UOM_ARA(W_IDX) = BLUOM
	QTY_ARA(W_IDX) = BLQTY
	WT_ARA(W_IDX) = BLWGHT
	DESC_ARA(W_IDX) = BLDESC

	RETURN
;----------------------------------------------------------

TAG_ALONG,
	INCR T_IDX
	TAGA_ARA(T_IDX) = BLUOM
	RETURN
;-----------------------------------------------------------

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK

	SWITCH = 1
	XCALL FILES (8,'SU',178,SWITCH)		;FILE 178 - BLHEAD FILE
	IF (SWITCH .EQ. 9) RETURN
	CHN178 = 8

	XCALL FILES (9,'SU',179,SWITCH)		;FILE 179 - BLLINE FILE
	IF (SWITCH .EQ. 9) RETURN
	CHN179 = 9

	XCALL FILES (28,'SI',188,SWITCH)	;FILE 188 - SBLHDR FILE
	IF (SWITCH .EQ. 9) RETURN
	CHN188 = 28

	XCALL FILES (29,'SI',189,SWITCH)	;FILE 189 - SBLLIN FILE
	IF (SWITCH .EQ. 9) RETURN
	CHN189 = 29

	SWITCH = 5
	XCALL FILES (80,'SI',182,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN182 = 80

	XCALL FILES (83,'SU',183,SWITCH)	;FILE 183 ROLO
	IF (SWITCH .EQ. 9) RETURN
	CHN183 = 83

	XCALL FILES (4,'SI',044,SWITCH)		;FILE 044 - ORDHDR FILE
	IF (SWITCH .EQ. 9) RETURN
	CHN044 = 4

	XCALL FILES (1,'SI',001,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN001 = 1

;;;	XCALL FILES (2,'I',002,SWITCH)
;;;	IF (SWITCH .EQ. 9) RETURN
;;;	CHN002 = 2


	SWITCH = 5
	XCALL FILES (66, 'SU', 066, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN066 = 66

	SWITCH = 5
	XCALL FILES (95, 'SI', 195, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN195 = 95

	SWITCH = 5
	XCALL FILES (101,'SI',101,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN101 = 101
	
	SWITCH = 5
	XCALL FILES (94,'SI',194,SWITCH)	;194 -- DPTLOC
	IF (SWITCH .EQ. 9) RETURN
	CHN194 = 94

;;;	LOKCTL = 1
;;;	XCALL IO (CHN001,DUMCUS,1,READ,LOKCTL)
;;;	BSEND = ORG001


	OPNOK = 1
	RETURN
;-----------------------------------------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	IF (CHN044) XCALL FILES (CHN044,'SI',044,4)
	IF (CHN178) XCALL FILES (CHN178,'SU',178,4)
	IF (CHN179) XCALL FILES (CHN179,'SU',179,4)
	IF (CHN182) XCALL FILES (CHN182,'SI',182,4)
	IF (CHN183) XCALL FILES (CHN183,'SU',183,4)
	IF (CHN188) XCALL FILES (CHN188,'SI',188,4)
	IF (CHN189) XCALL FILES (CHN189,'SI',189,4)
	IF (CHN195) CLOSE CHN195			;SSQ 03-25-10
	IF (CHN066) CLOSE CHN066			;SSQ 05-24-05
	IF (CHN101) CLOSE CHN101			;SSQ 12-11-19
	IF (CHN194) CLOSE CHN194			;SSQ 3-2-20
	RETURN

INIT_WINDOW,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; SET UP SCREEN 1 WINDOW
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	xcall u_start("lib:smc_wnd",,,,,,,200)
	xcall e_sect("Bills of Lading",D_CAPTION)
;;;	XCALL W_INIT(POOLSIZE,WNDCHNL,MAXWINS)
	XCALL TNMBR (WN_TNMBR)
	XCALL W_PROC(WP_FIND,WND_1,WN_NAME)
	IF (.NOT. WND_1)
		BEGIN
		XCALL W_PROC(WP_CREATE,WND_1,WN_NAME,23,78)
		END
	XCALL W_BRDR(WND_1,WB_TITLE,'Bills of Lading',
&			WB_TPOS,WBT_TOP,WBT_CENTER)
	XCALL W_PROC(WP_PLACE,WND_1,1,1)	
	XCALL W_DISP(WND_1,WD_CLEAR)
	XCALL W_UPDT
	W_ID = WND_1
	xcall u_logwnd(wnd_1)

;; POP info...

	MAXARA = 20
	PLEN = 34
	NUMROW = 15
	WX = 
	WY = 
	POP_WID(1,5) = "BLPOP"
	POP_WID(6,8) = WN_TNMBR,	'XXX'
	POP_TITLE = "CARRIER NAMES"
;;;	RETURN

;; POP info...

	bl_MAXARA = 10		;9-19-97 NOT MORE THAN 1 FULL WINDOW
	bl_PLEN = 34
	bl_NUMROW = 10
	bl_WX = 8
	bl_WY = 7
	bl_POP_WID(1,5) = "OEPOP"
	bl_POP_WID(6,8) = WN_TNMBR,	'XXX'
	bl_POP_TITLE = "CUSTOMER NAMES"
	
;; POP44 FOR DPTLOC ITEMS

	MAXARA4 = 10
	PLEN4 = 58
	WX4 = 10
	WY4 = 11
	POP_WID4(1,6) = 'DPTLOC'
	POP_TITLE4 = 'LINES FROM DEPT STATUS'
	
	XCALL W_PROC(WP_CREATE, WND_7, 'DPTMNT',8, 43)

;; POP1A FOR COPTBL "D7" ITEMS
	aMAXARA = 4
	aPLEN = 35
	aNUMROW = 3
	aWX = 17
	aWY = 22
	aPOP_WID = 'WD7_POP'
	aPOP_TITLE = 'DEPARTMENT CLASSES'


	RETURN
;-------------------------------------------------------------------

ROLODEX,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	UPDATE = 1
	R_TYPE = 2	;shipping
	CALL GET_CUST
	XCALL ROLDX(CUSMAS,UPDATE,3,6,R_TYPE,CHN183)
	RETURN
;------------------------------------------------------

GET_DPTLOC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; GET DATA FROM DPTLOC
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL TTSTS(TSTAT)
	IF (TSTAT) 
		begin
		xcall w_disp(wnd_1,wd_pos,1,1)
		XCALL W_DISP(WND_1,WD_READS,ENTRY)
		end
	CLEAR PI4
	CLEAR DPTLOC
;;;	L_ORDN = BHORDN
	L_ORDN = OORDNO
	FIND (CHN194, DPTLOC, L_KEY) [ERR=GDP_LOOP]
GDP_LOOP,
	XCALL IOS (CHN194, DPTLOC, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO GDP_EOF
	IF (L_ORDN .NE. OORDNO) GOTO GDP_EOF
	
	CALL GET_D7	;GET CLASS & CLASS DESCRIPTION FROM COPTBL (D7)
				
	DLINE4(1,3) = D7_CLAS
	DLINE4(6,11) = L_QTY, 'XXXXXX'
	DLINE4(14,17) = L_UM
	DLINE4(20,49) = D7_DESC
	DLINE4(51,56) = L_WT, 'XXXXXX'

	INCR PI4
	PARRY4(PI4) = DLINE4
	PARRFA4(PI4) = SAVRFA			;COPTBL D7 RFA
	
	GOTO GDP_LOOP
GDP_EOF,
	NUMARA4 = PI4	
	RETURN
;------------------------------------------------------



GET_D7,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; LOOK UP CLASS DATA IN TABLE, IF THERE
	;;; IS MORE THAT ONE COPTBL ENTRY FOR CURRENT
	;;; DEPT, THEN USER HAD TO MAKE A CHOICE...
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

DISP_D7,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;pop-up window with options...
	XCALL W_PROC(WP_PLACE, WND_7, 7, 20)
	XCALL W_DISP(WND_7, WD_CLEAR)
	XCALL W_DISP (WND_7, WD_POS, 1, 1, '   DEPT:')
	XCALL W_DISP (WND_7, WD_POS, 2, 1, '1. CLASS')
	XCALL W_DISP (WND_7, WD_POS, 3, 1, '2. QTY')
	XCALL W_DISP (WND_7, WD_POS, 4, 1, '3. UOM')
	XCALL W_DISP (WND_7, WD_POS, 5, 1, '4. DESC')
	XCALL W_DISP (WND_7, WD_POS, 6, 1, '5. WEIGHT')

	XCALL W_DISP (WND_7, WD_POS, 8, 1, 'FIELD TO CHANGE: ')	

	XCALL W_DISP (WND_7, WD_POS, 1,12, L_DEPT)
	XCALL W_DISP (WND_7, WD_POS, 2,12, ' ')

	A6 = L_QTY, 'ZZZZZX' [LEFT]
	XCALL W_DISP (WND_7, WD_POS, 3,12, A6)
	XCALL W_DISP (WND_7, WD_POS, 4,12, L_UM)
	XCALL W_DISP (WND_7, WD_POS, 5,12, ' ')

	A6 = L_WT, 'ZZZZZX' [LEFT]
	XCALL W_DISP (WND_7, WD_POS, 6,12, A6)

	FOR aPI FROM 1 THRU aMAXARA
		BEGIN
		CLEAR aPARRY(aPI), aPFLAGS(aPI), aPARRFA(aPI)
		END

	CLEAR aPI
	CLEAR COPTBL	
	TBLCOD = 'D7'
	D7_DEPT = L_DEPT
	FIND (CHN182, COPTBL, TBL_KEY) [ERR=D7_LOOP]
D7_LOOP,
	READS (CHN182, COPTBL, GETRFA:D7_RFA)
	IF (LOKCTL .NE. 0) GOTO D7_EOF
	IF (D7_DEPT .NE. L_DEPT) GOTO D7_EOF
	aDLINE(1,2) = D7_DEPT
	aDLINE(4,6) = D7_SEQ,	'XXX'
	aDLINE(8,10) = D7_CLAS,	'XXX'
	aDLINE(12,41) = D7_DESC
	
	INCR aPI
	aPARRY(aPI) = aDLINE
	aPARRFA(aPI) = D7_RFA

	GOTO D7_LOOP
D7_EOF,
	aNUMARA = aPI
	IF (aPI .GT. 1) 	;MORE THAN 1 COPTBL RECORD, USER HAS TO CHOOSE
		BEGIN

	XCALL TTSTS(TSTAT)
	IF (TSTAT) 
		begin
		xcall w_disp(wnd_1,wd_pos,1,1)
		XCALL W_DISP(WND_1,WD_READS,ENTRY)
		end
	P1A,
		XCALL POP1 (POP1A)		;ALLOW USER TO SELECT
		USING aP_ACTION SELECT
		(1),	NOP			;SELECTED
		(),	GOTO P1A		;TRY AGAIN
		ENDUSING
		END

	D7_RFA = aPARRFA(1)	
	READ (CHN182, COPTBL, RFA:aPARRFA(aPI) )		
	XCALL W_PROC(WP_REMOVE,WND_7)
;;;	XCALL W_PROC(WP_DELETE,WND_7)
	XCALL W_UPDT
	RETURN
;-------------------------------------------------------------------
SET_BLLINE,
	DLINE4 = PARRY4(PI4)		;CURRENT ARRAY ELEMENT
	CLEAR BLLINE
	BLLINN = SEQ
	BLORDN = BHORDN
	BLHDRN = BHHDRN
	BLSHPN = BHSHPN
	BLQTY = DLINE4(6,11)
	BLUOM = DLINE4(14,17)
	BLDESC = DLINE4(20,49)
	BLWGHT = DLINE4(51,56)
	BLCLAS = DLINE4(1,3)

	CTL(4,8) = '01,02'
	ALPHA(1,2) = BLLINN
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,ALPHA(1,2))
			
	RETURN
;------------------------------------------------------

GET_CUST,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	XCALL ISIO (CHN001, CUSMAS, OCUSNO, READ, LOKCTL)
	IF (LOKCTL .NE. 0) CLEAR CUSMAS
	
	clear miscus
	using cusno select
	(2,3,5,10),	begin
			cash_cust = 1
			if (omicus.gt.0) 
				begin
				xcall isio (chn101,miscus,omicus,read,lokctl)
				if (lokctl.ne.0)
					begin
					clear miscus
					xcall wnmsg(wnd_1,24,'not miscus rec found',1)
					end
				end
			end

	(),		cash_cust = 0
	endusing

	
	RETURN
;------------------------------------------------------

dspshp,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	XCALL W_DISP(WND_1,WD_POS,5,4,BHSHPNM)
	XCALL W_DISP(WND_1,WD_POS,6,4,BHSHAD1)
	XCALL W_DISP(WND_1,WD_POS,7,4,BHSHAD2)
	XCALL W_DISP(WND_1,WD_POS,8,4,BHSHAD3)
	RETURN
;------------------------------------------------------

M_SHIPTO,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR ENTRY, INXCTL

	using cash_cust select
	(1),	xcusno = omicus
	(),	xcusno = ocusno
	endusing
;;;	XCUSNO = OCUSNO
	SHPNO = 	;;;>OSHPTO
	FIND(88,SHIPTO,SKEY)[ERR=MORE_SHIP]
MORE_SHIP,
	CALL GET_MSHIP
	IF (%TTSTS) XCALL W_DISP(WND_1,WD_READS,ENTRY)
	IF (bl_NUMARA .GT. 0)
	THEN	BEGIN
		bl_DLINE = '  SHIP  NAME'
		bl_POP_TITLE = "<CR> = MORE SHIP-TO'S"
		XCALL OEPOP(POPAR)
		END
	ELSE	BEGIN
		XCALL OLMSG(WND_1,24,"NO MORE SHIP-TO'S",1)
		XCALL W_DISP(WND_1,WD_POS,24,1,'ADD NEW SHIP-TO?')
		XCALL WINPT(W_ID,24,19,01,01,'YN',ENTRY,INXCTL)
		IF(INXCTL.EQ.1)
		THEN	CALL M_ADD_SHIP
		ELSE	BEGIN
			CLEAR ENTRY
			INXCTL = 1
			RETURN
			END
		XCALL W_DISP(WND_1,WD_POS,24,1,WD_CLR,WDC_EOL)
		END

	USING bl_P_ACTION SELECT
	(0),	INXCTL = 1		;<END>
	(1),	BEGIN			;SELECTED
		bl_DLINE = bl_PARRY(bl_PI)	
		ENTRY = bl_DLINE(1,4)	;SHIPTO
		OSHPTO = ENTRY(1,4)
		if (cash_cust)
		then	XCALL MSHP (OMICUS,OSHPTO,2,MI_TAXFLG,MI_NAME, CASH_CUST)
		else	XCALL MSHP (OCUSNO,OSHPTO,2,TAXFLG,OCUSNM, CASH_CUST)

	;;;	XCALL MSHP (OCUSNO,OSHPTO,2,TAXFLG,OCUSNM)
		CLEAR INXCTL
		END
	(2),	CALL M_ADD_SHIP
	(4),	GOTO MORE_SHIP

	ENDUSING

	RETURN
;------------------------------------------------

GET_MSHIP,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR I
MS_LOOP,
	XCALL IOS (88,SHIPTO,READ,LOKCTL)
	IF (LOKCTL.NE.0 .OR. SHCSNO.NE.XCUSNO) GOTO MS_EOF ;for cash-cust
;;;	IF (LOKCTL.NE.0 .OR. SHCSNO.NE.OCUSNO) GOTO MS_EOF
	CLEAR bl_DLINE
	bl_DLINE(1,4) = SHTONO,	'ZZZZ' [LEFT]
	bl_DLINE(6,32) = SHTONA
	INCR I
	bl_PARRY(I) = bl_DLINE
	
	bl_DLINE (1,25) = SHTAD1
	bl_DLINE (26,46) = SHTAD2
	bl_DLINE (47,61) = SHTCTY
	bl_DLINE (63,64) = SHTST
	bl_DLINE (66,75) = SHTZIP
	bl_P_ADD(I) = bl_DLINE
	IF (I .LT. bl_MAXARA) GOTO MS_LOOP
MS_EOF,
	bl_NUMARA = I
	RETURN
;------------------------------------------------
M_ADD_SHIP,
	IF (CASH_CUST)
	THEN	XCALL MSHP (OMICUS,OSHPTO,1,MI_TAXFLG,MI_NAME,CASH_CUST)	;add
	ELSE	XCALL MSHP (OCUSNO,OSHPTO,1,TAXFLG,OCUSNM,CASH_CUST)	;add

;;;	XCALL MSHP (OCUSNO,OSHPTO,1,TAXFLG,OCUSNM)	;add
	ENTRY(1,4) = OSHPTO
	CLEAR INXCTL
	RETURN
;------------------------------------------------

BADSHP,
	XCALL OLMSG(WND_1, 24,'SHIP-TO NUMBER NOT FOUND',1)
	GO TO SHIPTO
END



