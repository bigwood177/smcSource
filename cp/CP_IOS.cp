SUBROUTINE CP_IOS ; (CHANEL,BUFFER,IOCTL,LOKCTL)

;		SUBROUTINE FOR PERFORMING SEQUENTIAL 'READS' AND 'WRITES'
;		OPERATIONS WITH DIBOL FILES.
;		ERROR CONDITIONS ARE DISPLAYED, LOCKED RECORD CONDITIONS
;		ARE TRAPPED.
;		THE USER IS OPTIONALLY PROMPTED FOR CONTINUATION ON LOCKED
;		RECORDS.
;		ADDITIONAL CAPABILITY TO TRAP PRINTER OFF LINE CONDITIONS
;
;
CHANEL	,D	; CHANNEL TO PERFORM READS/WRITES OPERATION ON
BUFFER	,A	; BUFFER AREA TO READS/WRITES RECORDS FROM
IOCTL	,D	; I-O CONTROL VARIABLE
		;	0 = READS
		;	1 = WRITES
LOKCTL	,D	; READ/WRITE TYPE
		;  ON ENTRY:
		;	0 = DISPLAY LOCK MESSAGE, AND ALLOW ABORT
		;	1 = DISPLAY LOCK MESSAGE, DO NOT ALLOW ABORT
		;	2 = TRAP PRINTER OFF LINE CONDITION - WRITES ONLY
		;  ON EXIT:
		;	0 = SUCCESSFUL OPERATION
		;	1 = UNSUCCESSFUL (ERROR OCCURRED AND ABORT SELECTED)
		;	2 = LOGICAL END OF FILE DETECTED
		;	3 = OUTPUT DEVICE IS FULL

W_ID	,D	; OPTIONAL WINDOW NUMBER

	.INCLUDE 'WND:WINDOWS.DEF'

RECORD
	WND	,D4
	ALPHA	,A3
	ALPH2	,A2
	DELETE	,D1
	ERL	,D5
	ERR	,D3
	LOCKED	,D1
	MESSAG	,A43
	MESAGE	,A43,	'RECORD TEMPORARILY IN USE - WILL YOU WAIT ?'
	MESAG2	,A14,	'PLEASE WAIT...'
	MESAG3	,A43,	'PRINTER OFF LINE                           '
	SYSTEM	,D1
	TCHAR	,D3

PROC
	IF (%PASSED(W_ID))
	THEN	WND = W_ID
	ELSE	WND = 0

;;;	XCALL ENVRN (SYSTEM)
	system = 0	;envrn.man conflicts w/ synergy envrn
	IF (SYSTEM.GT.1) SYSTEM = 1	;MAINTAIN TSX+ = 1
	MESSAG = MESAGE
	IF (LOKCTL .EQ. 1) MESSAG (29,43) = MESAG2
	IF (LOKCTL.EQ.2) MESSAG = MESAG3
START,
	GO TO (WRITE), IOCTL
READ,
	ON ERROR FILERR
	READS (CHANEL,BUFFER)
	OFF ERROR
	LOKCTL =
	GO TO EXIT
WRITE,
	ON ERROR FILERR
	WRITES (CHANEL,BUFFER)
	OFF ERROR
	LOKCTL =
	GO TO EXIT
FILERR,
	OFF ERROR
	IF (LOKCTL.EQ.2 .AND. IOCTL) GO TO LOCKED
	XCALL ERROR (ERR,ERL)
	IF (ERR .EQ. 40) GO TO LOCKED
	IF (ERR .EQ. 1) GO TO EOF
	IF (ERR .EQ. 25) GO TO FULL
ERRMSG,
	ALPHA = ERR, 'ZZX'
	ALPH2 = CHANEL, 'ZX'
	XCALL OUTPT (24,1,1,'\',1)
	IF (IOCTL.EQ.0) DISPLAY (15,'READS ERROR ',ALPHA,' -- CHANNEL ',ALPH2)
	IF (IOCTL.EQ.1) DISPLAY (15,'WRITES ERROR ',ALPHA,' -- CHANNEL ',ALPH2)
	XCALL OUTPT (3,1,1,'\',1)
	STOP
LOCKED,
	OFF ERROR

	IF (WND .NE. 0)
	THEN	XCALL W_DISP(WND, WD_POS, 23, 1, MESSAG)
	ELSE	XCALL OUTPT (24,1,1,MESSAG,1)

	LOCKED = 1
	GO TO (WAIT1,WAIT1), LOKCTL
	XCALL FLAGS (00010000,1)		;TURN OFF CHAR ECHO
	IF (SYSTEM.EQ.1) DISPLAY (15,29,'F',29,'S')
					;F=TURN OFF CHAR ECHO
					;S=TURN ON SINGLE CHAR ACTIVATION

	IF (WND .NE. 0)
	THEN	XCALL W_DISP (WND, WD_ACCEPT, TCHAR)
	ELSE	ACCEPT (15,TCHAR)

	USING WND SELECT
	(0),	BEGIN
		IF (TCHAR.EQ.89) DISPLAY (15,'Y')
		IF (TCHAR.EQ.78) DISPLAY (15,'N')
		END
	(),	BEGIN
		IF (TCHAR.EQ.89) W_DISP (WND,'Y')
		IF (TCHAR.EQ.78) W_DISP (WND,'N')
		XCALL W_UPDT
		END
	ENDUSING

	IF (TCHAR .EQ. 089) GO TO WAIT		;'Y' = 089 IN ASCII
	IF (TCHAR .NE. 078) GO TO LOCKED	;'N' = 078 IN ASCII
	CALL ACPTCR
	IF (DELETE) GO TO DELETE
	LOKCTL = 1
	GO TO EXIT
EOF,
	LOKCTL = 2
	GO TO EXIT
FULL,
	LOKCTL = 3
EXIT,
	IF (LOCKED) 
		BEGIN
		USING WND SELECT
		(0),	XCALL OUTPT (24,1,1,'\',1)
		(),	XCALL W_DISP(WND, WD_POS, 23, 1, WD_CLR, WDC_EOL)
		ENDUSING
		END
	RETURN
WAIT,
	CALL ACPTCR
	IF (DELETE) GO TO DELETE
	XCALL OUTPT (24,1,1,MESAG2,1)
WAIT1,
	SLEEP 5
	GO TO START
ACPTCR,
	DELETE =
	ACCEPT (15,TCHAR)
	IF (TCHAR.EQ.127) DELETE = 1
	IF (TCHAR.EQ.127) RETURN
	IF (TCHAR.NE.13) GO TO ACPTCR
	IF (SYSTEM.NE.1) ACCEPT (15,TCHAR)
	IF (SYSTEM.EQ.1) DISPLAY (15,29,'T',29,'E')
					;T=TURN OFF SINGLE CHAR ACTIVATION
					;E=TURN ON CHARACTER ECHOING
	XCALL FLAGS (00010000,0)	;TURN ON CHARACTER ECHOING
	RETURN
DELETE,
	IF (SYSTEM.EQ.1) DISPLAY (15,29,'T',29,'E')
	XCALL FLAGS (00010000,0)
	GO TO LOCKED
END
