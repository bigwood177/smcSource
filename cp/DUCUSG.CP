;DUCUSG.CP
;	DUCT USAGE REPORT
;

RECORD	DUCACC
	.INCLUDE 'DEF:RD175A.DEF'

RECORD	PARAM
	.INCLUDE 'DEF:PARAM.DEF'

RECORD	ORDHDR
	.INCLUDE 'DEF:RD044A.DEF'

RECORD TITLE
		,A*,	'DUCT USAGE REPORT'
RECORD	HDR1
		,A*,	'FOR '
	H1_DAT1	,A10
		,A*,	' THRU '
	H1_DAT2	,A10

RECORD MATLIN
		,A*,	'MATERIAL: '
	H2_MAT	,A10

RECORD HDR2
		,A*, 'GA              OPEN       COMPLETED           TOTAL'

RECORD	DIS
	II	,D6

RECORD	TEMP
	T_MAT	,D1
	T_GA	,D2
	T_OPN	,D10	;OPEN
	T_CPL	,D10	;COMPLETED
RECORD,X
	T_KEY	,D3

RECORD	CHANNEL
	CHN044	,D3
	CHN175	,D3
	CHNTMP	,D3

RECORD	VARS
	I	,D6
	A15	,A15
	CURKEY	,D3
	SAVKEY	,D3
	SAVMAT	,D1
	SAVGA	,D2
	TOT_OPN	,D10
	TOT_CPL	,D10
	TMPFIL	,A14,	'SPL:DUCUSG.ISM'
	REDFIL	,A14
	CLCTL	,D1
	YEAR	,D4
	YR	,D2
	DECMAL	,D18
	TOTPRC	,D18
	O_AMT	,D9
	C_AMT	,D9
	XDATE	,D8
	TODAY	,D8	;TODAY'S DATE
	DATE1	,D8	;FIRST DAY OF THE YEAR
	SYEAR	,D4
	EYEAR	,D4

	HD	,A6,	'NO HDR'
	OPNOK	,D1
	MAT	,D1
	STGA	,D2
	ENDGA	,D2
	STDAT	,D8
	ENDAT	,D8
	LINCNT	,D2,	60
	SPLFIL	,A14
	LPONSW	,D1
	LPARG	,D1
	RPTNUM	,D3
	PRTTYP	,A1
	PGCNT	,D6,	000000
	PLINE	,A132
	PRTCTL	,D3
	ENTRY	,A30
	INXCTL	,D1
	CNGCTL	,D1
	WHATNO	,D1
	SWITCH	,D1
	LPSW	,D2
	V	,D1
	READ	,D1	,0
	WRITE	,D1	,1
	STORE	,D1	,2
	LOKCTL	,D1

PROC
	XCALL TERID (V)
	XCALL RDAT8(TODAY)
;
DISPLA,
	CLEAR CNGCTL
	XCALL OUTPT (1,1,2,'DUCT USAGE REPORT',1)
	XCALL OUTPT ( 4,4,1,'1. MATERIAL',1)
	XCALL OUTPT ( 6,4,1,'2. START GAUGE',1)
	XCALL OUTPT ( 7,4,1,'3. END   GUAGE',1)
	XCALL OUTPT ( 9,4,1,'4. START DATE',1)
	XCALL OUTPT (10,4,1,'5. END   DATE',1)
MAT,
	for i from 1 thru 7  xcall outpt (i+3, 25, 0, dtype(i), 1)

	XCALL INPUT (4, 19, 01,00, '#E', ENTRY, INXCTL ,1)
	GOTO (DISPLA,ENDOFF),INXCTL
	MAT = ENTRY(1,1)
	USING MAT SELECT
	(0),	BEGIN
		XCALL OUTPT (4,21,1,'ALL',1)
		END

	(1,2,3,4,5,6,7), NOP
	(),	BEGIN
		XCALL MESAG ('BAD MATERIAL',1)
		GOTO MAT
		END
	ENDUSING

	IF (MAT.LE.0)
	THEN	A15(4,15) = 'ALL'
	ELSE	A15 = DTYPE(MAT)
	XCALL OUTPT (4,21,0,A15(4,15) ,1)
	for i from 1 thru 7  xcall outpt (i+3, 25, 1, ' ', 1)
	GOTO (ANYCNG),CNGCTL

STGA,
	XCALL INPUT (6,19,02,00,'#E',ENTRY,INXCTL,1)
	GOTO (DISPLA,ENDOFF),INXCTL
	STGA = ENTRY(1,2)
	IF (STGA .EQ. 0)
		BEGIN
		XCALL OUTPT (6,19,1,'ALL',1)
		XCALL OUTPT (7,19,1,' ',1)
		ENDGA = 99
		GOTO (ANYCNG), CNGCTL
		GOTO STDAT
		END
	GOTO (ANYCNG),CNGCTL

ENGA,
	XCALL INPUT (7,19,02,00,'# ',ENTRY,INXCTL,1)
	GOTO (DISPLA),INXCTL
	ENDGA = ENTRY(1,2)
	IF (ENDGA .EQ. 0)
		BEGIN
		ENDGA = STGA
		ENTRY(1,2) = ENDGA, 'XX'
		XCALL OUTPT (7,19,1,ENTRY(1,2),1)
		GOTO (ANYCNG),CNGCTL
		END

	GOTO (ANYCNG),CNGCTL
STDAT,
	XCALL INPUT (9,19,08,00,'D ',ENTRY,INXCTL,1)
	GOTO (DISPLA),INXCTL
	STDAT = ENTRY(1,8)
	IF (STDAT .EQ. 0)
		BEGIN
		STDAT = TODAY
		XDATE(1,4) = STDAT(5,8)
		XDATE(5,8) = STDAT(1,4)
		ENTRY(1,10) = XDATE, 'ZX/XX/XXXX'
		XCALL OUTPT (9,19,1,ENTRY(1,10),1)
		END

	GOTO (ANYCNG),CNGCTL
ENDAT,
	XCALL INPUT (10,19,08,00,'D ',ENTRY,INXCTL,1)
	GOTO (DISPLA),INXCTL
	ENDAT = ENTRY(1,8)
	IF (ENDAT .EQ. 0)
		BEGIN
		ENDAT = STDAT
		XDATE(1,4) = ENDAT(5,8)
		XDATE(5,8) = ENDAT(1,4)
		ENTRY(1,10) = XDATE, 'ZX/XX/XXXX'
		XCALL OUTPT (10,19,1,ENTRY(1,10),1)
		END
	GOTO (ANYCNG),CNGCTL

ANYCNG,
	XCALL ANYCN (CNGCTL, WHATNO)
	GOTO (PROCES, CNGBR), CNGCTL+1
CNGBR,
	GOTO (MAT, STGA, ENGA, STDAT, ENDAT), WHATNO
	GOTO ANYCNG

PROCES,

	CLEAR PGCNT
	LINCNT = 60
	CLEAR TOT_OPN, TOT_CPL, T_OPN, T_CPL

	XDATE(1,4) = STDAT(5,8)
	XDATE(5,8) = STDAT(1,4)
	H1_DAT1 = XDATE,	'ZX/XX/XXXX'

	XDATE(1,4) = ENDAT(5,8)
	XDATE(5,8) = ENDAT(1,4)
	H1_DAT2 = XDATE,	'ZX/XX/XXXX'


	SYEAR = STDAT(1,4)
	EYEAR = ENDAT(1,4)

	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF
	

	CALL GET_OPEN			;OPEN ORDERS
	FOR YEAR FROM SYEAR THRU EYEAR CALL GET_COMPLETE
;PRINT REPORT...
;;;	CLOSE CHNTMP

	CALL CLOSE
	SAVMAT = -1

	XCALL LPON (LPSW, SPLFIL)
	FIND (CHNTMP, TEMP, ^FIRST) [ERR=P_LOOP]
P_LOOP,
	READS (CHNTMP, TEMP, P_EOF)
	
	IF (T_MAT .NE. SAVMAT) CALL HD_MAT

	PLINE (1,2) = T_GA, 'XX'
	PLINE (9,21) = T_OPN, 'ZZ,ZZZ,ZZX.XX-'
	PLINE (24,37) = T_CPL, 'ZZ,ZZZ,ZZX.XX-'
	PLINE (40,53) = (T_OPN + T_CPL), 'ZZ,ZZZ,ZZX.XX-'

	CALL PRINT

	TOT_OPN = TOT_OPN + T_OPN
	TOT_CPL = TOT_CPL + T_CPL
	GOTO P_LOOP

;GA              OPEN       COMPLETED           TOTAL
;AA     ZZ,ZZZ,ZZX.XX-  ZZ,ZZZ,ZZX.XX-  ZZ,ZZZ,ZZX.XX-
;12345678901234567890123456789012345678901234567890123
;         1         2         3         4         5
P_EOF,
	CALL PRINT
	PLINE (1,5) = 'TOTAL'
	PLINE (8,21) = TOT_OPN, 'ZZ,ZZZ,ZZX.XX-'
	PLINE (24,37) = TOT_CPL, 'ZZ,ZZZ,ZZX.XX-'
	PLINE (40,53) = (TOT_OPN+TOT_CPL),  'ZZ,ZZZ,ZZX.XX-'
	CALL PRINT
	
	XCALL LPOFF (LPSW, SPLFIL, PGCNT)

	CLOSE CHNTMP
	XCALL DELET (TMPFIL)

	GOTO DISPLA

HD_MAT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (SAVMAT .NE. -1)
		BEGIN
		CALL PRINT
		CALL PRINT
		END
		
	IF (t_MAT.LT.1 .or. t_MAT.GT.7)
	THEN	A15(4,15) = '???'
	ELSE	A15 = DTYPE(t_mat)

	H2_MAT = A15(4,15)
	PLINE = MATLIN
	CALL PRINT
	PLINE = HDR2
	CALL PRINT
	SAVMAT = T_MAT

	RETURN
;--------------------------------------------

PRINT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	PRTCTL = 70
	XCALL LPOUT (LINCNT,PGCNT,PLINE,TITLE,HDR1,HDR2,HD,
&			'NO LEGEND',' ',' ',0,080,PRTCTL,0,LPSW,RPTNUM,PRTTYP)

	RETURN
;-------------------------------------------
	


ENDOFF,
	CALL CLOSE
	XCALL PGCHN ('CP:IMMENU',1)
	STOP

;=======================================================================
GET_OPEN,	;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR DUCACC, C_AMT, O_AMT, II
	SAVKEY = -1

	FIND (CHN044, ORDHDR, ^FIRST) [ERR=FIND_NEXT]

FIND_NEXT,
	CALL GET_HDR
	IF (LOKCTL .NE. 0) RETURN

	FIND (CHN175, DUCACC, OORDNO) [ERR=GO_LOOP]
GO_LOOP,
	INCR II
	IF (II/1000*1000.EQ.II) DISPLAY (15,$SCR_POS(1,70),DIS)
	XCALL IOS (CHN175, DUCACC, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO GO_EOF
	IF (MAT.GT.0 .AND. DUTYPE.NE.MAT) GOTO GO_LOOP
	IF (GAUGE.LT.STGA .OR. GAUGE.GT.ENDGA) GOTO GO_LOOP

	IF (DUCTOR .NE. OORDNO) 
		BEGIN
		CALL GETKEY
		GOTO FIND_NEXT
		END

	T_MAT = DUTYPE
	T_GA = GAUGE
	CURKEY = T_KEY

	IF (CURKEY .NE. SAVKEY) 	CALL GETKEY
	TOTPRC = (POUNDS * GPRICE ) # 1

;;;	DECMAL = (LINPRC * SQFLIN ) # 1
;;;	TOTPRC = TOTPRC + DECMAL		;LINER
	O_AMT = O_AMT + TOTPRC

	GOTO GO_LOOP
GO_EOF,
	CALL GETKEY
	RETURN
;-----------------------------------------

GET_COMPLETE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CALL CLOSE 

	SWITCH = 5

	USING YEAR SELECT
	(.EQ.TODAY(1,4) ), BEGIN
		 	   XCALL FILES (84, 'SI', 184, SWITCH)
			   CHN044 = 84
		 	   XCALL FILES (86, 'SI', 186, SWITCH)
			   CHN175 = 86
			   END

	(.GT. TODAY(1,4)), 	RETURN		;IN THE FUTURE
	(.GT. 2006),	   BEGIN		;ARBITRARY, DON'T PROC PREV
			   YR=YEAR(3,4)		;SLHHXX, SLHLXX
			   XCALL FFILE (184, REDFIL, CLCTL)
			   REDFIL(9,10) = YR, 'XX'
			   REDFIL(14,14) = 'M'
			   OPEN (84, SI, REDFIL)
			   CHN044 = 84

			   XCALL FFILE (186, REDFIL, CLCTL)
			   REDFIL(9,10) = YR, 'XX'
			   REDFIL(14,14) = 'M'
			   OPEN (86, SI, REDFIL)
			   CHN175 = 86
			   END

	ENDUSING

	CLEAR DUCACC, C_AMT, O_AMT, II
	SAVMAT = -1
	SAVGA = -1

	FIND (CHN044, ORDHDR, ^FIRST) [ERR=GET_NEXT]

GET_NEXT,
	CALL GET_HDR
	IF (LOKCTL .NE. 0) RETURN

	FIND (CHN175, DUCACC, OORDNO) [ERR=GD_LOOP]
GD_LOOP,
	XCALL IOS (CHN175, DUCACC, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO GD_EOF
	IF (DUCTOR .NE. OORDNO) 
		BEGIN
		CALL GETKEY
		GOTO GET_NEXT
		END

	IF (MAT.NE.0 .AND. DUTYPE.NE.MAT) GOTO GD_LOOP
	IF (GAUGE.LT.STGA .OR. GAUGE.GT.ENDGA) GOTO GD_LOOP
;;;	IF (DUCTOR .NE. OORDNO) GOTO GD_EOF

	TOTPRC = (POUNDS * GPRICE ) # 1

;;;	DECMAL = (LINPRC * SQFLIN ) # 1
;;;	TOTPRC = TOTPRC + DECMAL		;LINER

	T_MAT = DUTYPE
	T_GA = GAUGE
	CURKEY = T_KEY

	IF (CURKEY .NE. SAVKEY) CALL GETKEY

	C_AMT = C_AMT + TOTPRC
	

	GOTO GD_LOOP
GD_EOF,
	CALL GETKEY

	RETURN
;-------------------------------------------
GETKEY,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	IF (SAVKEY.EQ. -1) GOTO OUTKEY
	IF (O_AMT.EQ.0 .AND. C_AMT.EQ.0) GOTO OUTKEY

	XCALL ISIO (CHNTMP, TEMP, SAVKEY, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO NEWKEY

	T_OPN = T_OPN + O_AMT
	T_CPL = T_CPL + C_AMT

	XCALL ISIO (CHNTMP, TEMP, SAVKEY, WRITE, LOKCTL)
	CLEAR O_AMT, C_AMT

	SAVMAT = DUTYPE
	CLEAR O_AMT, C_AMT
	RETURN
;-------------------------------------------
NEWKEY,
	CLEAR TEMP
	T_KEY = SAVKEY
	T_OPN = O_AMT
	T_CPL = C_AMT
	
	XCALL ISIO (CHNTMP, TEMP, T_KEY, STORE, LOKCTL)
	CLEAR O_AMT, C_AMT

OUTKEY,
	SAVKEY = CURKEY
	CLEAR O_AMT, C_AMT
	RETURN
;-------------------------------------------
GET_HDR,
	XCALL IOS (CHN044, ORDHDR, READ, LOKCTL)
	IF (LOKCTL.NE.0) RETURN
	IF (OLOC.NE.'O') GOTO GET_HDR
	IF (OORDDT .LT. STDAT)	GOTO GET_HDR
	IF (OORDDT .GT. ENDAT) GOTO GET_HDR

	SAVMAT = -1

	RETURN
;-------------------------------------------

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK

	SWITCH = 5
	XCALL FILES (44, 'SI', 44, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN044= 44

	SWITCH = 5
	XCALL FILES (175, 'SI', 175, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN175 = 175

	ISAMC (TMPFIL, 23, 1, 'START=1, LENGTH=3, NODUPS, ASCEND')
	OPEN (10, SU, TMPFIL)
	CHNTMP = 10

	OPNOK = 1
	RETURN
;-----------------------------------------


CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (CHN044) CLOSE CHN044
	IF (CHN175) CLOSE CHN175

	RETURN
;-----------------------------------------
