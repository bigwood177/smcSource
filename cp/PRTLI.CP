SUBROUTINE PRTLI	;isam
;
;
	OORDNO	,D
	PLINE	,A
	STATUS	,D
	TOTQTY	,D
	TOTSAL	,D
;
;
RECORD ORDLIN   	
		.INCLUDE 'DEF:RD045A.def'
RECORD	,X		
		.INCLUDE 'DEF:RD045D.def'
RECORD
	READ	,D1,0
	LOKCTL	,D1
	DATWRK	,D6
	DECMAL	,D10
	EXEPRC	,D8
	MSK3DP	,A13,'Z,ZZZ,ZZZ.XXX'	;;;
	MASK	,A13,'Z,ZZZ,ZZZ.XX-'
	MASK1	,A6, 'ZZZZX-'
;
PROC
;
;	STATUS CODE:
;	(INCOMIMG)	0 - FIND FIRST ORDLIN RECORD
;			1 - SETUP ORDLIN INFO
;			2 - FIND NEXT ORDLIN
;
;	(OUTGOING)	1 - PRINT ORDLIN INFO
;			9 - FINISHED WITH DUCT - CONTINUE
;
	GOTO (PRTLIN,ITEMS), STATUS

	LORDNO = OORDNO
	LINSEQ =
	LOKCTL = 1
	XCALL ISIO (5,ORDLIN,LORDNO,READ,LOKCTL)
	IF (LOKCTL.NE.0.OR.LORDNO.NE.OORDNO) GO TO GETDUC
	GOTO PRTLIN
ITEMS,
	LOKCTL = 1
	XCALL IOS (5,ORDLIN,READ,LOKCTL)
	IF (LOKCTL.NE.0.OR.LORDNO.NE.OORDNO) GO TO GETDUC
PRTLIN,
	IF ((LQTYOR.EQ.0.AND.LQTYBO.EQ.0).OR.LDESCR.EQ.']]]CANCEL') GOTO ITEMS
	PLINE (2,16) = LITMNO
	IF (LDAMPR) PLINE(11,16) = 'Damper'	;ssq 12-2-98

	PLINE (18,47) = LDESCR
;;;	DATWRK = LPRMDT
;;;	IF(DATWRK.EQ.0) DATWRK = LEXSDT
;;;	PLINE (49,54) = DATWRK (3,6), 'ZX/XX/'
;;;	PLINE (55,56) = DATWRK (1,2), 'XX'
	PLINE (52,54) = LINSEQ,'ZZX'		;;;
	PLINE (57,62) = LQTYOR, MASK1
	TOTQTY = TOTQTY + LQTYOR
	PLINE (64,67) = LQTYBO, 'ZZZZ'
	PLINE (74,78) = LQTYOR - LQTYBO, MASK1
	PLINE (69,71) = 'B/O'
	IF (LSTATS.EQ.2) PLINE (69,71) = 'O/S'
	IF (LSTATS.EQ.0.OR.LQTYBO.EQ.0) PLINE (69,71) =
PRTPRC,
;;;	PLINE (83,91) = LPRICE,MASK
	PLINE (83,91) = LPRICE,MSK3DP
	PLINE (96,97) = LUOFM
;;;	EXEPRC = (LQTYOR-LQTYBO)*LPRICE
	EXEPRC = ((LQTYOR-LQTYBO)*LPRICE)#1
	PLINE (102,112) = EXEPRC, MASK
	PLINE (116,117) = LDISC

;;;	DECMAL = ((LQTYOR - LQTYBO)*LPRICE)
;;;&		- (((LQTYOR - LQTYBO)*LPRICE*LDISC)/100)
;;;	EXEPRC = DECMAL - ((DECMAL*LODISC)/100)

	DECMAL = ((LQTYOR)*LPRICE)#1				;;;
&		-(((LQTYOR*LPRICE)#1*LDISC)#2)			;;;
	EXEPRC = DECMAL - ((DECMAL*LODISC)#2)			;;;

	TOTSAL = TOTSAL + EXEPRC
	PLINE (121,131) = EXEPRC, MASK
	STATUS = 1
	RETURN
GETDUC,
	STATUS = 9
	RETURN
END
