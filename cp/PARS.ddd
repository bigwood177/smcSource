;PARS.DBL
;
RECORD	BUFFER
		,A1024

RECORD	UPSDATA
	ORDER	,D6
	TRACK	,A20
	NPKG	,D2	;NUMBER OF PACKAGES
	PKGWGT	,A8
	TOTAMT	,D8
	TOTWGT	,A8
	UNAME	,A30
	UADD1	,A30
	UADD2	,A30
	UCITY	,A15
	USTAT	,A2
	UZIP	,A10
	UDATE	,D8		;TODAYS DATE (CCYYMMDD)
	VOID	,A1		;Y/N
	OLDORD	,D6		;ORDER # BEFORE CHANGE
		,A16		;FILLER
RECORD,X
	UPS_KEY	,A26

RECORD	LOG_START
		,A*,	'CNVUPS - STARTED: '
	LSDAT	,A11
		,A1
	LSTIM	,A8
RECORD	LOG_END
		,A*,	'CNVUPS - FINISHED: '
	LEDAT	,A11
		,A1
	LETIM	,A8

RECORD	WRKFIL
		,A*,	'WRK:\UPSLOG\'
	W_MON	,A3	;MONTH
	W_DAY	,D2	;DAY
		,A1,	'.'
	W_YR	,D2	;YEAR


RECORD	VARS
	TODAY	,D8		;CCYYMMDD
	SAVTRK	,A20
	CURTRK	,A20
	SAVORD	,D6
	OPNOK	,D1
	ALPHA	,A18
	ALP2	,A18
	DECML	,D18
	DP	,D2
	XDATE	,A9	;DD-MMM-YY
	INFILE	,A*,	'WRK:UPS_CSV_EXPORT.CSV'
	XTIME	,D6
	LN	,D4
	START	,D4,	1
	DIM	,D2,	50
	POS	,50D4
	LEN	,50D4
	TYPE	,50D2
	ITEMS	,D2
	END	,D4
	IX	,D2
	NUM	,D2
	I1	,D4
	I2	,D4

.PROC
	OPEN (15, I, 'TT:')
	DISPLAY (15, $SCR_CLR(SCREEN), 'PSRS')

	OPEN (1, A, 'SMC:UPSLOG.DDF')
	LSDAT = %DATE
	XCALL TIME (XTIME)
	LSTIM = XTIME,	'XX:XX:XX'
	WRITES (1, LOG_START)
	CLOSE 1

	OPEN (1, I, INFILE)
	OPEN (12, SU,'SMC:UPSDAT.ISM')
	XCALL RDAT8(TODAY)
LOOP,
	READS (1, BUFFER, EOF)
	LN = %TRIM(BUFFER)

	CLEAR UPSDATA

	XCALL S_PARSE(BUFFER(1,LN), START, DIM, POS, LEN, TYPE, ITEMS, END)
	NUM = 0
	FOR IX FROM 1 THRU ITEMS
		BEGIN
		I1 = POS(IX)
		I2 = POS(IX) + LEN(IX) - 1
		IF (TYPE(IX) .EQ. 8)
			BEGIN
			INCR NUM		;COUNT COMMAS
			NEXTLOOP
			END

		USING NUM SELECT
		(00),	CURTRK = BUFFER(I1,I2)
		(01),	TOTWGT = BUFFER(I1,I2)
		(04),	BEGIN
			ALPHA = BUFFER(I1,I2)
			CALL TOTAL_AMOUNT
			END
		(05),	XCALL ALPDC(BUFFER(I1,I2), NPKG)
		(06),	UNAME = BUFFER(I1,I2)
		(08),	UADD1 = BUFFER(I1,I2)
		(09),	UADD2 = BUFFER(I1,I2)
		(10),	UCITY = BUFFER(I1,I2)
		(11),	USTAT = BUFFER(I1,I2)
		(12),	UZIP = BUFFER(I1,I2)
		(13),	TRACK = BUFFER(I1,I2)
		(14),	BEGIN
			IF (BUFFER(I1,I2) .EQ. 'SAMPLE')
			THEN	ORDER = 999999
			ELSE	XCALL ALPDC(BUFFER(I1,I2), ORDER)
			END
		(15),	PKGWGT = BUFFER(I1,I2)
		(16),	VOID = BUFFER(I1,I2)
		ENDUSING
		END

	UDATE = TODAY		;TAG W/ TODAY'S DATE

	IF (CURTRK .NE. SAVTRK) 
	THEN	CALL NEWTRK
	ELSE	IF (ORDER.EQ.0) ORDER = SAVORD

	STORE (12, UPSDATA, UPS_KEY) [ERR=LOOP]

	GOTO LOOP

NEWTRK,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	SAVTRK = CURTRK
	SAVORD = ORDER
	RETURN
;----------------------------------------------------
	
TOTAL_AMOUNT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR TOTAMT
	DP = %INSTR(1, ALPHA, '.')
	IF (DP .EQ. 0)
	THEN	XCALL ALPDC(ALPHA, TOTAMT)
	ELSE	BEGIN
		ALP2(1,DP-1) = ALPHA(1,DP-1)
		ALP2(DP,18) = ALPHA(DP+1,18)
		XCALL ALPDC(ALP2, TOTAMT)
		END

	RETURN
;-------------------------------------------------

EOF,
	CLOSE 1
	CLOSE 12
	STOP
.END

.SUBROUTINE	ALPDC
	ALPHA	,A
	DECML	,D
.PROC

	CLEAR DECML
	ONERROR NOT_NUM
	DECML = ALPHA
NOT_NUM,
	OFFERROR
	RETURN
.END
