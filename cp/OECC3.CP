SUBROUTINE OECC3		;CC ORDER SUMMARY (no updates) 
;created 9-23-08
	ORDATA	,A	;ORDHDR
	RUNTOT	,D	;ORDER SUBTOTAL
	TAXTOT	,D	;ORDER TAXABLE TOTAL
	FREGHT	,D	;FREIGHT
	CTYPE	,A	;R = RECEIPT (FOR CASH INVOICE)


EXTERNAL FUNCTION
	R1	,D

RECORD	EJECT
	E_CHAR	,A1		;<ESC>
		,A4,	"&l0H"	;PAGE EJECT

RECORD	HP_PROG
	HP_ESC	,A1	;ESC
	HP_BOLD	,A4,	'(s#B'

RECORD	ORDHDR

	.INCLUDE 'DEF:RD044A.DEF'

RECORD	COPCTL
	.INCLUDE 'DEF:RD060A.DEF'

RECORD	ARTCDE		;AR TAX CODES
	.INCLUDE 'DEF:RD169A.DEF'
RECORD,X
	.INCLUDE 'DEF:RD169B.DEF'

;;;RECORD	CCINFO
;;;	.INCLUDE 'DEF:RD137A.DEF'

RECORD	CCTRAN
	.INCLUDE 'DEF:RD138A.def'

RECORD	TMPCUS
	.INCLUDE 'DEF:RD139A.DEF'

RECORD	CUST_KEY
	CK_CUST		,D6
	CK_NUMBR	,D16

RECORD	ALPH_KEY
	AK_ALPH		,A25
	AK_NUMBR	,D16

RECORD	DIG4_KEY
	DK_DIG4		,D4
	DK_NUMBR	,D16
	DK_TYPE		,A1

RECORD
		,A8,	'MVDARXXX'
		,A20,	'MASTER CARD         '
		,A20,	'VISA                '
		,A20,	'DISCOVER            '
		,A20,	'AMERICAN EXPRESS    '
		,A20,	'CASH                '
		,A20,	'INVALID             '
		,A20,	'INVALID             '
		,A20,	'INVALID             '
;                        12345678901234567890
RECORD,X
	CTYP	,8A1
	CDES	,8A20

RECORD	
	MMYY	,D4
RECORD,X
	MM	,D2
	YY	,D2

RECORD	CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD	PBUF
	PLINE	,A80

RECORD	CHANNEL
	CHN044	,D2,04
	CHN060	,D2,03
	CHN137	,D2,29
	CHN138	,D2
	CHN139	,D2
	CHN169	,D2

RECORD	CCKEY
	CCCUS	,D6
	CCNUM	,D16

RECORD	VARS
	x_numbr	,d16		;decrypted
	IS_CASH	,D1
	LNAM	,A25
	SNAM	,A12
	SINT	,A3
	SEXT	,D10
	OPNOK	,D1
	BADDAT	,D1
	I	,D5
	SAVIDX	,D4
	TODAY	,D6
	UPDATE	,D1
	DESC_OK	,D1
	F_KEY	,D3
	SELECT	,D1
	ERR	,D1
	SAVRFA	,A6
	WND1	,D4
	CCDAT	,D4
	CCTYP	,A1
	BADTAX	,D1
	TAXAMT	,D10
	TAX	,3D10
	TAXFRT	,D10
	XDAT1	,D4	;YYMM
	XDAT2	,D4	;YYMM
	XDATE	,D8
	ENTRY	,A30
	BLANKS	,A30
	CNGCTL	,D1
	INXCTL	,D1
	WHATNO	,D1
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	DELETE	,D1,3
	LOKCTL	,D1
	SRCCTL	,D1
	BSEND	,D6
	BSMID	,D6
	KEY	,A3
	SWITCH	,D1
	V	,D1
;
PROC
	V = 1

	CLEAR IS_CASH
	IF (%PASSED(CTYPE))
		BEGIN
		IF (CTYPE .EQ. 'R') IS_CASH = 1
		END

	XCALL RDATE(TODAY)
	ORDHDR = ORDATA
	XCALL ISIO (CHN044,ORDHDR,OORDNO,READ,LOKCTL)

	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF
		
DISPLA,	
	XCALL ISIO(CHN138,CCTRAN,OORDNO,READ,LOKCTL)
	IF (LOKCTL .NE. 0)
		BEGIN
		IF (IS_CASH)
		THEN	BEGIN
			CLEAR CCTRAN
			CT_ORDER = OORDNO
			CT_TYPE = 'R'		;CASH
			CT_EXDAT = TODAY(5,6) + 1
		;;;	XCALL ISIO(CHN138,CCTRAN,OORDNO,STORE,LOKCTL)
		;;;	XCALL ISIO(CHN138,CCTRAN,OORDNO,READ,LOKCTL)
			END
		ELSE	BEGIN
			XCALL MESAG("CAN'T FIND CCTRAN",1)
			GOTO ENDOFF
			END
		END

; save original credit card info...
	X_NUMBR = %R1 (CT_NUMBR, 'D')

	CALL PAINT

DISP_CC,
;;;	XCALL OUTPT (4,21,0,CT_TYPE,1)
;;;	CALL GET_CC_DESC
;;;	IF (DESC_OK) XCALL OUTPT(4,24,0,CDES(I),1)

	IF (IS_CASH) GOTO SKIP_CC

	ENTRY(1,19) = X_NUMBR,	'XXXX-XXXX-XXXX-XXXX'

	XCALL OUTPT (3,21,0,ENTRY(1,19),1)
	ENTRY(1,5) = CT_EXDAT	,'XX/XX'
	XCALL OUTPT (4,21,0,ENTRY(1,5),1)
	CALL CHKDAT

	ENTRY(1,4) = CT_CVV, 'ZZZX' [LEFT]
	XCALL OUTPT (5,21,0,ENTRY(1,4),1)

	ENTRY(1,6) = CT_ADDR, 'ZZZZZX' [LEFT]
	XCALL OUTPT (6,21,0,ENTRY(1,6) ,1)

	ENTRY(1,5) = CT_ZIP,	'XXXXX'
	XCALL OUTPT (7,21,0,ENTRY(1,5),1)

SKIP_CC,
	ENTRY(1,11) = RUNTOT,	'ZZZ,ZZX.XX-'
	XCALL OUTPT (9,21,0,ENTRY(1,11),1)

	XCALL OUTPT (10,21,0,OTAXFL,1)
	CALL CALC_TAX

	ENTRY(1,11) = FREGHT,	'ZZZ,ZZZ.XX-'
	XCALL OUTPT (11,21,0,ENTRY(1,11),1)

;;;ANYCNG,
;;;	ENTRY(1,11) = (RUNTOT + TAXAMT + FREGHT), 'ZZZ,ZZX.XX-'
;;;	XCALL OUTPT (12,21,0,ENTRY(1,11),1)
;;;	XCALL ANYCN(CNGCTL,WHATNO)
;;;	GOTO (PROCES,CNGBR),CNGCTL+1
CNGBR,
;;;	GOTO (NUMBR,EXDAT,CVV,BLD,ZIP,TAXCDE,TAX,FRT), WHATNO
;;;	GOTO ANYCNG

PROCES,
	XCALL OUTPT (24,1,0,'PRINT?',1)
	XCALL INPUT (24,11,01,01,'YN',ENTRY,INXCTL,1)
	IF (ENTRY(1,1) .EQ. 'Y') CALL PRT_CC

ENDOFF,
	CALL CLOSE
	XRETURN
;=========================================================

CHKDAT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; CHECK EXPIRATION DATE
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR BADDAT
	IF (IS_CASH) RETURN

	XDAT1(1,2) = CT_EXDAT(3,4)
	XDAT1(3,4) = CT_EXDAT(1,2)
	XDAT2(1,2) = TODAY(5,6)
	XDAT2(3,4) = TODAY(1,2)
	IF (XDAT2 .GT. XDAT1) 
		BEGIN
		XCALL MESAG('Card has Expired!',1)
		BADDAT = 1
		END
	RETURN
;--------------------------------------------


PRT_CC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL ASCII(27,HP_ESC)
	E_CHAR = HP_ESC

	XCALL SREP(OSLMAN,LNAM,SNAM,SINT,SEXT)

	OPEN(14,O,'SPL:OECC2.SPL')
	if (is_cash)
	then	pline = 'Cash Receipt for Order:'
	else	PLINE = 'Credit card info for Order:'
	PLINE(29,35) = OORDNO,	'XXXXXX'
	PLINE(40,47) = TODAY,	'XX/XX/XX'
	PLINE(50,61) = SNAM
	CALL PRINT

	PLINE = 'PO'
	PLINE(5,14) = OPONO
	PLINE(16,18) = 'Job'
	PLINE(20,29) = OJOBNO
	CALL PRINT

	PLINE(1,6) = OCUSNO,	'ZZZZZX'
	PLINE(8,38) = OCUSNM
	CALL PRINT

	if (is_cash) goto skip_pcc
	PLINE = 'Credit Card #'
	PLINE(17,36) = X_NUMBR,	'XXXX-XXXX-XXXX-XXXX'
;;;	PLINE(17,36) = CT_NUMBR,	'XXXX-XXXX-XXXX-XXXX'
	CALL PRINT
;;;	PLINE = 'Type'
;;;	PLINE(17,37) = CDES(SAVIDX)
;;;	CALL PRINT

	PLINE = 'Expiration Date'
	PLINE(17,21) = CT_EXDAT,		'XX/XX'
	CALL PRINT

	PLINE = 'Security Code'
	PLINE (17,20) = CT_CVV,	'ZZZX'
	CALL PRINT

	PLINE = 'Billing Address'
	PLINE (17,22) = CT_ADDR,	'ZZZZZX'
	CALL PRINT

	PLINE = 'Zip Code'
	PLINE (17,22) = CT_ZIP,	'XXXXX'
	CALL PRINT

skip_pcc,
	PLINE = 'Order Sub Total'
	PLINE(21,31) = RUNTOT,		'ZZZ,ZZX.XX-'
	CALL PRINT
	PLINE = 'Tax Code:'
	PLINE(11,14) = OTAXFL
	PLINE(16,46) = ARTDSC
	CALL PRINT
	PLINE = 'Tax'
	PLINE(21,31) = TAXAMT,	'ZZZ,ZZX.XX-'
	CALL PRINT
	PLINE = 'Shipping & Handling'
	PLINE(21,31) = FREGHT,	'ZZZ,ZZX.XX-'
	CALL PRINT

	HP_BOLD(3,3) = '3'	;BOLD
	PLINE = HP_PROG
	CALL PRINT
	PLINE = 'Order Total'
	PLINE(21,31) = (RUNTOT+TAXAMT+FREGHT),	'ZZZ,ZZX.XX-'
	CALL PRINT
	HP_BOLD(3,3) = '0'	;MEDIUM
	PLINE = HP_PROG
	CALL PRINT
	PLINE = 'Auth # ___________________________'
	CALL PRINT

	IF (OCUSNO .EQ. 10) CALL TMP_CUS

	WRITES(14,EJECT)
	CLOSE 14
	LPQUE ('SPL:OECC2.SPL')
	RETURN
TMP_CUS,
	SWITCH = 5
	XCALL FILES (39,'SI',139,SWITCH)
	LOKCTL = 1
	XCALL ISIO (39,TMPCUS,OORDNO,READ,LOKCTL)
	IF (LOKCTL .NE. 0) GOTO NO_TMP_CUS

	CALL PRINT
	PLINE = T_NAME
	CALL PRINT
	PLINE = T_ADD1
	CALL PRINT
	PLINE = T_ADD2
	CALL PRINT
	PLINE = T_CITY
	PLINE(17,18) = T_STATE
	PLINE(20,29) = T_ZIP
	CALL PRINT
NO_TMP_CUS,
	CLOSE 39
	RETURN
;------------------------------------------------------
PRINT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	WRITES(14,PBUF)
	CLEAR PLINE
	WRITES(14,PBUF)
	RETURN
;------------------------------------------------------

PAINT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL OUTPT (2,1,2,' ',1)

	XCALL OUTPT( 3,5,0,'1. NUMBER',1)
	XCALL OUTPT( 4,5,0,'2. EXP DATE',1)
	XCALL OUTPT( 5,5,0,'3. SEC CODE',1)
	XCALL OUTPT( 6,5,0,'4. BILLING #',1)
	XCALL OUTPT( 7,5,0,'5. ZIP CODE',1)

	XCALL OUTPT( 9,5,0,'   SUB-TOTAL',1)
	XCALL OUTPT(10,5,0,'6. TAX CODE',1)
	XCALL OUTPT(11,5,0,'7. TAX AMOUNT',1)
	XCALL OUTPT(12,5,0,'8. FREIGHT',1)
	XCALL OUTPT(13,5,0,'   ORDER TOTAL',1)

	RETURN
;-------------------------------------------------------

CALC_TAX,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR BADTAX 
	SRCCTL = 2
	XCALL SERCH (CHN169,ARTCDE,OTAXFL,1,3,BSEND,BSMID,SRCCTL,4,4,9,0,0,0,0)
	IF (SRCCTL.EQ.0) 
		BEGIN
		XCALL OUTPT (8,30,0,ARTDSC,1)	;;;
		USING OTAXFL(1,1) SELECT
		('W'),	TAXFRT = OFRGHT			;WISC
		('N'),	TAXFRT = OFRGHT			;NEB
		('S'),	TAXFRT = OFRGHT			;9-15-10
		(),	TAXFRT =
		ENDUSING

		IF (OTAXFL(1,2) .EQ. 'MN') TAXFRT = OFRGHT	;SSQ 1-9-02
		END
SKP1,
	IF (SRCCTL.OR.OTAXFL.EQ.'   ')
		BEGIN
		XCALL MESAG('INVALID TAX CODE',1)
		BADTAX = 1
		RETURN
		END	

	TAX(1) = ((TAXTOT+TAXFRT) * ARTPRT(1) / 100) # 3
	TAX(2) = ((TAXTOT+TAXFRT) * ARTPRT(2) / 100) # 3
	TAX(3) = ((TAXTOT+TAXFRT) * ARTPRT(3) / 100) # 3

	TAXAMT = TAX(1) + TAX(2) + TAX(3)

	ENTRY(1,11) = TAXAMT,	'ZZZ,ZZX.XX-'
	XCALL OUTPT (13,21,0,ENTRY(1,11),1)
	RETURN
;-------------------------------------------------------

;;GET_CC_DESC,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	CLEAR DESC_OK
;;;
;;;	FOR I FROM 1 THRU 8
;;;		BEGIN
;;;		IF (CTYP(I).EQ.'X')EXITLOOP
;;;		IF (CTYP(I).EQ.CT_TYPE) 
;;;			BEGIN
;;;			DESC_OK = 1
;;;			SAVIDX = I
;;;			EXITLOOP
;;;			END
;;;		END
;;;	RETURN
;-------------------------------------------------------

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK
	SWITCH = 5
	XCALL FILES (33,'SI',138,SWITCH)	;CCTRAN
	IF (SWITCH .EQ. 9) RETURN
	CHN138 = 33

	XCALL FILES (34,'I',169,SWITCH)		;ARTCDE
	IF(SWITCH .EQ. 9) RETURN
	CHN169 = 34

	XCALL IO (CHN169,ARTCDE,1,READ,LOKCTL)
	IF (LOKCTL .NE. 0) RETURN
	BSEND = ORG169
	OPNOK = 1
	RETURN
;-------------------------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (CHN138) CLOSE CHN138
	IF (CHN169) CLOSE CHN169
	RETURN
;-------------------------------------------------------

INPUT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL INPUT(ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)

	RETURN
;------------------------------------


