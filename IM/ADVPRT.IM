;  ADVPRT / IM 
;
;
;		::PCPYIM.DEF::
;*****************************************************************************
;		INVENTORY MANAGEMENT  
;
;		RELEASED: AUGUST 1, 1984 (d70s10)
;*****************************************************************************
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984
;		MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;		PROGRAM TO PRINT REORDERING ADVICE REPORT BY VENDOR
;		FOR ENTIRE FILE OR FOR ONE LOCATION
;
;	SELECTION DATA FROM SUBROUTINE ADVEN:
;
;		ONLY ONE VENDOR CAN BE SELECTED
;
;		IF KLOC = DEFAULT LOCATION, CALCULATIONS WILL BE BASED ON THE
;		   SUM OF ALL LOCATIONS - AND REPORT WILL PRINT THIS LOC ONLY
;
;		IF KLOC = 'ALL', CALCULATIONS WILL BE BASED ON THE SUM OF ALL
;		   LOCATIONS - BUT THE REPORT WILL PRINT LOCATION DETAIL
;
;		IF KLOC = ONE LOC, ONLY THIS LOCATION WILL PRINT
;
;		AVFLAG IS SET IF QTY AVAILABLE SHOULD INCLUDE QTY ON ORDER
;
;		MPFLAG IS SET FOR ITEMS PURCHASED(P), MANUFACTURED(M) OR
;		   BOTH(B) TO BE INCLUDED IN REPORT
;
;
RECORD
	,A64,'THIS MATERIAL CONTAINS THE VALUABLE PROPERTIES AND TRADE SECRETS'
	,A62,'OF MCBA, EMBODYING CONFIDENTIAL INFORMATION AND IDEAS, NO PART'
	,A56,'OF WHICH MAY BE USED AND/OR DISCLOSED WITHOUT MCBAs DULY'
	,A55,'AUTHORIZED LICENSE AGREEMENT AND/OR WRITTEN PERMISSION.'
	,A61,'COPYRIGHT (C) MCBA, AN UNPUBLISHED WORK. ALL RIGHTS RESERVED.'

RECORD ITMMAS		;
		.INCLUDE 'DEF:RD041A.DEF'
RECORD DUMINV ,X		;
		.INCLUDE 'DEF:RD041B.DEF'
RECORD ITMIDX		;
		.INCLUDE 'DEF:RD042A.DEF'
RECORD	SELINV		;
		.INCLUDE 'DEF:RD056A.DEF'
RECORD	SPECS
	KVEND	,A4
	KLOC	,A2
	KPRCNT	,D2
	KNUMB	,D3
	VNDOPT	,D1
	AVFLAG	,D1
	MPFLAG	,A1
RECORD  LEGND1
		,A51,	'FOR ITEMS MANUFACTURED(M), PURCHASED(P), OR BOTH(B)'
		,A2
	MPBFLG	,A1
		,A5
	STAT	,A4
		,A1
		,A30,	'FROM REORDER LEVEL AT LOCATION'
		,A1
	LOCAT	,A3
		,A2
	LOCNOT	,A18
RECORD  LEGND2
		,A40,	'QUANTITY AVAILABLE INCLUDES ON-ORDER ?  '
	AVFLG	,A1
		,A19
		,A29,	'MULTIPLE VENDORS INCLUDED ?  '
	VNDFLG	,A1
		,A16
		,A26,	'R = REORDER   O = STOCKOUT'
RECORD	HDR1
		,A7
		,A11,	'ITEM NUMBER'
		,A13
		,A3,	'PRD'
		,A8
		,A3,	'QTY'
		,A6
		,A3,	'QTY'
		,A5
		,A3,	'QTY'
		,A4
		,A5,	'REORD'
		,A3
		,A5,	'RECOM'
		,A2
		,A5,	'SFSTK'
		,A4
		,A3,	'EOQ'
		,A3
		,A5,	'USAGE'
		,A3
		,A6,	'WEIGHT'
		,A3
		,A9,	'LAST COST'
		,A6
		,A4,	'REOR'
RECORD	HDR2
		,A4,	'VEND'
		,A3
		,A16,	'ITEM DESCRIPTION'
		,A8
		,A3,	'CAT'
		,A2
		,A3,	'LOC'
		,A2
		,A5,	'ONHND'
		,A4
		,A5,	'ALLOC'
		,A3
		,A5,	'ONORD'
		,A3
		,A5,	'LEVEL'
		,A3
		,A5,	'ORDER'
		,A3
		,A4,	'LDTM'
		,A4
		,A3,	'MOQ'
		,A2
		,A6,	'SLDMTD'
		,A3
		,A6,	'SLDYTD'
		,A4
		,A8,	'AVG COST'
		,A1
		,A4,	'P-UM'
		,A1
		,A4,	'MULT'
RECORD
	SPLFIL	,A14
	V	,D1
	SWITCH	,D1,	1
	BLANKS	,A2,	'  '
	PTR	,D2,	01
	CTR	,D2
	JUSTIF	,D1
	PLINE	,A132
	MASK	,A9,	'ZZZZ,ZZX-'
	MASK2D	,A10,	'ZZZ,ZZZ.XX'
	MASKT	,A12,	'ZZZ,ZZZ,ZZX-'
	MASKP	,A8,	'ZZZZ,ZZX'
	LNFEED	,D2
	LINCNT	,D2,	60
	LOKCTL	,D1
	LPSW	,D2
	LPARG	,D1
	MSGSWT	,D1
	PGCNT	,D3
	TITLE	,A34,	'REORDERING ADVICE REPORT BY VENDOR'
	DEFALT	,A2
	LOCTNS	,D2					;LOCATIONS MAXIMUM ARRAY
	RPTNUM	,D3
	PRTTYP	,A1
	RECODR	,D6
	SAVNUM	,D5
	TQTYOH	,D7
	TQTYCM	,D7
	TQTYOO	,D7
	READ	,D1	,0
	WRITE	,D1	,1
PROC (1)
	XCALL TERID (V)
	XCALL OUTPT (1,1,2,'PRINT REORDERING ADVICE REPORT BY VENDOR',V)
	XCALL OUTPT (2,1,1,'PRINT OUT',1)
BEGIN,
	SWITCH = 1
	XCALL FILES (1,'I',41,SWITCH)		;FILE #41 -- ITMMAS FILE
	IF (SWITCH.EQ.9) GO TO CLOSE
	SWITCH = 1
	XCALL FILES (2,'I',42,SWITCH)
	IF (SWITCH.EQ.9) GO TO CLOSE1
	SWITCH = 5
	XCALL FILES (3,'I',56,SWITCH)		;FILE #56 -- SELINV FILE
	IF (SWITCH.EQ.9) GO TO CLOSE2
	LOKCTL = 1
	XCALL IO (1,DUMINV,1,READ,LOKCTL)
	LOCTNS = NUMLOC
	DEFALT = DFLTLO
	JUSTIF = JSTIFY
	MSGSWT = 1
	XCALL SNMSG (SPECS,MSGSWT)
	IF (SWITCH.EQ.9) GOTO NONE
	SPLFIL(5,6) = 'CQ'
	LPSW = 1
	XCALL LPON (LPSW,SPLFIL)
	IF (LPSW.EQ.0) GO TO CLOSE3
	LPARG = 2
	IF (LPSW.EQ.2) LPARG = 4
	XCALL WATE (LPARG,V)
FLAGS,
	LOCAT = KLOC
	IF (KLOC.EQ.'  ') LOCAT = 'ALL'
	IF (KLOC.EQ.DEFALT) LOCNOT = '(DEFAULT LOCATION)'
	VNDFLG = 'N'
	IF (VNDOPT.EQ.1) VNDFLG = 'Y'
	AVFLG = 'N'
	IF (AVFLAG.EQ.1) AVFLG = 'Y'
	MPBFLG = MPFLAG
STATS,
	IF (KPRCNT.NE.0) GO TO PCENT
	STAT = KNUMB, '-ZZX'
	GO TO NXTITM
PCENT,
	STAT(1,3) = KPRCNT, '-ZX'
	STAT(4,4) = '%'
NXTITM,
	LOKCTL = 1
	XCALL IOS (3,SELINV,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO END
TEST,
	IF (SELINV.EQ.']]]]]]') GO TO END
	IF (SEL041.EQ.0) GO TO NXTITM
	LOKCTL = 1
	XCALL IO (2,ITMIDX,SEL041,READ,LOKCTL)
	LOKCTL = 1
	XCALL IO (1,ITMMAS,IRC041,READ,LOKCTL)
	CALL FNDLOC
	CTR = PTR
	IF (PTR.EQ.0) GO TO BADRCD			;NO LOCATION FOUND
	IF (KLOC.EQ.DEFALT.OR.KLOC.EQ.'  ') CALL DEFLOC
							;SUMS ALL LOCATIONS
LINE1,
	PLINE (1,4) = KVEND
	IF (SMULTV.EQ.9) PLINE (1,4) = '9999'
	XCALL LEFTJ (PLINE(1,4),4)
	PLINE (8,22) = ITEMNO
	IF (JUSTIF) XCALL LEFTJ (PLINE(8,22),15)
	PLINE (33,34) = PRDCAT
	RECODR = RECMIN
	IF (AVFLAG.EQ.2 .AND. REOLVL(PTR).GT.(QTYOH-QTYCM))
&	RECODR = RECMIN + REOLVL (PTR) - (QTYOH-QTYCM)
	IF (AVFLAG.EQ.1 .AND. REOLVL(PTR).GT.(QTYOH-QTYCM+QTYOO))
&	RECODR = RECMIN + REOLVL (PTR) - (QTYOH-QTYCM+QTYOO)
	PLINE (73,79) = RECODR,MASKP
	PLINE (81,86) = SAFSTK,MASKP
	PLINE (88,93) = EOQ,MASKP
	PLINE (95,101) = AVGUSE,MASKP
	PLINE (103,110) = WEIGHT,MASK2D
	PLINE (112,121) = LSTCST,MASK2D
	PLINE (130,130) = R
	PLINE (131,131) = O
	CALL PRLOC
LINE2,
	PLINE (5,34) = DESCR
	PLINE (83,86) = LEADTM,'ZZ.X'
	PLINE (88,93) = MINORD,MASKP
	PLINE (95,101) = QTYMTD,MASKP
	PLINE (104,110) = QTYYTD,MASKP
	PLINE (112,122) = AVGCST,'ZZZ,ZZZ.XXX'
	PLINE (125,126) = PUOFM
	PLINE (129,132) = ORDMLT,'ZZZX'
	IF (PTR.GE.LOCTNS .OR. KLOC.NE.BLANKS) GO TO NOMORE
	INCR PTR
	IF (LOC(PTR).EQ.'  ') GO TO NOMORE
	CALL PRLOC
	GO TO PRNTED
NOMORE,
	CALL PRINT
PRNTED,
	IF (KLOC.EQ.DEFALT) GO TO LINET
	IF (KLOC.EQ.BLANKS) GO TO LINEX
	PTR = 1
	XCALL LINFD (1)
	INCR LINCNT
	GO TO NXTITM
PRLOC,
	PLINE (37,38) = KLOC
	IF (KLOC.EQ.' '.OR.KLOC.EQ.DEFALT) PLINE (37,38) = LOC(PTR)
	PLINE (40,47) = QTYONH(PTR),MASK
	PLINE (49,56) = QTYCOM(PTR),MASK
	PLINE (57,64) = QTYONO(PTR),MASK
	PLINE (66,71) = REOLVL(PTR),MASKP
	CALL PRINT
	TQTYOH = TQTYOH + QTYONH (PTR)
	TQTYCM = TQTYCM + QTYCOM (PTR)
	IF (LOC(PTR).EQ.DEFALT) TQTYOO = QTYONO(PTR)
	RETURN
LINEX,
	INCR PTR
	IF (PTR.GT.LOCTNS) GO TO LINET
	IF (LOC(PTR).EQ.'  ') GO TO LINET
	CALL PRLOC
	GO TO LINEX
LINET,
	PLINE (24,34) = 'ITEM TOTAL:'
	PLINE (39,47) = TQTYOH,MASK
	PLINE (48,56) = TQTYCM,MASK
	CALL PRINT
	XCALL LINFD (2)
	LINCNT = LINCNT + 2
	PTR = 1
	TQTYOH = 0
	TQTYCM = 0
	TQTYOO = 0
	SAVNUM = SEL041
	GO TO NXTITM
DEFLOC,
	CTR = 0
DEFLC1,
	INCR CTR
	IF (LOC(CTR).EQ.'  '.OR.CTR.GT.LOCTNS) GO TO NODEF
	IF (LOC(CTR).EQ.DEFALT) RETURN
	GO TO DEFLC1
NODEF,
	CTR = PTR
	RETURN
BADRCD,
	XCALL MESAG ('LOCATION NOT FOUND',1)
	GO TO NXTITM
BADLOC,
	XCALL MESAG ('LOCATION NOT FOUND',1)
	GO TO LINEX
FNDLOC,
	PTR = 0
NXTLOC,
	INCR PTR
	IF (LOC(PTR).EQ.BLANKS) GO TO NOFIND
	IF (LOC(PTR).EQ.SRTLOC) RETURN
	IF (KLOC.EQ.DEFALT.AND.LOC(PTR).EQ.DEFALT) RETURN
	IF (PTR.LT.LOCTNS) GO TO NXTLOC
NOFIND,
	PTR = 0
	RETURN
PRINT,
	XCALL LPOUT (LINCNT,PGCNT,PLINE,TITLE,HDR1,HDR2,
&	'NO HDR',LEGND1,LEGND2,'NO LEGEND',0,1,132,1,LPSW,RPTNUM,PRTTYP)
	RETURN
NONE,
	XCALL MESAG ('DATA SPECS NOT RECEIVED',1)
CLOSE3,
	XCALL FILES (3,'I',56,7)
CLOSE2,
	XCALL FILES (2,'I',42,4)
CLOSE1,
	XCALL FILES (1,'I',41,4)
CLOSE,
	XCALL PGCHN ('IM:ADVICE',1)
END,
	XCALL FILES (1,'I',41,4)
	XCALL FILES (2,'I',42,4)
	XCALL FILES (3,'I',56,7)	;DELETE SELINV FILE WHEN DONE
	XCALL LPOFF (LPSW,SPLFIL,PGCNT)
	MSGSWT = 4
	XCALL SNMSG (BLANKS,MSGSWT)
	XCALL PGCHN ('IM:ADVICE',1)

END
