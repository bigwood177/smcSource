;  TAGMNT / IM 
;
;
;		::PCPYIM.DEF::
;*****************************************************************************
;		INVENTORY MANAGEMENT  
;
;		RELEASED: AUGUST 1, 1984 (d70s10)
;*****************************************************************************
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984
;		MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;		PROGRAM FOR STANDARD TRX MAINTENANCE TO THE
;		INVTAG FILE (INVENTORY COUNT TAGS)
;
RECORD
	,A64,'THIS MATERIAL CONTAINS THE VALUABLE PROPERTIES AND TRADE SECRETS'
	,A62,'OF MCBA, EMBODYING CONFIDENTIAL INFORMATION AND IDEAS, NO PART'
	,A56,'OF WHICH MAY BE USED AND/OR DISCLOSED WITHOUT MCBAs DULY'
	,A55,'AUTHORIZED LICENSE AGREEMENT AND/OR WRITTEN PERMISSION.'
	,A61,'COPYRIGHT (C) MCBA, AN UNPUBLISHED WORK. ALL RIGHTS RESERVED.'
RECORD INVTAG		;
		.INCLUDE 'DEF:RD040A.DEF'
RECORD DUMTAG		;
		.INCLUDE 'DEF:RD040B.DEF'
RECORD DUMREC		;
		.INCLUDE 'DEF:RD040D.DEF'
RECORD ITMMAS		;
		.INCLUDE 'DEF:RD041A.DEF'
RECORD DUMINV		;
		.INCLUDE 'DEF:RD041B.DEF'
RECORD ITMIDX		;
		.INCLUDE 'DEF:RD042A.DEF'
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD SNDMSG					;USED FOR TAGS SORT PROGRAM
		,A3	,'IM:'
	SNDPGM	,A6
	SNDREC	,D5
	SNDORG	,D5
RECORD NXTMSG
		,A3	,'IM:'
	MSGPRG	,A6
RECORD
	V	,D1
	SWITCH	,D1
	BADOPN	,D1
	MENUID	,A30,	'PHYSICAL COUNT ENTRY & EDITING'
	BSMID	,D5
	BSEND	,D5
	WHATNO	,D2
	CNGCTL	,D1
	INXCTL	,D1
	SRCCTL	,D1
	SELECT	,D1
	COUNT	,D2
	DECMAL	,D18
	DECKEY	,D6
	ENTRY	,A15
	DUMMY	,D5
	KEY	,A15
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1
	PSTPGM	,A10
	MSGSWT	,D1
	WRKITM	,A15
PROC (1)
	XCALL TERID (V)
	CALL OPENS				;OPEN ALL NECESSARY FILES
	IF (BADOPN) XCALL PGCHN ('IM:IMMENU',1)
	XCALL OUTPT (1,1,2,MENUID,V)
MENU,
	XCALL OUTPT (2,1,1,'\',1)
	XCALL TMENU (MENUID,SELECT,V)		;STANDARD TRX MENU
	GO TO (ADD,CHANGE,DELETE,PRINT,POST), SELECT
END,
	XCALL WATE (3,V)
	CALL RDTCTL				;READ TAGS FILE CONTROL RECORD
	IF (REC040-ORG040.EQ.0.AND.DEL040.LE.200) GO TO NOORG
						;NO NEED TO RE-ORGANIZE FILE
ORG,
	CALL CLOSES				;CLOSE ALL FILES
	SWITCH = 2				;PROTECT
	XCALL FILES (1,'I',40,SWITCH)		;FILE #40 - INVTAG
	IF (SWITCH.NE.9) GO TO ORG2		;IF PROTECT SUCCESSFUL,
						;SORT FILE.
	IF (DEL040.LE.200) GO TO SKPORG		;FILE IS IN NEED OF SORTING,
						;OTHER USERS STILL HAVE IT.
	XCALL MESAG
&	('UNABLE TO GAIN EXCLUSIVE ACCESS TO INVTAG FILE - EXITING',2)
	XCALL PGCHN ('IM:IMMENU',1)
ORG2,
	XCALL WATE (4,V)			;PROCESSING MESSAGE
	MSGPRG = 'IMMENU'
	SNDPGM = 'UNPRTG'
	IF (DEL040.GT.200) SNDPGM = 'ORGTAG'
	SNDREC = REC040
	SNDORG = ORG040
	MSGSWT = 5
	XCALL SNMSG (SNDMSG,MSGSWT)
	IF (SNDPGM.EQ.'ORGTAG') XCALL PGCHN ('IM:SRTTAG',0)
	MSGSWT = 2
	XCALL SNMSG (NXTMSG,MSGSWT)
	XCALL PGCHN ('IM:SRTTAG',0)
						;THE INVTAG FILE
NOORG,
	CALL CLOSES				;CLOSE ALL FILES
SKPORG,
	XCALL PGCHN ('IM:IMMENU',1)			;RETURN TO MAIN MENU
;-------------------------------------------------------------------------------
ADD,
	CALL DSPTIT				;DISPLAY SCREEN DATA TITLES
	CALL GETKEY
	IF (INXCTL.EQ.2) GO TO MENU		;"END" SELECTED
	GO TO (ADDOK), SRCCTL			;NO RECORD FOUND
	XCALL MESAG ('TAG ALREADY EXISTS',1)
	GO TO ADD				;TRY AGAIN
ADDOK,
	INVTAG =
	TAGNO = KEY(1,6)
	CALL EDIT				;ACCEPT & EDIT RECORD FIELDS
	GO TO (ADD), INXCTL			;ABORTED RECORD?
	BSMID = ORG040
	KEY =
	KEY(1,6) = DECKEY, 'XXXXXX'
	SRCCTL = 2				;CHECK IF ALREADY ADDED
	XCALL SERCH (1,DUMREC,KEY,1,6,ORG040,BSMID,SRCCTL,5,7,12,0,0,0,0)
	IF (SRCCTL) GO TO ADCHEK		;NOT FOUND, SO IT'S OK TO ADD
	XCALL MESAG ('RECORD ALREADY ADDED',2)
	GO TO ADD
ADCHEK,
	CALL RDTCTL				;READ "INVTAG" CONTROL RECORD
	IF (REC040+1.GE.MAX040) GO TO FULL
	INCR REC040
	LOKCTL = 1
	XCALL IO (1,DUMTAG,1,WRITE,LOKCTL)	;WRITE NEW CONTROL RECORD
	LOKCTL = 1
	XCALL IO (1,INVTAG,REC040,WRITE,LOKCTL)	;WRITE NEW DATA RECORD
	INVTAG =
	GO TO ADD				;GO DO ANOTHER
FULL,
	XCALL MESAG ('INVTAG FILE FULL - USE "XPAND"',1)
	GO TO ADD
;-------------------------------------------------------------------------------
CHANGE,
	CALL DSPTIT				;DISPLAY SCREEN DATA TITLES
	CALL GETKEY
	IF (INXCTL.EQ.2) GO TO MENU		;"END" TYPED
	GO TO (BADCNG), SRCCTL			;RECORD NOT FOUND
	CALL DSPREC				;DISPLAY DATA FROM RECORD
						;JUST FOUND
	CNGCTL = 1
	CALL EDIT				;EDIT DATA RECORD FIELDS
	GO TO (CHANGE), INXCTL			;RECORD ABORTED?
	XCALL WATE (3,V)
	LOKCTL = 1
	XCALL IO (1,INVTAG,BSMID,WRITE,LOKCTL)	;RE-WRITE THE DATA RECORD
	INVTAG =
	GO TO CHANGE				;GO DO ANOTHER
BADCNG,
	XCALL MESAG ('TAG NOT ON FILE',1)
	GO TO CHANGE
;-------------------------------------------------------------------------------
DELETE,
	CALL DSPTIT				;DISPLAY SCREEN TITLES
	CALL GETKEY
	IF (INXCTL.EQ.2) GO TO MENU		;"END" TYPED
	GO TO (BADDEL), SRCCTL			;RECORD NOT FOUND
	CALL DSPREC				;DISPLAY DATA FROM RECORD
						;JUST FOUND
	XCALL OUTPT (12,1,0,'RIGHT RECORD ?',V)
	CTL = '12,17,01,01,YN'
	CALL INPUT
	IF (ENTRY(1,1).EQ.'N') GO TO DELETE	;NO DELETION
	XCALL WATE (3,V)
	CALL RDTCTL				;READ "INVTAG" CONTROL RECORD
	TAGITM = ']]]DEL'		;FLAG RECORD FOR DELETION
	INCR DEL040			;INCREMENT DELETED RECORD COUNT
	LOKCTL = 1
	XCALL IO (1,DUMTAG,1,WRITE,LOKCTL)
				;RE-WRITE UPDATED CONTROL RECORD
	LOKCTL = 1
	XCALL IO (1,INVTAG,BSMID,WRITE,LOKCTL)
				;RE-WRITE "DELETED" RECORD
	INVTAG =
	XCALL MESAG ('RECORD DELETED',2)
	GO TO DELETE				;GO DO ANOTHER
BADDEL,
	XCALL MESAG ('TAG NOT ON FILE',1)
	GO TO DELETE				;TRY IT AGAIN
;-------------------------------------------------------------------------------
PRINT,
	XCALL WATE (4,V)
	CALL CLOSES				;CLOSE ALL FILES
	IF (ORG040.EQ.REC040) XCALL PGCHN ('IM:TAGEDT',1)
					;FILE IS SORTED, SO GO DIRECTLY
						;TO PRINT PROGRAM
	SWITCH = 3				;PROTECT WITHOUT OPENING
	XCALL FILES (1,'I',40,SWITCH)		;FILE #40 - INVTAG
	IF (SWITCH.NE.9) GO TO PRINT2		;FILE IS NOW PROTECTED
	XCALL PGCHN ('IM:IMMENU',1)		;HAVE OTHER USERS END OFF
PRINT2,
	XCALL OUTPT (2,1,1,'SORT INTO TAG NUMBER SEQUENCE',1)
	SNDPGM = 'UNPRTG'
	MSGPRG = 'TAGEDT'
	MSGSWT = 5
	XCALL SNMSG (SNDMSG,MSGSWT)
	MSGSWT = 2
	XCALL SNMSG (NXTMSG,MSGSWT)
	XCALL PGCHN ('IM:SRTTAG',0)
						;FILE NEEDS SORTING, USE
						;INTERMEDIATE SORT ROUTINE
;-------------------------------------------------------------------------------
POST,
	XCALL WATE (4,V)
	CALL CLOSES				;CLOSE ALL FILES
	IF (REC040.LE.1) GO TO NOPOST
	SWITCH = 3				;PROTECT WITHOUT OPENING
	XCALL FILES (1,'I',40,SWITCH)		;FILE #40 - INVTAG
	IF (SWITCH.NE.9) GO TO POST2		;FILE #40 IS PROTECTED
	XCALL MESAG
&	 ('UNABLE TO GAIN EXCLUSIVE ACCESS TO INVTAG FILE - EXITING',1)
	XCALL PGCHN ('IM:IMMENU',1)
POST2,
	SWITCH = 1
	XCALL FILES (2,'I',42,SWITCH)		;FILE #42 - ITMIDX
	IF (SWITCH.NE.9) GO TO POST3
	XCALL FILES (1,'I',40,4)
	XCALL PGCHN ('IM:IMMENU',1)
POST3,
	SWITCH = 3
	XCALL FILES (3,'I',41,SWITCH)		;FILE # 41 - ITMMAS PROTECT
	IF (SWITCH.NE.9) GO TO POST4
	XCALL FILES (1,'I',40,4)
	XCALL FILES (2,'I',42,4)
	XCALL PGCHN ('IM:IMMENU',1)
POST4,
	XCALL OUTPT (2,1,1,'SORT INTO ITEM # SEQUENCE',1)
	MSGSWT = 5
	SNDPGM = 'TAGAUD'
	SNDREC = REC040
	SNDORG = 1
	XCALL SNMSG (SNDMSG,MSGSWT)		;SORT IS TO CHAIN TO AUDIT
						;REPORT
	XCALL PGCHN ('IM:STTGBI',0)		;CHAIN TO SORT ROUTINE
NOPOST,
	XCALL MESAG ('THERE ARE NO TRANSACTIONS TO POST',1)
	XCALL PGCHN ('IM:IMMENU',1)
;--------------------------------------------------------------------------
GETKEY,
	CTL = '04,45,06,01,#E'
	CALL INPUT
	GO TO (GETKEY,GETOUT), INXCTL
	DECKEY = ENTRY
	IF (DECKEY.LE.0) GO TO GETKEY		;NEVER ALLOW ZERO OR NEGATIVE
	KEY =
	KEY (1,6) = DECKEY, 'XXXXXX'
	CALL RDTCTL				;RETRIEVE INVTAG CONTROL RECORD
	SRCCTL = 2
	XCALL SERCH (1,DUMREC,KEY,1,6,ORG040,BSMID,SRCCTL,1,7,12,0,0,0,0)
	INVTAG = DUMREC
GETOUT,
	RETURN
;-------------------------------------------------------------------------------
EDIT,
ITEM,
	IF (SELECT.EQ.2.AND.CNGCTL.EQ.1) GO TO ANYCNG
	CTL = '05,45,15,01,A '
	CALL INPUT
	IF (JSTIFY) XCALL FRMAT (ENTRY,15)
	XCALL OUTPT (5,45,0,ENTRY(1,15),V)
	GO TO (EDTOUT), INXCTL				;RECORD ABORTED?
	KEY = ENTRY
	SRCCTL = 0
	XCALL SERCH (2,ITMIDX,KEY,1,15,ORG041,BSMID,SRCCTL,1,16,20,0,0,0,0)
	GO TO (ITEM2), SRCCTL				;RECORD NOT FOUND
	IF (IRC041.EQ.0) GO TO ITEM2			;DELETED RECORD
	LOKCTL = 1
	XCALL IO (3,ITMMAS,IRC041,READ,LOKCTL)
	XCALL OUTPT (6,45,0,DESCR,V)
	XCALL OUTPT (8,55,0,'(',V)
	XCALL OUTPT (0,0,0,SUOFM,V)
	XCALL OUTPT (0,0,0,')',V)
					;DISPLAY UNIT-OF-MEASURE
	TAGITM = KEY (1,15)
	GO TO LOCATE
ITEM2,
	XCALL MESAG ('INVENTORY ITEM NOT FOUND',1)
	XCALL OUTPT (6,45,1,'\',V)
	XCALL OUTPT (8,55,1,'\',V)
	GO TO ITEM					;TRY IT AGAIN
LOCATE,
	CTL = '07,45,02,00,A '
	CALL INPUT
	GO TO (EDTOUT), INXCTL				;RECORD ABORTED?
	IF (ENTRY(1,2).EQ.'  ') ENTRY(1,2) = DFLTLO
							;GET DEFAULT LOCATION
	TLOC = ENTRY (1,2)
	XCALL OUTPT (ROW,COL,0,TLOC,V)
	COUNT =
LOCAT1,
	INCR COUNT
	IF (COUNT.LE.NUMLOC.AND.LOC(COUNT).NE.ENTRY(1,2)) GO TO LOCAT1
	IF (COUNT.LE.NUMLOC) GO TO UOM			;FOUND IT!
	XCALL MESAG ('INVALID INVENTORY LOCATION',1)
	GO TO LOCATE					;TRY IT AGAIN
UOM,
	CTL = '08,45,02,00,A '
	CALL INPUT
	GO TO (EDTOUT), INXCTL				;RECORD ABORTED?
	IF (ENTRY(1,2).EQ.'  ') ENTRY (1,2) = SUOFM
	IF (ENTRY(1,2).NE.SUOFM) GO TO UOM1		;UNITS OF MEASURE DO
							;NOT MATCH
	TUOM = ENTRY (1,2)
	XCALL OUTPT (ROW,COL,0,TUOM,V)
	GO TO (ANYCNG), CNGCTL
	GO TO QTY
UOM1,
	XCALL MESAG ('UNITS OF MEASURE DON''T MATCH',1)
	XCALL OUTPT (12,1,1,'\',V)
	GO TO UOM					;TRY IT AGAIN
QTY,
	CTL = '09,45,06,01,# '
	CALL INPUT
	GO TO (EDTOUT), INXCTL				;RECORD ABORTED?
	TQTYOH = ENTRY(1,6)
	DECMAL = TQTYOH
	XCALL DSPLY (MAX,ROW,COL,DECMAL,1,V)		;RE-DISPLAY QUANTITY
ANYCNG,
	XCALL ANYCN (CNGCTL,WHATNO)
	IF (CNGCTL.EQ.0) RETURN				;NO CHANGE
	GO TO (ITEM,LOCATE,UOM,QTY), WHATNO-1
	GO TO ANYCNG					;BAD CHANGE, TRY AGAIN
EDTOUT,
	RETURN
;-------------------------------------------------------------------------------
OPENS,
	SWITCH = 1
	XCALL FILES (1,'U',40,SWITCH)			;FILE 40 - INVTAG
	IF (SWITCH.EQ.9) GO TO INUSE1
	SWITCH = 1
	XCALL FILES (2,'I',42,SWITCH)			;FILE 42 - ITMIDX
	IF (SWITCH.EQ.9) GO TO INUSE2
	SWITCH = 1
	XCALL FILES (3,'I',41,SWITCH)			;FILE 41 - ITMMAS
	IF (SWITCH.EQ.9) GO TO INUSE3
	BADOPN = 0					;SUCCESSFUL OPEN
	CALL RDTCTL					;READ INVTAG CONTROL
							;RECORD
	CALL RDICTL					;READ ITMMAS CONTROL
							;RECORD
	RETURN
INUSE3,
	XCALL FILES (2,'I',42,4)			;CLOSE ITMIDX
INUSE2,
	XCALL FILES (1,'U',40,4)			;CLOSE INVTAG
INUSE1,
	BADOPN = 1					;INDICATE BAD FILE OPEN
	RETURN
;-------------------------------------------------------------------------------
CLOSES,
	XCALL FILES (3,'I',41,4)			;CLOSE "ITMMAS" #41
	XCALL FILES (2,'I',42,4)			;CLOSE "ITMIDX" #42
	XCALL FILES (1,'U',40,4)			;CLOSE "INVTAG" #40
	RETURN
;-------------------------------------------------------------------------------
RDTCTL,
	LOKCTL = 1
	XCALL IO (1,DUMTAG,1,READ,LOKCTL)		;READ "INVTAG" CTL REC
	UNLOCK 1
	RETURN
RDICTL,
	LOKCTL = 1
	XCALL IO (3,DUMINV,1,READ,LOKCTL)		;READ "ITMMAS" CTL REC
	RETURN
;-------------------------------------------------------------------------------
DSPTIT,
	XCALL OUTPT (3,1,2,'\',V)
	XCALL OUTPT (4,24,0,'1. TAG NUMBER',V)
	XCALL OUTPT (5,24,0,'2. ITEM NUMBER',V)
	XCALL OUTPT (6,27,0,'DESCRIPTION',V)
	XCALL OUTPT (7,24,0,'3. LOCATION',V)
	XCALL OUTPT (8,24,0,'4. UNIT OF MEASURE',V)
	XCALL OUTPT (9,24,0,'5. QUANTITY COUNTED',V)
	IF (SELECT.EQ.2.OR.SELECT.EQ.3) XCALL OUTPT (4,23,0,'*',V)
	RETURN
;-------------------------------------------------------------------------------
DSPREC,
	WRKITM = TAGITM
	IF (JSTIFY) XCALL LEFTJ (WRKITM,15)
	XCALL OUTPT (5,45,0,WRKITM,V)
	DESCR = '** ITEM NO LONGER ON FILE **'
	LOC(1) = '??'
	XCALL SERCH (2,ITMIDX,TAGITM,1,15,ORG041,DUMMY,SRCCTL,1,16,20,0,0,0,0)
	IF (SRCCTL.EQ.1.OR.IRC041.EQ.0) GO TO DSPR2
	LOKCTL = 1
	XCALL IO (3,ITMMAS,IRC041,READ,LOKCTL)
DSPR2,
	XCALL OUTPT (6,45,0,DESCR,V)
	XCALL OUTPT (7,45,0,TLOC,V)
	XCALL OUTPT (8,45,0,TUOM,V)
	XCALL OUTPT (8,55,0,'(',V)
	XCALL OUTPT (0,0,0,SUOFM,V)
	XCALL OUTPT (0,0,0,')',V)
	CTL = '09,45,05'
	XCALL DSPLY (MAX,ROW,COL,TQTYOH,1,V)
	RETURN
;-------------------------------------------------------------------------------
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
END
