;  ORDENT / IM 
;
;
;		::PCPYIM.DEF::
;*****************************************************************************
;		INVENTORY MANAGEMENT  
;
;		RELEASED: AUGUST 1, 1984 (d70s10)
;*****************************************************************************
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984
;		MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;		PROGRAM FOR ORDER ENTRY WITHOUT PROMPTING
;
RECORD
	,A64,'THIS MATERIAL CONTAINS THE VALUABLE PROPERTIES AND TRADE SECRETS'
	,A62,'OF MCBA, EMBODYING CONFIDENTIAL INFORMATION AND IDEAS, NO PART'
	,A56,'OF WHICH MAY BE USED AND/OR DISCLOSED WITHOUT MCBAs DULY'
	,A55,'AUTHORIZED LICENSE AGREEMENT AND/OR WRITTEN PERMISSION.'
	,A61,'COPYRIGHT (C) MCBA, AN UNPUBLISHED WORK. ALL RIGHTS RESERVED.'

RECORD ITMMAS		;
		.INCLUDE 'DEF:RD041A.DEF'
RECORD DUMINV		;
		.INCLUDE 'DEF:RD041B.DEF'
RECORD ITMIDX		;
		.INCLUDE 'DEF:RD042A.DEF'
RECORD	PURCHS		;
		.INCLUDE 'DEF:RD053A.DEF'
RECORD PURCTL			;
		.INCLUDE 'DEF:RD053B.DEF'
RECORD	CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD
	V	,D1
	SWITCH	,D1
	CNGCTL	,D1
	KLOC	,A2
	BRKTS	,A6,	']]]]]]'
	PTR	,D2
	QTYOH	,D6
	QTYCM	,D6
	QTYON	,D6
	ONOSCR	,D6
	BLANKS	,A2
	DEFALT	,A2
	LOCTNS	,D2
	BSEND	,D5
	KITMNO	,A15
	KEY	,A15
	BSMID	,D5
	SRCCTL	,D1
	ENTRY	,A16
	MASKN	,A7,	'ZZZZZX-'
	MASK	,A5,	'ZZZZX'
	MASK4	,A4,	'ZZZX'
	WHATNO	,D2
	INXCTL	,D1
	POWGT	,D8
	TOTWGT	,D7
	SVPONM	,A8
	SPOWGT	,D8
	SAVDAT	,D6
	NOTFST	,D1
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1
	WRKVEN	,A4
PROC (1)
	XCALL TERID (V)
	SWITCH = 1
	XCALL FILES (4,'U',53,SWITCH)		;FILE # 53 -- PURCHS FILE
	IF (SWITCH.EQ.9) GO TO ENDOFF

	SWITCH = 1
	XCALL FILES (2,'I',42,SWITCH)		;FILE # 42 -- ITMIDX FILE
	IF (SWITCH.EQ.9) GO TO INUSE1

	SWITCH = 1
	XCALL FILES (1,'U',41,SWITCH)		;FILE # 41 -- ITMMAS FILE
	IF (SWITCH.EQ.9) GO TO INUSE2

RDCTL,
	LOKCTL = 1
	XCALL IO (4,PURCTL,1,READ,LOKCTL)
	IF (REC053.GE.MAX053) GO TO FILFUL

	LOKCTL = 0
	XCALL IO (1,DUMINV,1,READ,LOKCTL)
	GO TO (END) ,LOKCTL
	DEFALT = DFLTLO
	LOCTNS = NUMLOC
	BSEND = ORG041
DISPLA,
	UNLOCK 1
	IF (CNGCTL.EQ.1) POWGT = POWGT - TOTWGT	;IF ABORT DURING CHANGE
	IF (CNGCTL.EQ.1) NOTFST =		;RESET PO WEIGHT & FLAG
	CNGCTL =
	ITMMAS =
	PURCHS =
	XCALL OUTPT (1,1,2,'PURCHASING ENTRY & EDITING',1)
	XCALL OUTPT (2,3,0,'1. ITEM #',V)
	XCALL OUTPT (3,3,0,'2. VENDOR',V)
	XCALL OUTPT (4,3,0,'3. LOCATION',V)
	XCALL OUTPT (5,3,0,'4. PO NUMBER',V)
	XCALL OUTPT (5,58,0,'PO WEIGHT',V)
	XCALL OUTPT (6,3,0,'5. ORDER QTY',V)
	XCALL OUTPT (6,54,0,'LINE ITEM WGT',V)
	XCALL OUTPT (7,6,0,'ON-HAND',V)
	XCALL OUTPT (8,6,0,'ALLOCATED',V)
	XCALL OUTPT (7,39,0,'ON-ORDER',V)
	XCALL OUTPT (8,39,0,'REORD LVL',V)
	XCALL OUTPT (9,3,0,'6. EXP RCPT DATE',V)
NXTITM,
	CTL = '02,21,15,01,AE'
	CALL INPUT
	GO TO (DISPLA,END) ,INXCTL
	IF (JSTIFY) XCALL FRMAT (ENTRY,15)
	XCALL OUTPT (2,21,0,ENTRY(1,15),V)
	KITMNO = ENTRY(1,15)

	KEY = KITMNO
	SRCCTL = 3
	XCALL SERCH (2,ITMIDX,KEY,1,15,BSEND,BSMID,SRCCTL,1,16,20,0,0,0,0)
	GO TO (NOTFND,END) ,SRCCTL

	LOKCTL = 1
	XCALL IO (1,ITMMAS,IRC041,READ,LOKCTL)
	XCALL OUTPT (12,1,1,'\',V)

	IF (LOKCTL.EQ.1) GO TO DISPLA
	IF (INXCTL.EQ.2) GO TO DISPLA		;OPERATOR DIDN'T WANT TO WAIT
						;FOR RECORD TO BE UNLOCKED
	XCALL OUTPT (2,38,0,DESCR,V)
	PVEND = VENDOR
	WRKVEN = VENDOR
	XCALL LEFTJ (WRKVEN,4)
	XCALL OUTPT (3,21,0,WRKVEN,V)
VEND,
	IF (CNGCTL.NE.1) GO TO LOCTN
	CTL = '03,21,04,01,A '
	CALL INPUT
	GO TO (DISPLA) ,INXCTL
	XCALL FRMAT (ENTRY(1,4),4)
	XCALL OUTPT (3,21,0,ENTRY(1,4),V)
	PVEND = ENTRY(1,4)
	GO TO (ANYCNG) ,CNGCTL
LOCTN,
	CTL = '04,21,02,00,A '
	CALL INPUT
	GO TO (DISPLA) ,INXCTL
	IF (ENTRY(1,2).EQ.BLANKS) XCALL OUTPT (4,21,0,DEFALT,V)
	KLOC = ENTRY(1,2)
	IF (KLOC.EQ.DEFALT) KLOC =

	PTR = 1					;FINDS LOCATION & PREPARES
	IF (KLOC.NE.BLANKS) CALL FNDLOC		;FOR DISPLAY
	IF (PTR.EQ.0) GO TO BADRCD
	QTYOH = QTYONH(PTR)
	QTYCM = QTYCOM(PTR)
	QTYON = QTYONO(PTR)
	GO TO CONTIN
BADRCD,
	XCALL MESAG ('ITEM NOT AT THIS LOCATION',1)
	PTR =
	GO TO CONTIN
LSTLOC,
	CALL FNDLOC
	IF (PTR.EQ.0) PTR = 1
	RETURN
CONTIN,
	IF (PTR.EQ.0) GO TO LOCTN
	ENTRY(1,7) = QTYOH,MASKN
	XCALL OUTPT (7,21,0,ENTRY(1,7),V)
	ENTRY(1,7) = QTYCM,MASKN
	XCALL OUTPT (8,21,0,ENTRY(1,7),V)
	ENTRY(1,7) = QTYON,MASKN
	XCALL OUTPT (7,51,0,ENTRY(1,7),V)
	ENTRY(1,5) = REOLVL(PTR),MASK
	XCALL OUTPT (8,51,0,ENTRY(1,5),V)
	IF (CNGCTL.EQ.1) CALL MODIFY		;ADJUST VALUES, MAINLY ORDER QTY
	GO TO (ANYCNG) ,CNGCTL
PONUM,
	CTL = '05,21,08,00,A '
	CALL INPUT
	GO TO (DISPLA) ,INXCTL
	PPONUM = ENTRY(1,8)
	IF (PPONUM.EQ.BLANKS) PPONUM = SVPONM
	XCALL OUTPT (5,21,0,PPONUM,V)
	CALL DSPWGT
	GO TO (ANYCNG) ,CNGCTL
ORDER,
	CTL = '06,21,06,01,#-'
	CALL INPUT
	GO TO (DISPLA) , INXCTL
	PORDED = ENTRY
	CALL MODIFY
	GO TO (ANYCNG) ,CNGCTL
DATE,
	IF (PPONUM.EQ.SVPONM.AND.SAVDAT.NE.0.AND.CNGCTL.NE.1) GO TO ANYCNG
	CTL = '09,21,06,05,D '
	CALL INPUT
	IF (INXCTL.EQ.1) CNGCTL =		;IF ABORT DURING ADD, SET TO
						;CHANGE MODE TO RESET PO WEIGHT
	GO TO (DISPLA) ,INXCTL
	PRCTDT = ENTRY (1,6)

;**************************************************************

ANYCNG,
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (UPDATE), CNGCTL + 1
CNGBR,
	GO TO (DISPLA,VEND,LOCTN,PONUM,ORDER,DATE) ,WHATNO
	GO TO ANYCNG
BADCNG,
	CNGCTL = 3
	GO TO ANYCNG

;***************************************************************

UPDATE,
	IF (PORDED.EQ.0) GO TO DISPLA
	QTYONO(PTR) = QTYONO(PTR) + PORDED
	SVPONM = PPONUM
	SPOWGT = POWGT
	SAVDAT = PRCTDT
	LOKCTL = 1
	XCALL IO (1,ITMMAS,IRC041,WRITE,LOKCTL)
	PLOC = LOC(PTR)
	PITEM = KITMNO
	PDESCR = DESCR
	PPRDCT = PRDCAT
	PLDTM = LEADTM
	PLSTCT = LSTCST
;
;
;NOTE: PSRAT SHOULD HAVE 4 DECIMAL PLACES BUT HAS NOT BEEN IMPLEMENTED YET.
;WILL NEED TO ROUND WEIGHT FIELD LATER.
;	PSRAT WILL BE INCORPORATED INTO PURCHASE ORDER PACKAGE
;
;	PWGT = (WEIGHT*PSRAT(1,4))
	PWGT = WEIGHT
	INCR REC053
	IF (REC053.GE.MAX053) GO TO FILFUL
	LOKCTL = 1
	XCALL IO (4,PURCHS,REC053,WRITE,LOKCTL)
	XCALL WATE (3,V)

	LOKCTL = 1					; UPDATE THE PURCHS FILE
	XCALL IO (4,PURCTL,1,WRITE,LOKCTL)		; CONTROL RECORD

	NOTFST =
	GO TO DISPLA
NOTFND,
	XCALL MESAG ('ITEM NOT ON FILE',1)
	GO TO DISPLA

;**************************************************************

DSPWGT,
	IF (CNGCTL.EQ.1) POWGT = TOTWGT
	IF (PPONUM.EQ.SVPONM.AND.CNGCTL.EQ.1) POWGT = SPOWGT + TOTWGT
	ENTRY(1,11) = POWGT,'ZZZ,ZZZ.XX-'
	XCALL OUTPT (5,69,0,ENTRY(1,11),V)
	IF (PPONUM.EQ.SVPONM) GO TO DSPDAT
	RETURN
DSPDAT,
	IF (SAVDAT.EQ.0) RETURN
	PRCTDT = SAVDAT
	ENTRY(1,8) = PRCTDT,'XX/XX/XX'
	XCALL OUTPT (9,21,0,ENTRY(1,8),V)
	RETURN

;***************************************************************

MODIFY,
	IF (NOTFST) POWGT = POWGT - TOTWGT
	NOTFST = 1
	ONOSCR = QTYON + PORDED
	ENTRY(1,7) = ONOSCR,MASKN
	XCALL OUTPT (7,51,0,ENTRY(1,7),V)
;
;
;NOTE: PSRAT SHOULD HAVE 4 DECIMAL PLACES BUT HAS NOT BEEN IMPLEMENTED YET.
;WILL NEED TO ROUND WEIGHT FIELD LATER.
;	PSRAT WILL BE ENCORPORATED INTO PURCHASE ORDER PACKAGE
;
;	TOTWGT = (PORDED*WEIGHT*PSRAT(1,4))
	TOTWGT = (PORDED*WEIGHT)
	ENTRY(1,10) = TOTWGT,'ZZ,ZZZ.XX-'
	XCALL OUTPT (6,70,0,ENTRY(1,10),V)
	IF (PPONUM.NE.SVPONM) POWGT =
	POWGT = POWGT + TOTWGT
	ENTRY(1,11) = POWGT,'ZZZ,ZZZ.XX-'
	XCALL OUTPT (5,69,0,ENTRY(1,11),V)
	RETURN

;**************************************************************

FNDLOC,
	PTR =
NXTLOC,
	INCR PTR
	IF (LOC(PTR).EQ.BLANKS) GO TO NOFIND
	IF (LOC(PTR).EQ.KLOC) RETURN
	IF (KLOC.EQ.'  '.AND.LOC(PTR).EQ.DEFALT) RETURN
	IF (PTR.LT.LOCTNS) GO TO NXTLOC
NOFIND,
	PTR =
	RETURN

;**************************************************************

INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN

;**************************************************************

FILFUL,
	XCALL MESAG ('PURCHS file full. Run XPAND.',2)
END,
	XCALL FILES (1,'U',41,4)
INUSE2,
	XCALL FILES (2,'I',42,4)
INUSE1,
	XCALL FILES (3,'U',53,4)
ENDOFF,
	XCALL PGCHN ('IM:PURCH',1)

END
