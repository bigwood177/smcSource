;INVRCV.IM
;
;	INPUT PO# AND COST/LB FOR RINTRX
;

	.INCLUDE 'DEF:RAWARA.DEF'

RECORD	RINTRX
	.INCLUDE 'DEF:RD131A.DEF'

RECORD	INVHDR
	.INCLUDE 'DEF:RD131B.DEF'


;;;RECORD	RINMAS
;;;	.INCLUDE 'DEF:rD132A.DEF'

RECORD	VENMAS
	.INCLUDE 'DEF:RD011A.DEF'

RECORD	PORHDR
	.INCLUDE 'DEF:RD151A.DEF'

RECORD	POST_ERR
	PE_TAG	,D6
		,A1
		,A*,	'TAG NOT POSTED!'
;
RECORD	ARAS
	RFA	,80A6
	PO	,80D6
	LCOST	,80D8
	DLINE	,80A80
	RI	,D6	;INDEX
	NUMARA	,D6
	MAXARA	,D3,	020

RECORD TITLE
		,A*,	'SMC '
	T_COMP	,A4
		,A1
	T_TITLE	,A20	
		,A1
	T_WORD	,A6
		,A1
	T_LOAD	,A2

RECORD HDR1
		,A*,	'LD   TAG# SUPPLIER   COATING  DEC-THK  GA   SIZE SCALE-WT   LOC      PO    COST    NOTE'
RECORD	PRINT
	LINCNT	,D2,	60
	SPLFIL	,A14
	LPONSW	,D1
	LPARG	,D1
	RPTNUM	,D3
	PRTTYP	,A1
	PGCNT	,D6,	000000
	PLINE	,A132
	SLINE	,A80
	PRTCTL	,D3,	132
	LPSW	,D2

RECORD	CHANNELS
	CHN011	,D2
	CHN131	,D2
	CHN151	,D2

RECORD	LODMSG
		,A*,	'LOAD '
	LM_LOAD	,D2
		,A1
		,A*,'POSTED TO INVENTORY'

RECORD	VARS
	CURLOD	,D2	;CURRENT LOAD
	SAVLOD	,D2
	LODLBS	,D10
	TOTLBS	,D10

	OPNOK	,D1
	PGM	,D2
	PONUM	,D8
	XCOST	,D8
	XPO	,D6
	ROW	,D2
	XRFA	,A6
	ENTRY	,A30
	LOKCTL	,D1
	INXCTL	,D1
	CNGCTL	,D1
	MSGCTL	,D1
	WHATNO	,D2
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	DELET	,D1,3
	SWITCH	,D1
	V	,D1


PROC
	XCALL TERID (V)
	XCALL OUTPT (1,1,2, 'RAW MATERIAL RECEIVING EDIT',1)

	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF
MENU,
	XCALL OUTPT (1,1,2, 'RAW MATERIAL RECEIVING EDIT',1)
	XCALL OUTPT (3,9,0, 'PLEASE SELECT APPLICATION',1)
	XCALL OUTPT (5,15,0,'1. UPDATE PO AND COST',1)
	XCALL OUTPT (6,15,0,'2. PRINT RECEIVING EDIT',1)

MINPUT,
	XCALL input (3,36,1,1,'#E',ENTRY,INXCTL,1)
	GOTO (MINPUT,ENDOFF), INXCTL
	PGM = ENTRY(1,1)
	GOTO (LOAD,LIST),PGM
	GOTO MINPUT

LOAD,	
	CURLOD = -1

DISPLA,
	XCALL OUTPT (1,1,2, 'RAW MATERIAL RECEIVING EDIT',1)
	XCALL OUTPT (2,1,1,'PROCESSING LOAD: ',1)
	ROW = 3
	SLINE = '     TAG# SUPPLIER   COATING  DEC-THK  GA  SIZE  SCALE-WT   LOC      PO    COST'

	XCALL OUTPT (ROW,1,0,SLINE,1)	
	CLEAR SLINE
	
	RI = 0
	FIND (CHN131, RINTRX, ^FIRST, KRF=1) [ERR=LOOP]	;BY LOAD #
	lokctl = 0
	xcall ios (chn131, rintrx, read, lokctl)	;4-25-18
	if (lokctl .eq. 1) goto endoff			;4-25-18
;;;	READS (CHN131, RINTRX, EOF)	; HEADER	;4-25-18

LOOP,
	READS (CHN131, RINTRX, EOF, GETRFA:XRFA)
;;;	IF (LOKCTL .NE. 0) GOTO EOF
	IF (CURLOD .EQ. -1)
		BEGIN
		CURLOD = RMLOAD
		ENTRY(1,2) = CURLOD, 'ZX'
		XCALL OUTPT (2,21,0,ENTRY(1,2),1)
		END

	IF (RMLOAD .NE. CURLOD) GOTO EOF	;1 LOAD AT A TIME...
	IF (RI .GE. 20) GOTO EOF		;20 TICKET LIMIT
	INCR RI
	RFA(RI) = XRFA
	PO(RI) = RMPO
	LCOST(RI) = RMCOST

	XCALL ISIO (CHN011, VENMAS, RMVEN, READ, LOKCTL)
	IF (LOKCTL .NE. 0) NAME = '** NOT ON FILE **'

	CLEAR SLINE	
	SLINE(1,2) = RI,	'ZX'
	SLINE(4,9) = RMTAG,	'ZZZZZX'
	SLINE(11,20) = NAME
	SLINE(22,25) = RMMAT
	SLINE(33,37) = RMDEC,	'X.ZZX'
	SLINE(39,41) = RMGA
	SLINE(43,48) = RMWID, 'ZX.XXX'
	SLINE(52,57) = RMWGT,	'ZZZZZX'
	SLINE(60,63) = COMPANY(RMLOC)
	SLINE(66,71) = RMPO,	'ZZZZZX'
	SLINE(73,79) = RMCOST,	'ZX.XXXX'
	

	XCALL OUTPT (RI+3, 1, 0, SLINE, 1)
	DLINE(RI) = SLINE

	GOTO LOOP
EOF,
	NUMARA = RI
ANYCNG,
	XCALL ANYCN (CNGCTL, WHATNO)
	GOTO (PROCES, CNGBR), CNGCTL+1
PROCES,

	FOR RI FROM 1 THRU NUMARA
		BEGIN
		READ (CHN131, RINTRX, RFA:RFA(RI)) [ERR=NO_RIN]
		RMCOST = LCOST(RI)
		RMPO = PO(RI)
		RMPROC = 'P'		;1-22-18 PROCESSED
		WRITE (CHN131, RINTRX, RFA:RFA(RI))
		END

	XCALL OUTPT (24,1,1,'OK TO POST TO INVENTORY (Y/N)',1)
	XCALL INPUT (24,34,01,01,'YN',ENTRY,INXCTL,1)
	GOTO (POST,MENU),INXCTL
	GOTO MENU

POST,
	SWITCH = 5
	XCALL FILES (32,'SU',132,SWITCH)
	IF (SWITCH .EQ. 9)
		BEGIN
		XCALL MESAG ("CAN'T POST, CLEAR FLAGS",1)
		GOTO ENDOFF
		END

	LPSW = 3		;12-27-17 force local compressed print
	LPONSW = 0
	LINCNT = 60
	PGCNT =
	T_WORD = 'LOAD:'
	T_LOAD = CURLOD, 'ZX'
	T_TITLE = 'RECEIVING REGISTER'

	READ (CHN131, RINTRX, ^FIRST, KRF=1) [ERR=PLOOP]	;header
PLOOP,
	XCALL IOS (CHN131, RINTRX, READ, LOKCTL)	;transaction file
	IF (LOKCTL .NE. 0) GOTO P_EOF
	IF (RMLOAD .NE. CURLOD) GOTO PLOOP		;SKIP
	IF (RMPROC .NE. 'P') GOTO PLOOP			;MUST BE PROCESSED

	XCALL ISIO (32, RINTRX, RMTAG, STORE, LOKCTL)	;rinvms
	IF (LOKCTL .NE. 0)
		BEGIN
		PE_TAG = RMTAG
		XCALL MESAG (POST_ERR,1)
		GOTO PLOOP
		END

	XCALL ISIO (CHN011, VENMAS, RMVEN, READ, LOKCTL)
	IF (LOKCTL .NE. 0) NAME = '** NOT ON FILE **'

	CLEAR PLINE	
;;;	PLINE(1,2) = RMLOAD,	'ZX'
	PLINE(4,9) = RMTAG,	'ZZZZZX'
	PLINE(11,20) = NAME
	PLINE(22,25) = RMMAT
	PLINE(33,37) = RMDEC,	'X.ZZX'
	PLINE(39,41) = RMGA
	PLINE(43,48) = RMWID, 'ZX.XXX'
	PLINE(52,57) = RMWGT,	'ZZZZZX'
	PLINE(60,63) = COMPANY(RMLOC)
	PLINE(66,71) = RMPO,	'ZZZZZX'
	PLINE(73,79) = RMCOST,	'ZX.XXXX'
	PLINE(84,94) = RMNOTE
	
	CALL PRINT

	XCALL ISIO (CHN131, RINTRX, RMTAG, DELET, LOKCTL)
	GOTO PLOOP
P_EOF,
	CLOSE 32
	IF (LPONSW.EQ.1) XCALL LPOFF (LPSW,SPLFIL,PGCNT)
	LPONSW = 0
	LINCNT = 60
	PGCNT =
	LM_LOAD = CURLOD
	XCALL MESAG (LODMSG,1)
	GOTO MENU

CNGBR,
	IF (WHATNO .GT. NUMARA) GOTO ANYCNG
	CALL CHANGE
	GOTO ANYCNG

NO_RIN,
	XCALL MESAG ("CAN'T UPDATE TRANSACTION!!",1)
	GOTO DISPLA

ENDOFF,
	CALL CLOSE
	XCALL PGCHN ('IM:IMMENU',1)


CHANGE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; INPUT/CHANGE PO/COST
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	RI = WHATNO
	XCALL OUTPT (24,1,1,'ASSIGN PO# (Y/N)',1)
	XCALL INPUT (24,24,01,01,'YN', ENTRY,INXCTL,1)
	GOTO (COST), INXCTL-1

	XCALL OUTPT (24,1,1,'PO:',1)
	XCALL INPUT (24,5, 06,01,'#E',ENTRY,INXCTL,1)
	GOTO (END_CHANGE, END_CHANGE),INXCTL
	XPO = ENTRY(1,6)
	IF (XPO .EQ. 0) GOTO COST

	PONUM(1,6) = XPO
	PONUM(7,8) = 00
	LOKCTL = 1
	XCALL ISIO (CHN151,PORHDR,PONUM,READ,LOKCTL)
	IF (LOKCTL .NE. 0)
		BEGIN
		MSGCTL = 7
		XCALL MESAG ('PO NOT ON FILE, CONTINUE ANYWAY?',MSGCTL)
		GOTO (CHANGE),MSGCTL
		ENTRY(1,6) = XPO, 'ZZZZZX' [LEFT]
		XCALL OUTPT (24,5, 0, ENTRY(1,6),1)
		END

	XCALL OUTPT (24,15,0,'ASSIGN PO# TO ALL (Y/N)',1)
	XCALL INPUT (24,44,01,01,'YN',ENTRY,INXCTL,1)
	GOTO (ALL_PO),INXCTL

	PO(RI) = XPO
	SLINE = DLINE(RI)
	SLINE(66,71) = XPO,	'ZZZZZX'
	XCALL OUTPT (RI+3, 1, 1, SLINE, 1)
	DLINE(RI) = SLINE
	GOTO COST
ALL_PO,
	FOR RI FROM 1 THRU NUMARA
		BEGIN
		PO(RI) = XPO
		SLINE = DLINE(RI)
		SLINE(66,71) = XPO, 'ZZZZZX'
		XCALL OUTPT (RI+3, 1, 1, SLINE, 1)
		DLINE(RI) = SLINE
		END
	
COST,
	RI = WHATNO
	XCALL OUTPT (24,1,1,'COST PER LB:',1)
	XCALL INPUT (24,15,07,00,'#E',ENTRY,INXCTL,1)
	GOTO (END_CHANGE, END_CHANGE),INXCTL
	XCOST = ENTRY(1,7)
	ENTRY(1,8) = XCOST, 'ZZZ.XXXX' [LEFT]
	XCALL OUTPT (24,15,1,ENTRY(1,8),1)
	
	XCALL OUTPT (24,24,0,'ASSIGN COST TO ALL (Y/N)',1)
	XCALL INPUT (24,54,01,01,'YN',ENTRY, INXCTL, 1)
	GOTO (ALL_COST), INXCTL
	LCOST(RI) = XCOST
	SLINE = DLINE(RI)
	SLINE(73,79) = XCOST, 'ZX.XXXX'
	XCALL OUTPT (RI+3, 1, 1, SLINE, 1)
	DLINE(RI) = SLINE
	RETURN
;--------------------------------------------------------------------------	

ALL_COST,

	FOR RI FROM 1 THRU NUMARA
		BEGIN
		LCOST(RI) = XCOST
		SLINE = DLINE(RI)
		SLINE(73,79) = XCOST, 'ZX.XXXX'
		XCALL OUTPT (RI+3, 1, 1, SLINE, 1)
		DLINE(RI) = SLINE
		END

END_CHANGE,
	RETURN

LIST,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; PRINT RECEIVING EDIT
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	lpsw =
	LPONSW = 0
	LINCNT = 60
	PGCNT =
	T_WORD =
	T_LOAD =
	T_TITLE = 'RECEIVING EDIT'

	SAVLOD = -1
	CLEAR TOTLBS, LODLBS

	read (CHN131, RINTRX, ^FIRST, KRF=1) [ERR=L_EOF]	;header
LLOOP,
	READS (CHN131, RINTRX, L_EOF)
	XCALL ISIO (CHN011, VENMAS, RMVEN, READ, LOKCTL)
	IF (LOKCTL .NE. 0) NAME = '** NOT ON FILE **'
	
	IF (RMLOAD .NE. SAVLOD) CALL NEWLOD
	CLEAR PLINE
	PLINE(1,2) = RMLOAD,	'ZX'
	PLINE(4,9) = RMTAG,	'ZZZZZX'
	PLINE(11,20) = NAME
	PLINE(22,25) = RMMAT
	PLINE(33,37) = RMDEC,	'X.ZZX'
	PLINE(39,41) = RMGA
	PLINE(43,48) = RMWID, 'ZX.XXX'
	PLINE(52,57) = RMWGT,	'ZZZZZX'
	PLINE(60,63) = COMPANY(RMLOC)
	PLINE(66,71) = RMPO,	'ZZZZZX'
	PLINE(73,79) = RMCOST,	'ZX.XXXX'
	PLINE(84,94) = RMNOTE
	
	IF (RMCAT .EQ. 'WZ') PLINE(27,28) = '**'	;NO ITMMAS ITEM
	CALL PRINT
	LODLBS = LODLBS + RMWGT

	GOTO LLOOP

L_EOF,
	CALL NEWLOD

	PLINE(1,13) = 'REPORT TOTAL'
	PLINE(49,57) = TOTLBS, 'Z,ZZZ,ZZX'
	CALL PRINT

	IF (LPONSW.EQ.1) XCALL LPOFF (LPSW,SPLFIL,PGCNT)
	LPONSW = 0
	LINCNT = 60
	PGCNT =

	GOTO MENU
;--------------------------------------------------------------------
NEWLOD,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (SAVLOD .EQ. -1) GOTO OUTLOD

	PLINE(1,2) = SAVLOD,	'ZX'
	PLINE(4,10) = 'TOTAL'
	PLINE(49,57) = LODLBS, 'Z,ZZZ,ZZX'
	CALL PRINT
	CALL PRINT
	TOTLBS = TOTLBS + LODLBS

OUTLOD,
	SAVLOD = RMLOAD
	LODLBS = 
	RETURN
;-------------------------------------------

;---------------------------------------------------------------------
PRINT,
	IF (LPONSW.EQ.0) CALL PRNTON
	XCALL LPOUT (LINCNT,PGCNT,PLINE,TITLE,HDR1,'NO HDR','NO HDR3',
&			'NO LEGEND',' ',' ',1,132,PRTCTL,0,LPSW,RPTNUM,PRTTYP)
	RETURN
PRNTON,
	SPLFIL (5,6) = 'EL'
;;;	LPSW = 1	; PRINT, SPOOL OR DISPLAY
	XCALL LPON (LPSW,SPLFIL)
	IF (LPSW.EQ.0) GOTO ENDOFF
	LPONSW = 1
	RETURN
;************************************************************************

	
OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CLEAR OPNOK
	SWITCH = 5
	XCALL FILES (1, 'SI', 11, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN011 = 1

	SWITCH = 5
	XCALL FILES (31, 'SU', 131, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN131 = 31

	SWITCH = 5
	XCALL FILES (51, 'SI', 151, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN151 = 51

	OPNOK = 1
	RETURN
;---------------------------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	IF (CHN011) CLOSE CHN011
	IF (CHN131) CLOSE CHN131
	IF (CHN151) CLOSE CHN151
	RETURN
;---------------------------------------------------------

;     TAG# SUPPLIER   COATING  DEC-THK  GA  SIZE  SCALE-WT   LOC      PO    COST
;ZX ZZZZZX AAAAAAAAAA AAAA       Z.XXX  XX Z.XXX    ZZZZZX  AAAA  ZZZZZX ZX.XXXX 
;123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
;         1         2         3         4         5         6         7         8

	
END