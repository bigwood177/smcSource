; INVXFR.IM (CREATED 12-06-17)

;
;	RAW MATERIALS INVENTORY TRANSFERS
;
RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR


EXTERNAL FUNCTION
	GU_NAME	,A


	.INCLUDE 'WND:WINDOWS.DEF'

	.INCLUDE 'DEF:RAWARA.DEF'		;VALUES

RECORD RINVMS
	.INCLUDE 'DEF:RD131A.DEF'

RECORD	SAVREC
	.INCLUDE 'DEF:RD131S.DEF'

RECORD	VENMAS
	.INCLUDE 'DEF:RD011A.DEF'

RECORD	COPTBL
	.INCLUDE 'DEF:RD182A.DEF'

RECORD	TAGXFR
	TX_TAG	,D6
	TX_OLD	,A3
	TX_NEW	,A3
	TX_DSC	,A15
	TX_WGT	,D6



RECORD	PRINT
	TITLE	,A*,	'RAW MATERIAL INVENTORY TRANSFERS'
	HDR1	,A*,	' TAG # FROM  TO  DESCRIPTION      WEIGHT'
	NOHDR	,A*,	'NO HDR'
	LINCNT	,D2,	60
	SPLFIL	,A14
	LPONSW	,D1
	LPARG	,D1
	RPTNUM	,D3
	PRTTYP	,A1
	PGCNT	,D6,	000000
	PLINE	,A080
	PRTCTL	,D3, 080
	LPSW	,D2

RECORD	HLINE
	,A*,	'     TAG# SUPPLIER   COATING  DEC-THK   GA  SIZE  SCALE-WT LOC    PO#      COST'

RECORD	W_VARS
	A_WID	,A6,	'INXWIN'
	A_TITLE	,A*,	'INVENTORY TRANSFERS'
	W_ID	,D4
	X	,D2
	Y	,D2
	WND_1	,D4


RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2


RECORD	CHANNELS
	CHN011	,D2
	CHN132	,D2
	CHN182	,D2	;TRANSFER FROM
	CHNWRK	,D2	;TRANSACTION WORK FILE
	CHNSMC	,D2
	CHNROC	,D2
	CHNCAT	,D2	;4-8-19
	CHNVIK	,D2
	CHNTST	,D2
	CHNOUT	,D2	;TRANFER TO

RECORD	VARS
	NEW_LOC	,A3	;
	OLD_LOC	,A3
	d3	,d3
	savtag	,d6
	cmpcod	,a3
	tstat	,d1
	atag	,a6
	a2	,a2
	a6	,a6
	xdate	,d8
	TAB	,A1
	UNAME	,A25
	DEFLT	,D1	;1 = DEFAULTS ARE ON (FIRST 5 PROMPTS)
	OPNOK	,D1
	PGM	,D2
	DISP	,D1,1	;DISPLAY POP-UP WINDOW
	REMOVE	,D1,2	;REMOVE POP-UP WINDOW
	RFA	,A6
	XTAG	,D6
	SELECT	,D1	;1=ADD, 2=CHANGE
	I	,D6
	MSGCTL	,D1
	V	,D1
	SWITCH	,D1
	DECMAL	,D10
	OPTION	,D1
	ENTRY	,A30
	INXCTL	,D1
	LOKCTL	,D1
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	DELET	,D1,3
	KTAGNO	,D6
	KEY	,A6
	CNGCTL	,D1
	WHATNO	,D2
	TODAA	,D6
	TODAY	,D8
	BLANKS	,A10
PROC
	XCALL TERID (V)
	V = 1
	
	XCALL WHO(CMPCOD)

	CALL INIT_WINDOW

	XCALL W_DISP (WND_1, WD_CLEAR)
	XCALL W_DISP (WND_1, WD_POS,1,1,'RAW MATERIAL INVENTORY TRANSFERS')
	XCALL RDATE (TODAA)
	XCALL DATE8(TODAA, D_OUT, TODAY, D_FMT, D_SW)

	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF

MENU,
	deflt = 0
	XCALL W_DISP (WND_1, WD_CLEAR)
	XCALL W_DISP (WND_1, WD_POS,1,1,'RAW MATERIALS INVENTORY ENTRY')
	XCALL W_DISP (WND_1, WD_POS,3,9,'PLEASE SELECT APPLICATION')
	XCALL W_DISP (WND_1, WD_POS,5,15,'1. TRANSFER ENTRY')
	XCALL W_DISP (WND_1, WD_POS,6,15,'2. PRINT EDIT')

MINPUT,
	XCALL WINPT (WND_1, 3,36,1,1,'#E',ENTRY,INXCTL)
	GOTO (MINPUT,ENDOFF), INXCTL
	PGM = ENTRY(1,1)
	GOTO (DISPLA,LIST),PGM
	GOTO MINPUT

;
DISPLA,
	INXCTL =
	CNGCTL =
	XCALL W_DISP (WND_1, WD_CLEAR)

	XCALL W_DISP (WND_1, WD_POS, 4,4,'1. FROM LOC: ')
	XCALL W_DISP (WND_1, WD_POS, 6,4,'2. TAG NUMBER: ')
	XCALL W_DISP (WND_1, WD_POS, 8,4,'3. TRANSFER TO: ')
	XCALL W_DISP (WND_1, WD_POS, 8,33,'"DEL" TO DELETE THIS TAG')

OLD_LOC,
	XCALL WINPT (WND_1, 4, 23, 03,03,'AE',ENTRY,INXCTL)
	GOTO (DISPLA, MENU),INXCTL
	OLD_LOC = ENTRY(1,3)

	USING OLD_LOC SELECT
	('SMC'),	CHN132 = CHNSMC
	('ROC'),	CHN132 = CHNROC
	('SMP'),	CHN132 = CHNCAT
	('VIK'),	CHN132 = CHNVIK
	('TST'),	CHN132 = CHNTST

	(),		BEGIN
			XCALL WNMSG (WND_1, 23,'ENTER "SMC", "ROC", "SMP", "VIK", OR "DEL"', 1)
			GOTO OLD_LOC
			END
	ENDUSING

RMTAG,
	XCALL WINPT (WND_1,6,23,06,01,'#E',ENTRY,INXCTL)
	GOTO (DISPLA, MENU),INXCTL
	XTAG = ENTRY(1,6)
	XCALL ISIO (CHN132, RINVMS, XTAG, READ, LOKCTL)
	IF (LOKCTL .NE. 0)
		BEGIN
		XCALL WNMSG (WND_1, 23, 'TAG NOT ON FILE',1)
		GOTO RMTAG
		END
	
	CALL DSPREC

NEW_LOC,
	XCALL WINPT (WND_1, 8,23,03,03,'AE',ENTRY, INXCTL)
	GOTO (DISPLA,MENU),INXCTL
	NEW_LOC = ENTRY(1,3)

	USING NEW_LOC SELECT
	('SMC'),	CHNOUT = CHNSMC
	('ROC'),	CHNOUT = CHNROC
	('SMP'),	CHNOUT = CHNCAT
	('VIK'),	CHNOUT = CHNVIK
	('TST'),	CHNOUT = CHNTST
	('DEL'),	NOP
	(),		BEGIN
			XCALL WNMSG (WND_1, 23,'ENTER "SMC", "ROC", "SMP" OR "VIK"', 1)
			GOTO NEW_LOC
			END
	ENDUSING

	GOTO ANYCNG


;---------------------------------------------------------
LIST,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; PRINT
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


	GOTO MENU


;---------------------------------------------------------

;---------------------------------------------------------

DSPREC,
	if (rmloc.lt.1 .or. rmloc.gt.4) rmloc = 1
	PLINE(4,9) = RMTAG,	'ZZZZZX'
	PLINE(11,20) = NAME
	PLINE(22,25) = RMMAT
	PLINE(33,37) = RMDEC,	'X.ZZX'
	PLINE(40,42) = RMGA
	PLINE(44,49) = RMWID, 'ZX.XXX'
	PLINE(52,57) = RMWGT,	'ZZZZZX'
	PLINE(60,63) = COMPANY(RMLOC)
	PLINE(66,71) = RMPO,	'ZZZZZX'
	PLINE(73,79) = RMCOST,	'ZX.XXXX'

	XCALL W_DISP (WND_1, WD_POS, 10,1, HLINE)
	XCALL W_DISP (WND_1, WD_POS, 11,1, PLINE)
	XCALL W_UPDT

	RETURN
;--------------------------------------------------------------------

ANYCNG,
	XCALL WANCN (WND_1, 24, CNGCTL,WHATNO)
	GOTO (PROCES, CNGBR), CNGCTL+1

CNGBR,
	GOTO (OLD_LOC, RMTAG, NEW_LOC), WHATNO
	GOTO ANYCNG

PROCES,
	TX_TAG = RMTAG
	TX_OLD = OLD_LOC
	TX_NEW = NEW_LOC
	ENTRY(1,7) = RMWID, 'ZX.XXXX'
	TX_DSC = RMMAT + '-' + RMGA + ENTRY(1,7)
	TX_WGT = RMWGT
	WRITES (CHNWRK, TAGXFR)

	IF (NEW_LOC .EQ. 'DEL') GOTO DELETE

	USING NEW_LOC SELECT
	('SMC'),	RMLOC = 1
	('ROC'),	RMLOC = 2
	('VIK'),	RMLOC = 4
	ENDUSING

	LOKCTL = 1
	XCALL ISIO (CHNOUT, RINVMS, RMTAG, STORE, LOKCTL)
	IF (LOKCTL .EQ. 0) 
	THEN	XCALL ISIO (CHN132, RINVMS, RMTAG, DELET, LOKCTL)
	ELSE	XCALL WNMSG (WND_1, 23, 'COULD NOT TRANSFER TAG',1)

	GOTO DISPLA

DELETE,
	XCALL W_DISP (WND_1, WD_POS, 24,1,WD_CLR, WDC_LIN,'DELETE, ARE YOU SURE?')
	XCALL WINPT (WND_1, 24,27, 01,01,'YN',ENTRY,INXCTL)
	GOTO (ANYCNG),INXCTL-1

	XCALL W_DISP (WND_1, WD_POS, 24,1, WD_CLR, WDC_LIN)
	XCALL ISIO (CHN132, RINVMS, RMTAG, DELET, LOKCTL)
	IF (LOKCTL .EQ. 0)
	THEN	XCALL WNMSG (WND_1, 24, 'RECORD DELETED',1)
	ELSE	XCALL WNMSG (WND_1, 24, 'COULD NOT DELETE RECORD',1)
	GOTO DISPLA


;============================================================


ENDOFF,
	CALL CLOSE
	LPONSW = 0
	LINCNT = 60
	PGCNT = 0
	PLINE =

	OPEN (CHNWRK, I, 'SPL:TAGXFR')
LLOP,
	READS (CHNWRK, TAGXFR, LL_EOF)
	PLINE (1,6) = TX_TAG,	'ZZZZZX'
	PLINE (8,10) = TX_OLD
	PLINE (14,16) = TX_NEW
	PLINE (18,32) = TX_DSC
	PLINE (34,40) = TX_WGT,	'ZZZ,ZZX'
	CALL PRINT
	GOTO LLOP

LL_EOF,
	CLOSE CHNWRK

	IF (LPONSW.EQ.1) XCALL LPOFF (LPSW,SPLFIL,PGCNT)

; TAG # FROM  TO  DESCRIPTION      WEIGHT
;ZZZZZX AAA   AAA AAAAAAAAAAAAAAA ZZZ,ZZX
;12345678901234567890123456789012345678901234567890
;         1         2         3         4         5  

	UNAME = %GU_NAME
	UPCASE UNAME

	USING UNAME SELECT
	('PLANT'),	XCALL PGCHN ('IM:RAWMN',1)
	(),		XCALL PGCHN ('IM:IMSFMN',1)
	ENDUSING
;=========================================================================
PRINT,
	IF (LPONSW.EQ.0) CALL PRNTON
	XCALL LPOUT (LINCNT,PGCNT,PLINE,TITLE,HDR1,NOHDR,NOHDR,
&			'NO LEGEND',' ',' ',1,080,PRTCTL,0,LPSW,RPTNUM,PRTTYP)
	RETURN
PRNTON,
	SPLFIL (5,6) = 'EL'
	LPSW = 1	; PRINT, SPOOL OR DISPLAY
	XCALL LPOw (wnd_1, LPSW,SPLFIL)
	IF (LPSW.EQ.0) GOTO LL_EOF
	LPONSW = 1
	RETURN
;************************************************************************


INPUT,
	XCALL WINPT (WND_1,ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL)
	RETURN


OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	OPNOK = 0


	SWITCH = 5
	XCALL FILEC ('SMC', 2, 'SU', 132, SWITCH)	;SMC
	IF (SWITCH .EQ. 9) RETURN
	CHNSMC = 2 


	SWITCH = 5
	XCALL FILEC ('ROC', 22, 'SU', 132, SWITCH)	;ROC
	IF (SWITCH .EQ. 9) RETURN
	CHNROC = 22 

	SWITCH = 5
	XCALL FILEC ('CAT',52, 'SU',132, SWITCH)	;SMP
	IF (SWITCH .EQ. 9) RETURN
	CHNCAT = 52

;;;	SWITCH = 5
;;;	XCALL FILEC ('VIK', 32, 'SU', 132, SWITCH)	;VIK
;;;	IF (SWITCH .EQ. 9) RETURN

	CHNVIK = 32 
	OPEN (CHNVIK, SU, 'VIK:RINVMS.VIM')	;

	CHNTST = 33
	OPEN (CHNTST, SU, 'TST:RINVMS.TSM')	;


	SWITCH = 5
	XCALL FILES (3, 'SI', 011, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN011 = 3

	SWITCH = 5
	XCALL FILES (17, 'SI', 182, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN182 = 17


	OPEN (42, O, 'SPL:TAGXFR.DDF')
	CHNWRK = 42

	OPNOK = 1
	RETURN
;------------------------------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (CHN011) CLOSE CHN011
	IF (CHN182) CLOSE CHN182
	IF (CHN132) CLOSE CHN132
	IF (CHNROC) CLOSE CHNROC
	IF (CHNVIK) CLOSE CHNVIK
	IF (CHNSMC) CLOSE CHNSMC
	IF (CHNCAT) CLOSE CHNCAT
	IF (CHNWRK) CLOSE CHNWRK
	IF (CHNTST) CLOSE CHNTST

	RETURN
;------------------------------------------------------------
INIT_WINDOW,	;;;;;;;;;;;;;;;;;;;;;;;;;
;;; place window...
	X = 
	Y = 

	CLEAR W_ID

	XCALL W_PROC(WP_FIND,W_ID,A_WID)
	IF (.NOT. W_ID) XCALL W_PROC(WP_CREATE,W_ID,A_WID,0,0)

	XCALL W_BRDR(W_ID,WB_TITLE,A_TITLE,WB_TPOS,WBT_TOP,WBT_CENTER)
	XCALL W_PROC(WP_PLACE,W_ID,X,Y)
	XCALL W_DISP(W_ID,WD_CLEAR)

	WND_1 = W_ID

	RETURN
;-------------------------------------------------------------------

END
