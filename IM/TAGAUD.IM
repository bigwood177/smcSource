;  TAGAUD / IM 
;
;
;		::PCPYIM.DEF::
;*****************************************************************************
;		INVENTORY MANAGEMENT  
;
;		RELEASED: AUGUST 1, 1984 (d70s10)
;*****************************************************************************
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984
;		MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;		PROGRAM FOR PRODUCING AN EDIT LIST OF "INVTAG"
;		(INVENTORY COUNT TAGS).
;
RECORD
	,A64,'THIS MATERIAL CONTAINS THE VALUABLE PROPERTIES AND TRADE SECRETS'
	,A62,'OF MCBA, EMBODYING CONFIDENTIAL INFORMATION AND IDEAS, NO PART'
	,A56,'OF WHICH MAY BE USED AND/OR DISCLOSED WITHOUT MCBAs DULY'
	,A55,'AUTHORIZED LICENSE AGREEMENT AND/OR WRITTEN PERMISSION.'
	,A61,'COPYRIGHT (C) MCBA, AN UNPUBLISHED WORK. ALL RIGHTS RESERVED.'

RECORD INVTAG		;
		.INCLUDE 'DEF:RD040A.DEF'
RECORD DUMTAG		;
		.INCLUDE 'DEF:RD040B.DEF'
RECORD ITMMAS		;
		.INCLUDE 'DEF:RD041A.DEF'
RECORD DUMINV		;
		.INCLUDE 'DEF:RD041B.DEF'
RECORD ITMIDX  		;
		.INCLUDE 'DEF:RD042A.DEF'
RECORD TITLE
		,A32,	'PHYSICAL COUNT UPDATE AUDIT LIST'
RECORD HDR1
		,A7
		,A11,	'ITEM NUMBER'
		,A6
		,A11,	'DESCRIPTION'
		,A23
		,A3,	'OLD'
		,A9
		,A7,	'COUNTED'
		,A8
		,A6,	'DOLLAR'
RECORD HDR2
		,A24
		,A10,	'TAG NUMBER'
		,A3
		,A8,	'LOCATION'
		,A3
		,A3,	'UOM'
		,A3
		,A11,	'QTY-ON-HAND'
		,A3
		,A11,	'QTY-ON-HAND'
		,A6
		,A6,	'CHANGE'
		,A4
		,A16,	'POSTING COMMENTS'
RECORD PLINE
		,A132
RECORD
		,A30,	'* NO POSTING ** BAD ITEM *    '
		,A30,	'LOC NOT FOUND - ASSUMING LOC 1'
		,A30,	'NEW QTY ON HAND IS NEGATIVE   '
		,A30,	'NEW QTY ON HAND IS ZERO       '
		,A30,	'* UNITS OF MEASURE NOT SAME * '
		,A30,	'WARNING - MULT COUNT SAME LOC '
RECORD ,X
	COMLIN	,6A30
RECORD SNDMSG
		,A3	,'IM:'
	SNDPGM	,A6
		,A10
		,D3,	040
RECORD NXTMSG
		,A3	,'IM:'
	MSGPRG	,A6
RECORD
	SPLFIL	,A14
	SWITCH	,D1
	DUMMY	,D5
	SRCCTL	,D1
	INXCTL	,D1
	COUNT	,D5
	V	,D1
	DLOC	,D2
	ENTRY	,A10
	COMMNO	,D1
	FIRST1	,D1
	MASK	,A8,	'ZZZ,ZZX-'
	MASK1	,A13,	'Z,ZZZ,ZZZ.XX-'
	MASK2	,A7,	'ZZZ,ZZX'
	FIRST	,D1
	NOLOCS	,D2
	TAGKEY	,A17
	LSTKEY	,A17
	SPHYS	,D6
	TPHYS	,D6
	TOLDOH	,D6
	LOCATS	,D2
	NOTAGS	,D5
	NOITEM	,D5
	LINCNT	,D2
	PGCNT	,D3
	SVTQOH	,D6
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1
	LPSW	,D2
	RPTNUM	,D3
	PRTTYP	,A1
	MSGSWT	,D1
PROC (1)
	XCALL TERID (V)
	XCALL OUTPT (2,1,1,'PRINT AUDIT LIST',1)
	SPLFIL (5,6) = 'CS'
	LPSW = 2		;PRINTED OR SPOOLED ONLY
	XCALL LPON (LPSW,SPLFIL)
	IF (LPSW.EQ.0) GO TO NOWAIT
	XCALL WATE (2,V)		;PRINTING MESSAGE
	CALL OPENS				;OPEN ALL NECESSARY FILES
	FIRST1 = 1				;"FIRST" TAG REPORTED
	FIRST = 1				;"FIRST" TAG FOR A LOCATION
	LINCNT = 60
	PGCNT = 0
	COUNT = 1
NXTREC,
	INCR COUNT				;RELATIVE REC COUNT
	LOKCTL = 1
	XCALL IO (1,INVTAG,COUNT,READ,LOKCTL)
	IF (TAGITM.EQ.']]]DEL') GO TO NXTREC	;REC FLAGGED FOR DELETION
	IF (TAGITM.EQ.']]]]]]') GO TO EOF	;END OF FILE CONDITION
	INCR NOTAGS				;COUNT OF TAGS READ
	TAGKEY (1,15) = TAGITM			;CONSTRUCT A KEY
	TAGKEY (16,17) = TLOC			;FOR COMPARISON
	IF (TAGKEY.EQ.LSTKEY) COMMNO = 6	;WARNING - MULTIPLE TAGS
						;FOR SAME PHYSICAL LOCATION
	IF (FIRST1) LSTKEY = TAGKEY		;INSURE NO KEY BREAK ON ITEM
	IF (FIRST1) CALL NEWITM			;RETRIEVE ITMMAS ITEM FOR
						;FIRST TAG READ
	IF (TAGKEY.NE.LSTKEY) CALL CHANGE	;EITHER ITEM NUMBER OR
						;LOCATION HAS CHANGED
	SVTQOH = TQTYOH				;SAVE QUANTITY ON-HAND
						;FOR CURRENT TAG
	SPHYS = SPHYS + TQTYOH			;ACCUMULATE LOCATION SUBTOTAL
						;FOR PHYSICAL COUNT QUANTITY
	TPHYS = TPHYS + TQTYOH			;ACCUMULATE LOCATION(S) REPORTED
						;TOTAL FOR PHYSICAL COUNT QTY
	IF (LINCNT.LT.58) GO TO PRTAG		;FORMAT FOR NEW PAGE
	LINCNT = 60
	PLINE (8,22) = TAGITM
	IF (JSTIFY) XCALL LEFTJ (PLINE(8,22),15)
	CALL PRINT
	PLINE(8,18) = '(CONTINUED)'
PRTAG,
	PLINE (27,32) = TAGNO, 'XXXXXX'
	PLINE (41,42) = TLOC
	PLINE (49,50) = TUOM
	IF (TUOM.NE.SUOFM) COMMNO = 5		;ERROR UOM'S DON'T MATCH
	IF (FIRST) PLINE (57,64) = QTYONH (DLOC), MASK
	FIRST =
	PLINE (70,76) = TQTYOH, MASK2
	PLINE (81,93) = ((TQTYOH - QTYONH(DLOC))*AVGCST)#1,MASK1
	IF (COMMNO.EQ.6) PLINE (81,93) = (TQTYOH*AVGCST)#1,MASK1
	CALL COMENT				;INSERT POSTING COMMENT
	CALL PRINT
	GO TO NXTREC
EOF,
	CALL CHANGE				;FINISH ITEM GROUP
	XCALL LINFD (2)
	LINCNT = LINCNT + 2
	PLINE =
	PLINE (6,17) = 'TOTAL ITEMS:'
	PLINE (18,23) = NOITEM, MASK
	PLINE (36,54) = 'TOTAL TAGS COUNTED:'
	PLINE (56,62) = NOTAGS,MASK2
	CALL PRINT
CLOSES,
	CLOSE 1
	CLOSE 2
	CLOSE 3
	XCALL LPOFF (LPSW,SPLFIL,PGCNT)
NOWAIT,
	XCALL OUTPT (3,1,2,'\',1)
	XCALL OUTPT (6,21,0,'ARE AUDIT LIST FIGURES SATISFACTORY ?',V)
	XCALL INPUT (6,60,1,1,'YN',ENTRY,INXCTL,V)
	IF (ENTRY(1,1).EQ.'Y') XCALL PGCHN ('IM:PSTTAG',1)
						;GO AHEAD AND POST THEM
	XCALL WATE (4,V)			;PROCESSING MESSAGE
	XCALL OUTPT (2,1,1,'SORT TAGS INTO TAG # SEQUENCE',1)
	XCALL FILES (2,'I',42,4)		;REMOVE PROTECTION
						;FROM ITMIDX FILE #42
	XCALL FILES (3,'I',41,4)		;REMOVE INCREMEMENT FROM
						;ITMMAS FILE # 41
	MSGPRG = 'TAGMNT'
	SNDPGM = 'UNPRTG'
	MSGSWT = 5
	XCALL SNMSG (SNDMSG,MSGSWT)
	MSGSWT = 2
	XCALL SNMSG (NXTMSG,MSGSWT)
	XCALL PGCHN ('IM:SRTTAG',1)			;ABORT POSTING, RE-SORT AND
						;RETURN TO MENU
;------------------------------------------------------------------------

CHANGE,
	TOLDOH = TOLDOH + QTYONH (DLOC)		;UPDATE TOTAL ON-HAND
						;QUANTITY FOR ITEM
	LSTKEY (16,17) = TLOC			;SAVE NEW LOCATION
						;IN COMPARE KEY
PRLOC,
	IF (SPHYS.EQ.SVTQOH) GO TO NEWLOC	;TEST FOR ONE TAG PER LOCATION
	PLINE (32,39) = 'LOCATION'
	PLINE (41,42) = LOC (DLOC)
	PLINE (44,52) = 'SUBTOTAL:'
	PLINE (57,64) = QTYONH (DLOC), MASK
	PLINE (70,76) = SPHYS, MASK2
	PLINE (81,93) = ((SPHYS - QTYONH(DLOC))*AVGCST)#1,MASK1
	CALL PRINT
NEWLOC,
	IF (SPHYS.LT.0) COMMNO = 3	;ERROR - PHYSICAL COUNT < 0
	IF (SPHYS.EQ.0) COMMNO = 4	;ERROR - PHYSICAL COUNT = 0
	SPHYS =
	FIRST = 1
	INCR NOLOCS			;INDICATE ANOTHER LOCATION REPORTED
	CALL FNDLOC			;FIND NEW LOCATION
	IF (TAGITM.EQ.']]]]]]') GO TO PRITM	;TEST FOR END-OF-FILE
	IF (LSTKEY(1,15).EQ.TAGKEY(1,15)) RETURN	;TEST FOR SAME ITEM
PRITM,
	XCALL LINFD (1)
	INCR LINCNT
	IF (LINCNT.LT.60) GO TO PRTOT		;FORMAT FOR NEW PAGE
	LINCNT = 60
	PLINE (8,22) = TAGITM
	IF (JSTIFY) XCALL LEFTJ (PLINE(8,22),15)
	CALL PRINT
	PLINE(8,18) = '(CONTINUED)'
PRTOT,
	PLINE (42,52) = 'ITEM TOTAL:'
	PLINE (57,64) = TOLDOH, MASK
	PLINE (70,76) = TPHYS, MASK2
	PLINE (81,93) = ((TPHYS - TOLDOH)*AVGCST)#1,MASK1
	CALL PRINT
	IF (LINCNT+5.GE.58) LINCNT = 60
NEWITM,
	IF (TAGITM.EQ.']]]]]]') RETURN	;END-OF-FILE
	FIRST1 =			;RESET FIRST TIME THROUGH FLAG
	LSTKEY (1,15) = TAGITM		;SAVE NEW ITEM NUMBER IN COMPARE KEY
	NOLOCS = 1			;FIRST LOCATION TO BE REPORTED
	SPHYS =				;ZERO LOCATION SUBTOTAL
	TPHYS =				;ZERO LOCATION TOTAL
	TOLDOH =			;ZERO TOTAL OLD QTY-ON-HAND
	COMMNO = 1			;SET UP BAD ITEM ERROR CONDITION
	ITMMAS =
	DESCR = '*** BAD ITEM NUMBER ***'
	LOC (1) = '??'
	XCALL SERCH (2,ITMIDX,TAGITM,1,15,ORG041,DUMMY,SRCCTL,4,16,20,0,0,0,0)
	IF (SRCCTL.EQ.1.OR.IRC041.EQ.0) GO TO NOTFND
	LOKCTL = 1
	XCALL IO (3,ITMMAS,IRC041,READ,LOKCTL)
	COMMNO =
	INCR NOITEM		;INCREMENT NUMBER OF VALID ITEMS REPORTED
NOTFND,
	PLINE (8,22) = TAGITM
	IF (JSTIFY) XCALL LEFTJ (PLINE(8,22),15)
	PLINE (25,54) = DESCR
	CALL COMENT
	XCALL LINFD (2)
	LINCNT = LINCNT + 2
	CALL PRINT
	XCALL LINFD (1)
	INCR LINCNT
	CALL FNDLOC		;FIND LOCATION OF FIRST TAG FOR NEW ITEM
	RETURN
;------------------------------------------------------------------------
FNDLOC,
	DLOC =
LOCAT1,
	INCR DLOC
	IF (DLOC.GT.NUMLOC.OR.LOC(DLOC).EQ.TLOC) GO TO LOCAT2
	GO TO LOCAT1
LOCAT2,
	IF (DLOC.LE.NUMLOC) GO TO LOCAT3
	COMMNO = 2		;ERROR - BAD LOCATION
	DLOC = 1
LOCAT3,
	RETURN
;------------------------------------------------------------------------
COMENT,
	IF (COMMNO.EQ.0) RETURN
	PLINE (96,125) = COMLIN (COMMNO)
	COMMNO =
	RETURN
;------------------------------------------------------------------------
PRINT,
	XCALL LPOUT (LINCNT,PGCNT,PLINE,TITLE,HDR1,HDR2,'NO HDR',
&	 'NO LEGEND','NO LEGEND','NO LEGEND',0,132,132,0,LPSW,RPTNUM,PRTTYP)
	RETURN
;------------------------------------------------------------------------
OPENS,
	SWITCH = 5		;OPEN WITHOUT CHANGING STATUS
	XCALL FILES (1,'I',40,SWITCH)		;FILE #40 - INVTAG
	SWITCH = 5
	XCALL FILES (2,'I',42,SWITCH)		;FILE #42 - ITMIDX
	SWITCH = 5
	XCALL FILES (3,'I',41,SWITCH)		;FILE #41 - ITMMAS
	LOKCTL = 1
	XCALL IO (3,DUMINV,1,READ,LOKCTL)
	RETURN
END
