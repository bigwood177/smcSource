;  PSTTAG / IM 
;
;
;		::PCPYIM.DEF::
;*****************************************************************************
;		INVENTORY MANAGEMENT  
;
;		RELEASED: AUGUST 1, 1984 (d70s10)
;*****************************************************************************
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984
;		MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;		PROGRAM FOR POSTING INVENTORY COUNT TAGS QUANTITIES TO
;		THE ITEM MASTER QUANTITIES-ON-HAND
;
RECORD
	,A64,'THIS MATERIAL CONTAINS THE VALUABLE PROPERTIES AND TRADE SECRETS'
	,A62,'OF MCBA, EMBODYING CONFIDENTIAL INFORMATION AND IDEAS, NO PART'
	,A56,'OF WHICH MAY BE USED AND/OR DISCLOSED WITHOUT MCBAs DULY'
	,A55,'AUTHORIZED LICENSE AGREEMENT AND/OR WRITTEN PERMISSION.'
	,A61,'COPYRIGHT (C) MCBA, AN UNPUBLISHED WORK. ALL RIGHTS RESERVED.'

RECORD INVTAG		;
		.INCLUDE 'DEF:RD040A.DEF'
RECORD DUMTAG		;
		.INCLUDE 'DEF:RD040B.DEF'
RECORD ITMMAS		;
		.INCLUDE 'DEF:RD041A.DEF'
RECORD DUMINV		;
		.INCLUDE 'DEF:RD041B.DEF'
RECORD ITMIDX		;
		.INCLUDE 'DEF:RD042A.DEF'
RECORD ERRMSG
		,A5	,'ITEM '
	ERRITM	,A15
		,A5	,' LOC '
	ERRLOC	,A2
		,A30	,' not found in the ITMMAS file.'
RECORD
	V	,D1
	SWITCH	,D1
	FIRST	,D1
	DLOC	,D2
	COUNT	,D5
	TAGKEY	,A17
	LSTKEY	,A17
	DUMMY	,D5
	SRCCTL	,D1
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1
	ERROR	,D1
PROC (1)
	XCALL TERID (V)
	XCALL OUTPT (2,1,1,'POSTING TO ITEM MASTER',1)
	XCALL WATE (4,V)
	CALL OPENS
	COUNT = 1
	FIRST = 1
NXTREC,
	ERROR =
	INCR COUNT
	IF (COUNT.GT.REC040) GO TO EOF
	LOKCTL = 1
	XCALL IO (1,INVTAG,COUNT,READ,LOKCTL)
	IF (TAGITM .EQ. ']]]DEL') GO TO NXTREC	;RECORD FLAGGED FOR DELETION
	IF (TAGITM .EQ. ']]]]]]') GO TO EOF		;END OF FILE CONDITION
	TAGKEY (1,15) = TAGITM
	TAGKEY (16,17) = TLOC
	IF (TAGKEY .NE. LSTKEY) CALL NEWITM		;HAS ITEM NUMBER CHANGED?
	IF (ERROR) GOTO NXTREC
	QTYONH (DLOC) = QTYONH (DLOC) + TQTYOH
	GO TO NXTREC
EOF,
	XCALL RDATE (LSTCNT)
	LOKCTL = 1
	XCALL IO (3,ITMMAS,IRC041,WRITE,LOKCTL)
	XCALL FILES (3,'U',41,4)		;CLOSE & REMOVE PROTECTION
	XCALL FILES (2,'I',42,4)		;CLOSE & DECREMENT
	CLOSE 1					;CLOSE INVTAG FILE W/O CHANGING
						;PROTECTION
	XCALL PGCHN ('IM:CLRTAG',1)				;STOP TO CLEAR TAG FILE
;************************************************************************

NEWITM,
	IF (TAGITM .EQ. LSTKEY(1,15)) GO TO SAMITM	;ITEM HAS NOT CHANGED
	IF (FIRST) GO TO SKIP
	IF (ITMIDX.EQ.']]]]]]') GO TO SKIP
	XCALL RDATE (LSTCNT)			;UPDATE THE LAST COUNT DATE
	LOKCTL = 1
	XCALL IO (3,ITMMAS,IRC041,WRITE,LOKCTL)
SKIP,
	FIRST =
	SRCCTL =
	XCALL SERCH (2,ITMIDX,TAGITM,1,15,ORG041,DUMMY,SRCCTL,4,16,20,0,0,0,0)
	GO TO (BAD), SRCCTL
	LOKCTL = 1
	XCALL IO (3,ITMMAS,IRC041,READ,LOKCTL)
	LSTKEY (1,15) = TAGITM
SAMITM,
	LSTKEY (16,17) = TLOC
	DLOC =
LOCATE,
	INCR DLOC
	IF (DLOC.GT.NUMLOC) GOTO BAD
	IF (LOC(DLOC).EQ.TLOC) GOTO LOCFND
	GO TO LOCATE
LOCFND,
	QTYONH (DLOC) =
	RETURN
BAD,
	ERRITM = TAGITM
	ERRLOC = TLOC
	XCALL MESAG (ERRMSG,1)
	ERROR = 1
	RETURN
;************************************************************************

OPENS,
	SWITCH = 5				;OPEN WITHOUT CHANGING
						;FILE STATUS
	XCALL FILES (1,'I',40,SWITCH)		;FILES #40 - INVTAG
	SWITCH = 5
	XCALL FILES (2,'I',42,SWITCH)		;FILE #42 - ITMIDX
	SWITCH = 5
	XCALL FILES (3,'U',41,SWITCH)		;FILE #41 - ITMMAS
	LOKCTL = 1
	XCALL IO (3,DUMINV,1,READ,LOKCTL)
	LOKCTL = 1
	XCALL IO (1,DUMTAG,1,READ,LOKCTL)
	RETURN
END
