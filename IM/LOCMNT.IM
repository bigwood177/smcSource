;  LOCMNT / IM 
;
;
;		::PCPYIM.DEF::
;*****************************************************************************
;		INVENTORY MANAGEMENT  
;
;		RELEASED: AUGUST 1, 1984 (d70s10)
;*****************************************************************************
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984
;		MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;		INVENTORY LOCATION MAINTENANCE
;
RECORD
	,A64,'THIS MATERIAL CONTAINS THE VALUABLE PROPERTIES AND TRADE SECRETS'
	,A62,'OF MCBA, EMBODYING CONFIDENTIAL INFORMATION AND IDEAS, NO PART'
	,A56,'OF WHICH MAY BE USED AND/OR DISCLOSED WITHOUT MCBAs DULY'
	,A55,'AUTHORIZED LICENSE AGREEMENT AND/OR WRITTEN PERMISSION.'
	,A61,'COPYRIGHT (C) MCBA, AN UNPUBLISHED WORK. ALL RIGHTS RESERVED.'

RECORD ITMMAS		;
		.INCLUDE 'DEF:RD041A.DEF'
RECORD DUMINV ,X		;
		.INCLUDE 'DEF:RD041B.DEF'
RECORD ITMIDX		;
		.INCLUDE 'DEF:RD042A.DEF'
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD
	ADD	,D1
	CTR	,D2
	LOCCTR	,D2
	LOCTNS	,D2
	OPTION	,D1
	ENTRY	,A31
	INXCTL  ,D1
	CNGCTL	,D1
	WHATNO	,D2
	DECMAL	,D18
	SELECT	,D1
	ADDCNT	,D5
	KITMNO	,A15
	KEY   	,A15
	BSEND	,D5
	BSMID	,D5
	MAXREC	,D5
	SRCCTL	,D1
	SAVCTR	,D2
	SWITCH	,D1
	CONT	,D2
	SROW	,D2
	MODE	,A25
	V	,D1
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1
	WRKITM	,A15
	JUSTIF	,D1
PROC (1)
	XCALL TERID (V)
	SWITCH = 1
	XCALL FILES (2,'I',42,SWITCH)		;FILE # 42 -- ITMIDX FILE
	IF (SWITCH.EQ.9) GO TO ENDOFF

	SWITCH = 1
	XCALL FILES (1,'U',41,SWITCH)		;FILE # 41 -- ITMMAS FILE
	IF (SWITCH.EQ.9) GO TO ENDOF1
UPDFLG,
	LOKCTL = 0
	XCALL IO (1,DUMINV,1,READ,LOKCTL)
	JUSTIF = JSTIFY
	GO TO (ENDMNU), LOKCTL
	LOCTNS = NUMLOC
	BSEND = ORG041
	MAXREC = MAX041
	DFL041 =
	SFL041 =
	LOKCTL = 1
	XCALL IO (1,DUMINV,1,WRITE,LOKCTL)
	XCALL OUTPT (1,1,2,'\',V)
	GO TO DISPLA

;********************************************************************

ENDMNU,
	XCALL FILES (1,'U',41,4)
ENDOF1,
	XCALL FILES (2,'U',42,4)
ENDOFF,
	XCALL WATE (4,V)
	XCALL PGCHN ('IM:IMMENU',1)

;********************************************************************

DISPLA,
	ADD =
	UNLOCK 1
	XCALL OUTPT (1,1,0,'INVENTORY LOCATION CONTROL',V)
	CNGCTL =
	ITMMAS =
	MODE = 'ADD/CHANGE/INQUIRE/DELETE'
	XCALL OUTPT (2,1,2,MODE,1)
	CALL HEADER
ITMNUM,
	CTL = '02,11,15,01,AE'
	CALL INPUT
	GO TO (DISPLA,ENDMNU), INXCTL
	IF (JUSTIF) XCALL FRMAT (ENTRY(1,15),15)
	KITMNO = ENTRY (1,15)
	KEY = KITMNO
	XCALL OUTPT (2,11,0,ENTRY(1,15),V)
	XCALL SERCH (2,ITMIDX,KEY,1,15,BSEND,BSMID,SRCCTL,1,16,20,0,0,0,0)
	GO TO FNDREC
HEADER,
	XCALL OUTPT (2,1,1,'1. ITEM #',V)
	XCALL OUTPT (2,62,0,'2. MFGING LOC',V)
	XCALL OUTPT (3,1,1,'3. LOCTN',V)
	XCALL OUTPT (3,11,0,'4. ON-HAND  ALLOCATED',V)
	XCALL OUTPT (3,34,0,'5. ON-ORDER  6. REO LVL',V)
	XCALL OUTPT (3,59,0,'7. ORD UPTO  8. BIN #',V)
	RETURN
MFGLC1,
	SROW = ROW
MFGLC,
	CTL = '02,76,02,01,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	IF (ENTRY(1,2).EQ.'  ') GO TO MFGLC
	MFGLOC = ENTRY(1,2)
	CONT =
CKSTLC,
	INCR CONT
	IF (CONT.GT.LOCTNS.OR.LOC(CONT).EQ.'  ') GO TO BADLC1
	IF (LOC(CONT).NE.MFGLOC) GO TO CKSTLC
	ROW = SROW
	SROW =
	GO TO ANYCNG
BADLC1,
	XCALL MESAG ('LOCATION DOES NOT EXIST',1)
	GO TO MFGLC
LOCA,
	ADD = 1
	CTL (4,14) = '05,02,01,AE'
	CALL INPUT
	GO TO (CLRLOC,PROCES), INXCTL
	IF (ENTRY(1,2).EQ.'  ') GO TO LOCA
	LOCCTR =
NODUPS,
	INCR LOCCTR
	IF (LOC(CTR).EQ.ENTRY(1,2)) GO TO ANYCNG
	IF (LOCCTR.GT.LOCTNS.OR.LOC(LOCCTR).EQ.'  ') GO TO ADDIT
	IF (LOC(LOCCTR).EQ.ENTRY(1,2)) GO TO BADLOC
	GO TO NODUPS
BADLOC,
	XCALL MESAG ('LOCATION ALREADY EXISTS FOR THIS ITEM',1)
	GO TO LOCA
CHSTLC,
	MFGLOC = ENTRY(1,2)
	XCALL OUTPT (2,76,0,MFGLOC,V)
	XCALL MESAG ('NOTE: MANUFACTURING LOCATION IS CHANGED',2)
	RETURN
ADDIT,
	IF (LOC(CTR).EQ.MFGLOC) CALL CHSTLC
	LOC(CTR) = ENTRY(1,2)
;	IF (LOC(CTR).EQ.'  ') GO TO ANYCNG
	GO TO (ANYCNG), CNGCTL
QONHND,
	CTL (4,14) = '14,06,00,#-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	QTYONH(CTR) = ENTRY(1,7)
	DECMAL = QTYONH(CTR)
	MAX = 6
	CALL DSPNUM
QALLOC,
	IF (ADD.EQ.0) GO TO (QONODR,ANYCNG), CNGCTL + 1
	CTL (4,14) = '25,06,00,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	QTYCOM (CTR) = ENTRY
	DECMAL = QTYCOM (CTR)
	CALL DSPNUM
	GO TO (ANYCNG), CNGCTL
QONODR,
	CTL (4,14) = '37,06,00,#-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	QTYONO(CTR) = ENTRY
	DECMAL = QTYONO(CTR)
	CALL DSPNUM
	GO TO (ANYCNG), CNGCTL
REORDR,
	CTL (4,14) = '51,05,00,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	REOLVL(CTR) = ENTRY(1,5)
	DECMAL = REOLVL(CTR)
	CALL DSPNUM
	GO TO (ANYCNG), CNGCTL
OUPTO,
	CTL (4,14) = '63,05,00,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	ORDUPT(CTR) = ENTRY(1,5)
	DECMAL = ORDUPT(CTR)
	CALL DSPNUM
	GO TO (ANYCNG), CNGCTL
PICKS,
	CTL (4,14) = '76,03,00,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	PIKSEQ(CTR) = ENTRY(1,3)
	GO TO ANYCNG
CLRLOC,
	CNGCTL =
	IF (LOC(CTR).EQ.MFGLOC) GO TO NOCNG
	IF (QTYONH(CTR).NE.0.OR.QTYONO(CTR).NE.0.OR.QTYCOM(CTR).NE.0)GO TO NOCLR
	IF (LOC(CTR).EQ.'  ') GO TO LOCA
	LOC(CTR)=
	QTYONH(CTR)=
	QTYCOM(CTR)=
	QTYONO(CTR)=
	REOLVL(CTR)=
	ORDUPT(CTR)=
	PIKSEQ(CTR)=
	SAVCTR = CTR
SFTLP,
	INCR CTR
	IF (CTR.GT.LOCTNS.OR.LOC(CTR).EQ.'  ') GO TO FIXED
	LOC(CTR-1)=LOC(CTR)
	QTYONH(CTR-1)=QTYONH(CTR)
	QTYCOM(CTR-1)=QTYCOM(CTR)
	QTYONO(CTR-1)=QTYONO(CTR)
	REOLVL(CTR-1)=REOLVL(CTR)
	ORDUPT(CTR-1)=ORDUPT(CTR)
	PIKSEQ(CTR-1)=PIKSEQ(CTR)
	GO TO SFTLP
FIXED,
	LOC(CTR-1)=
	QTYONH(CTR-1)=
	QTYCOM(CTR-1)=
	QTYONO(CTR-1)=
	REOLVL(CTR-1)=
	ORDUPT(CTR-1)=
	PIKSEQ(CTR-1)=
	CTR = SAVCTR - 1
	XCALL OUTPT (ROW,1,1,'\',V)
	ROW = ROW - 1
	GO TO NEXTL2
NOCNG,
	XCALL MESAG
&	 ('MUST CHANGE MANUFACTURING LOCATION BEFORE DELETING THIS LOCATION',1)
	CTR = CTR - 1
	ROW = ROW - 1
	GO TO NEXTL2
NOCLR,
	XCALL MESAG ('ON-HAND, ON-ORD, COMMITTED MUST = 0 TO DELETE LOCATION',1)
	CTR = CTR - 1
	ROW = ROW - 1
	GO TO NEXTLO			;ALLOW DELETE OF QTYCOM

;********************************************************************

ANYCNG,
	CNGCTL = 6
	XCALL ANYCN (CNGCTL,WHATNO)
	IF (LOC(CTR).EQ.'  '.AND.CNGCTL.EQ.0) GO TO PROCES
	IF (LOC(CTR).EQ.'  '.AND.CNGCTL.EQ.1) GO TO LOCA
	IF (CTR.EQ.LOCTNS.AND.CNGCTL.EQ.0) GO TO PROCES
	GO TO (PROCES,NEXTL2,CNGBR), CNGCTL+2
CNGBR,
	GO TO (BADCNG,MFGLC1,LOCA,QONHND,QONODR,REORDR,OUPTO,PICKS), WHATNO
BADCNG,
	XCALL MESAG ('INVALID SELECTION',1)
	GO TO ANYCNG

;********************************************************************

PROCES,
	XCALL WATE (3,V)
	GO TO CHANGE

;********************************************************************

FNDREC,
	GO TO (NOFIND), SRCCTL
	XCALL WATE (3,V)
	LOKCTL = 0
	XCALL IO (1,ITMMAS,IRC041,READ,LOKCTL)
	GO TO (DISPLA), LOKCTL
	XCALL OUTPT (12,1,1,'\',V)
	XCALL OUTPT (2,29,0,DESCR,V)
	XCALL OUTPT (2,76,0,MFGLOC,V)
	CTL =
	CTR =
	ROW = 03
NEXTL2,
	ADD =
NEXTLO,
	INCR CTR
	INCR ROW
	IF (ROW.GE.12) CALL SCROLL
	IF (CTR.GT.LOCTNS) GO TO ANYCNG
	IF (LOC(CTR).EQ.'  ') GO TO LOCA
	XCALL OUTPT (ROW,5,0,LOC(CTR),V)
	CTL(4,14) = '14,06,01,#-'
	DECMAL = QTYONH(CTR)
	CALL DSPNUM
	COL = 25
	DECMAL = QTYCOM(CTR)
	CALL DSPNUM
	COL = 37
	DECMAL = QTYONO(CTR)
	CALL DSPNUM
	COL = 51
	MAX = 5
	DECMAL = REOLVL(CTR)
	CALL DSPNUM
	COL = 63
	DECMAL = ORDUPT(CTR)
	CALL DSPNUM
	XCALL OUTPT (ROW,76,0,PIKSEQ(CTR),V)
	GO TO ANYCNG

;********************************************************************

CHANGE,
	ON ERROR CHANGE
	LOKCTL = 1
	XCALL IO (1,ITMMAS,IRC041,WRITE,LOKCTL)
	GO TO DISPLA

;********************************************************************

SCROLL,
	XCALL OUTPT (12,1,0,'\',V)
	DISPLAY (15,10)
	IF (V.EQ.2) DISPLAY (15,10)
	XCALL OUTPT (1,1,1,'INVENTORY LOCATION CONTROL',V)
	XCALL OUTPT (2,1,1,MODE,1)
	CALL HEADER
	WRKITM = KITMNO
	IF (JUSTIF) XCALL LEFTJ (WRKITM,15)
	XCALL OUTPT (2,11,1,KITMNO,V)
	XCALL OUTPT (2,29,0,DESCR,V)
	XCALL OUTPT (2,76,0,MFGLOC,V)
	ROW = 11
	RETURN
NOFIND,
	XCALL MESAG ('ITEM NOT ON FILE',1)
	GO TO DISPLA

;********************************************************************

INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN

;********************************************************************

DSPNUM,
	OPTION = 1
	GO TO CALDSP
DSPDLR,
	OPTION = 3
CALDSP,
	XCALL DSPLY (MAX,ROW,COL,DECMAL,OPTION,V)
	RETURN

;********************************************************************
END
