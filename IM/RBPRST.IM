;  RBPRST / IM 
;
;
;		::PCPYIM.DEF::
;*****************************************************************************
;		INVENTORY MANAGEMENT  
;
;		RELEASED: AUGUST 1, 1984 (d70s10)
;*****************************************************************************
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984
;		MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;
;		THIS PROGRAM RUNS AFTER THE ITEM MASTER FILE HAS BEEN RE-ORGED.
;		IT COMPRESSES OUT OF THE PRODUCT STRUCTURE AND WHERE-USED FILES
;		RECORDS FOR ANY ITEM THAT HAS BEEN DELETED. ALSO, IT CORRECTLY
;		RESETS THE "IRC091" POINTER TO THE RECORD# IN THE ITEM FILE
;		FOR THE PARENT ITEM.
;
;
RECORD
	,A64,'THIS MATERIAL CONTAINS THE VALUABLE PROPERTIES AND TRADE SECRETS'
	,A62,'OF MCBA, EMBODYING CONFIDENTIAL INFORMATION AND IDEAS, NO PART'
	,A56,'OF WHICH MAY BE USED AND/OR DISCLOSED WITHOUT MCBAs DULY'
	,A55,'AUTHORIZED LICENSE AGREEMENT AND/OR WRITTEN PERMISSION.'
	,A61,'COPYRIGHT (C) MCBA, AN UNPUBLISHED WORK. ALL RIGHTS RESERVED.'

RECORD PRDSTR		;
		.INCLUDE 'DEF:RD091A.DEF'
RECORD PRDCTL		;
		.INCLUDE 'DEF:RD091B.DEF'
RECORD BRACKS		;
		.INCLUDE 'DEF:RD091C.DEF'
RECORD PRDIDX		;
		.INCLUDE 'DEF:RD092A.DEF'
RECORD INVCTL		;
		.INCLUDE 'DEF:RD041B.DEF'
RECORD ITMIDX		;
		.INCLUDE 'DEF:RD042A.DEF'
RECORD SNDMSG
	PRGNAM	,A9,'IM:RBPRS2'
	RCNT	,D5
	OCNT	,D5
		,D3,	092
RECORD
	INXCTR	,D5
	PRDCTR	,D5
	WRTCNT	,D5
	SWITCH	,D1,	1
	V	,D1
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1

PROC (1)
	XCALL TERID (V)
	XCALL OUTPT (2,1,2,'RE-BUILD PRODUCT STRUCTURE FILE',V)
	XCALL WATE (4,V)
	CALL OPENS
	INXCTR = 2
	PRDCTR = 2
	WRTCNT = 1
FSTPDX,
	IF (PRDCTR.GT.REC091) GO TO WRTBRX
	LOKCTL = 1
	XCALL IO (1,PRDSTR,PRDCTR,READ,LOKCTL)
	IF (CITMNO(1,6).NE.']]]DEL') GO TO FSTIDX
	INCR PRDCTR
	GO TO FSTPDX
FSTIDX,
	IF (INXCTR.GT.REC041) GO TO WRTBRX
	LOKCTL = 1
	XCALL IO (4,ITMIDX,INXCTR,READ,LOKCTL)
	IF (IRC041.NE.0) GO TO REORG
	INCR INXCTR
	GO TO FSTIDX
REORG,
	IF (IITMNO.LT.PITMNO) GOTO RDIDX
	IF (IITMNO.GT.PITMNO) GOTO RDSTR
	PRECNO = IRC041
	INCR WRTCNT
	LOKCTL = 1
	XCALL IO (1,PRDSTR,WRTCNT,WRITE,LOKCTL)
	CMPITM = CITMNO
	IRC091 = WRTCNT
	LOKCTL = 1
	XCALL IO (2,PRDIDX,WRTCNT,WRITE,LOKCTL)
RDSTR,
	INCR PRDCTR
	IF (PRDCTR.GT.MAX091) GOTO WRTBRX
	LOKCTL = 1
	XCALL IO (1,PRDSTR,PRDCTR,READ,LOKCTL)
	IF (PRDSTR.EQ.BRACKS) GOTO WRTBRX
	IF (CITMNO.EQ.']]]DEL') GOTO RDSTR
	GOTO REORG
RDIDX,
	INCR INXCTR
	IF (INXCTR.GT.MAX041) GOTO WRTBRX
	LOKCTL = 1
	XCALL IO (4,ITMIDX,INXCTR,READ,LOKCTL)
	IF (ITMIDX.EQ.BRACKS) GOTO WRTBRX
	GOTO REORG

WRTBRX,
	PRDSTR = BRACKS
	PRDIDX = BRACKS
	RCNT = WRTCNT
WRTBR1,
	INCR WRTCNT
	IF (WRTCNT.GT.MAX091) GOTO EOF
	LOKCTL = 1
	XCALL IO (1,PRDSTR,WRTCNT,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IO (2,PRDIDX,WRTCNT,WRITE,LOKCTL)
	GOTO WRTBR1
EOF,
	LOKCTL = 1
	XCALL IO (1,PRDCTL,1,READ,LOKCTL)
	REC091 = RCNT
	ORG091 = RCNT
	DEL091 =
	LOKCTL = 1
	XCALL IO (1,PRDCTL,1,WRITE,LOKCTL)
	CLOSE 1
	CLOSE 2
	CLOSE 3
	CLOSE 4
	OCNT = 1
	SWITCH = 5
	XCALL SNMSG (SNDMSG,SWITCH)
	XCALL PGCHN ('BM:SRTPRI',1)
;***********************************************************************
OPENS,
	SWITCH = 5
	XCALL FILES (1,'U',091,SWITCH)		;FILE # 091 -- PRDSTR FILE
	IF (SWITCH.EQ.9) GOTO INU091

	SWITCH = 5
	XCALL FILES (2,'U',092,SWITCH)		;FILE # 092 -- PRDIDX FILE
	IF (SWITCH.EQ.9) GOTO INU092

	SWITCH = 5
	XCALL FILES (3,'I',041,SWITCH)		;FILE # 041 -- ITMMAS FILE
	IF (SWITCH.EQ.9) GOTO INU041

	SWITCH = 5
	XCALL FILES (4,'I',042,SWITCH)		;FILE # 042 -- ITMIDX FILE
	IF (SWITCH.EQ.9) GOTO INU042

	LOKCTL = 1
	XCALL IO (1,PRDCTL,1,READ,LOKCTL)
	LOKCTL = 1
	XCALL IO (3,INVCTL,1,READ,LOKCTL)
	RETURN

INU042,
	XCALL FILES (3,'I',041,4)
INU041,
	XCALL FILES (2,'U',092,4)
INU092,
	XCALL FILES (1,'U',091,4)
INU091,
	XCALL PGCHN ('IM:IMMENU',1)
END
