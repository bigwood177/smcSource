; USGENT / IM
;
;	USAGE TRANSACTION ENTRY 
;
;
RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR

RECORD USGTRX
		.INCLUDE 'DEF:RD043A.DEF'
RECORD USGCTL
		.INCLUDE 'DEF:RD043B.DEF'
RECORD INVMAS
		.INCLUDE 'DEF:RD131A.DEF'

;;;RECORD INVCTL
;;;		.INCLUDE 'DEF:RD132B.DEF'
;;;RECORD INVIDX
;;;		.INCLUDE 'DEF:RD133A.DEF'

;:
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD SRTMSG
		,A9 ,'IM:USGCNT'
	RCNT	,D5
	OCNT	,D5
RECORD
	V	,D1
	SWITCH	,D1
	KEY	,A15
	BSMID	,D5
	SRCCTL	,D1
	ENTRY	,A20
	INXCTL	,D1
	CNGCTL	,D1
	WHATNO	,D2
	DECMAL	,D18
	OPTION	,D1
	KTAGNO	,D6
	LOKCTL	,D1
	READ	,D1,0
	WRITE	,D1,1
	MSGCTL	,D1
	NXTPRG	,A9
	SELECT	,D1
	LSTUSD	,D8
	TDESCR	,A20
;
PROC
	XCALL TERID (V)
	XCALL OUTPT (1,1,2,'USAGE TRX ENTRY & EDITING',1)
OPEN1,
	SWITCH = 1
	XCALL FILES (3,'U',43,SWITCH)		;FILE 43 - USGTRX
	IF (SWITCH.NE.9) GOTO OPEN2
	GOTO ABORT
OPEN2,
;;;	XCALL FILES (5,'I',133,SWITCH)		;FILE 133 - INVIDX
;;;	IF (SWITCH.NE.9) GOTO OPEN3
;;;	CALL CLOSE1
;;;	GOTO ABORT
OPEN3,
	XCALL FILES (4,'SI',132,SWITCH)		;FILE 132 - INVMAS
	IF (SWITCH.NE.9) GOTO RDHDR
	CALL CLOSE2
	GOTO ABORT
CLOSES,
	XCALL FILES (4,'SI',132,4)
CLOSE2,
;;;	XCALL FILES (5,'I',133,4)
CLOSE1,
	XCALL FILES (3,'U',43,4)
	RETURN
RDHDR,
;;;	LOKCTL = 1
;;;	XCALL IO (4,INVCTL,1,READ,LOKCTL)

	LOKCTL = 1
	XCALL IO (3,USGCTL,1,READ,LOKCTL)
	UNLOCK 3
	XCALL TMENU ('USAGE TRX ENTRY & EDITING',SELECT,2)
	GOTO (DISPLA,DISPLA,DISPLA,EDIT,POST), SELECT
ENDOFF,
	CALL CLOSES
	IF (ORG043.EQ.REC043) GOTO ABORT
	NXTPRG = 'IM:IMMENU'
	GOTO SORT
EDIT,
	CALL CLOSES
	IF (ORG043.EQ.REC043) XCALL PGCHN ('IM:USGEDT',1)
	NXTPRG = 'IM:USGEDT'
	GOTO SORT
POST,
	CALL CLOSES
	IF (ORG043.EQ.REC043) XCALL PGCHN ('IM:USGPRP',1)
	NXTPRG = 'IM:USGPRP'
SORT,
	SWITCH = 3
	XCALL FILES (3,'I',43,SWITCH)
	IF (SWITCH.EQ.9) GOTO ABORT
	RCNT = REC043
	OCNT = ORG043
	MSGCTL = 5
	XCALL SNMSG (SRTMSG,MSGCTL)
	MSGCTL = 2
	XCALL SNMSG (NXTPRG,MSGCTL)
	XCALL PGCHN ('IM:SRTUSG',1)
ABORT,
	XCALL PGCHN ('IM:IMMENU',1)
;
DISPLA,
	UNLOCK 3
	USGTRX =
	INXCTL =
	CNGCTL =
	XCALL OUTPT ( 4,10,2,'1. TAG NUMBER',1)
	XCALL OUTPT ( 6,10,0,'   DESCRIPTION',1)
	XCALL OUTPT ( 8,10,0,'   UNIT COST',1)
	XCALL OUTPT (10,10,0,'   ON HAND',1)
	XCALL OUTPT (12,10,0,'2. QUANTITY USED',1)
	XCALL OUTPT (14,10,0,'3. USAGE DATE',1)
TTAGNO,
	IF (SELECT.GT.1.AND.CNGCTL) GOTO ANYCNG
	CTL = '04,30,06,00,#E'
	CALL INPUT 
	GOTO (DISPLA,RDHDR), INXCTL
	KTAGNO = ENTRY
	KEY(1,6) = KTAGNO,'XXXXXX'
	XCALL SERCH (3,USGTRX,KEY(1,6),1,6,ORG043,BSMID,SRCCTL,1,47,52,0,0,0,0)
	GOTO (DSPREC,DSPREC), SELECT - 1
	IF (SRCCTL.EQ.0) GOTO DUPUSG
	IF (CNGCTL.EQ.0) USGTRX =
	TTAGNO = KTAGNO
	CALL GETINV
	IF (SRCCTL) 
	BEGIN
	  XCALL MESAG ('TAG NOT ON INVENTORY FILE',2)
	  GOTO TTAGNO
	END
	TMATTY = RMMAT
	TGAGE = RMGA	;;;, 'ZZX' [left]
	TWIDTH = RMWID
	clear tdescr
	TDESCR(1,3) = RMMAT
	TDESCR(4,6) = ' - '
	TDESCR(7,9) = RMGA
	TDESCR(10,12) = ' x '
	TDESCR(13,19) = RMWID,'ZZZ.XXX'
	TCOST = RMCOST
	TQTYOH = RMWGT
	XCALL OUTPT (06,30,0,TDESCR,1)

	ENTRY(1,8) = TCOST, 'ZZZ.XXXX' [LEFT]
	XCALL OUTPT (08,30,1,ENTRY(1,8),1)

;;;	CTL = '08,30,08'
;;;	DECMAL = RMCOST
;;;	CALL DSP4DP

	CTL = '10,30,06'
	DECMAL = RMWGT
	CALL DSPNUM
	GOTO (ANYCNG), CNGCTL
TQTY,
	CTL = '12,30,06,00,#-'
	CALL INPUT
	GOTO (DISPLA), INXCTL
	TQTY = ENTRY
	GOTO (ANYCNG), CNGCTL
TUSGDT,
	CTL = '14,30,08,00,D '
	CALL INPUT
	GOTO (DISPLA), INXCTL
	TUSGDT = ENTRY
	IF (TUSGDT.EQ.0)
	BEGIN
	  IF (LSTUSD.EQ.0) GOTO TUSGDT
	  TUSGDT = LSTUSD
	  XCALL DATE8(TUSGDT, D_OUT, D_OUTR, D_FMT, D_SW)
	  XCALL OUTPT (ROW, COL, 0, D_FMT, V)
;;;	  DECMAL(1,6) = TUSGDT
;;;	  CALL DSPDTE
	END
	LSTUSD = TUSGDT
	GOTO ANYCNG
DSPREC,
	IF (SRCCTL) GOTO NOUSAG
	REC043 = BSMID
	ENTRY(1,6) = TTAGNO,'ZZZZZX'
	XCALL OUTPT (04,30,0,ENTRY(1,6),1)
	TDESCR(1,3) = TMATTY
	TDESCR(4,6) = ' - '
	TDESCR(7,9) = TGAGE
	TDESCR(10,12) = ' x '
	TDESCR(13,19) = TWIDTH,'ZZZ.XXX'
	XCALL OUTPT (06,30,0,TDESCR,1)

	ENTRY(1,8) = TCOST, 'ZZZ.XXXX' [LEFT]
	XCALL OUTPT (8,30,1,ENTRY(1,8),1)
;;;	CTL = '08,30,08'
;;;	DECMAL = TCOST
;;;	CALL DSP4DP

	CTL = '10,30,06'
	DECMAL = TQTYOH
	CALL DSPNUM
	DECMAL = TQTY
	CTL = '12,30,06'
	CALL DSPNUM

;;;	DECMAL(1,6) = TUSGDT
	CTL = '14,30,06'
	XCALL DATE8(TUSGDT, D_OUT, D_OUTR, D_FMT, D_SW)
	XCALL OUTPT (ROW, COL, 0, D_FMT, V)
;;;	CALL DSPDTE

	LSTUSD = TUSGDT
	IF (SELECT.EQ.3) GOTO DELETE
ANYCNG,
	XCALL ANYCN (CNGCTL,WHATNO)
	IF (CNGCTL) 
	BEGIN
	  GOTO (TTAGNO,TQTY,TUSGDT), WHATNO
	  CNGCTL = 3
	  GOTO ANYCNG
	END
	GOTO (CHANGE,DELETE), SELECT - 1
ADD,
	LOKCTL = 1
	XCALL IO (3,USGCTL,1,READ,LOKCTL)
	INCR REC043
	IF (REC043.GT.MAX043) GOTO FULL2
	LOKCTL = 1
	XCALL IO (3,USGCTL,1,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IO (3,USGTRX,REC043,WRITE,LOKCTL)
	IF (REC043.EQ.MAX043) XCALL MESAG ('RECORD ADDED - BUT INVTRX FILE IS NOW FULL.  PLEASE XPAND',2)
	GOTO FREBUF
CHANGE,
	LOKCTL = 1
	XCALL IO (3,USGTRX,REC043,WRITE,LOKCTL)
	GOTO FREBUF
DELETE,
	XCALL OUTPT (24,1,1,'OK TO DELETE <N> ? ',1)
	CTL= '24,20,01,00,YN'
	CALL INPUT
	IF (INXCTL.NE.1) GOTO DISPLA
	TUSGDT =
	LOKCTL = 1
	XCALL IO (3,USGTRX,REC043,WRITE,LOKCTL)
	XCALL MESAG ('TRANSACTION DELETED',2)
	LOKCTL = 1
	XCALL IO (3,USGCTL,1,READ,LOKCTL)
	INCR DEL043
	LOKCTL = 1
	XCALL IO (3,USGCTL,1,WRITE,LOKCTL)
FREBUF,
	LOKCTL = 1
	XCALL IO (3,USGTRX,MAX043,READ,LOKCTL)
	LOKCTL = 1
	XCALL IO (3,USGCTL,MAX043,READ,LOKCTL)
	LOKCTL = 1
	XCALL IO (3,USGCTL,1,READ,LOKCTL)
	GOTO DISPLA
FULL2,
	XCALL MESAG ('CANNOT ADD RECORD - INVTRX FILE IS FULL.  PLEASE XPAND',2)
	GOTO DISPLA
DUPUSG,
	USGTRX =
	XCALL MESAG ('USAGE TAG TRX ALREADY ON FILE',2)
	GOTO TTAGNO
NOUSAG,
	USGTRX =
	XCALL MESAG ('USAGE TRANSACTION NOT FOUND',2)
	GOTO TTAGNO
GETINV,

	LOKCTL = 1
	XCALL ISIO (4, INVMAS, KTAGNO, READ, LOKCTL)
	IF (LOKCTL .EQ. 0)
	THEN	SRCCTL = 0
	ELSE	SRCCTL = 1

;;;	KEY(1,6) = TTAGNO,'XXXXXX'
;;;	XCALL SERCH (5,INVIDX,KEY(1,6),1,6,ORG132,BSMID,SRCCTL,1,7,11,0,0,0,0)

	IF (SRCCTL)
	BEGIN
	  INVMAS = 
	  XCALL OUTPT (06,30,0,'*** TAG NOT ON FILE ***',1)
	  RETURN
	END

;;;	LOKCTL = 1
;;;	XCALL IO (4,INVMAS,IRC132,READ,LOKCTL)
	RETURN
;
DSP4DP,
	OPTION = 7
	GOTO CALDSP
DSP3DP,
	OPTION = 4
	GOTO CALDSP
DSPDTE,
	OPTION = 2
	GOTO CALDSP
DSPNUM,
	OPTION = 1
CALDSP,
	XCALL DSPLY(MAX,ROW,COL,DECMAL,OPTION,1)
	RETURN
INPUT,
	XCALL INPUT(ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	RETURN
END
