; INVINQ / IM
;
;	INVENTORY CRT INQUIRY PROGRAM
;
RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR

RECORD INVMAS
		.INCLUDE 'DEF:RD131A.DEF'
RECORD INVCTL
		.INCLUDE 'DEF:RD132B.DEF'
;;;RECORD INVIDX
;;;		.INCLUDE 'DEF:RD133A.DEF'

RECORD	VENMAS
	.INCLUDE 'DEF:RD011A.DEF'

RECORD HDR1
		,A52,'------- TAG ---------------    DATE                Q'
		,A27,'TY        UNIT     EXTENDED'
RECORD HDR2
		,A52,'NUMBER  DESCRIPTION          RECEIVED  SOURCE    ON '
		,A27,'HND       COST         COST'
RECORD PARAMS
	KTAGNO	,D6
	KMATTY	,A3
	KGAGE1	,a3
	KGAGE2	,a3
	KWID1	,D6
	KWID2	,D6
	LINE	,D3
	AVGCST	,D8
	EXTCST	,D10
	TAGCNT	,D4
	TOTCST	,D12
	TOTQTY	,D8
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD	D_KEY
	D_MAT	,A3
	D_GA	,A3
	D_WID	,D6

RECORD	VARS
	CHN011,D2
	V	,D1
	SWITCH	,D1
	INXCTL	,D1
	ENTRY	,A10
	LOKCTL	,D1
	READ	,D1,0
	PLINE	,A80
	BLANKS	,A10
	MASK	,A8,'ZZZZZZX-'
	DTMASK	,A8,'XX/XX/XX'
	DP3MSK	,A13,'ZZZZ,ZZZ.XXX-'
	DP4MSK	,A13,'ZZZZZZZ.XXXX-'
	DECMAL	,D10
	OPTION	,D1
	BSMID	,D5
	KEY	,A6
	SRCCTL	,D1
PROC
	XCALL TERID (V)
	XCALL OUTPT (1,1,2,'INVENTORY STOCK STATUS INQUIRY',1)
OPEN1,
;;;	SWITCH = 1
;;;	XCALL FILES (3,'I',133,SWITCH)		;FILE 133 - RINVIX
;;;	IF (SWITCH.NE.9) GOTO OPEN2
;;;	GOTO ABORT
OPEN2,
	XCALL FILES (2,'SI',132,SWITCH)		;FILE 132 - RINVMS
	XCALL FILES (1, 'SI', 11, SWITCH)
	CHN011 = 1

	IF (SWITCH.NE.9) GOTO DISPLA
	CALL CLOSE1
	
	GOTO ABORT
CLOSES,
	XCALL FILES (2,'I',132,4)
	CLOSE CHN011
CLOSE1,
;;;	XCALL FILES (1,'I',133,4)
	RETURN
DISPLA,
	PARAMS =
;;;	LOKCTL = 1
;;;	XCALL IO (2,INVCTL,1,READ,LOKCTL)
;;;	LOKCTL = 1
;;;	XCALL IO (3,INVIDX,1,READ,LOKCTL)

	XCALL OUTPT (3,1,2,'TAG # ......    DESCRIPTION',1)
	XCALL OUTPT (6,1,0,HDR1,1)
	XCALL OUTPT (7,1,0,HDR2,1)
TAGNO,
	CTL = '03,07,06,00,#E'
	CALL INPUT
	GOTO (DISPLA,ENDOFF), INXCTL
	IF (ENTRY.EQ.BLANKS) GOTO DESCR
	KTAGNO = ENTRY
	IF (KTAGNO.EQ.0) GOTO TAGNO
;
; BINARY SEARCH FOR TAG NUMBER
;
FNDTAG,
	LOKCTL = 1
	XCALL ISIO (2, INVMAS, KTAGNO, READ, LOKCTL)
	IF (LOKCTL .NE. 0)
	BEGIN
	  XCALL MESAG ('TAG NUMBER NOT FOUND',2)
	  GOTO DISPLA
	END

;;;	KEY = KTAGNO,'XXXXXX'
;;;	XCALL SERCH (3,INVIDX,KEY,1,6,ORG132,BSMID,SRCCTL,1,7,11,0,0,0,0)
;;;	IF (SRCCTL)
;;;	BEGIN
;;;	  XCALL MESAG ('TAG NUMBER NOT FOUND',2)
;;;	  GOTO DISPLA
;;;	END
;;;	LOKCTL = 1
;;;	XCALL IO (2,INVMAS,IRC132,READ,LOKCTL)

	CALL DSPLIN
	GOTO EOF
DESCR,
	CTL = '03,30,03,00,AE'
	CALL INPUT
	GOTO (DISPLA,ENDOFF), INXCTL
	IF (ENTRY.EQ.BLANKS) GOTO TAGNO
	KMATTY = ENTRY
	XCALL OUTPT (03,34,0,'-',1)
	CTL = '03,36,03,00,# '
	CALL INPUT
	GOTO (DESCR), INXCTL
	KGAGE1 = ENTRY
	XCALL OUTPT (04,34,0,'-',1)
	CTL = '04,36,03,00,# '
	CALL INPUT
	GOTO (DESCR), INXCTL
	IF (ENTRY.EQ.BLANKS)
	BEGIN
	  ENTRY(1,3) = KGAGE1
	  XCALL OUTPT (ROW,COL,0,ENTRY(1,3),1)
	END
	KGAGE2 = ENTRY
	XCALL OUTPT (03,40,0,'x',1)
	CTL = '03,42,06,00,# '
	CALL INPUT
	GOTO (DESCR), INXCTL
	DECMAL = ENTRY
	CALL DSP3DP
	KWID1 = ENTRY
	XCALL OUTPT (04,40,0,'x',1)
	CTL = '04,42,06,00,# '
	CALL INPUT
	GOTO (DESCR), INXCTL
	IF (ENTRY.EQ.BLANKS) ENTRY(1,6) = KWID1
	DECMAL = ENTRY
	CALL DSP3DP
	KWID2 = ENTRY
;
; FIND DESCRIPTION MATCHES
;
FNDDES,
	CLEAR D_KEY
	D_MAT = KMATTY
	D_GA = KGAGE1
	D_WID = KWID1

	FIND (2, INVMAS, D_KEY, KRF:1) [ERR=F_LOOP]
F_LOOP,
	XCALL IOS (2, INVMAS, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO EOF

;;;	LOKCTL = 1
;;;	XCALL IOS (3,INVIDX,READ,LOKCTL)
;;;	IF (INVIDX.EQ.']]]]]]]]]]') GOTO EOF
;;;	IF (IRC132.EQ.0) GOTO FNDDES
;;;	LOKCTL = 1
;;;	XCALL IO (2,INVMAS,IRC132,READ,LOKCTL)

	IF (RMMAT.NE.KMATTY) GOTO EOF
	IF (RMGA.LT.KGAGE1.OR.RMGA.GT.KGAGE2) GOTO F_LOOP
	IF (RMWID.LT.KWID1.OR.RMWID.GT.KWID2) GOTO F_LOOP
	CALL DSPLIN
	GOTO F_LOOP
EOF,
	PLINE (1,7) = TAGCNT,MASK
	PLINE (9,33) = 'TAGS LISTED - SUBTOTALS: '
	PLINE (46,54) = TOTQTY,MASK
	PLINE (65,78) = TOTCST,DP4MSK
	CALL PRINT
	IF (TOTQTY) AVGCST = (TOTCST/TOTQTY)
	PLINE (20,33) = 'AVERAGE COST: '
	PLINE (53,65) = AVGCST,DP4MSK
	CALL PRINT
	XCALL MESAG ('END OF DISPLAY',2)
	GOTO DISPLA
ENDOFF,
;;;	DISPLAY (15,27,'[01;24r')
	CALL CLOSES
ABORT,
	XCALL PGCHN ('IM:IMMENU',1)

DSPLIN,
	PLINE (1,7) = RMTAG,MASK
	PLINE (9,11) = RMMAT
	PLINE (12,14) = ' - '
	PLINE (15,17) = RMGA
	PLINE (18,20) = ' x '
	PLINE (21,27) = RMWID,DP3MSK

	XCALL DATE8(RMDAT, D_OUT, D_OUTR, D_FMT, D_SW)
	XCALL ISIO (CHN011, VENMAS, RMVEN, READ, LOKCTL)
	IF (LOKCTL .NE. 0) NAME = rmven

	PLINE (29,38) = D_FMT
	PLINE (40,48) = NAME
	PLINE (50,56) = RMWGT,MASK
	PLINE (57,67) = RMCOST,DP4MSK
	EXTCST = (RMWGT * RMCOST)
	PLINE (68,80) = EXTCST,DP4MSK
	CALL PRINT
	INCR TAGCNT
	TOTQTY = TOTQTY + RMWGT
	TOTCST = TOTCST + EXTCST
	RETURN
PRINT,
	IF (LINE.GT.14) 
	BEGIN
	  XCALL MESAG ('RETURN FOR NEXT PAGE',2)
	  LINE =
	END
	IF (LINE.EQ.0) XCALL OUTPT (08,01,2,'\',1)
	INCR LINE
	WRITES (15,PLINE)
	PLINE =
	RETURN
DSP3DP,
	OPTION = 4
	GO TO CALDSP
DSPNUM,
	OPTION = 1
CALDSP,
	XCALL DSPLY (MAX,ROW,COL,DECMAL,OPTION,1)
	RETURN
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	RETURN

END
;------- TAG ---------------    DATE              QTY        UNIT     EXTENDED
;NUMBER  DESCRIPTION          RECEIVED  SOURCE  ON HND       COST         COST
;XXXXXX  XXX - XXX x XXX.XXX  XX/XX/XX  XXXXX   XXXXXX- XXXX.XXXX- XXXXXX.XXXX-
