;  ADVICE / IM 
;
;		::PCPYIM.DEF::
;*****************************************************************************
;		INVENTORY MANAGEMENT  
;
;		RELEASED: AUGUST 1, 1984 (d70s10)
;		MODIFIED: 20-AUG-85	MS
;*****************************************************************************
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984
;		MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;		DRIVING PROGRAM FOR REORDERING ADVICE REPORTS
;		PROGRAM FOR PRINTING REORDERING ADVICE REPORT BY ITEM
;
;	SELECTION DATA FROM SUBROUTINE AMENU:
;
;		IF SLOC = DEFAULT LOCATION, CALCULATIONS WILL BE BASED ON THE
;		   SUM OF ALL LOCATIONS - AND REPORT WILL PRINT THIS LOC ONLY.
;
;		IF SLOC = 'ALL', CALCULATIONS WILL BE BASED ON THE SUM OF ALL
;		   LOCATIONS - BUT THE REPORT WILL PRINT LOCATION DETAIL.
;
;		IF SLOC = ONE LOC, ONLY THIS LOCATION WILL PRINT.
;
;		AVFLAG IS SET IF QTY AVAILABLE SHOULD INCLUDE QTY ON ORDER.
;
;		MPFLAG IS SET FOR ITEMS PURCHASED(P), MANUFACTURED(M) OR
;		   BOTH(B) TO BE INCLUDED IN REPORT.
;
;		SELECT(1,1): 1 = BY ITEM, 2 = BY LOCATION, 3 = BY VENDOR.
;
;		IF SELECT(1,1) = 1 OR 2, SELECT(2,2):  1 = ONE LOC AND %
;		   FROM REOLVL, 2 = ONE LOC AND # FROM REOLVL, 3 = ALL LOCS
;		   AND % FORM REOLVL, AND 4 = ALL LOCS AND # FORM REOLVL.
;
RECORD
	,A64,'THIS MATERIAL CONTAINS THE VALUABLE PROPERTIES AND TRADE SECRETS'
	,A62,'OF MCBA, EMBODYING CONFIDENTIAL INFORMATION AND IDEAS, NO PART'
	,A56,'OF WHICH MAY BE USED AND/OR DISCLOSED WITHOUT MCBAs DULY'
	,A55,'AUTHORIZED LICENSE AGREEMENT AND/OR WRITTEN PERMISSION.'
	,A61,'COPYRIGHT (C) MCBA, AN UNPUBLISHED WORK. ALL RIGHTS RESERVED.'
RECORD ITMMAS		;
		.INCLUDE 'DEF:RD041A.DEF'
RECORD DUMINV,X		;
		.INCLUDE 'DEF:RD041B.DEF'
RECORD	ITMIDX		;
		.INCLUDE 'DEF:RD042A.DEF'
RECORD	SELINV		;
		.INCLUDE 'DEF:RD056A.DEF'
RECORD
		.INCLUDE 'DEF:RD056S.DEF'
RECORD	CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD SPECS
	KVEND	,A4
	KLOC	,A2
	KPRCNT	,D2
	KNUMB	,D3
	VNDOPT	,D1
	AVFLAG	,D1
	MPFLAG	,A1
RECORD SNDMSG
		,A3	,'IM:'
	NAME	,A6
	RCNT	,D5
	OCNT	,D5
		,D3,	056
RECORD NXTMSG
	MSGPRG	,A20
RECORD	WLINE
	PITEM	,A15
		,A17
	PPRCAT	,A2
		,A1
	PLOC	,A2
		,A1
	POH	,A8
		,A1
	PCOM	,A8
		,A1
	PONO	,A8
		,A1
	PREO	,A6
		,A1
	PREC	,A7
		,A1
	PSFT	,A6
		,A1
	PEOQ	,A6
		,A1
	PUSG	,A7
		,A1
	PWGT	,A8
		,A1
	PLCST	,A10
		,A2
	PVEND	,A4
		,A2
	PR	,A1
	PO	,A1
		,A1
RECORD	,X
		,A4
	PDESC	,A30
		,A48
	PLDTM	,A4
		,A1
	PMIN	,A6
		,A1
	PMTD	,A7
		,A2
	PYTD	,A7
		,A1
	PAVG	,A11
		,A2
	PUM	,A2
		,A2
	PMULT	,A3
		,A1
RECORD	,X
		,A23
	PRTOHD	,A11
		,A3
	PRTOOH	,A9
	PRTOCM	,A9
	PRTONO	,A9
		,A68
RECORD  LEGND1
		,A51,	'FOR ITEMS MANUFACTURED(M), PURCHASED(P), OR BOTH(B)'
		,A2
	MPBFLG	,A1
		,A5
	STAT	,A4
		,A1
		,A30,	'FROM REORDER LEVEL AT LOCATION'
		,A2
	LOCAT	,A3
		,A2
	LOCNOT	,A18
RECORD  LEGND2
		,A40,	'QUANTITY AVAILABLE INCLUDES ON-ORDER ?  '
	AVFLG	,A1
		,A65
		,A26,	'R = REORDER   O = STOCKOUT'
RECORD	HDR1
		,A31
		,A3,	'PRD'
		,A7
		,A3,	'QTY'
		,A6
		,A3,	'QTY'
		,A6
		,A3,	'QTY'
		,A4
		,A5,	'REORD'
		,A3
		,A5,	'RECOM'
		,A2
		,A5,	'SFSTK'
		,A4
		,A3,	'EOQ'
		,A2
		,A7,	'AVG USE'
		,A2
		,A6,	'WEIGHT'
		,A3
		,A9,	'LAST COST'
		,A1
		,A4,	'P-UM'
		,A1
		,A4,	'REOR'
RECORD	HDR2
		,A1
		,A25,	'ITEM NUMBER / DESCRIPTION'
		,A5
		,A3,	'CAT'
		,A1
		,A3,	'LOC'
		,A2
		,A5,	'ONHND'
		,A4
		,A5,	'ALLOC'
		,A4
		,A5,	'ONORD'
		,A3
		,A5,	'LEVEL'
		,A3
		,A5,	'ORDER'
		,A3
		,A4,	'LDTM'
		,A4
		,A3,	'MOQ'
		,A2
		,A6,	'SLDMTD'
		,A3
		,A6,	'SLDYTD'
		,A4
		,A8,	'AVG COST'
		,A1
		,A4,	'VEND'
		,A1
		,A4,	'MULT'
RECORD
	SPLFIL	,A14
	V	,D1
	BYPASS	,A1
	LOCTNS	,D2
	DEFALT	,A2
	LOCSW	,D1
	SWITCH	,D1,	1
	SELECT	,D2
	ENTRY	,A4
	LINCNT	,D2,	61
	PGCNT	,D3
	PLINE	,A132
	TITLE	,A32,	'REORDERING ADVICE REPORT BY ITEM'
	INXCTL	,D1
	PRCNT	,D2
	NN	,D3
	MASKP	,A7,	'ZZZ,ZZX'
	FIRST	,D1
	MASKN	,A8,	'ZZZ,ZZX-'
	MASK7	,A9,	'ZZZZ,ZZX-'
	PTR	,D2
	RECODR	,D6
	SIZE	,D5
	THELOC	,A4
	QTYAV	,D5
	ADJREO	,D5
	FIELD	,D3
	SLOC	,A2
	BRACKS	,A33,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
	READ	,D1	,0
	WRITE	,D1	,1
	LOKCTL	,D1
	LPSW	,D2
	LPARG	,D1
	RPTNUM	,D3
	PRTTYP	,A1
	MSGSWT	,D1
	VNO	,D2
	JUSTIF	,D1
	BLANKS	,A4
	NMVEN	,D2
	WRTFLG	,D1		;OPTION 2 FILE WRITE FLAG FOR SORT
PROC (1)
	XCALL TERID (V)
	XCALL OUTPT (1,1,2,'PRINT REORDERING ADVICE REPORT',V)
BEGIN,
	FIRST = 1
	LINCNT = 60
	PGCNT = 0
	XCALL AMENU ('PRINT REORDERING ADVICE REPORT',FIELD,SLOC,AVFLAG,
&		MPFLAG,SELECT,V)
	GO TO (ENDOFF) ,SELECT(1,1) + 1
	KLOC = SLOC
	XCALL WATE (4,V)
	SWITCH = 1
	XCALL FILES (2,'I',42,SWITCH)		;FILE # 42 -- ITMIDX FILE
	IF (SWITCH.EQ.9) GO TO ENDOFF
	SWITCH = 1
	XCALL FILES (1,'I',41,SWITCH)		;FILE # 41 -- ITMMAS FILE
	IF (SWITCH.EQ.9) GO TO ENDOF1
	LOKCTL = 1
	XCALL IO (2,ITMIDX,1,READ,LOKCTL)	;READ CONTROL RECORD
	IF (LOKCTL.EQ.2) GO TO ENDOF2
	LOKCTL = 1
	XCALL IO (1,DUMINV,1,READ,LOKCTL)
	NMVEN = NUMVEN
	JUSTIF = JSTIFY
	LOCTNS = NUMLOC
	DEFALT = DFLTLO
	IF (SELECT(1,1).EQ.1) GO TO FLAGS
	SWITCH = 3
	XCALL FILES (3,'O',56,SWITCH)		;FILE # 56 -- SELINV FILE
	IF (SWITCH.EQ.9) GO TO ENDOF2
	SIZE = (((REC041+1)*(SIZ056+2)+2)/512) + 1
	XCALL OFILE (3,56,SIZE,SIZ056,SWITCH)
	IF (SWITCH.EQ.1) GO TO ENDOF3
	IF (SELECT(1,1).EQ.3) GO TO BYVEND
FLAGS,
	LOCAT = KLOC
	IF (KLOC.EQ.'  ') LOCAT = 'ALL'
	IF (KLOC.EQ.DEFALT) LOCNOT = '(DEFAULT LOCATION)'
	AVFLG = 'N'
	IF (AVFLAG.EQ.1) AVFLG = 'Y'
	MPBFLG = MPFLAG
	WRTFLG = 0			;SET TO ZERO TO USE AS SORT FLAG	
STATS,
	IF (SELECT(2,2).EQ.1.OR.SELECT(2,2).EQ.3) GO TO STSPRC
	STAT(1,4) = FIELD,'ZZX-'
	KNUMB = FIELD
	GO TO BROUT
STSPRC,
	STAT(4,4) = '%'
	STAT(1,3) = FIELD,'-ZX'
	KPRCNT = FIELD
BROUT,
	GO TO (SINGLE,SINGLE,THEMAL,THEMAL) ,SELECT(2,2)
	GO TO ENDOF3
SINGLE,
	CALL GTITEM
	IF (LOKCTL.EQ.2 .OR. ITMIDX.EQ.BRACKS) GO TO EOF
	CALL FNDLOC
	IF (THELOC.EQ.'NONE') GO TO SINGLE
	IF (SLOC.EQ.DEFALT) PTR = 1
	CALL SELREC
	IF (BYPASS.EQ.'Y') GO TO SINGLE
	IF (SELECT(1,1).EQ.1) CALL PRLINE
	IF (SELECT(1,1).EQ.2) CALL WRITIT
	GO TO SINGLE
THEMAL,
	CALL GTITEM
	IF (LOKCTL.EQ.2 .OR. ITMIDX.EQ.BRACKS) GO TO EOF
	PTR = 1
	CALL SELREC
	IF (BYPASS.EQ.'Y') GO TO THEMAL
	IF (SELECT(1,1).EQ.1) CALL PRLINE
	IF (SELECT(1,1).EQ.2) GO TO BYLOC
	GO TO THEMAL
BYLOC,
	CALL WRITIT
	PTR = 0
BYLOC1,
	LOCSW = 0
	INCR PTR
	IF (PTR.GT.LOCTNS.OR.LOC(PTR).EQ.'  ') GO TO THEMAL
	IF (LOC(PTR).EQ.DEFALT) GO TO BYLOC1		;SINCE THIS WAS THE
							;FIRST RECORD WRITTEN.
	LOCSW = 1
	CALL SELREC
	IF (BYPASS.EQ.'Y') GO TO BYLOC1
	CALL WRITIT
	GO TO BYLOC1
;****************************************************************
PRLINE,
	IF (FIRST) CALL OPNPRT
	IF (LPSW.EQ.0) GO TO EOFITM
	PITEM = ITEMNO
	IF (JUSTIF) XCALL LEFTJ (PITEM,15)
	PPRCAT = PRDCAT
	PREC = RECODR,MASKP
	PSFT = SAFSTK,MASKP
	PEOQ = EOQ,MASKP
	PUSG = AVGUSE,MASKP
	PWGT = WEIGHT,'Z,ZZZ.XX'
	PLCST = LSTCST,'ZZZ,ZZZ.XX'
	PUM = PUOFM
	PR = R
	PO = O
	VNO = 1
	CALL PRLOC
PRLIN2,
	PDESC = DESCR
	PLDTM = LEADTM,'ZZ.X'
	PMIN = MINORD,MASKP
	PMTD = QTYMTD,MASKP
	PYTD = QTYYTD,'ZZZ,ZZX'
	PAVG = AVGCST,'ZZZ,ZZZ.XXX'
	PMULT = ORDMLT,'ZZX'
	PVEND = VENDOR (1)
	XCALL LEFTJ (PVEND,4)
	IF (SLOC.NE.'  ') CALL VENDRS
	IF (SLOC.EQ.DEFALT) GO TO PRNTOT
	IF (SLOC.NE.'  ') XCALL LINFD (1)
	IF (SLOC.NE.'  ') INCR LINCNT
	IF (SLOC.NE.'  ') RETURN
PRTALL,
	INCR VNO
	INCR PTR
	IF (PTR.GT.LOCTNS.AND.VNO.GT.NMVEN) GO TO PRNTOT
	IF (LOC(PTR).NE.BLANKS) GO TO CONTIN
	IF (VENDOR(VNO).NE.BLANKS) GO TO CONTIN
	GO TO PRNTOT
VENDRS,
	CALL PRINT
	INCR VNO
	IF (VNO.GT.NMVEN) RETURN
	IF (VENDOR(VNO).EQ.BLANKS) RETURN
	PVEND = VENDOR (VNO)
	XCALL LEFTJ (PVEND,4)
	IF (SLOC.EQ.'  ') RETURN
	GO TO VENDRS
CONTIN,
	CALL PRLOC
	GO TO PRTALL
PRLOC,
	IF (LOC(PTR).EQ.'  '.OR.PTR.GT.LOCTNS) GO TO VNONLY
	PLOC = SLOC
	IF (SLOC.EQ.'  ') PLOC = LOC(PTR)
	POH = QTYONH(PTR) ,MASKN
	PCOM = QTYCOM(PTR) ,MASKN
	PONO = QTYONO(PTR) ,MASKN
	PREO = REOLVL(PTR) ,MASKP
	IF (PTR.LE.1) GO TO NOVEN
	IF (VNO.GT.NMVEN) GO TO NOVEN
VNONLY,
	IF (VENDOR(VNO).EQ.BLANKS) GO TO NOVEN
	IF (VNO.LE.1) GO TO NOVEN
	PVEND = VENDOR(VNO)
	XCALL LEFTJ (PVEND,4)
NOVEN,
	CALL PRINT
	RETURN
;****************************************************************
PRNTOT,
	CALL PRINT
	PRTOHD = 'ITEM TOTAL:'
	PRTOOH = QTYOH,MASK7
	PRTOCM = QTYCM,MASK7
	PRTONO = QTYOO,MASK7
	CALL PRINT
	WLINE =
	XCALL LINFD (2)
	LINCNT = LINCNT+2
	RETURN
;****************************************************************
GTITEM,
	LOKCTL = 1
	XCALL IOS (2,ITMIDX,READ,LOKCTL)
	IF (LOKCTL.EQ.2) RETURN
	IF (ITMIDX.EQ.BRACKS) RETURN
	IF (ITMIDX(16,20).EQ.'00000') GO TO GTITEM
	LOKCTL = 1
	XCALL IO (1,ITMMAS,IRC041,READ,LOKCTL)
	IF (DESCR(1,6).EQ.']]]DEL') GO TO GTITEM
	IF (CNTRLD.NE.'C'.AND.STOKED.NE.'S') GO TO GTITEM	;ONLY STOCKED
								;& CONTROLLED
	IF (MPFLAG.NE.'B'.AND.MPFLAG.NE.PRCHCD) GO TO GTITEM
	IF (ORDPOL.NE.'R') GO TO GTITEM
	RETURN
;****************************************************************
FNDLOC,
	THELOC =
	PTR = 0
NXTLOC,
	INCR PTR
	IF (LOC(PTR).EQ.'  ') GO TO EXTNON
	IF (LOC(PTR).EQ.SLOC) RETURN
	IF (LOC(PTR).EQ.DEFALT.AND.SLOC.EQ.'  ') RETURN
	IF (PTR.LT.LOCTNS) GO TO NXTLOC
EXTNON,	THELOC = 'NONE'
	RETURN
;****************************************************************
SELREC,
	QTYOH = QTYONH(PTR)
	QTYCM = QTYCOM(PTR)
	QTYOO = QTYONO(PTR)
	IF (SLOC.NE.DEFALT.AND.SLOC.NE.'  ') GO TO SETRO
	IF (LOCSW.EQ.1) GO TO SETRO
SUMIT,
	INCR PTR
	IF (PTR.GT.LOCTNS.OR.LOC(PTR).EQ.'  ') GO TO RESPTR
	QTYOH = QTYOH + QTYONH(PTR)
	QTYCM = QTYCM + QTYCOM(PTR)
	GO TO SUMIT
RESPTR,
	CALL FNDLOC		;LOCATE THE DEFAULT LOCATION
SETRO,
	QTYOO = QTYONO(PTR)
	RECODR = RECMIN
	IF ((AVFLAG.EQ.2).AND.(REOLVL(PTR).GT.(QTYOH-QTYCM)))
&		RECODR = RECMIN + (REOLVL(PTR) - (QTYOH - QTYCM))
	IF ((AVFLAG.EQ.1).AND.(REOLVL(PTR).GT.(QTYOH-QTYCM+QTYOO)))
&		RECODR = RECMIN + (REOLVL(PTR) - (QTYOH - QTYCM + QTYOO))
	BYPASS = 'N'
	O =
	R =
	IF (QTYOH.LE.0) O = 'O'
	QTYAV = QTYOH - QTYCM
	IF (AVFLAG.EQ.1) QTYAV = QTYAV + QTYOO
	IF (REOLVL(PTR).EQ.0) GO TO SPCALC
	IF (STAT(4,4).NE.'%') GO TO CALCNN
CALCPR,
	PRCNT = FIELD
	ADJREO = ((REOLVL(PTR)*PRCNT)#2) + REOLVL(PTR)
	IF (ADJREO.LE.0) GO TO SPCALC
	IF (QTYAV.LE.ADJREO) R = 'R'
	SRTFAC = ((QTYAV-ADJREO)*1000/ADJREO) #1
	IF (SRTFAC.LE.0) RETURN
SPEXIT,
	IF (R.EQ.' '.AND.O.EQ.' ') BYPASS = 'Y'
	RETURN
;****************************************************************
CALCNN,
	NN = FIELD
	ADJREO = REOLVL(PTR) + NN
	IF (ADJREO.LE.0) GO TO SPCALC
	SRTFAC = QTYAV - ADJREO
	IF (SRTFAC.GT.0) GO TO SPEXIT
	R = 'R'
	RETURN
;****************************************************************
SPCALC,
	SRTFAC =
	IF (QTYAV.LT.0) SRTFAC = 99
	IF (QTYAV.LE.0) RETURN
	GO TO SPEXIT
;****************************************************************
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
;****************************************************************
PRINT,
	PLINE = WLINE
	XCALL LPOUT (LINCNT,PGCNT,PLINE,TITLE,HDR1,HDR2,
&	'NO HDR',LEGND1,LEGND2,'NO LEGEND',0,1,132,1,LPSW,RPTNUM,PRTTYP)
	WLINE =
	RETURN
;****************************************************************
WRITIT,
	WRTFLG = 1			;SET TO ONE FOR OK TO SORT
	SEL041 = IRC041
	SRTLOC = LOC(PTR)
	LOKCTL = 1
	XCALL IOS (3,SELINV,WRITE,LOKCTL)
	IF (LOKCTL.EQ.3) GO TO ENDOF3
	RETURN
EOF,
	IF (SELECT(1,1).EQ.1) GO TO EOFITM
	IF (SELECT(1,1).EQ.2 .AND. WRTFLG .EQ. 0) GO TO EOFITM
	LOKCTL = 1
	XCALL IOS (3,BRACKS,WRITE,LOKCTL)
	IF (LOKCTL.EQ.3) GO TO ENDOF3
	NAME = 'ADVLOC'
	XCALL OUTPT (6,15,2,
&	'DO YOU WISH ITEMS TO PRINT IN ORDER OF PRIORITY ?',V)
	XCALL INPUT (06,66,01,01,'YN',ENTRY,INXCTL,V)
	XCALL WATE (4,V)
	MSGPRG = SPECS
	CALL CLSFL2
	CLOSE 3
	IF (INXCTL.EQ.1) GO TO STNEED
	MSGSWT = 5
	XCALL SNMSG (SNDMSG,MSGSWT)
	MSGSWT = 2
	XCALL SNMSG (NXTMSG,MSGSWT)
	XCALL PGCHN ('IM:STADVL',0)
STNEED,
	MSGSWT = 5
	XCALL SNMSG (SNDMSG,MSGSWT)
	MSGSWT = 2
	XCALL SNMSG (NXTMSG,MSGSWT)
	XCALL PGCHN ('IM:STAVLC',0)
OPNPRT,
	SPLFIL(5,6) = 'CO'
	LPARG = 4
	LPSW = 1
	XCALL LPON (LPSW,SPLFIL)
	IF (LPSW.EQ.0) RETURN
	IF (LPSW.NE.2) LPARG = 2
	XCALL WATE (LPARG,V)
	FIRST = 0
	RETURN
EOFITM,
	IF (SELECT(1,1).EQ.2) THEN
		CALL CLSFLS
	ELSE
		CALL CLSFL2
	IF (FIRST.EQ.0) XCALL LPOFF (LPSW,SPLFIL,PGCNT)
	IF (FIRST) XCALL MESAG
&	('NO ITEMS FIT THESE PARAMETERS',1)
	PGCNT =
	GO TO BEGIN
CLSFLS,
	XCALL FILES (3,'I',56,7)
CLSFL2,
	XCALL FILES (2,'I',42,4)
	XCALL FILES (1,'I',41,4)
	RETURN
;****************************************************************
BYVEND,
	XCALL ITMSL (KVEND,KLOC,KPRCNT,KNUMB,VNDOPT,AVFLAG,MPFLAG,RCNT,LOKCTL,V)
	IF (LOKCTL.EQ.3) GO TO NEWSEL
	IF (RCNT.LE.1.AND.KVEND.EQ.'    ') GO TO NEWSEL	;'END' SELECTED
	IF (RCNT.LE.1) GO TO NOFILE			;NO ITEMS SELECTED
	CALL CLSFL2
	CLOSE 3
	NAME = 'ADVPRT'
	MSGPRG = SPECS
	MSGSWT = 5
	XCALL SNMSG (SNDMSG,MSGSWT)
	MSGSWT = 2
	XCALL SNMSG (NXTMSG,MSGSWT)
	XCALL PGCHN ('IM:SRTADV',0)
NOFILE,
	XCALL MESAG ('NO ITEMS SELECTED FOR THIS VENDOR',1)
NEWSEL,
	CALL CLSFLS
	GO TO BEGIN
ENDOF3,
	XCALL WATE (4,V)
	XCALL FILES (3,'I',56,4)
ENDOF2,
	XCALL FILES (1,'I',41,4)
ENDOF1,
	XCALL FILES (2,'I',42,4)
ENDOFF,
	XCALL PGCHN ('IM:IMMENU',1)
END
