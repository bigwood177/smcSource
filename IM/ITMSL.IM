SUBROUTINE ITMSL
;
;  ITMSL / IM 
;
;
;		::PCPYIM.DEF::
;*****************************************************************************
;		INVENTORY MANAGEMENT  
;
;		RELEASED: AUGUST 1, 1984 (d70s10)
;*****************************************************************************
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984
;		MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;		SUBROUTINE TO BUILD FILE FOR REORDERING ADVICE
;		 REPORT BY VENDOR
;
;	SELECTION DATA FROM SUBROUTINE ADVEN:
;
;		ONLY ONE VENDOR CAN BE SELECTED
;
;		IF KLOC = DEFAULT LOCATION, CALCULATIONS WILL BE BASED ON THE
;		   SUM OF ALL LOCATIONS - AND REPORT WILL PRINT THIS LOC ONLY
;
;		IF KLOC = 'ALL', CALCULATIONS WILL BE BASED ON THE SUM OF ALL
;		   LOCATIONS - BUT THE REPORT WILL PRINT LOCATION DETAIL
;
;		IF KLOC = ONE LOC, ONLY THIS LOCATION WILL PRINT
;
;		AVFLAG IS SET IF QTY AVAILABLE SHOULD INCLUDE QTY ON ORDER
;
;		MPFLAG IS SET FOR ITEMS PURCHASED(P), MANUFACTURED(M) OR
;		   BOTH(B) TO BE INCLUDED IN REPORT
;
	KVEND	,A
	KLOC	,A
	KPRCNT	,D
	KNUMB	,D
	VNDOPT	,D
	AVFLAG	,D
	MPFLAG	,A
	RCNT	,D
	LOKCTL	,D
	V	,D
RECORD ITMMAS		;
		.INCLUDE 'DEF:RD041A.DEF'
RECORD DUMINV ,X		;
		.INCLUDE 'DEF:RD041B.DEF'
RECORD	ITMIDX		;
		.INCLUDE 'DEF:RD042A.DEF'
RECORD	SELINV		;
		.INCLUDE 'DEF:RD056A.DEF'
RECORD
	SELECT	,D1
	RECNO	,D5
	BRACKS	,A33,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
	BRKTS	,A6,	']]]]]]'
	CNTR	,D2
	PTR	,D2
	BLANKS	,A2,	'  '
	LOCTNS	,D2
	DEFALT	,A2
	NMVEN	,D2
	QTYAV	,D5
	ADJREO	,D5
	READ	,D1	,0
	WRITE	,D1	,1
PROC (1)
	XCALL OUTPT (1,1,1,'PRINT REORDERING ADVICE REPORT BY VENDOR',V)
	LOKCTL = 1
	XCALL IO (1,DUMINV,1,READ,LOKCTL)
	LOCTNS = NUMLOC
	DEFALT = DFLTLO
	NMVEN = NUMVEN
	LOKCTL = 1
	XCALL IO (2,ITMIDX,1,READ,LOKCTL)
BEGIN,
	XCALL ADVEN ('SELECT CRITERIA',KVEND,KLOC,KPRCNT,KNUMB,VNDOPT,
&		AVFLAG,MPFLAG,SELECT,V)
	XCALL WATE (4,V)
	RECNO =	1		;CONTROLS READING INDEX
	RCNT =			;CONTROLS WRITING SELECTED INVENTORY
	GO TO (ENDOFF), SELECT
READ,
	INCR RECNO
	LOKCTL = 1
	XCALL IOS (2,ITMIDX,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO CLSFLS
	IF (IITMNO.EQ.BRKTS) GO TO CLSFLS
	IF (IRC041.EQ.0) GO TO READ
	LOKCTL = 1
	XCALL IO (1,ITMMAS,IRC041,READ,LOKCTL)
	IF (CNTRLD.NE.'C') GO TO READ
	IF (ORDPOL.NE.'R') GO TO READ
	IF (MPFLAG.NE.'B'.AND.MPFLAG.NE.PRCHCD) GO TO READ
	PTR = 1
	CNTR = 0
	IF (VNDOPT.AND.VENDOR.EQ.'9999') GO TO MLTVEN
;
;	9-MAR-82
;	WITH MULTIPLE VENDORS INSTALLED FOR USE BY PO & R
;	VENDOR 9999 REPRESENTS MULTIPLE VENDOR FOR NON-POR USER
;
VENLUP,
	INCR CNTR
	IF (CNTR.GT.NMVEN) GO TO READ
	IF (VENDOR(CNTR).NE.KVEND) GO TO VENLUP
MLTVEN,
	SMULTV =
	IF (VENDOR.EQ.'9999') SMULTV = 9		;USED TO SORT MULT VEND AT END
	IF (KLOC.EQ.BLANKS.OR.KLOC.EQ.DEFALT) GO TO CHKLVL
	CALL FNDLOC
	IF (PTR.EQ.0) GO TO READ		;LOCATION NOT FOUND
CHKLVL,
	CALL SELRCD
	IF (PTR.EQ.0) GO TO READ		;ITEM NOT AT REOLVL
	IF (KLOC.EQ.BLANKS) PTR = 1
	SEL041 = RECNO			;SEL041 IS THE ITMIDX RELATIVE REC #
					;FOR VENDOR REPORT 'ADVPRT'
	SRTLOC = LOC(PTR)
	INCR RCNT
	LOKCTL = 1
	XCALL IOS (3,SELINV,WRITE,LOKCTL)
	IF (LOKCTL.EQ.3) GO TO CLSFLS
	GO TO READ
FNDLOC,
	PTR =
NXTLOC,
	INCR PTR
	IF (LOC(PTR).EQ.BLANKS) GO TO NOFIND
	IF (LOC(PTR).EQ.KLOC) RETURN
	IF (KLOC.EQ.'  '.AND.LOC(PTR).EQ.DEFALT) RETURN
	IF (PTR.LT.LOCTNS) GO TO NXTLOC
NOFIND,
	PTR =
	RETURN
SELRCD,
	QTYOH = QTYONH(PTR)
	QTYCM = QTYCOM(PTR)
	QTYOO = QTYONO(PTR)
	IF (KLOC.EQ.DEFALT .OR. KLOC.EQ.BLANKS) CALL SUMIT
	IF (PTR.EQ.0) RETURN
	R =
	O =
	IF (QTYOH.LE.0) O = 'O'
	QTYAV = QTYOH - QTYCM
	IF (AVFLAG.EQ.1) QTYAV = QTYAV + QTYOO
	IF (REOLVL(PTR).EQ.0) GO TO SPCALC
	IF (KPRCNT.NE.0) GO TO CALCPR
CALCNN,
	ADJREO = REOLVL(PTR) + KNUMB
	IF (ADJREO.LE.0) GO TO SPCALC
	SRTFAC = QTYAV - ADJREO
	IF (SRTFAC.GT.0) GO TO SPEXIT
	R = 'R'
	RETURN
CALCPR,
	ADJREO = ((REOLVL(PTR)*KPRCNT)#2) + REOLVL(PTR)
	IF (ADJREO.LE.0) GO TO SPCALC
	IF (QTYAV.LE.ADJREO) R = 'R'
	SRTFAC = ((QTYAV - ADJREO)*1000/ADJREO) #1
	IF (SRTFAC.LE.0) RETURN
SPEXIT,
	IF (R.EQ.BLANKS.AND.O.EQ.BLANKS) PTR =
	RETURN
SPCALC,
	SRTFAC =
	IF (QTYAV.LT.0) SRTFAC = 99
	IF (QTYAV.LE.0) RETURN
	GO TO SPEXIT
SUMIT,
	INCR PTR
	IF (PTR.GT.LOCTNS.OR.LOC(PTR).EQ.BLANKS) GO TO EXIT
	QTYOH = QTYOH + QTYONH(PTR)
	QTYCM = QTYCM + QTYCOM(PTR)
	IF (LOC(PTR).EQ.DEFALT) QTYOO = QTYONO(PTR)
	GO TO SUMIT
EXIT,
	CALL FNDLOC			;LOCATE DEFAULT LOCATION
	RETURN
CLSFLS,
	INCR RCNT
	LOKCTL = 1
	XCALL IOS (3,BRACKS,WRITE,LOKCTL)
ENDOFF,
	RETURN
END
