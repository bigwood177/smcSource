SUBROUTINE QOOSB
;
;  QOOSB / POR - D11
;
;		::CRELPOR.DEF::
;**********************************************************************
;		PURCHASE ORDER & RECEIVING -- Release 1.1
;		RELEASED: 1-MAY-82
;**********************************************************************
;:
;
;		::PCPYEMS.DEF::
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of Mini-Computer Business Applications, Inc. (MCBA) of
;		Glendale, California, USA and Effective Management Systems, Inc.
;		of Menomonee Falls, Wisconsin, USA embodying substantial
;		creative effort and confidential information, ideas and
;		expressions, no part of which may be reproduced or transmitted
;		in any form or by any means, electronic, mechanical or
;		otherwise, including photocopying and recording or in
;		connection with any information storage or retrieval system
;		without the permission in writing from MCBA.
;
;		COPYRIGHT NOTICES:  Copyright <C> 1980, 1981, 1982
;		by Mini-Computer Business Applications, Inc.
;		AN UNPUBLISHED WORK.  Copyright <C> 1980, 1981, 1982
;		by Effective Management Systems, Inc.  AN UNPUBLISHED WORK.
;
;
;		COMPILE & LINK PER DOCUMENTATION INSTALLATION NOTES.
;
;:
	LITMNO	,A
	LQTYOR	,D
	LOCTNS	,D
	BADBIL	,D
	LINCNT	,D
	PGCNT	,D
	LPSW	,D
	RPTNUM	,D
	PRTTYP	,A

RECORD PRDSTR	
	.INCLUDE 'DEF:RD091A.DEF'

RECORD PRDOVL,X
	.INCLUDE 'DEF:RD091D.DEF'

RECORD INVMAS	
	.INCLUDE 'DEF:RD041A.DEF'

RECORD MESAG
	MITEM	,A15
		,A3
	MSG	,A50
RECORD
	KEY	,A15
	BSMID	,D5
	SRCCTL	,D1
	ITEMNM	,12A15
	ITEMN	,12A35
	QTYS	,12D7
	LEVEL	,D3
	STKPTR	,D2
	FNDSWT	,D1
	ERRSWT	,D1
	DECMAL	,D14
	QTYCTR	,D2
	LOCCTR	,D2
	FSTREC	,D5
	READ	,D1	,0
	V	,D1
	WRITE	,D1	,1
	LOKCTL	,D1
	SAVKEY	,A35
	SRCKEY	,A35

PROC
	BADBIL =
	MITEM = LITMNO
FIRST,
	LOKCTL = 1
	KEY = LITMNO
	XCALL ISIO (12,PRDSTR,KEY,READ,LOKCTL)
	GOTO CONTIN
NXTKEY,
	LOKCTL = 1
	XCALL ISIO (6,PRDOVL,SRCKEY,READ,LOKCTL)
	RETURN
NXTREC,
	LOKCTL = 1
	XCALL IOS (12,PRDSTR,READ,LOKCTL)
CONTIN,
	IF (LOKCTL.NE.0) RETURN
	IF (PITMNO.LT.LITMNO) GOTO NXTREC
	IF (PITMNO.GT.LITMNO) RETURN			;RETURN TO RSTQOO
	IF (OBSFAG.NE.'A') GOTO NXTREC
	LEVEL =
DWNLVL,
	INCR LEVEL
	IF (LEVEL.GT.12) GOTO LVLERR
	ITEMNM(LEVEL) = PITMNO
	ITEMN(LEVEL) = SERKEY
	QTYS(LEVEL) = QTYPER
SAMLVL,
	CALL NEWCMP
	UNLOCK 1
	IF (BADBIL.EQ.1) GOTO NXTREC
	IF (BADBIL.EQ.2) GOTO ENDOFF
	CALL FNDCMP
	IF (ERRSWT) GOTO BILLER
	IF (FNDSWT) GOTO DWNLVL
UPLVL,
	STOKED =
	IF (LEVEL.EQ.1) GOTO NXTREC
	SRCKEY = ITEMN(LEVEL)
	CALL NXTKEY
UPLVL2,
	LOKCTL = 1
	XCALL IOS (6,PRDOVL,READ,LOKCTL)
	ITEMN(LEVEL) = SERKEY
	IF (LOKCTL.NE.0) GOTO CLRLVL
	IF (OBSFAG.NE.'A') GOTO UPLVL2
	IF (PITMNO.NE.ITEMNM(LEVEL)) GOTO CLRLVL
	SAVKEY = SERKEY
	QTYS(LEVEL) = QTYPER
	STKPTR = LEVEL
STCKCK,
	IF (ITEMNM(STKPTR).EQ.CITMNO) GOTO BILLER
	STKPTR = STKPTR - 1
	IF (STKPTR.GE.1) GOTO STCKCK
	CALL NEWCMP
	UNLOCK 1
	IF (BADBIL.EQ.1) GOTO NXTREC
	IF (BADBIL.EQ.2) GOTO ENDOFF
	CALL FNDCMP
	IF (ERRSWT) GOTO BILLER
	IF (FNDSWT) GOTO DWNLVL
	SRCKEY = SAVKEY
	CALL NXTKEY
	GOTO UPLVL2
CLRLVL,
	ITEMNM(LEVEL) =
	ITEMN(LEVEL) =
	LEVEL = LEVEL - 1
	IF (LEVEL.LE.0) GOTO NXTREC
	GOTO UPLVL
FNDCMP,
	FNDSWT =
	IF (STOKED.EQ.'S') RETURN	;DON'T PROCEED ANY FURTHER DOWN BILL,
					;HAVE REACHED A STOCKING LEVEL
	KEY = CITMNO
	LOKCTL = 1
	XCALL ISIO (6,PRDOVL,KEY,READ,LOKCTL)
	IF (LOKCTL.NE.0) RETURN
	GOTO CLOOP
NXTRC1,
	LOKCTL = 1
	XCALL IOS (6,PRDOVL,READ,LOKCTL)
	IF (LOKCTL.NE.0) RETURN
CLOOP,
	IF (PITMNO.NE.KEY) RETURN
	IF (OBSFAG.NE.'A') GOTO NXTRC1
	STKPTR = LEVEL
STKCHK,
	IF (ITEMNM(STKPTR).EQ.CITMNO) GOTO BILERR
	STKPTR = STKPTR - 1
	IF (STKPTR.GE.1) GOTO STKCHK
	FNDSWT = 1
	RETURN
ENDOFF,
	BADBIL = 1
	RETURN			; RETURN TO CALLING PROGRAM DUE TO ERROR
BILERR,
	ERRSWT = 1
	RETURN
LVLERR,
	MSG = '02 - BILL HAS GREATER THAN 12 LEVELS'
	CALL PRTLIN
BADMSG,
	IF (BADBIL.EQ.1) RETURN		;GO BACK TO SCRN2 AND DON'T ALLOW
					;THIS LINE TO BE ORDERED
	MSG = 'ERROR ENCOUNTERED - UNCOMMITTING INVENTORY'
	CALL PRTLIN
	BADBIL = 1
	GOTO FIRST
BILLER,
	MSG = 'BAD STRUCTURE - COMPONENT OF SELF '
	CALL PRTLIN
	GOTO BADMSG
NEWCMP,
	LOKCTL = 1
	XCALL IO (1,INVMAS,CRECNO,READ,LOKCTL)
	IF (STOKED.NE.'S') RETURN		;KEEP GOING TILL WE
						;REACH A STOCKED LEVEL
	IF (CNTRLD.NE.'C') RETURN		;LEAVE COMITTED UNADJUSTED
						;FOR NON-CONTROLLED ITEMS
	QTYCTR =
	DECMAL = LQTYOR * 10000
CHAINQ,
	INCR QTYCTR
	IF (QTYCTR.GT.LEVEL) GOTO TOTQTY
	DECMAL = (DECMAL * QTYS(QTYCTR)) # 4
	GOTO CHAINQ
TOTQTY,
	IF (DECMAL.GT.0.AND.DECMAL.LT.+5000) DECMAL = DECMAL + 10000
	IF (DECMAL.LT.0.AND.DECMAL.GT.-5000) DECMAL = DECMAL - 10000
	DECMAL = ((DECMAL)#4) * 10000
		;ROUND QTYPER, BUT ASSURE THAT ANYTHING BETWEEN 1 AND -1
		;END UP AS BEING 1 OR -1 INSTEAD OF ZERO.
	LOCCTR =
FNDSTK,
	INCR LOCCTR
	IF (LOCCTR.GT.LOCTNS.OR.LOC(LOCCTR).EQ.'  ') GOTO NOLOC
	IF (LOC(LOCCTR).NE.MFGLOC) GOTO FNDSTK
	IF (BADBIL.NE.1) QTYONO(LOCCTR) = QTYONO(LOCCTR) + (DECMAL/10000)
	IF (BADBIL.EQ.1) QTYONO(LOCCTR) = QTYONO(LOCCTR) - (DECMAL/10000)
	IF (QTYONO(LOCCTR).LT.0) QTYONO(LOCCTR) =
	LOKCTL = 1
	XCALL IO (1,INVMAS,CRECNO,WRITE,LOKCTL)
	RETURN
NOLOC,
	IF (BADBIL.EQ.1) GOTO NOLOC2
	MSG = '01 - MANUFACTURING LOCATION DOES NOT EXIST'
	CALL PRTLIN
	BADBIL = 1
	RETURN				;RETURN TO NEWCMP CALL
NOLOC2,
	BADBIL = 2
	RETURN				; RETURN TO NEWCMP CALL
PRTLIN,
;	XCALL LPOUT (LINCNT,PGCNT,MESAG,'NO TITLE','NO HDR',' ',' ',
;&	'NO LEGEND',' ',' ',0,132,0,0,LPSW,RPTNUM,PRTTYP)
	RETURN
	END
