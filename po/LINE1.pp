SUBROUTINE LINE1 ; (POHEDR,OPT,EXITSW,UPDSW)

	POHEDR	,A
	OPT	,D	;OPTION SWITCH IS SET TO :
			;	1 - ADD P/O LINE
			;	2 - CHANGE/INQUIRE P/O LINE
	EXITSW	,D	;EXIT SWITCH IS SET TO :
			;	0 - USER DOES NOT WISH TO EXIT
			;	1 - USER DOES WISHES TO EXIT
	UPDSW	,D	;UPDATE SWITCH IS SET TO :
			;	0 - DON'T UPDATE PORNXF FILE (TERMINAL PO ENTRY)
			;	1 - UPDATE PORNXF FILE (REGULAR PO ENTRY)
RECORD HEADER		
	.INCLUDE 'DEF:RD151A.DEF'

RECORD POLINE			
	.INCLUDE 'DEF:RD152A.DEF'

RECORD TABLE			
	.INCLUDE 'DEF:RD153A.DEF'

RECORD VENIDX			
	.INCLUDE 'DEF:RD012A.DEF'

RECORD TBLCTL			
	.INCLUDE 'DEF:RD153B.DEF'

RECORD ITMMAS			
	.INCLUDE 'DEF:RD041A.DEF'

RECORD ITMCTL			
	.INCLUDE 'DEF:RD041B.DEF'

RECORD ITMIDX			
	.INCLUDE 'DEF:RD042A.DEF'

RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD TBLKEY
	TKEYNO	,D2
	TKEYCD	,A2
	TKEYSQ	,D1

RECORD	VARS
	CHN249	,D2,	10

RECORD COMMON
	LOKCTL	,D1
	SWITCH	,D1
	SAVPO	,D6
	SAVRL	,D2
	SAVLIN	,D3
	NOTADD	,D1
	OLDCNT	,D5
	FULL	,D1
	INXCTL	,D1
	CNGCTL	,D1
	WHATNO	,D2
	V	,D1
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	DELETE	,D1,3
	PONUM	,D8
	SRCCTL	,D1
	SRCOPT	,D1
	BSEND	,D5
	BSMID	,D5
	NOTE	,A30
	IOCTL	,D1
	LINEIN	,D3
	ENTRY	,A30
	DENTRY	,D8
	LASNUM	,D3
	LINWGT	,D7
	DKEY	,D11
	AKEY	,A5
	KEY	,A19
	NLOC	,D2
	ALLOC	,D8
	QONHND	,D8
	QONORD	,D8
	REORLV	,D8
	WCHLIN	,D5
	AENTRY	,A12
	BLANKS	,A30
	OLDLIN	,A319
	RJUST	,D1
	AITMNO	,A15
	NEWKEY	,D1

PROC
	XCALL TERID (V)
	V = 1
	HEADER = POHEDR
	LASNUM = HLLNUM
	IF (OPT.EQ.2) LASNUM = 0
BEGIN,
	FULL =
	LINWGT =
	CNGCTL =
	POLINE =
	XCALL OUTPT (1,1,3,'PURCHASE ORDER ENTRY',V)
	IF (OPT.EQ.1) XCALL OUTPT (2,1,0,'ADD P/O LINE',V)
	IF (EXITSW.EQ.2) XCALL OUTPT (2,1,0,'ADD PURCHASE ORDER',V)
	IF (OPT.EQ.2) XCALL OUTPT (2,1,0,'CHANGE/INQUIRE P/O LINE',V)
	XCALL OUTPT (2,41,0,'P/O NO',V)
	ENTRY(1,6) = HPONUM,'ZZZZXX'
	XCALL OUTPT (2,52,0,ENTRY(1,6),V)
	XCALL OUTPT (2,58,0,'-',V)
	XCALL OUTPT (2,59,0,HRLNUM,V)
	XCALL OUTPT (4,2,0,'1. LINE NO',V)
	XCALL OUTPT (6,2,0,'2. STATUS',V)
	XCALL OUTPT (8,2,0,'3. CHANGE/CANCEL',V)
	XCALL OUTPT (10,2,0,'4. ITEM NO',V)
	XCALL OUTPT (12,2,0,'5. DESCRIPTION',V)
	XCALL OUTPT (14,2,0,'6. U OF M',V)
	XCALL OUTPT (16,2,0,'7. COMMODITY',V)
	XCALL OUTPT (18,2,0,'8. COST/UNIT',V)
	XCALL OUTPT (20,2,0,'9. VEND ITM #',V)
	XCALL OUTPT (22,1,0,'10. BLANKET TYPE',V)
	XCALL OUTPT (4,37,0,'11. QTY ORD',V)
	XCALL OUTPT (6,37,0,'12. QTY RCV',V)
	IF (HPOTYP.EQ.'B') XCALL OUTPT (06,37,0,'12. QTY RLS',V)
	XCALL OUTPT (8,37,0,'13. QTY REJ',V)
	IF (HPOTYP.EQ.'B') XCALL OUTPT (08,37,0,'13. QTY RCV',V)
	XCALL OUTPT (10,37,0,'14. NOTIFY',V)
	XCALL OUTPT (14,37,0,'15. DATE REQ',V)
	XCALL OUTPT (16,37,0,'16. DATE PROM',V)
	XCALL OUTPT (18,37,0,'17. DATE RCVD',V)
	XCALL OUTPT (20,37,0,'18. P/N NO',V)
	XCALL OUTPT (22,37,0,'19. MOVE TO',V)

	XCALL OUTPT (6,63,0,'SHIP-TO LOC',V)
	XCALL OUTPT (8,63,0,'P/O WGT',V)
	XCALL OUTPT (10,63,0,'LIN WGT',V)
	XCALL OUTPT (12,63,0,'ON-HAND',V)
	XCALL OUTPT (14,63,0,'ALLOC',V)
	XCALL OUTPT (16,63,0,'ON-ORDER',V)
	XCALL OUTPT (18,63,0,'RE-ORDER',V)
	LOKCTL = 1
	XCALL IO (7,ITMCTL,1,READ,LOKCTL)
	UNLOCK 7
	RJUST = JSTIFY
	LOKCTL = 1
	XCALL IO (3,TBLCTL,1,READ,LOKCTL)
	UNLOCK 3

	GOTO INPT1

;**********************************************************************
;	SEARCHES FOR A LINE RECORD IN PORLIN
;**********************************************************************

GETLIN,
	NEWKEY = 0
	DKEY(1,6) = HPONUM
	DKEY(7,8) = HRLNUM
	DKEY(9,11) = LINEIN
	LOKCTL = 1
	XCALL ISIO (2,POLINE,DKEY,READ,LOKCTL)
	IF (LOKCTL.NE.0) POLINE =
	OLDLIN = POLINE
	RETURN

;**********************************************************************

INPT1,
	CTL = '04,20,03,00,#E'
	CALL INPUT
	GO TO (BEGIN,ABORT), INXCTL
	LINEIN = ENTRY(1,3)
	IF (ENTRY.EQ.BLANKS) LINEIN = LASNUM + 1
	XCALL OUTPT (4,20,0,LINEIN,V)

	IF (OPT.EQ.2) GO TO OPTN2

	CALL GETLIN
	IF (LOKCTL.NE.0) GOTO CNTOP1
	XCALL MESAG ('LINE ALREADY ADDED',1)
	GO TO INPT1
CNTOP1,
	XCALL OUTPT (4,20,0,LINEIN,V)
	LLINNO = LINEIN
	LPONUM = HPONUM
	LRLNUM = HRLNUM
	LINSTS = 'N'
	XCALL OUTPT (06,20,0,LINSTS,V)
	IF (HPOSTS.EQ.'P') HCXCDE = 'C'
	LCXCDE = 'N'
	XCALL OUTPT (08,20,0,LCXCDE,V)
	GO TO (ANYCNG), CNGCTL
	GO TO INPT4
OPTN2,
	CALL GETLIN
	IF (LOKCTL.NE.0) GOTO NONFIL
	LASNUM = LINEIN
	CALL DISPLA
	GO TO ANYCNG

NONFIL,
	XCALL MESAG ('PURCHASE ORDER LINE NOT ON FILE',2)
	GO TO INPT1

INPT2,
	CTL = '06,20,01,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LINSTS = ENTRY
	IF (LINSTS.NE.'R'.AND.LINSTS.NE.'I'.AND.LINSTS.NE.'C'
&			 .AND.LINSTS.NE.'X') GO TO INPT2
	XCALL OUTPT (06,20,0,LINSTS,V)
	GO TO (ANYCNG), CNGCTL

INPT3,
	CTL = '08,20,01,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LCXCDE = ENTRY
	IF (LCXCDE.NE.'C'.AND.LCXCDE.NE.'N'.AND.LCXCDE.NE.'X') GO TO INPT3
	IF (HPOSTS.EQ.'P'.AND.(LCXCDE.EQ.'C'.OR.LCXCDE.EQ.'X')) HCXCDE = 'C'
	XCALL OUTPT (08,20,0,LCXCDE,V)
	GO TO (ANYCNG), CNGCTL
INPT4,
	CTL = '10,20,15,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (RJUST) XCALL FRMAT (ENTRY(1,15),15)
	LITMNO = ENTRY(1,15)
	IF (LITMNO.EQ.BLANKS) GO TO INPT4
	AITMNO = LITMNO
	IF (RJUST) XCALL LEFTJ (AITMNO(1,15),15)
	XCALL OUTPT (10,20,0,AITMNO,V)
	XCALL OUTPT (10,37,0,'1',V)
	NEWKEY = 1
	ITMMAS =
	LNOSTD = 0			;(01)
	BSMID = 1
	SRCCTL = 1
	SRCOPT = 4
	XCALL SERCH (6,ITMIDX,LITMNO,1,15,ORG041,BSMID,SRCCTL,SRCOPT,16,20,0,0,0,0)
	UNLOCK 6
	IF (SRCCTL.EQ.0) GO TO ITMFND
	XCALL MESAG ('ITEM NOT ON FILE',2)
	LNOSTD = 1			;(01)
	GO TO (ANYCNG), CNGCTL
	GO TO INPT5

ITMFND,
	XCALL IO (7,ITMMAS,IRC041,READ,LOKCTL)
	UNLOCK 7
	IF (LOKCTL.EQ.1) GO TO BEGIN
	LITMDS = DESCR
	LITCAT = PRDCAT

;;;	LITMUM = PUOFM
;;;	LITMCC = COMCOD

	CALL LEVELS			; LEVELS DISPLAYS THE ITEM INFORMATION
					; ON THE SCREEN
	GO TO (ANYCNG), CNGCTL
	GO TO INPT8

INPT5,
	CTL = '12,20,30,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LITMDS = ENTRY
	XCALL OUTPT (12,20,0,LITMDS,V)
	GO TO (ANYCNG), CNGCTL

INPT6,
	CTL = '14,20,02,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (ENTRY.NE.BLANKS) GO TO CONT6
	LITMUM = 'EA'
	GO TO DISP6
CONT6,
	XCALL FRMAT (ENTRY,2)
	LITMUM = ENTRY
DISP6,
	XCALL OUTPT (14,20,0,LITMUM,V)
	GO TO (ANYCNG), CNGCTL

INPT7,
	CTL = '16,20,04,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LITMCC = ENTRY
	XCALL OUTPT (16,20,0,LITMCC,V)
	NEWKEY = 1
	GO TO (ANYCNG), CNGCTL

INPT8,
	CTL = '18,20,10,00,# '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	XCALL FRMAT (ENTRY,10)
	IF (ENTRY.NE.BLANKS) GO TO CONT8
	AENTRY = (LSTCST*100),'ZZZ,ZXX.XXXX'
	LEXCST = LSTCST * 100
	GO TO DISP8
CONT8,
	LEXCST = ENTRY (1,10)
	AENTRY = LEXCST,'ZZZ,ZXX.XXXX'
DISP8,
	XCALL OUTPT (18,20,0,AENTRY,V)
	GO TO (ANYCNG), CNGCTL
INPT9,
	GO TO (ANYCNG), CNGCTL
INPT10,
	IF (HPOTYP.NE.'B'.AND.OPT.EQ.1) GO TO INPT11
	IF (CNGCTL.EQ.1) XCALL OUTPT (22,20,0,BLANKS(1,9),V)
	CTL = '22,20,01,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (ENTRY.EQ.BLANKS) ENTRY = 'E'
	LBLKTP = ENTRY
	IF (LBLKTP.NE.'E'.AND.LBLKTP.NE.'F'.AND.LBLKTP.NE.'M'.AND.
&		LBLKTP.NE.'N') GO TO INPT10
	IF (LBLKTP.EQ.'F') XCALL OUTPT (22,20,0,'FIRM',V)
	IF (LBLKTP.EQ.'E') XCALL OUTPT (22,20,0,'ESTIMATED',V)
	IF (LBLKTP.EQ.'M') XCALL OUTPT (22,20,0,'MAXIMUM',V)
	IF (LBLKTP.EQ.'N') XCALL OUTPT (22,20,0,'MINIMUM',V)
	GO TO (ANYCNG), CNGCTL

INPT11,
	CTL = '04,52,06,00,# '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	HPOWGT = ((HPOWGT*10)-LINWGT)#1
	LQTYOR = ENTRY(1,6)
	LINWGT = LQTYOR * WEIGHT
	AENTRY(1,9) = LINWGT,'ZZ,ZXX.XX'
	XCALL OUTPT (10,72,0,AENTRY(1,9),V)
	HPOWGT = ((HPOWGT*10)+LINWGT)#1
	AENTRY(1,8) = HPOWGT,'ZZ,ZXX.X'
	XCALL OUTPT (08,72,0,AENTRY(1,8),V)
	AENTRY(1,7) = LQTYOR,'ZZZ,ZXX'
	XCALL OUTPT (04,52,0,AENTRY(1,7),V)
	GO TO (ANYCNG),CNGCTL
	IF (OPT.EQ.1) GO TO INPT14

INPT12,
	CTL = '06,52,06,00,# '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LQTYRC = ENTRY(1,6)
	AENTRY(1,7) = LQTYRC,'ZZZ,ZXX'
	XCALL OUTPT (06,52,0,AENTRY(1,7),V)
	GO TO (ANYCNG), CNGCTL
INPT13,
	CTL = '08,52,06,00,# '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LQTYRJ = ENTRY(1,6)
	AENTRY(1,7) = LQTYRJ,'ZZZ,ZXX'
	XCALL OUTPT (08,52,0,AENTRY(1,7),V)
	GO TO (ANYCNG), CNGCTL
INPT14,
	CTL = '10,52,03,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (ENTRY.NE.BLANKS) GO TO CONT14
	GO TO DISP14
CONT14,
	LNOTIF = ENTRY
DISP14,
	XCALL OUTPT (10,52,0,LNOTIF,V)
	GO TO (ANYCNG), CNGCTL

INPT15,
	CTL = '14,52,06,00,D '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (ENTRY.EQ.BLANKS) XCALL RDATE (ENTRY(1,6))
	LDTERQ = ENTRY(1,6)
	XCALL DSPLY (06,14,52,LDTERQ,2,V)
	GO TO (ANYCNG), CNGCTL
INPT16,
	CTL = '16,52,06,00,D '
	CALL INPUT
	GO TO (BEGIN),INXCTL
	LDTEPM = ENTRY(1,6)
	XCALL DSPLY (06,16,52,LDTEPM,2,V)
	GO TO (ANYCNG), CNGCTL
INPT17,
	CTL = '18,52,06,00,D '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LDTERC = ENTRY(1,6)
	XCALL DSPLY (06,18,52,LDTERC,2,V)
	GO TO (ANYCNG), CNGCTL

INPT18,
	CTL = '20,52,06,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LJOBNO = ENTRY(1,6)
	GO TO (ANYCNG), CNGCTL

INPT19,
	CTL = '22,52,03,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (ENTRY.NE.BLANKS) GO TO CONT19
	GO TO DISP19
CONT19,
	LMOVET = ENTRY
DISP19,
	XCALL OUTPT (22,52,0,LMOVET,V)
	GO TO (ANYCNG), CNGCTL

;**********************************************************************

ANYCNG,
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (NOTES), CNGCTL + 1
	GO TO (BR1,BR2), OPT
BADCNG,
	CNGCTL = 3
	GO TO ANYCNG

BR1,
	IF (WHATNO.EQ.10.AND.HPOTYP.EQ.'B') GO TO INPT10
	IF (HPOTYP.NE.'B'.AND.WHATNO.EQ.10) GO TO BADCNG
	GO TO (BADCNG,BADCNG,INPT3,INPT4,BADCNG,INPT6,INPT7,INPT8,
&		INPT9,BADCNG,INPT11,INPT12,INPT13,INPT14,INPT15,INPT16,
&		INPT17,INPT18,INPT19), WHATNO
BR2,
	IF (HPOTYP.EQ.'N'.AND.WHATNO.EQ.2) GO TO BADCNG
	IF (HPOTYP.NE.'B'.AND.WHATNO.EQ.10) GO TO BADCNG
	IF (LINSTS.NE.'N'.AND.WHATNO.EQ.5) GO TO BADCNG
	IF (LINSTS.NE.'N'.AND.WHATNO.EQ.6) GO TO BADCNG

	GO TO (BADCNG,INPT2,INPT3,INPT4,INPT5,INPT6,INPT7,INPT8,INPT9,
&		INPT10,INPT11,INPT12,INPT13,INPT14,INPT15,INPT16,INPT17,
&		INPT18,INPT19), WHATNO

;**********************************************************************

NOTES,
	CALL NTSCRN
	IF (OPT.EQ.2) CALL DSNOTS
	IF (OPT.EQ.2) GO TO NTECNG
INPT20,
	TABLE =
	IF (CNGCTL.EQ.1) XCALL OUTPT (12,30,1,'\',V)
	CTL = '12,30,02,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO BLNK20
	TBLKEY =
	TKEYCD = ENTRY(1,2)
	CALL NTSRCH
	IF (SRCCTL.EQ.1) XCALL MESAG ('(CODE NOT ON FILE)',V)
	IF (SRCCTL.EQ.1) GO TO INPT20
BLNK20,
	LPONCD(1) = ENTRY(1,2)
	XCALL OUTPT (12,30,0,LPONCD(1),V)
	XCALL OUTPT (12,34,0,TDESC,V)
	GO TO (NTECNG), CNGCTL
	IF (ENTRY.EQ.BLANKS) GO TO INPT22
INPT21,
	TABLE =
	IF (CNGCTL.EQ.1) XCALL OUTPT (14,30,1,'\',V)
	CTL = '14,30,02,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO BLNK21
	TBLKEY =
	TKEYCD = ENTRY(1,2)
	CALL NTSRCH
	IF (SRCCTL.EQ.1) XCALL MESAG ('(CODE NOT ON FILE)',V)
	IF (SRCCTL.EQ.1) GO TO INPT21
BLNK21,
	LPONCD(2) = ENTRY(1,2)
	XCALL OUTPT (14,30,0,LPONCD(2),V)
	XCALL OUTPT (14,34,0,TDESC,V)
	GO TO (NTECNG), CNGCTL
INPT22,
	CTL = '16,34,30,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LPONTE(1) = ENTRY
	XCALL OUTPT (16,34,0,LPONTE(1),V)
	IF (ENTRY.EQ.BLANKS) GO TO NTECNG
	GO TO (NTECNG), CNGCTL
INPT23,
	CTL = '18,34,30,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LPONTE(2) = ENTRY
	XCALL OUTPT (18,34,0,LPONTE(2),V)
	IF (ENTRY.EQ.BLANKS) GO TO NTECNG
	GO TO (NTECNG),CNGCTL
INPT24,
	CTL = '20,34,30,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LPONTE(3) = ENTRY
	XCALL OUTPT (20,34,0,LPONTE(3),V)
	IF (ENTRY.EQ.BLANKS) GO TO NTECNG
	GO TO (NTECNG), CNGCTL
INPT25,
	CTL = '22,34,30,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LPONTE(4) = ENTRY
	XCALL OUTPT (22,34,0,LPONTE(4),V)
	GO TO NTECNG

;**********************************************************************
;	SEARCHES FOR NOTES IN THE P/O TABLES
;**********************************************************************

NTSRCH,
	TKEYNO = 6
	BSMID = 1
	SRCCTL = 2
	SRCOPT = 4
	XCALL SERCH (3,TABLE,TBLKEY,1,5,ORG153,BSMID,SRCCTL,SRCOPT,
&			6,11,0,0,0,0)
	UNLOCK 3
	IF (SRCCTL.EQ.1) TABLE =
	RETURN

;**********************************************************************

NTECNG,
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (PROCES), CNGCTL + 1
	GO TO (INPT20,INPT21,INPT22,INPT23,INPT24,INPT25), WHATNO - 19
BDNTCG,
	CNGCTL = 3
	GO TO NTECNG

;**********************************************************************

CHANGE,
	LASNUM = LLINNO
	IF (OLDLIN.NE.POLINE) CALL CHKLIN
	IF (NEWKEY.EQ.1) GOTO ADDNEW
	LOKCTL = 1
	XCALL ISIO (2,POLINE,POLKEY,WRITE,LOKCTL)
	GOTO  FREBUF

ADDNEW,
	OLDLIN = POLINE
	LOKCTL = 1
	XCALL ISIO (2,POLINE,DKEY,DELETE,LOKCTL)
	POLINE = OLDLIN
	LOKCTL = 1
	XCALL ISIO (2,POLINE,POLKEY,STORE,LOKCTL)	
	NEWKEY = 0
FREBUF,
	GO TO BEGIN
;*************************************************************************
PROCES,
	XCALL WATE (3,V)
	IF (OPT.EQ.2) GO TO CHANGE
ADD,
	LASNUM = LLINNO
	HLLNUM = LLINNO
	LOKCTL = 1
	XCALL ISIO (2,POLINE,POLKEY,STORE,LOKCTL)
	IF (LOKCTL.NE.0) XCALL MESAG ('ERROR ADDING P.O. LINE',1)
	GO TO FREBUF
ABORT,
	EXITSW = 1
END,
	POHEDR = HEADER
	XCALL WATE (3,V)
	RETURN
;**********************************************************************
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN

;**********************************************************************
;	THIS ROUTINE DISPLAYS THE NOTES SCREEN
;**********************************************************************

NTSCRN,
	XCALL OUTPT (1,1,3,'PURCHASE ORDER ENTRY',V)
	IF (OPT.EQ.1) XCALL OUTPT (2,1,0,'ADD P/O LINE',V)
	IF (EXITSW.EQ.2) XCALL OUTPT (2,1,0,'ADD PURCHASE ORDER',V)
	IF (OPT.EQ.2) XCALL OUTPT (2,1,0,'CHANGE/INQUIRE P/O LINE',V)
	XCALL OUTPT (06,24,0,'ENTRY SCREEN FOR P/O LINE NOTES',V)
	XCALL OUTPT (08,22,0,'P/O NO',V)
	ENTRY(1,6) = LPONUM,'ZZZZXX'
	XCALL OUTPT (08,32,0,ENTRY(1,6),V)
	XCALL OUTPT (08,38,0,'-',V)
	XCALL OUTPT (08,39,0,LRLNUM,V)
	XCALL OUTPT (08,45,0,'LINE NO',V)
	XCALL OUTPT (08,55,0,LLINNO,V)
	XCALL OUTPT (12,18,0,'20. NOTE 1',V)
	XCALL OUTPT (14,18,0,'21. NOTE 2',V)
	XCALL OUTPT (16,18,0,'22. NOTE 3',V)
	XCALL OUTPT (18,18,0,'23. NOTE 4',V)		
	XCALL OUTPT (20,18,0,'24. NOTE 5',V)		;(01)
	XCALL OUTPT (22,18,0,'25. NOTE 6',V)		;(01)
	RETURN

;**********************************************************************

DSNOTS,
	IF (LPONCD.EQ.BLANKS) GO TO SCNDNT
	XCALL OUTPT (12,30,0,LPONCD(1),V)
	TBLKEY =
	TKEYCD = LPONCD(1)
	CALL NTSRCH
	IF (SRCCTL.EQ.0) GO TO FOUND1
	IF (LPONCD(1).NE.BLANKS) XCALL OUTPT (12,34,0,'CODE NOT ON FILE',1)
	GO TO SCNDNT
FOUND1,
	XCALL OUTPT (12,34,0,TDESC,V)
SCNDNT,
	IF (LPONCD.EQ.BLANKS) GO TO THRDNT
	XCALL OUTPT (14,30,0,LPONCD(2),V)
	TBLKEY =
	TKEYCD = LPONCD(2)
	CALL NTSRCH

	IF (SRCCTL.EQ.0) GO TO FOUND2
	IF (LPONCD(2).NE.BLANKS) XCALL OUTPT (14,34,0,'CODE NOT ON FILE',1)
	GO TO THRDNT
FOUND2,
	XCALL OUTPT (14,34,0,TDESC,V)
THRDNT,
	XCALL OUTPT (16,34,0,LPONTE(1),V)
	XCALL OUTPT (18,34,0,LPONTE(2),V)
	XCALL OUTPT (20,34,0,LPONTE(3),V)		;(01)
	XCALL OUTPT (20,34,0,LPONTE(4),V)		;(01)
	RETURN

;**********************************************************************
;	DISPLAYS THE LINE INFO ON THE SCREEN
;**********************************************************************

DISPLA,
	SRCCTL =
	ITMMAS =
;;;	IMINFO =		;(04)
	ITMIDX =
	AITMNO(1,15) = LITMNO
	XCALL SERCH (6,ITMIDX,AITMNO,1,15,ORG041,BSMID,SRCCTL,SRCOPT,16,20,0,0,0,0)
	UNLOCK 6
	IF (SRCCTL.EQ.1) GO TO SKIP
	XCALL IO (7,ITMMAS,IRC041,READ,LOKCTL)

;;;	XCALL ISIO (CHN249,IMINFO,ITEMNO,READ,LOKCTL)	;(04)
;;;	IF (LOKCTL .NE. 0) CLEAR IMINFO			;(04)

	UNLOCK 7
SKIP,
	QONHND =
	QONORD =
	REORLV =
	IF (OPT.EQ.1) LQTYRC =
	IF (OPT.EQ.1) LQTYRJ =
	XCALL OUTPT (04,20,0,LLINNO,V)
	XCALL OUTPT (06,20,0,LINSTS,V)
	XCALL OUTPT (08,20,0,LCXCDE,V)
	AITMNO = LITMNO
	IF (RJUST) XCALL LEFTJ(AITMNO(1,15),15)
	XCALL OUTPT (10,20,0,AITMNO,V)
	XCALL OUTPT (12,20,0,LITMDS,V)
	XCALL OUTPT (14,20,0,LITMUM,V)
	XCALL OUTPT (16,20,0,LITMCC,V)
	AENTRY = LEXCST,'ZZZ,ZXX.XXXX'
	XCALL OUTPT (18,20,0,AENTRY(1,12),V)
	XCALL OUTPT (20,16,0,LVITMN,V)
	IF (LBLKTP.EQ.'F') XCALL OUTPT (22,20,0,'FIRM',V)
	IF (LBLKTP.EQ.'E') XCALL OUTPT (22,20,0,'ESTIMATED',V)
	IF (LBLKTP.EQ.'M') XCALL OUTPT (22,20,0,'MAXIMUM',V)
	IF (LBLKTP.EQ.'N') XCALL OUTPT (22,20,0,'MINIMUM',V)
	AENTRY(1,7) = LQTYOR,'ZZZ,ZXX'
	XCALL OUTPT (04,52,0, AENTRY(1,7),V)
	AENTRY(1,7) = LQTYRC,'ZZZ,ZXX'
	XCALL OUTPT (06,52,0,AENTRY(1,7),V)
	AENTRY(1,7) = LQTYRJ,'ZZZ,ZXX'
	XCALL OUTPT (08,52,0,AENTRY(1,7),V)
	XCALL OUTPT (10,52,0,LNOTIF,V)
	XCALL DSPLY (06,14,52,LDTERQ,2,V)
	XCALL DSPLY (06,16,52,LDTEPM,2,V)
	XCALL DSPLY (06,18,52,LDTERC,2,V)
	XCALL OUTPT (20,52,0,LJOBNO,V)
	XCALL OUTPT (22,52,0,LMOVET,V)


	AENTRY(1,8) = HPOWGT,'ZZ,ZXX.X'
	XCALL OUTPT (08,72,0,AENTRY(1,8),V)
	LINWGT = (LQTYOR*WEIGHT)
	AENTRY(1,9) = LINWGT,'ZZ,ZXX.XX'
	XCALL OUTPT (10,72,0,AENTRY(1,9),V)
LEVELS,
	QONHND =				; ACCUMULATES QTY ALLOCATED
	ALLOC = 				; ACCUMULATES QTY ON-HAND
	NLOC =
; only 1 loc for smc...
FNDLOC,
						; IF SHIP-TO LOCATION IS NOT
	QONHND = QTYONH ;;;(NLOC)		; SAME AS MASTER LOCATION THEN
	ALLOC = QTYCOM  ;;;(NLOC)		; SHOW TOTALS FOR SUBSIDIARY
	QONORD = QTYONO ;;;(NLOC)		; LOCATION ONLY
	REORLV = REOLVL ;;;(NLOC)

	XCALL OUTPT (12,20,0,LITMDS,V)
	XCALL OUTPT (14,20,0,LITMUM,V)
	XCALL OUTPT (16,20,0,LITMCC,V)
	XCALL OUTPT (6,76,0,HSHPTO,V)

	AENTRY (1,10) = QONHND,'ZZ,ZZZ,ZXX'
	XCALL OUTPT (12,71,0,AENTRY(1,10),V)
	AENTRY(1,10) = ALLOC,'ZZ,ZZZ,ZXX'
	XCALL OUTPT (14,71,0,AENTRY(1,10),V)
	AENTRY (1,10) = QONORD,'ZZ,ZZZ,ZXX'
	XCALL OUTPT (16,71,0,AENTRY(1,10),V)
	AENTRY (1,10) = REORLV,'ZZ,ZZZ,ZXX'
	XCALL OUTPT (18,71,0,AENTRY(1,10),V)

	RETURN

;**********************************************************************
;	MARKS HEADER AND LINE RECORDS IF ANY CHANGE HAS BEEN MADE TO LINE
;**********************************************************************

CHKLIN,
	IF (LINSTS.EQ.'N'.OR.LINSTS.EQ.'X') RETURN
	IF (HPOSTS.NE.'P') RETURN
	IF (POLINE(61,82).NE.OLDLIN(61,82)) GO TO CNG
	IF (POLINE(89,98).NE.OLDLIN(89,98)) GO TO CNG
	IF (POLINE(111,116).NE.OLDLIN(111,116)) GO TO CNG
	IF (POLINE(130,135).NE.OLDLIN(130,135)) GO TO CNG
	IF (POLINE(161,224).NE.OLDLIN(161,224)) GO TO CNG
	RETURN
CNG,
	HCXCDE = 'C'
	LCXCDE = 'C'
	RETURN

END
