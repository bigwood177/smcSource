SUBROUTINE SCRN1; (POHEDR,OPT,EXITSW)
; SCRN1 / POR - D11
;
;
	POHEDR	,A	;FIELD TO PASS BACK P/O HEADER RECORD BACK TO CALLING PROGRAM
	OPT	,D	;OPTION SWITCH IS SET TO :
			;		1 - ADD P/O HEADER
			;		2 - CHANGE/INQUIRE P/O HEADER

	EXITSW	,D	;SET TO 0 INDICATES THAT USER DOES NOT WISH TO EXIT
			;SET TO 1 INDICATES THAT USER WISHES TO EXIT

	VNAME	,A	;VENDOR'S NAME
	UCDE	,A	;USER'S INITIALS



; 05-02-06 ssq: next po number is now in "poptbl.ism"

; 12-27-05 SSQ: Jessie R now has Mike Meyer's old PO range...

	.INCLUDE 'WND:WINDOWS.DEF'

;;;EXTERNAL FUNCTION
;;;	GU_NAME	,A

RECORD	FUNKEY
	.INCLUDE 'DEF:FUNKEY.DEF'

RECORD	COPTBL
	.INCLUDE 'DEF:RD182A.DEF'

RECORD	VENALP
	.INCLUDE 'DEF:RD027A.DEF'

RECORD	POPAR
	.INCLUDE 'DEF:poPOP.DEF'

RECORD	POP
	.INCLUDE 'DEF:POP1.DEF'

RECORD	POP1A
	.INCLUDE 'DEF:POP1A.DEF'

RECORD	POSHIP
	.INCLUDE 'DEF:RD149A.DEF'

RECORD HEADER	
	.INCLUDE 'DEF:RD151A.DEF'

RECORD POLINE	
	.INCLUDE 'DEF:RD152A.DEF'

RECORD VENDOR	
	.INCLUDE 'DEF:RD011A.DEF'

RECORD VENCTL	
	.INCLUDE 'DEF:RD011B.DEF'

RECORD VENIDX	
	.INCLUDE 'DEF:RD012A.DEF'

RECORD TBLCTL	
	.INCLUDE 'DEF:RD153B.DEF'

RECORD TBL
	TTBLNO	,18D2
	TCODE	,18A2
	TSEQNO	,18D1
	TDESC	,18A30

RECORD TABLE
	TNO	,D2
	CDE	,A2
	SQ	,D1
	DSC	,A30

RECORD MENLIN
	MCODE	,A2
		,A3,' = '
	MDESC	,A30

RECORD	VENLIN
	VCODE	,A3
		,A3,	' = '
	VDESC	,A30

RECORD	SVLINE
	SVL_CODE	,A1
		,A3,	' = '
	SVL_SCAC	,A4
		,A1
	SVL_NAME	,A15

RECORD	ARRAYS
	VARRY	,10A30
	VSEQ	,10D3
	NUMCTC	,D3

	SVARY	,10A15		;SCAC DESCRIPTIONS
	SVCODE	,10A1
	SVSCAC	,10A4
	SVRFA	,10A6
	NUMSV	,D3

RECORD PBLKEY
	TKEYNO	,D2
	TKEYCD	,A2
	TKEYSQ	,D1

RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD	APONUM
	APON	,A6
		,A1,	'-'
	ALON	,A2

RECORD	WVARS
	W_ID	,D4
	WND_1	,D4
	WND_2	,D4
	WND_3	,D4
	WND_4	,D4

RECORD	CHANNEL
	CHN011	,D2,	04
	CHN012	,D2
	CHN027	,D2,	08
	CHN041	,D2
	CHN042	,D2
	CHN151	,D2
	CHN152	,D2
	CHN153	,D2
	CHN182	,D2,	10
	CHNTBL	,D2

RECORD	VARS
	E_NBR	,D3	;EMAIL NUMBER (VC)
	ALPHA	,A10
	XFAX	,D10
	ADD_CT	,D1	;1=ADD NEW CONTACT TO TABLE
	FILNAM	,A14
	RFA	,A6
	DVLIN	,A3
	NXTPON	,D6
	DEC3	,D3
	S_CNGCTL,D1
	SAVSHP	,A2
	CHN149	,D2,	09
	PODS	,D1	;PO SHIP TO FLAG; 1=ENTER, 2=DISPLA
	VENERR	,A*,	'Update incomplete data in Vendor file'
	I	,D4
	F_KEY	,D3
	START_NAME	,A25
	TSTAT	,D1
	XDATE	,D8
	TODAY	,D8
	TODAA	,A10		;FORMAT XX/XX/XXXX

RECORD	CHECK
	.INCLUDE 'DEF:RD151C.DEF'

RECORD	OLDHDR
	.INCLUDE 'DEF:RD151C.DEF'

RECORD COMMON
	ALF	,A2
	BRACKS	,A15,	']]]]]]]]]]]]]]]'
	OLDCNT	,D5
	DECMAL	,D4
	LOKCTL	,D1
	ENTRY	,A30
	FULL	,D1
	SWITCH	,D1
	INXCTL	,D1
	CNGCTL	,D1
	NOTADD	,D1
	WHATNO	,D2
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	PONUM	,D8
	SUB	,D2
	SEQ	,D1
	NT	,D1
	KEY	,A5
	SRCCTL	,D1
	SRCOPT	,D1
	NOTE	,A30
	IOCTL	,D1
	TBLNUM	,D2
	BSEND	,D5
	BSMID	,D5
	TLIMIT	,D2
	HRCNUM	,D5
	TKEY	,A2
	BLANKS	,A30
	LASPNO	,D6
	RELES	,D2
	SAVPO	,D6
	SAVRL	,D2
	CLSFLG	,D1

PROC
	CALL INIT_WINDOW

	XCALL RDAT8(TODAY)
	XDATE(1,4) = TODAY(5,8)
	XDATE(5,8) = TODAY(1,4)
	TODAA = XDATE,	'XX/XX/XXXX'
	DVLIN = '(X)'
BEGIN,
	W_ID = WND_1
	FULL =
	HEADER =
	CNGCTL =		;SSQ 8/21/91
	XCALL W_DISP(WND_1,WD_CLEAR)
	XCALL W_DISP(WND_1,WD_POS,1,1,'PURCHASE ORDER ENTRY')
	XCALL W_DISP(WND_1,WD_POS,4,2,'1. P/O NO')
	XCALL W_DISP(WND_1,WD_POS,12,2,'2. VENDOR NO')
	XCALL W_DISP(WND_1,WD_POS,13,2,'3. CONTACT')
	XCALL W_DISP(WND_1,WD_POS,14,2,'4. REQ DATE')
	XCALL W_DISP(WND_1,WD_POS,16,2,'5. SHIP TO')
	XCALL W_DISP(WND_1,WD_POS,18,2,'6. BUYER')
	XCALL W_DISP(WND_1,WD_POS,20,2,'7. SHIP-VIA')
	XCALL W_DISP(WND_1,WD_POS,22,2,'8. FAX PO? (N)')
	XCALL W_DISP(WND_1,WD_POS,4,34,'9. COL/PPD')
	XCALL W_DISP(WND_1,WD_POS,6,33,'10. TERMS')
	XCALL W_DISP(WND_1,WD_POS,7,33,'11. FOB')
	XCALL W_DISP(WND_1,WD_POS,8,33,'12. JOB')
	XCALL W_DISP(WND_1,WD_POS,10,33,'13. CONFIRM (Y)')
	XCALL W_DISP(WND_1,WD_POS,04,54,'14. PRINT PRICE (Y)')

	LOKCTL = 0
	XCALL IO (3,TBLCTL,1,READ,LOKCTL)
	UNLOCK 3

	XCALL FFILE(182,FILNAM,SWITCH)
	filnam(5,5) = 'P'		;coptbl => poptbl 5-2-06 ssq
	FILNAM(14,14) = 'M'
	OPEN(13,SI,FILNAM)	;COPTBL
	CHNTBL = 13
	CLEAR TBL_KEY
	TBLCOD = 'PN'
	LOKCTL = 0
	XCALL ISIO (CHNTBL,COPTBL,TBL_KEY,READ,LOKCTL)
	CLOSE CHNTBL

	USING UCDE SELECT
	('MW'),	NXTPON = PN_NO1		;MARTY W
;;;	('MM'),	NXTPON = PN_NO2		;MIKE M
	('JR'),	NXTPON = PN_NO2		;now Jessie R >>MIKE M
	('SE'),	NXTPON = PN_NO3		;STEVE E
	('PO'),	NXTPON = PN_NO4		;EVERYONE ELSE
;;;	('MW'),	NXTPON = MPONUM
;;;	('PO'),	NXTPON = NPONUM
	(),	NXTPON = 
	ENDUSING
	
	LOKCTL = 1
	XCALL IO (4,VENCTL,1,READ,LOKCTL)
	UNLOCK 4
INPT1,

INPT1A,
	CTL = '04,20,06,00,#E'
	CALL INPUT
	IF (INXCTL.EQ.2) EXITSW = 1
	GO TO (BEGIN,END), INXCTL

	IF (ENTRY.EQ.BLANKS.AND.OPT.EQ.1) CALL GET_NEXT_PO

	HPONUM = ENTRY(1,6)
	IF (HPONUM.EQ.0) GOTO INPT1A
	HRLNUM = 00
	APON = HPONUM,	'ZZZZZX' [RIGHT]
	ALON = HRLNUM,	'XX'
	XCALL W_DISP(WND_1,WD_POS,04,20,APONUM)	

	UNLOCK 3
	PONUM(1,6) = HPONUM
	PONUM(7,8) = HRLNUM
	LOKCTL = 1
	XCALL ISIO (1,HEADER,PONUM,READ,LOKCTL)
	IF (LOKCTL .EQ. 0)
	THEN	BEGIN		;HEADER EXISTS
		OPT = 2		;CHANGE MODE
		GOTO OPTN2
		END
	ELSE	OPT = 1		;ADD MODE

HDROK,
	XCALL W_DISP(WND_1,WD_POS,2,1,'ADD PURCHASE ORDER')
	HEADER =
	HPONUM = PONUM(1,6)
	HRLNUM = PONUM(7,8)
	HPOTYP = 'N'	;NORMAL
	HPOSTS = 'R'	;RELEASED
	HCXCDE = 'N'	;NEW
	GO TO INPT2
OPTN2,
	XCALL W_DISP(WND_1,WD_POS,2,1,'CHANGE PURCHASE ORDER')
	OLDHDR = HEADER
	CALL DISPLA
	GO TO ANYCNG


INPT2,
	XCALL W_DISP(WND_1,WD_POS,24,2,WD_CLR,WDC_EOL,'<F1> = ALPHA LOOK-UP')
	CTL = '12,20,04,00,A '
	XCALL WINPT (W_ID,ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,F_KEY)
;;;	CALL INPUT
	GO TO (BEGIN), INXCTL
	USING F_KEY SELECT
	(F_01),	BEGIN
		CALL ALPHA_LOOKUP
		XCALL W_DISP(WND_1,WD_POS,24,1,WD_CLR,WDC_EOL)
		GOTO (INPT2,INPT2),INXCTL
		END
	ENDUSING
	XCALL W_DISP(WND_1,WD_POS,24,1,WD_CLR,WDC_EOL)

	IF (ENTRY.EQ.BLANKS) GO TO INPT2
	HVENDR = ENTRY(1,4)
	XCALL FRMAT (HVENDR,4)
	XCALL W_DISP(WND_1,WD_POS,12,20,HVENDR)

	LOKCTL = 1
	XCALL ISIO (CHN011, VENDOR, HVENDR, READ, LOKCTL)
	IF (LOKCTL .EQ. 0)
	THEN	CLEAR SRCCTL
	ELSE	SRCCTL = 1

;;;	BSMID = 1
;;;	SRCOPT = 4		;BIN NOT SEQSEARCHES VENDOR MASTER FILE FOR VENDOR
;;;	XCALL SERCH (5,VENIDX,HVENDR,1,4,ORG011,BSMID,SRCCTL,
;;;&			SRCOPT,5,10,0,0,0,0)
;;;	UNLOCK 5
	IF (SRCCTL.EQ.0) GO TO VENFND

	XCALL WNMSG (WND_1,24,'VENDOR NOT ON FILE',1)
;;;	XCALL OLMSG (WND_1,24,'VENDOR NOT ON FILE',1)
	HVENDR =
	GO TO INPT2

VENFND,
;;;	XCALL IO (4,VENDOR,IRC011,READ,LOKCTL)
	UNLOCK 4
	XCALL W_DISP(WND_1,WD_POS,12,26,NAME)
	VNAME = NAME			;SAVE VENDORS NAME
	XCALL W_DISP(WND_1,WD_POS,12,58,TELNO)
	XCALL W_UPDT
	GO TO (ANYCNG), CNGCTL

CONTACT,
	CLEAR ADD_CT
	CALL V_CONTACT
	IF (ANUMARA .LE. 0) GOTO V_MAN

	xcall w_disp(wnd_1,wd_pos,13,1)
	XCALL TTSTS(TSTAT)
	IF (TSTAT) XCALL W_DISP(w_id,WD_READS,alpha)

	aDLINE = '  No  Name'
	XCALL POP1 (POP1A)
	USING AP_ACTION SELECT
	(1,4),	BEGIN
		ADLINE = APARRY(API)
		HCONTC = ADLINE(5,25)
		HCNBR = ADLINE(27,29)
		GOTO V_OK2
		END
	(2),	BEGIN
		GOTO V_MAN
		END
	(),	GOTO V_OK2

	ENDUSING

V_MAN,
	CTL = '13,20,20,00,A '
	CALL INPUT
	GOTO (BEGIN),INXCTL
	HCONTC = ENTRY(1,20)

	ADD_CT = 1				;ADD TO TABLE
V_OK2,
	XCALL W_DISP(WND_1,WD_POS,13,20,HCONTC)
	XCALL W_UPDT
	GOTO(ANYCNG),CNGCTL

INPT3,
	CTL = '14,20,08,00,D '
	HPODTE =
	CALL INPUT
	GO TO (BEGIN), INXCTL
	HPODTE = ENTRY
	IF (HPODTE.EQ.0) 
		BEGIN
		HPODTE = TODAY
		XCALL W_DISP(WND_1,WD_POS,ROW,COL,TODAA)
		END
	GOTO (ANYCNG),CNGCTL

INPT4,
;;;	GOTO (TBL4), CNGCTL
;;;	SAVSHP = HSHPTO
;;;	CTL = '16,20,02,00,AT'
;;;	CALL INPUT
;;;	GOTO(BEGIN,TBL4,TBL4),INXCTL
;;;	HSHPTO = ENTRY(1,2)
;;;	IF(HSHPTO .EQ. '  ')HSHPTO = SAVSHP
;;;	USING HSHPTO SELECT
;;;	('  '),	BEGIN
;;;		HSHPTO = DFSHTO
;;;		GOTO DISP4
;;;		END
;;;	('99'),	BEGIN
;;;		CALL POSHIP
;;;		GOTO DISP4
;;;		END
;;;	ENDUSING

TBL4,
	PBLKEY =
	TKEYNO = 1
	CALL FNDTBL
	SUB =
	CALL SUBMNU
CTL4,
	CTL = '16,20,02,00,AT'
	CALL INPUT
;;;	GO TO (BEGIN), INXCTL
	IF (INXCTL .EQ. 1)
		BEGIN
		CALL CLRMEN
		GOTO BEGIN
		END
	IF (INXCTL.EQ.3) CALL SUBMNU
	IF (INXCTL.EQ.3) GO TO CTL4
	ALF = ENTRY(1,2)
	CALL GETSUB
	IF (SUB.GT.TLIMIT) GO TO CTL4
	IF (SUB.NE.0) GO TO CONT4
	GO TO DISP4
CONT4,
	IF (SUB.GT.18) GO TO CTL4
	HSHPTO = TCODE(SUB)
	IF (HSHPTO.EQ.'2' .OR. HSHPTO.EQ.'99')
		BEGIN
		CALL POSHIP
	;;;	GOTO DISP4
		END
DISP4,
	XCALL W_DISP(WND_1,WD_POS,16,20,HSHPTO)
	XCALL W_UPDT
	CALL CLRMEN
	GO TO (ANYCNG), CNGCTL

INPT5,
	USING UCDE SELECT
	('MW'),	HBUYER = 'MW'
	('MM'),	HBUYER = '1'
	('SE'),	HBUYER = '3'
	('JR'),	HBUYER = '10'
	('PO'),	GOTO I5_CONT
	ENDUSING
	GOTO DISP5
I5_CONT,
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	IF (UCDE .EQ. 'MW')
;;;		BEGIN
;;;		HBUYER = 'MW'
;;;		GOTO DISP5
;;;		END
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	PBLKEY =
	TKEYNO = 2
	CALL FNDTBL
	SUB =
	CALL SUBMNU
CTL5,
	CTL = '18,20,02,00,AT'
	CALL INPUT
	IF (INXCTL .EQ. 1)
		BEGIN
		CALL CLRMEN
		GOTO BEGIN
		END
;;;	GO TO (BEGIN), INXCTL
	IF (INXCTL.EQ.3) CALL SUBMNU
	IF (INXCTL.EQ.3) GO TO CTL5
	ALF = ENTRY(1,2)
	CALL GETSUB
	IF (SUB.GT.TLIMIT) GO TO CTL5
	IF (SUB.NE.0) GO TO CONT5
	GO TO DISP5
CONT5,
	IF (SUB.GT.18) GO TO CTL5
	HBUYER = TCODE(SUB)
DISP5,
	XCALL W_DISP(WND_1,WD_POS,18,20,HBUYER)
	CALL CLRMEN

	CLEAR PBLKEY
	TKEYNO = 2
	TKEYCD = HBUYER
	CALL GTBL2
	XCALL W_DISP(WND_1,WD_POS,18,24,DSC)

	GO TO (ANYCNG), CNGCTL

INPT6,
	CALL S_VIA			;SHIP VIA CODES
	CTL = '20,20,02,00,AT'
	DVLIN(2,2) = SHPVIA
	XCALL W_DISP(WND_1,WD_POS,ROW,13,DVLIN)
	CALL INPUT
	IF (INXCTL .EQ. 1)
		BEGIN
		CALL CLRMEN
		GOTO BEGIN
		END
;;;	GOTO (BEGIN),INXCTL
	IF (ENTRY(1,1) .EQ. ' ')
		BEGIN
	;;;	ENTRY(1,1) = '1'
		ENTRY(1,1) = SHPVIA	;FROM VENDOR
		XCALL W_DISP(W_ID,WD_POS,ROW,COL,ENTRY(1,1))
		END
	FOR SUB FROM 1 THRU NUMSV
		BEGIN
		IF (ENTRY(1,1) .EQ. SVCODE(SUB)) GOTO SV_OK
		END
	XCALL WNMSG (WND_1, 24,'SHIP VIA NOT IN TABLE',1)
;;;	XCALL OLMSG (WND_1, 24,'SHIP VIA NOT IN TABLE',1)
	GOTO INPT6
SV_OK,
	READ (CHN182, COPTBL, RFA:SVRFA(SUB))
	CALL CLRMEN
	HSHPVI = SVCODE(SUB)
	XCALL W_DISP(WND_1,WD_POS,20,20,HSHPVI)
	XCALL W_DISP(WND_1,WD_POS,ROW,COL+4,SC_NAME)
	USING SC_PPD SELECT		;FROM CARRIER TABLE (SSQ 1/27/03)
	('Y'),	HCOLPP = 'P'		;PER STEVE M
	('N'),	HCOLPP = 'C'
	ENDUSING
	XCALL W_DISP(WND_1,WD_POS,04,49,HCOLPP)	;SSQ 1-27-03
	GO TO (ANYCNG), CNGCTL

INPT7,	; This is really "Fax PO?"
;;;	CTL = '22,20,01,00,A '
	CTL = '22,20,01,00,YN'
	CALL INPUT
;;;	GO TO (BEGIN), INXCTL
	HACKNW = ENTRY
;;;	IF (ENTRY.EQ.BLANKS) HACKNW = ACKNWL ;removed ssq 1/27/03
;;;	IF (HACKNW.EQ.BLANKS) HACKNW = 'Y'
;;;	IF (HACKNW.EQ.BLANKS) HACKNW = 'N'
;;;	IF (HACKNW.NE.'Y'.AND.HACKNW.NE.'N'.AND.HACKNW.NE.'A') GO TO INPT7
;;;	IF (HACKNW.NE.'Y'.AND.HACKNW.NE.'N') GO TO INPT7
	XCALL W_DISP(WND_1,WD_POS,22,20,HACKNW)
	XCALL W_UPDT
	GO TO (ANYCNG), CNGCTL

INPT8,
	CTL = '04,49,01,00,A '
	DVLIN(2,2) = COLPPD
	XCALL W_DISP(WND_1,WD_POS,ROW,44,DVLIN)
	HCOLPP = COLPPD		;FROM VENDOR
	USING SC_PPD SELECT		;FROM CARRIER TABLE (SSQ 1/27/03)
	('Y'),	HCOLPP = 'P'		;PER STEVE M
	('N'),	HCOLPP = 'C'
	ENDUSING

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; from scac table read in above...
;;;	USING SC_PPD SELECT
;;;	('Y'),	HCOLPP = 'P'
;;;	(),	HCOLPP = 'C'
;;;	ENDUSING
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	IF (HCOLPP .NE. BLANKS) GOTO DISP8
	XCALL WNMSG(W_ID,24,VENERR,1)
;;;	XCALL OLMSG(W_ID,24,VENERR,1)
		
	XCALL W_DISP(WND_1,WD_POS,16,49,'C - COLLECT   P - PREPAID')
	CALL INPUT
	GO TO (BEGIN), INXCTL
	HCOLPP = ENTRY
	IF (ENTRY.EQ.BLANKS) HCOLPP = 'C'
	IF (HCOLPP.NE.'C'.AND.HCOLPP.NE.'P') GO TO INPT11
DISP8,
	XCALL W_DISP(WND_1,WD_POS,04,49,HCOLPP)
	XCALL W_DISP(WND_1,WD_POS,16,33,WD_CLR,WDC_EOL)
	XCALL W_UPDT
	GO TO (ANYCNG), CNGCTL

INPT9,
	GOTO (TBL9),CNGCTL

	HTERMS = TERMS				;FROM VENDOR
	IF(HTERMS .NE. BLANKS) GOTO DISP9
	XCALL WNMSG(W_ID,24,VENERR,1)
;;;	XCALL OLMSG(W_ID,24,VENERR,1)

TBL9,
	PBLKEY =
	TKEYNO = 4
	CALL FNDTBL
	SUB =
	CALL SUBMNU
CTL9,
	CTL = '06,49,02,00,AT'
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (INXCTL.EQ.3) CALL SUBMNU
	IF (INXCTL.EQ.3) GO TO CTL9
	ALF = ENTRY(1,2)
	CALL GETSUB
	IF (SUB.GT.TLIMIT) GO TO CTL9
	IF (SUB.NE.0) GO TO CONT9
	HTERMS = TERMS
	GO TO DISP9
CONT9,
	IF (SUB.GT.18) GO TO CTL9
	CDE = TCODE(SUB)
	HTERMS = CDE(1,1)
DISP9,
	XCALL W_DISP(WND_1,WD_POS,06,49,'  ')
	XCALL W_DISP(WND_1,WD_POS,06,49,HTERMS)
	CLEAR PBLKEY
	TKEYNO = 4
	TKEYCD = HTERMS
	CALL GTBL2
	XCALL W_DISP(WND_1,WD_POS,06,51,DSC)

	CALL CLRMEN
	XCALL W_UPDT
	GO TO (ANYCNG), CNGCTL

INPT10,
	GOTO (TBL10),CNGCTL
;;;	HFOB = FOB
	USING HCOLPP SELECT
	('C'),	HFOB = 1	;"SHIP POINT"
	('P'),	HFOB = 2	;"DEST"
	ENDUSING

	IF(HFOB .NE. BLANKS) GOTO DISP10
	XCALL WNMSG(W_ID,24,VENERR,1)
;;;	XCALL OLMSG(W_ID,24,VENERR,1)
TBL10,	
	PBLKEY =
	TKEYNO = 5
	CALL FNDTBL
	SUB =
	CALL SUBMNU
CTL10,
	CTL = '07,49,02,00,AT'
;;;	CTL = '08,49,02,00,AT'
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (INXCTL.EQ.3) CALL SUBMNU
	IF (INXCTL.EQ.3) GO TO CTL10
	ALF = ENTRY(1,2)
	CALL GETSUB
	IF (SUB.GT.TLIMIT) GO TO CTL10
	IF (SUB.NE.0) GO TO CONT10
	HFOB = FOB
	GO TO DISP10
CONT10,
	IF (SUB.GT.18) GO TO INPT10
	CDE = TCODE(SUB)
	HFOB = CDE(1,1)
DISP10,
	XCALL W_DISP(WND_1,WD_POS,07,49,'  ')
	XCALL W_DISP(WND_1,WD_POS,07,49,HFOB)

	CLEAR PBLKEY
	TKEYNO = 5
	TKEYCD = HFOB
	CALL GTBL2
	XCALL W_DISP(WND_1,WD_POS,7,51,DSC)
	CALL CLRMEN
	XCALL W_UPDT
	GO TO (ANYCNG), CNGCTL

HJOB,
	CTL = '08,49,06,00,# '
	CALL INPUT
	GOTO (BEGIN), INXCTL
	HJOB = ENTRY(1,6)
	GOTO (ANYCNG), CNGCTL
INPT11,
	CTL = '10,49,01,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	HCONFR = ENTRY(1,1)
	IF (ENTRY(1,1).EQ.BLANKS) HCONFR = 'Y'
;;;	IF (ENTRY(1,1).EQ.BLANKS) HCONFR = CONFRM
	IF (HCONFR.NE.'Y'.AND.HCONFR.NE.'N'.AND.HCONFR.NE.'C') GO TO INPT11
DISP11,
	XCALL W_DISP(WND_1,WD_POS,10,49,HCONFR)
	IF (HCONFR.EQ.'Y' .AND. VFAX.EQ.0) CALL V_FAX
	IF (HCONFR.EQ.'Y' .AND. VFAX.NE.0) 
		BEGIN
		ENTRY(1,12) = VFAX,	'ZZZ ZZX-XXXX'
		XCALL W_DISP(WND_1,WD_POS,10,54,ENTRY(1,12) )
		END
	
	GO TO (ANYCNG), CNGCTL

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;INPT12,
;;;	IF(CNGCTL.EQ.0 .AND. HCONFR.EQ.'N') GOTO END12
;;;	CTL = '04,71,03,00,A '
;;;	CALL INPUT
;;;	GO TO (BEGIN), INXCTL
;;;	HCNFRW = ENTRY
;;;	XCALL W_DISP(WND_1,WD_POS,04,71,HCNFRW)
;;;END12,
;;;	GO TO (ANYCNG), CNGCTL
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

INPT13,
	CTL = '04,74,01,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	HPRTPR = ENTRY
	IF (HPRTPR.EQ.BLANKS) HPRTPR = PRTPRC
	IF (HPRTPR.NE.'Y'.AND.ENTRY.NE.'N') HPRTPR = 'Y'
	XCALL W_DISP(WND_1,WD_POS,04,74,HPRTPR)
	XCALL W_UPDT
	GO TO (ANYCNG), CNGCTL

;**********************************************************************

CALDSP,
	IF (CNGCTL.EQ.1) GO TO ANYCNG
	IF (OPT.EQ.2) CALL DISPLA

ANYCNG,
	CNGCTL = 6			;ALLOW <END>
	XCALL WANFK(W_ID,24,CNGCTL,WHATNO,F_KEY,'<F1> = NOTES')
	IF(F_KEY .EQ. F_01) GOTO NOTES
	USING F_KEY SELECT
	(F_01),		GOTO NOTES
	(F_11),		GOTO ABORT
	(EXIT_KEY),	GOTO ABORT
	(END_KEY),	GOTO ABORT
	ENDUSING

	GOTO (PROCES),CNGCTL+1
	GO TO (BR1,BR2), OPT

BADCNG,
	GO TO ANYCNG

BR1,
	GO TO (INPT1,INPT2,CONTACT,INPT3,INPT4,INPT5,INPT6,INPT7,INPT8,INPT9,
&		INPT10,HJOB,INPT11,INPT13), WHATNO
	GO TO BADCNG

BR2,
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; figure this stuff out later...

;;;	IF (WHATNO.EQ.5.AND.HPOSTS.NE.'U'.AND.
;;;&	    WHATNO.EQ.5.AND.HPOSTS.NE.'R') GO TO BADCNG
;;;
;;;	IF (WHATNO.EQ.6.AND.HPOSTS.NE.'U'.OR.
;;;&	    WHATNO.EQ.6.AND.HPOSTS.NE.'R') GO TO BADCNG
;;;	IF (WHATNO.EQ.2.AND.HPOTYP.EQ.'B') GO TO INPT2
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;	GO TO (BADCNG,BADCNG,CONTACT,INPT3,INPT4,INPT5,INPT6,INPT7,INPT8,INPT9,
	GO TO (BADCNG,inpt2,CONTACT,INPT3,INPT4,INPT5,INPT6,INPT7,INPT8,INPT9,
&		INPT10,HJOB,INPT11,INPT13), WHATNO
	GO TO BADCNG

;**********************************************************************

NOTES,
	IF (F_KEY .NE. F_01) GOTO PROCES
	CALL GET_NOTES				;LOAD POP-UP ARRAY
BEG_NOTES,
	CALL NTSCRN
	if (numara .gt. 0)
		begin
		dline = '   description'
		xcall pop2(pop)
		end

	IF (OPT.EQ.2) CALL NTSHOW
	IF (OPT.EQ.2) GO TO CNGNTS
INPT19,
	TABLE =
	CTL = '02,13,02,00,A '
	CALL INPUT
	GO TO (BEG_NOTES), INXCTL
	PBLKEY =
	TKEYCD = ENTRY(1,2)
	IF (ENTRY.EQ.BLANKS) GO TO BLNK19
	CALL NTSRCH
	IF (SRCCTL.EQ.1) XCALL WNMSG (W_ID,10,'(CODE NOT ON FILE)',1)
;;;	IF (SRCCTL.EQ.1) XCALL OLMSG (W_ID,10,'(CODE NOT ON FILE)',1)
	IF (SRCCTL.EQ.1) GO TO INPT19
BLNK19,
	HPONCD(1) = ENTRY(1,2)
	XCALL W_DISP(W_ID,WD_POS,2,13,HPONCD(1))
	XCALL W_DISP(W_ID,WD_POS,2,17,DSC)
	GO TO (CNGNTS), CNGCTL
	IF (ENTRY.EQ.BLANKS) GO TO INPT22

INPT20,
	TABLE =
	CTL = '03,13,02,00,A '
	CALL INPUT
	GO TO (BEG_NOTES), INXCTL
	PBLKEY =
	TKEYCD = ENTRY(1,2)
	IF (ENTRY.EQ.BLANKS) GO TO BLNK20
	CALL NTSRCH
	IF (SRCCTL.EQ.1) XCALL WNMSG (W_ID,10,'(CODE NOT ON FILE)',1)
;;;	IF (SRCCTL.EQ.1) XCALL OLMSG (W_ID,10,'(CODE NOT ON FILE)',1)
	IF (SRCCTL.EQ.1) GO TO INPT20
BLNK20,
	HPONCD(2) = ENTRY(1,2)
	XCALL W_DISP(W_ID,WD_POS,3,13,HPONCD(2))
	XCALL W_DISP(W_ID,WD_POS,3,17,DSC)
	GO TO (CNGNTS), CNGCTL
	IF (ENTRY.EQ.BLANKS) GO TO INPT22

INPT21,
	TABLE =
	CTL = '04,13,02,00,A '
	CALL INPUT
	GO TO (BEG_NOTES), INXCTL
	PBLKEY =
	TKEYCD = ENTRY(1,2)
	IF (ENTRY.EQ.BLANKS) GO TO BLNK21
	CALL NTSRCH
	IF (SRCCTL.EQ.1) XCALL WNMSG (W_ID,10,'(CODE NOT ON FILE)',1)
;;;	IF (SRCCTL.EQ.1) XCALL OLMSG (W_ID,10,'(CODE NOT ON FILE)',1)
	IF (SRCCTL.EQ.1) GO TO INPT21
BLNK21,
	HPONCD(3) = ENTRY(1,2)
	XCALL W_DISP(W_ID,WD_POS,04,13,HPONCD(3))
	XCALL W_DISP(W_ID,WD_POS,04,17,DSC)
	GO TO (CNGNTS), CNGCTL

INPT22,
	CTL = '05,17,30,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	HPONTE(1) = ENTRY
	XCALL W_DISP(W_ID,WD_POS,05,17,HPONTE(1))
	GO TO (CNGNTS), CNGCTL
	IF (ENTRY.EQ.BLANKS) GO TO CNGNTS
INPT23,
	CTL = '06,17,30,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	HPONTE(2) = ENTRY
	XCALL W_DISP(W_ID,WD_POS,06,17,HPONTE(2))
	GO TO (CNGNTS),CNGCTL
	IF (ENTRY.EQ.BLANKS) GO TO CNGNTS
INPT24,
	CTL = '07,17,30,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	HPONTE(3) = ENTRY
	XCALL W_DISP(W_ID,WD_POS,07,17,HPONTE(3))
;**********************************************************************

CNGNTS,
	XCALL W_UPDT
	XCALL WANCN(W_ID,10,CNGCTL,WHATNO)
	GOTO (end_notes),CNGCTL + 1
	GO TO (INPT19,INPT20,INPT21,INPT22,INPT23,INPT24), WHATNO 

BADNTE,
	CNGCTL = 3
	GO TO CNGNTS
END_NOTES,
; 1-20-16>	if (numara.gt.0) xcall w_proc(wp_remove,pop_wnd)
	XCALL W_PROC(WP_REMOVE,WND_2)
	W_ID = WND_1
	GOTO ANYCNG

V_FAX,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL W_DISP(WND_1,WD_POS,9,54,'VENDOR FAX')
	CTL = '10,54,10,00,# '
	CALL INPUT

	XFAX = ENTRY(1,10)


;;;	IF (XFAX .NE. 0)
;;;		BEGIN
;;;		CLOSE CHN011
;;;		XCALL FILES (CHN011, 'U', 11, SWITCH)
;;;		XCALL IO (CHN011,VENDOR,IRC011,READ,LOKCTL)
;;;		VFAX = XFAX
;;;		XCALL IO (CHN011,VENDOR,IRC011,WRITE,LOKCTL)
;;;		CLOSE CHN011
;;;		XCALL FILES (CHN011, 'I', 11, SWITCH)
;;;		END

	RETURN
;----------------------------------------------------

GET_NOTES,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; GET NEXT 20 NAMES FROM VENALP
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR I

	BSMID = 1
	TKEYNO = 6
	SRCCTL = 2
	SRCOPT = 4
	XCALL SERCH (3,TABLE,PBLKEY,1,5,ORG153,BSMID,SRCCTL,
&                     SRCOPT,6,10,0,0,0,0)
	UNLOCK 3
	IF (SRCCTL.EQ.1) RETURN

	BSMID = BSMID - 1
GN_LOOP,
	INCR BSMID
	XCALL IO (3,TABLE,BSMID,READ,LOKCTL)
	IF (TABLE .EQ. ']]]]]]') GOTO GN_EOF
	IF (I.GE.MAXARA .OR. TNO.NE.6) GOTO GN_EOF
	INCR I
	CLEAR DLINE
	DLINE(1,2) = CDE
	DLINE(4,33) = DSC
	PARRY(I) = DLINE
	PARRFA(I) = BSMID,	'XXXXXX'	
	GOTO GN_LOOP
GN_EOF,
	NUMARA = I
	IF (I.EQ.0 .OR. I.EQ.PMAXARA) RETURN
	
	FOR I FROM NUMARA+1 THRU MAXARA	CLEAR PARRY(I)

	RETURN
;--------------------------------------------------

;**********************************************************************
;	THIS ROUTINE SEARCHES FOR A NOTE IN THE TABLES
;**********************************************************************

NTSRCH,
	BSMID = 1
	TKEYNO = 6
	SRCCTL = 2
	SRCOPT = 4
	XCALL SERCH (3,TABLE,PBLKEY,1,5,ORG153,BSMID,SRCCTL,
&                     SRCOPT,6,10,0,0,0,0)
	IF (SRCCTL.NE.1) GO TO FOUND
	UNLOCK 3
	ENTRY(1,2) = BLANKS
	TABLE =
	RETURN
FOUND,
	UNLOCK 3
	RETURN

;**********************************************************************

INPUT,
	XCALL WINPT (W_ID,ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL)

	RETURN

;**********************************************************************
;	THIS SECTION DOES THE ON IN THE PURCHASE ORDER HEADER FILE
;**********************************************************************

PROCES,
	IF (ADD_CT) CALL ADD_NEW_CONTACT

	IF (OPT.EQ.1) GO TO ADD
CHANGE,
	LOKCTL = 1
	XCALL ISIO (1,HEADER,PORKEY,WRITE,LOKCTL)
FREBUF,
	GO TO END

;*************************************************************************

ADD,
	LOKCTL = 1
;;;	store (1, header, porkey)
	XCALL ISIO (1,HEADER,PORKEY,STORE,LOKCTL)
	IF (LOKCTL .NE. 0) XCALL MESAG('ERROR STORING HEADER',1)

	OPEN(13,SU,FILNAM)	;COPTBL
	CLEAR TBL_KEY
	TBLCOD = 'PN'
	LOKCTL = 1
	XCALL ISIO (CHNTBL,COPTBL,TBL_KEY,READ,LOKCTL)
	USING UCDE SELECT
	('MW'),	PN_NO1 = NXTPON
	('JR'),	PN_NO2 = NXTPON
;;;	('MM'),	PN_NO2 = NXTPON
	('SE'),	PN_NO3 = NXTPON
	('PO'),	PN_NO4 = NXTPON
	ENDUSING
	LOKCTL = 1
	XCALL ISIO (CHNTBL,COPTBL,TBL_KEY,WRITE,LOKCTL)
	CLOSE CHNTBL
	GO TO FREBUF
ABORT,
	EXITSW = 1
END,
	IF (OPT.EQ.2.AND.HEADER.NE.OLDHDR) CALL CHKHDR
	POHEDR = HEADER
	IF(WND_1) 
		BEGIN
		XCALL W_PROC(WP_REMOVE,WND_1)
		XCALL W_PROC(WP_DELETE,WND_1)
		END
	IF(WND_2) 
		BEGIN
		XCALL W_PROC(WP_REMOVE,WND_2)
		XCALL W_PROC(WP_DELETE,WND_2)
		END
;;;	XCALL W_EXIT

	XRETURN


;---------------------------------------------------
ADD_NEW_CONTACT,
	CLOSE CHN182
	XCALL FILES (CHN182, 'SU', 182, 5)

	CLEAR COPTBL
	TBLCOD = 'VC'
	VC_VEN = HVENDR

	FOR I FROM 800 THRU 1 BY -1
		BEGIN
		VC_SEQ = I
		VC_CONTCT = HCONTC
		XCALL ISIO (CHN182, COPTBL, TBL_KEY, STORE, LOKCTL)
		IF (LOKCTL .EQ. 0) EXITLOOP
		END
	CLOSE CHN182
	XCALL FILES (CHN182, 'SI', 182, 5)

	RETURN
;---------------------------------------------------

;**********************************************************************
;	THIS ROUTINE BRINGS A TABLE INTO MEMORY AND DISPLAYS SUBMENU
;**********************************************************************

FNDTBL,
	SRCCTL = 2
	SRCOPT = 4
	BSMID = 1
	XCALL SERCH (3,TABLE,TKEYNO,1,2,ORG153,BSMID,SRCCTL,
&                     SRCOPT,6,11,0,0,0,0)
	UNLOCK 3
	BSMID = BSMID - 1
	IF (SRCCTL.EQ.0) GO TO TBLOOP
	ENTRY = 'TABLE NUMBER XX IS EMPTY'
	ENTRY(14,15) = TKEYNO,'XX'
	TLIMIT = 1
	TBL =
	TCODE(1) = '**'
	TDESC(1) = ENTRY
	RETURN

TBLOOP,
	SUB =
LOOP,
	INCR SUB
NOSUB,
	INCR BSMID
	XCALL IO (3,TABLE,BSMID,READ,LOKCTL)
	UNLOCK 3
	IF (TNO.NE.TKEYNO) TLIMIT = SUB - 1
	IF (TNO.NE.TKEYNO) RETURN
	IF (SQ.GE.2) GO TO NOSUB
	TTBLNO(SUB) = TNO
	TCODE(SUB) = CDE
	TSEQNO(SUB) = SQ
	TDESC(SUB) = DSC
	IF (SUB.LT.18) GO TO LOOP
	RETURN
;**********************************************************************
SUBMNU,
	XCALL W_PROC(WP_PLACE,WND_4,13,32)	
;;;	ROW = 12
	ROW = 
SHLOOP,
	INCR SUB
	INCR ROW
;;;	ROW = ROW + 2
	MCODE = TCODE(SUB)
	MDESC = TDESC(SUB)
	IF (MCODE.EQ.BLANKS) MENLIN =
;;;	XCALL W_DISP(WND_1,WD_POS,ROW,35,MENLIN)
	XCALL W_DISP(WND_4,WD_POS,ROW,1,MENLIN)
	IF (MCODE.EQ.BLANKS) MENLIN(4,4) = '='
	IF (SUB.NE.6.AND.SUB.NE.12.AND.SUB.NE.18) GO TO SHLOOP
LEAVE,
	IF (SUB.GT.0.AND.SUB.LT.6) SUB = 6
	IF (SUB.GT.6.AND.SUB.LT.12) SUB = 12
	IF (SUB.GT.12.AND.SUB.LE.18) SUB =
	XCALL W_UPDT
	RETURN

;**********************************************************************
GETSUB,
	SUB = 0
;;;	IF (ALF.EQ.BLANKS) RETURN
	IF (ALF.EQ.BLANKS) 
		BEGIN
		SUB = 1		;SSQ 6-28-99
		RETURN
		END

SBLOOP,
	INCR SUB
	IF (SUB.EQ.19) RETURN
	IF (ALF.EQ.TCODE(SUB)) RETURN
	GO TO SBLOOP
;**********************************************************************
;	THIS ROUTINE CLEARS THE SUBMENU FROM THE SCREEN
;**********************************************************************

CLRMEN,
	TLIMIT =
	TABLE =
	TBL =
	XCALL W_DISP(WND_4,WD_CLEAR)
	XCALL W_PROC(WP_REMOVE,WND_4)
	XCALL W_UPDT
	RETURN
;------------------------------------
;;;	ROW = 12
	ROW = 13
CLRLP,
	INCR ROW
	XCALL W_DISP(WND_1,WD_POS,ROW,33,WD_CLR,WDC_EOL)
	IF (ROW.LT.24) GOTO CLRLP
	XCALL W_UPDT
	RETURN


V_CONTACT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; DISPLAY VENDOR CONTACTS
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR ANUMARA
	CLEAR COPTBL
	CLEAR SUB

	TBLCOD = 'VC'
	VC_VEN = HVENDR
	FIND (CHN182, COPTBL, TBL_KEY) [ERR=VC_LOOP]

VC_LOOP,
	XCALL IOS (CHN182, COPTBL, READ, LOKCTL)
	IF (TBLCOD.NE.'VC' .OR. VC_VEN.NE.HVENDR) GOTO VC_EOF
SKIP_VC,
	INCR SUB
	ADLINE (1,3) = VC_SEQ,	'ZZX'
	ADLINE (5,25) = VC_CONTCT
	ADLINE (27,29) = VC_SEQ, 'XXX'
	APARRY(SUB) = ADLINE
	IF (SUB .LE. AMAXARA) GOTO VC_LOOP
VC_EOF,
	ANUMARA = SUB
	RETURN
;------------------------------------------------

S_VIA,		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; DISPLAY SHIP VIA CODES
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL W_PROC(WP_PLACE,WND_4,13,32)	
	CLEAR COPTBL
	TBLCOD = 'P1'
	FIND (CHN182, COPTBL, TBL_KEY) [ERR=SV_START]

SV_START,
	ROW = 		;;>13
	SUB =
SV_LOOP,
	XCALL IOS (CHN182, COPTBL, READ, LOKCTL)
	IF (TBLCOD.NE.'P1') GOTO SV_EOF
	INCR SUB
	SVCODE(SUB) = P1_CODE
	SVSCAC(SUB) = P1_SCAC
	IF (SUB.LT.10) GO TO SV_LOOP
SV_EOF,
	NUMSV = SUB

	FOR SUB FROM 1 THRU NUMSV
		BEGIN
		SVL_CODE = SVCODE(SUB)
		SVL_SCAC = SVSCAC(SUB)
		CLEAR TBL_KEY
		TBL_KEY(1,2) = 'SC'
		SC_SCAC = SVL_SCAC
		XCALL ISIO (CHN182, COPTBL, TBL_KEY, READ, LOKCTL)
		IF (LOKCTL .NE. 0) SC_NAME = '* NOT ON FILE *'
		SVL_NAME = SC_NAME	
		XCALL GETRFA(CHN182, SVRFA(SUB))
		INCR ROW
		XCALL W_DISP(WND_4,WD_POS,ROW,1,SVLINE)
		END

	XCALL W_UPDT
	RETURN
;----------------------------------------------------------

;**********************************************************************
;	THIS DISPLAYS THE FIELD NAMES ON THE SCREEN
;**********************************************************************

DISPLA,
;;;	xcall w_disp(wnd_1,wd_pos,1,77,hposts)
	XCALL W_DISP(WND_1,WD_POS,12,20,HVENDR)

;;;	BSMID = 1
;;;	SRCOPT = 4
;;;	ENTRY(1,4) = HVENDR
;;;	XCALL SERCH (5,VENIDX,ENTRY(1,4),1,4,ORG011,BSMID,SRCCTL,
;;;&			SRCOPT,5,10,0,0,0,0)
;;;	UNLOCK 5

	LOKCTL = 1
	XCALL ISIO (CHN011, VENDOR, HVENDR, READ, LOKCTL)
	IF (LOKCTL .EQ. 0)
	THEN	SRCCTL = 0
	ELSE	SRCCTL = 1

	IF (SRCCTL.EQ.0) GO TO FND
	NAME = 'VENDOR NOT ON FILE'
	GO TO NOTFND
FND,
;;;	XCALL IO (4,VENDOR,IRC011,READ,LOKCTL)
	VNAME = NAME			;3-27-03
	UNLOCK 4
NOTFND,
	XCALL W_DISP(WND_1,WD_POS,12,26,NAME)
;;;	XCALL DSPLY (6,14,20,HPODTE,2)
	XDATE(1,4) = HPODTE(5,8)
	XDATE(5,8) = HPODTE(1,4)
	ENTRY(1,10) = XDATE,	'XX/XX/XXXX'
	XCALL W_DISP(WND_1,WD_POS,13,20,HCONTC)
;;;	XCALL W_DISP(WND_1,WD_POS,13,26,HCONTC)

	XCALL W_DISP(WND_1,WD_POS,14,20,ENTRY(1,10) )
	XCALL W_DISP(WND_1,WD_POS,16,20,HSHPTO)
	XCALL W_DISP(WND_1,WD_POS,18,20,HBUYER)
	CLEAR PBLKEY
	TKEYNO = 2
	TKEYCD = HBUYER
	CALL GTBL2
	XCALL W_DISP(WND_1,WD_POS,18,24,DSC)

	XCALL W_DISP(WND_1,WD_POS,20,20,HSHPVI)
	CLEAR COPTBL
	TBLCOD = 'P1'
	P1_CODE = HSHPVI
	XCALL ISIO (CHN182, COPTBL, TBL_KEY, READ, LOKCTL)
	IF (LOKCTL .NE. 0)
	THEN	XCALL WNMSG (WND_1, 24, 'CODE NOT IN "P1" TABLE',1)
;;;	THEN	XCALL OLMSG (WND_1, 24, 'CODE NOT IN "P1" TABLE',1)
	ELSE	BEGIN
		SVL_SCAC = P1_SCAC
		CLEAR COPTBL
		TBLCOD = 'SC'
		SC_SCAC = SVL_SCAC
		XCALL ISIO (CHN182, COPTBL, TBL_KEY, READ, LOKCTL)
		IF (LOKCTL.NE.0) 
		THEN	XCALL WNMSG (WND_1, 24, 'SCAC NOT IN "SC" TABLE',1)
;;;		THEN	XCALL OLMSG (WND_1, 24, 'SCAC NOT IN "SC" TABLE',1)
		ELSE	XCALL W_DISP(WND_1,WD_POS,20,24,SC_NAME)
		END

	XCALL W_DISP(WND_1,WD_POS,22,20,HACKNW)
	XCALL W_DISP(WND_1,WD_POS,04,49,HCOLPP)
	XCALL W_DISP(WND_1,WD_POS,06,49,HTERMS)
	CLEAR PBLKEY
	TKEYNO = 4
	TKEYCD = HTERMS
	CALL GTBL2
	XCALL W_DISP(WND_1,WD_POS,06,51,DSC)


	XCALL W_DISP(WND_1,WD_POS,07,49,HFOB)
	CLEAR PBLKEY
	TKEYNO = 5
	TKEYCD = HFOB
	CALL GTBL2
	XCALL W_DISP(WND_1,WD_POS,07,51,DSC)

	ENTRY(1,6) = HJOB,	'ZZZZZZ' [LEFT]
	XCALL W_DISP(WND_1,WD_POS,08,49,ENTRY(1,6))

	XCALL W_DISP(WND_1,WD_POS,10,49,HCONFR)
;;;	XCALL W_DISP(WND_1,WD_POS,04,71,HCNFRW)
	XCALL W_DISP(WND_1,WD_POS,04,74,HPRTPR)
	xcall w_updt
	RETURN
;------------------------------------------------------
GTBL2,
	BSMID = 1
	SRCCTL = 2
	XCALL SERCH (3,TABLE,PBLKEY,1,5,ORG153,BSMID,SRCCTL,4,6,10,0,0,0,0)
	UNLOCK 3
	RETURN
;------------------------------------------------------

POSHIP,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	W_ID = WND_3
	XCALL W_PROC(WP_PLACE,W_ID,16,20)	

ST_DISPLA,
	XCALL W_DISP(W_ID,WD_CLEAR)
	CLEAR S_CNGCTL

	XCALL W_DISP(W_ID,WD_POS,1,1,'   TYPE (D/W)')
	XCALL W_DISP(W_ID,WD_POS,3,1,'1. ADDR-1')
	XCALL W_DISP(W_ID,WD_POS,4,1,'2. ADDR-2')
	XCALL W_DISP(W_ID,WD_POS,5,1,'3. ADDR-3')
	XCALL W_DISP(W_ID,WD_POS,6,1,'4. ADDR-4')

	SHONUM = HPONUM
	SHLNUM = HRLNUM
	XCALL ISIO (CHN149, POSHIP, SHKEY, READ, LOKCTL)
	USING LOKCTL SELECT
	(0),	BEGIN
		PODS = 2		;FOUND, CHANGE MODE
		GOTO DIS_SHIPTO
		END
	(),	PODS = 1		;NOT FOUND, ADD MODE
	ENDUSING

	CLEAR POSHIP
	USING HSHPTO SELECT
	('2'),	BEGIN
		SHCODE = 'W'
		END
	('99'),	BEGIN
		SHCODE = 'D'
		END
	ENDUSING

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;SHC,
;;;	CTL = '01,17,01,00,AE'
;;;	XCALL W_DISP(W_ID,WD_POS,1,19,WD_CLR,WDC_EOL)
;;;	CALL INPUT
;;;	GOTO(ST_DISPLA,END_SHP),INXCTL
;;;	SHCODE = ENTRY(1,1)
;;;	IF (SHCODE .EQ. ' ') 
;;;		BEGIN
;;;		SHCODE = 'S'
;;;		XCALL W_DISP(W_ID,WD_POS,1,17,'S')
;;;		END
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	USING SHCODE SELECT
	('S'),	XCALL W_DISP(W_ID,WD_POS,1,19,'SHIP-TO')
	('D'),	XCALL W_DISP(W_ID,WD_POS,1,19,'DROP-SHIP')
	('W'),	BEGIN
		XCALL W_DISP(W_ID,WD_POS,1,19,'WILL-CALL')
		SHADD1 = NAME
		SHADD2 = ADD1
		SHADD3 = ADD2
		SHADD4(1,15) = CITY
		SHADD4(17,18) = STATE
		SHADD4(20,29) = ZIP
		IF(SHADD3 .EQ. BLANKS)
			BEGIN
			SHADD3 = SHADD4
			SHADD4 =
			END
		GOTO DIS_SHIPTO
		END
;;;	(),	GOTO SHC
	ENDUSING
	XCALL W_UPDT
	GOTO(CNGSHP),S_CNGCTL
SH1,
	CTL = '03,12,30,00,A '
	CALL INPUT
	GOTO (ST_DISPLA),INXCTL
	SHADD1 = ENTRY(1,30)
	GOTO(CNGSHP),S_CNGCTL
SH2,
	CTL = '04,12,30,00,A '
	CALL INPUT
	GOTO(ST_DISPLA),INXCTL
	SHADD2 = ENTRY(1,30)
	GOTO(CNGSHP),S_CNGCTL
SH3,
	CTL = '05,12,30,00,A '
	CALL INPUT
	GOTO (ST_DISPLA),INXCTL
	SHADD3 = ENTRY(1,30)
	GOTO(CNGSHP),S_CNGCTL
SH4,
	CTL = '06,12,30,00,A '
	CALL INPUT
	GOTO (ST_DISPLA),INXCTL
	SHADD4 = ENTRY(1,30)
	
CNGSHP,
	XCALL W_UPDT
	XCALL WANCN(W_ID,10,S_CNGCTL,WHATNO)
	GOTO (ST_PROC),S_CNGCTL + 1
	GO TO (SH1,SH2,SH3,SH4),WHATNO 
	S_CNGCTL = 3
	GO TO CNGSHP
ST_PROC,
	SHONUM = HPONUM
	SHLNUM = HRLNUM
	USING PODS SELECT
	(1),	XCALL ISIO(CHN149, POSHIP, SHKEY, STORE, LOKCTL)
	(2),	XCALL ISIO(CHN149, POSHIP, SHKEY, WRITE, LOKCTL)
	ENDUSING
END_SHP,
	XCALL W_PROC(WP_REMOVE,WND_3)
	W_ID = WND_1
	RETURN
;------------------------------------------
;;;;	GOTO ANYCNG

DIS_SHIPTO,		
	USING HSHPTO SELECT
	('2'),	BEGIN
		SHCODE = 'W'
		END
	('99'),	BEGIN
		SHCODE = 'D'
		END
	ENDUSING
	XCALL W_DISP(W_ID,WD_POS,1,17,SHCODE)

	USING SHCODE SELECT
	('S'),	XCALL W_DISP(W_ID,WD_POS,1,19,'SHIP-TO')
	('D'),	XCALL W_DISP(W_ID,WD_POS,1,19,'DROP-SHIP')
	(''),	XCALL W_DISP(W_ID,WD_POS,1,19,'WILL-CALL')
	ENDUSING

	XCALL W_DISP(W_ID,WD_POS,3,12,SHADD1)
	XCALL W_DISP(W_ID,WD_POS,4,12,SHADD2)
	XCALL W_DISP(W_ID,WD_POS,5,12,SHADD3)
	XCALL W_DISP(W_ID,WD_POS,6,12,SHADD4)
	XCALL W_UPDT
	GOTO CNGSHP
;------------------------------------------------------

;**********************************************************************
; THIS ROUTINE DISPLAYS THE PURCHASE ORDER NOTES ENTRY SCREEN
;**********************************************************************

NTSCRN,
	W_ID = WND_2
;;;	XCALL W_PROC(WP_PLACE,WND_2,10,10)	
	XCALL W_PROC(WP_PLACE,WND_2,14,10)	
	XCALL W_DISP(W_ID,WD_CLEAR)
	CLEAR CNGCTL

	XCALL W_DISP(W_ID,WD_POS,2,1,'1. NOTE 1')
	XCALL W_DISP(W_ID,WD_POS,3,1,'2. NOTE 2')
	XCALL W_DISP(W_ID,WD_POS,4,1,'3. NOTE 3')
	XCALL W_DISP(W_ID,WD_POS,5,1,'4. NOTE 4')
	XCALL W_DISP(W_ID,WD_POS,6,1,'5. NOTE 5')
	XCALL W_DISP(W_ID,WD_POS,7,1,'6. NOTE 6')
	RETURN

;**********************************************************************
;	THIS ROUTINE DISPLAYS THE CURRENT NOTES FOR CHANGE AND DELETE
;**********************************************************************

NTSHOW,
	ROW = 01
	NT =

DSNOTS,
	ROW = ROW + 1
	INCR NT
	IF (NT.EQ.4) NT = 0
	IF (NT.EQ.0) GO TO TXTNTS
	IF (HPONCD(NT).NE.BLANKS) GO TO FNDCDE
	GO TO DSNOTS

FNDCDE,
	PBLKEY =
	TKEYCD = HPONCD(NT)
	CALL NTSRCH
	IF (SRCCTL.EQ.0) GO TO FNDNTE
	IF (HPONCD(NT).NE.BLANKS) DSC = 'NOTE NOT ON FILE'
	IF (HPONCD(NT).EQ.BLANKS) DSC =

FNDNTE,
	XCALL W_DISP(W_ID,WD_POS,ROW,13,HPONCD(NT))
	XCALL W_DISP(W_ID,WD_POS,ROW,17,DSC)
	IF (NT.LT.3) GO TO DSNOTS
	XCALL W_UPDT
	NT =

TXTNTS,
	ROW = 4
NOTS,
	ROW = ROW + 1
	INCR NT
	XCALL W_DISP(W_ID,WD_POS,ROW,17,HPONTE(NT))
	IF (NT.LT.3) GOTO NOTS
	XCALL W_UPDT
	RETURN
;----------------------------------------------------------

CHKHDR,
	IF (HPOSTS.NE.'P') RETURN
	IF (HEADER(1,15).NE.OLDHDR(1,15)) GO TO MARKC
	IF (HEADER(18,23).NE.OLDHDR(18,23)) GO TO MARKC
	IF (HEADER(29,142).NE.OLDHDR(29,142)) GO TO MARKC
	RETURN
MARKC,
	HCXCDE = 'C'
	RETURN

;**********************************************************************
GET_NEXT_PO,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; GET NEXT UNUSED PO #
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	NXTPON = NXTPON + 1
	ENTRY(1,6) = NXTPON
	HPONUM = NXTPON
	HRLNUM = 00
	PONUM(1,6) = HPONUM
	PONUM(7,8) = HRLNUM
	LOKCTL = 1
	XCALL ISIO (1,HEADER,PONUM,READ,LOKCTL)
;;;	read(1,header,ponum)
	IF (LOKCTL .EQ. 0) GOTO GET_NEXT_PO	;PO ALREADY EXISTS, KEEP TRYING
	RETURN
;-----------------------------------------

ALPHA_LOOKUP,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; ALPHA VENDOR LOOK-UP
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL W_DISP(W_ID,WD_POS,24,2,WD_CLR,WDC_EOL,'VEND NAME:')
	CTL = '24,13,25,00,AE'
	CALL INPUT
	GOTO (ALPHA_RETURN,ALPHA_RETURN),INXCTL
	START_NAME = ENTRY(1,25)

	FIND (CHN011, VENDOR, START_NAME, KRF:1) [ERR=MORE_NAMES]

;;;	FIND (CHN027,VENALP,START_NAME) [ERR=MORE_NAMES]
	CLEAR LOKCTL
MORE_NAMES,
	CALL GET_NAMES
	XCALL TTSTS(TSTAT)
	IF (TSTAT) XCALL W_DISP(W_ID,WD_READS,ENTRY)
;;;	IF (TSTAT) READS (15,ENTRY)
	IF (PNUMARA .GT. 0)
	THEN	BEGIN
		PDLINE = '  VEND #  NAME'
		XCALL poPOP (POPAR)
		END
	ELSE	BEGIN
		XCALL WNMSG(W_ID,24,'NO MORE NAMES',1)
	;;;	XCALL OLMSG(W_ID,24,'NO MORE NAMES',1)
		INXCTL = 2
		RETURN
		END

	CASE PP_ACTION OF
	BEGINCASE
	0:	INXCTL = 2		;<END>
	1:	BEGIN
		PDLINE = PPARRY(PPI)
		ENTRY = PDLINE(1,4)
		CLEAR INXCTL		
		END
	4:	GOTO MORE_NAMES
	5:	BEGIN
		CALL PG_UP
		GOTO MORE_NAMES
		END
	6:	GOTO MORE_NAMES
	ENDCASE
ALPHA_RETURN,
	RETURN
;------------------------------------------------

GET_NAMES,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; GET NEXT 20 NAMES FROM VENALP
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR I
	XCALL IOS (CHN011, VENDOR, READ, LOKCTL)
;;;	XCALL IOS (CHN027,VENALP,READ,LOKCTL)
	WHILE (LOKCTL.EQ.0 .AND. I.LT.PMAXARA)
		BEGIN	
		INCR I
		XCALL GETRFA (CHN011,PPARRFA(I))
		CLEAR PDLINE
		PDLINE(1,4) = VENNO
		PDLINE(8,32) = NAME
		PPARRY(I) = PDLINE
	
		PDLINE (1,25) = ADD1
		PDLINE (26,46) = ADD2
		PDLINE (47,61) = CITY
		PDLINE (63,64) = STATE
		PDLINE (66,75) = ZIP
		PP_ADD(I) = PDLINE
		XCALL IOS (CHN011, VENDOR, READ, LOKCTL)
	;;;	XCALL IOS (CHN027,VENALP,READ,LOKCTL)
		END
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; show all vendors to everyone...	(10/01/01)
	;;;	IF(V_UC .EQ. UCDE)
	;;;		BEGIN
	;;;		END
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	PNUMARA = I
	IF (I.EQ.0 .OR. I.EQ.PMAXARA) RETURN
	
	FOR I FROM PNUMARA+1 THRU PMAXARA	CLEAR PPARRY(I)
	RETURN
;------------------------------------------------
PG_UP,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; prev page
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	XCALL POSRFA (CHN011, PPARRFA(1)) 	;1ST RECORD
;;;	XCALL POSRFA (CHN027, PPARRFA(1)) 	;1ST RECORD
	FOR I FROM 1 THRU PMAXARA
		BEGIN
		READS(CHN011,VENDOR,PU_EOF,REVERSE) [ERR=PU_EOF]
	;;;	READS(CHN027,VENALP,PU_EOF,REVERSE) [ERR=PU_EOF]
		END

PU_EOF,
	RETURN
;------------------------------------------------
INIT_WINDOW,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; SET UP SCREEN 1 WINDOW
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	XCALL W_PROC(WP_FIND,WND_1,'SCRN1')
	IF (.NOT. WND_1)
		BEGIN
		XCALL W_PROC(WP_CREATE,WND_1,'SCRN1',24,78)
		END
	XCALL W_BRDR(WND_1,WB_TITLE,'PURCHASE ORDERS',
&			WB_TPOS,WBT_TOP,WBT_CENTER)
	XCALL W_PROC(WP_PLACE,WND_1,1,1)	
	XCALL W_DISP(WND_1,WD_CLEAR)

; notes window...
	XCALL W_PROC(WP_FIND,WND_2,'NOTE1')
	IF (.NOT. WND_2)
		BEGIN
		XCALL W_PROC(WP_CREATE,WND_2,'NOTE1',10,50)
		END
	XCALL W_BRDR(WND_2,WB_TITLE,'HEADER NOTES',
&			WB_TPOS,WBT_TOP,WBT_CENTER)

; ship-to window...
	XCALL W_PROC(WP_FIND,WND_3,'SHIPTO')
	IF (.NOT. WND_3)
		BEGIN
		XCALL W_PROC(WP_CREATE,WND_3,'SHIPTO',07,50)
		END
	XCALL W_BRDR(WND_3,WB_TITLE,'SHIP-TO',
&			WB_TPOS,WBT_TOP,WBT_CENTER)

; tables window...
	XCALL W_PROC(WP_FIND,WND_4,'TABLES')
	IF (.NOT. WND_4)
		BEGIN
		XCALL W_PROC(WP_CREATE,WND_4,'TABLES',10,47)
		END
	XCALL W_BRDR(WND_4,WB_TITLE,'PO TABLES',
&			WB_TPOS,WBT_TOP,WBT_CENTER)


	W_ID = WND_1

;; POP info...

	PMAXARA = 10		;9-19-97 NOT MORE THAN 1 FULL WINDOW
	PPLEN = 34
	PNUMROW = 10
	PWX = 8
	PWY = 7
	PPOP_WID(1,5) = "POPOP"
	PPOP_TITLE = "VENDOR NAMES"

	MAXARA = 10		;9-19-97 NOT MORE THAN 1 FULL WINDOW
	PLEN = 34
	NUMROW = 10
	WX = 6
	WY = 9
	POP_WID(1,5) = "PNOTES"
	POP_TITLE = "PO NOTES"

	AMAXARA = 10
;;;	APLEN = 26
	APLEN = 29	;7-18-13: there's a bug in pop1.man re: "*" in dline...
	ANUMROW = 10
	AWX = 14
	AWY = 21
	APOP_WID(1,5) = 'CONCT'
	APOP_TITLE = "CONTACTS"
	RETURN

;-------------------------------------------------------------------

END

