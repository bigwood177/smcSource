SUBROUTINE PO_SCRN5; (POHEDR,OPT,EXITSW)	isam
	OPT	,A	; X - CANCEL
			; C - CLOSE

; 2-21-18 RENAMED TO PO_SCRN5 FOR VS

	.DEFINE POOLSIZE	,25000
	.DEFINE WNDCHNL		,15
	.DEFINE MAXWINS		,10

	.INCLUDE 'WND:WINDOWS.DEF'

RECORD	PORNXF
	.INCLUDE 'DEF:RD192A.DEF'

RECORD	ITMMAS
	.INCLUDE 'DEF:RD041A.def'

RECORD	ITMKEY
	.INCLUDE 'DEF:RD041K.DEF'

RECORD	COPTBL
	.INCLUDE 'DEF:RD182A.DEF'

RECORD PORHDR	
	.INCLUDE 'DEF:RD151A.DEF'

RECORD PORLIN	
	.INCLUDE 'DEF:RD152A.DEF'

RECORD VENDOR	
	.INCLUDE 'DEF:RD011A.DEF'

RECORD VENCTL	
	.INCLUDE 'DEF:RD011B.DEF'

;;;RECORD VENIDX	
;;;	.INCLUDE 'DEF:RD012A.DEF'

RECORD TBLCTL	
	.INCLUDE 'DEF:RD153B.DEF'

RECORD TABLE
	TNO	,D2
	CDE	,A2
	SQ	,D1
	DSC	,A30

RECORD PBLKEY
	TKEYNO	,D2
	TKEYCD	,A2
	TKEYSQ	,D1

RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD	APONUM
	APON	,A6
;;;		,A1,	'-'
;;;	ALON	,A2

RECORD	WVARS
	W_ID	,D4
	WND_1	,D4

RECORD	CHANNEL
	CHN011	,D2
	CHN012	,D2
	CHN021	,D2
	CHN022	,D2
	CHN151	,D2
	CHN152	,D2
	CHN153	,D2
	CHN182	,D2
	CHN041	,D2
	CHN042	,D2
	CHN192	,D2

RECORD	VARS
	lf1	,a3
	lf2	,a3
	lf3	,a5
	itmrfa	,a6
	vanrfa	,a6
	ivflag	,d1
	vanflg	,d1

	DF1	,D3
	DF2	,D3
	DF3	,D5

	OPNOK	,D1
	I	,D4
	XDATE	,D8
	TODAY	,D8
	TODAA	,A10		;FORMAT XX/XX/XXXX
	REM	,D10
	ALF	,A2
	BRACKS	,A15,	']]]]]]]]]]]]]]]'
	OLDCNT	,D5
	DECMAL	,D4
	LOKCTL	,D1
	ENTRY	,A30
	FULL	,D1
	SWITCH	,D1
	INXCTL	,D1
	CNGCTL	,D1
	NOTADD	,D1
	WHATNO	,D2
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	PONUM	,D8
	SUB	,D2
	SEQ	,D1
	NT	,D1
	KEY	,A15
	SRCCTL	,D1
	SRCOPT	,D1
	NOTE	,A30
	IOCTL	,D1
	TBLNUM	,D2
	BSENDI	,D5
	BSEND	,D5
	BSMID	,D5
	TLIMIT	,D2
	HRCNUM	,D5
	TKEY	,A2
	BLANKS	,A30
	LASPNO	,D6
	RELES	,D2
	SAVPO	,D6
	SAVRL	,D2
	CLSFLG	,D1

PROC
	display(15,$scr_clr(screen),'hi')
	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF

	CALL INIT_WINDOW

BEGIN,
	W_ID = WND_1
	FULL =
	PORHDR =
	CNGCTL =		;SSQ 8/21/91
	XCALL W_DISP(WND_1,WD_CLEAR)
	XCALL W_DISP(WND_1,WD_POS,1,1,'PURCHASE ORDER ENTRY')
	XCALL W_DISP(WND_1,WD_POS,4,2,'1. P/O NO')
	XCALL W_DISP(WND_1,WD_POS,12,2,'2. VENDOR NO')
	XCALL W_DISP(WND_1,WD_POS,13,2,'3. CONTACT')
	XCALL W_DISP(WND_1,WD_POS,14,2,'4. REQ DATE')
	XCALL W_DISP(WND_1,WD_POS,16,2,'5. SHIP TO')
	XCALL W_DISP(WND_1,WD_POS,18,2,'6. BUYER')
	XCALL W_DISP(WND_1,WD_POS,20,2,'7. SHIP-VIA')
	XCALL W_DISP(WND_1,WD_POS,22,2,'8. FAX PO? (Y)')
	XCALL W_DISP(WND_1,WD_POS,4,34,'9. COL/PPD')
	XCALL W_DISP(WND_1,WD_POS,6,33,'10. TERMS')
	XCALL W_DISP(WND_1,WD_POS,8,33,'11. FOB')
	XCALL W_DISP(WND_1,WD_POS,10,33,'12. CONFIRM (N)')
	XCALL W_DISP(WND_1,WD_POS,04,54,'13. PRINT PRICE (Y)')

INPT1,
	CTL = '04,20,06,00,#E'
	CALL INPUT
	GO TO (BEGIN,END), INXCTL
	HPONUM = ENTRY(1,6)
	IF (HPONUM.EQ.0) GOTO INPT1
	HRLNUM = 00
	APON = HPONUM,	'ZZZZZX' [RIGHT]
;;;	ALON = HRLNUM,	'XX'
	XCALL W_DISP(WND_1,WD_POS,04,20,APONUM)	

	PONUM(1,6) = HPONUM
	PONUM(7,8) = HRLNUM
	LOKCTL = 1
	XCALL ISIO (CHN151,PORHDR,PORKEY,READ,LOKCTL)
	IF (LOKCTL .NE. 0)
		BEGIN
		XCALL WNMSG (WND_1,24,'PO NOT ON FILE',1)
;;;		XCALL OLMSG (WND_1,24,'PO NOT ON FILE',1)
		GOTO BEGIN
		END
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;9-19-16 this removed per Jess...
;;;	IF(OPT.EQ.'X' .AND. HPOSTS.EQ.'P')
;;;		BEGIN
;;;		XCALL WNMSG (WND_1,24,'PO already printed, must close',1)
;;;		GOTO BEGIN
;;;		END
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

OPTN2,
	CALL DISPLA

	XCALL W_DISP(WND_1,WD_POS,24,1,'RIGHT PO?')
	CTL = '24,12,01,00,YY'
	CALL INPUT
	GOTO (INPT1),INXCTL-1

PROCES,
	FIND (CHN152,PORLIN,PORKEY) [ERR=LINLOP]

LINLOP,
	XCALL IOS (CHN152, PORLIN, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO LL_EOF
	IF (LPONUM .NE. HPONUM) GOTO LL_EOF
	DELETE (CHN152)				;DELETE THE LINE
	IF(OPT .EQ. 'X') GOTO CANCEL

	REM = LQTYOR - LQTYRC
	IF (REM .LE. 0) GOTO CANCEL


;--------------------------------------------------
; 11-09-09: use gtitm...

;-----------------------------------------------------------------

	USING LITMNO SELECT
	('EDS0' THRU 'EDS9'),	KEY = LITMNO(1,9)
	(),			KEY = LITMNO
	ENDUSING

	xcall gtitm (key, lf1, lf2, lf3, itmrfa, ivflag, vanflg, vanrfa)
	read (chn041, itmmas, rfa:itmrfa) [err=i_err]
	
	QTYONO = QTYONO - REM		;12-20-07
	IF (QTYONO .LT. 0) QTYONO = 0

	using opt select
	('C'), 	begin
		avgcst = laccst#1
		if (avgcst.le.0) avgcst = lexcst#1
		end
	endusing

	lokctl = 1
	XCALL ISIO (CHN041, ITMMAS, LITMNO, WRITE, LOKCTL)
i_err,
;--------------------------------------------------
; first, check for default keys...
;;;	CLEAR DF1, DF2, DF3
;;;
;;;	CLEAR TBL_KEY		;is there a default key for this item?
;;;	TBLCOD = 'IK'		
;;;	IK_ITEM = LITMNO
;;;	READ (CHN182,COPTBL,TBL_KEY)[ERR=NO_DEFAULT]
;;;	DF1 = IK_F1		;note that these values will 
;;;	DF2 = IK_F2		;be overridden if notes are
;;;	DF3 = IK_F3		;running
;;;
;;;no_default,
;;;
;;;	CLEAR ITMKEY
;;;	K_ITEM = LITMNO
;;;	K_F1 = DF1,	'XXX'
;;;	K_F2 = DF2,	'XXX'
;;;	K_F3 = DF3,	'XXXXX'
;;;	READ (CHN041, ITMMAS, ITMKEY, KEYNUM:1) [ERR = NO_ITEM]
;;;
;;;	QTYONO = QTYONO - REM		;12-20-07
;;;	IF (QTYONO .LT. 0) QTYONO = 0
;;;	XCALL ISIO (CHN041, ITMMAS, LITMNO, WRITE, LOKCTL)
;----------------------------------------------------------------

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	XCALL SERCH (CHN042,ITMIDX,LITMNO,1,15,BSENDI,BSMID,SRCCTL,4,16,20,0,0,0,0)
;;;	IF (SRCCTL.EQ.1) GO TO CANCEL
;;;	XCALL IO (CHN041,ITMMAS,IRC041,READ,LOKCTL)
;;;	QTYONO = QTYONO - REM
;;;	XCALL IO (CHN041,ITMMAS,IRC041,WRITE,LOKCTL)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

NO_ITEM,
CANCEL,
	XCALL ISIO (CHN022, PORLIN, POLKEY, STORE, LOKCTL)
	IF (LOKCTL .NE. 0)
		BEGIN
		XCALL WNMSG (WND_1, 24, 'ERROR STORING PORLIN TO HISTORY',1)
	;;;	XCALL OLMSG (WND_1, 24, 'ERROR STORING PORLIN TO HISTORY',1)
		END
	GOTO LINLOP

LL_EOF,
	HPOSTS = OPT
	XCALL ISIO (CHN021, PORHDR, PORKEY, STORE, LOKCTL)
	IF (LOKCTL .NE. 0)
		BEGIN
		XCALL WNMSG (WND_1, 24, 'ERROR STORING PORHDR TO HISTORY',1)
	;;;	XCALL OLMSG (WND_1, 24, 'ERROR STORING PORHDR TO HISTORY',1)
		END
	DELETE (CHN151)			;DELETE THE HEADER

	USING OPT SELECT
	('C'),	XCALL WNMSG (WND_1,24,'PO CLOSED!',1)
;;;	('C'),	XCALL OLMSG (WND_1,24,'PO CLOSED!',1)
	('X'),	XCALL WNMSG (WND_1,24,'PO CANCELLED!',1)
;;;	('X'),	XCALL OLMSG (WND_1,24,'PO CANCELLED!',1)
	ENDUSING

	K2PO = HPONUM
	K2RL = 0
	FIND (CHN192, PORNXF, PXKEY3, KRF:3) [ERR=NO_NXF]
	XCALL IOS (CHN192, PORNXF, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO NO_NXF
	PXPOCL = OPT
	XCALL ISIO (CHN192, PORNXF, PXKEY, WRITE, LOKCTL)

NO_NXF,
	GOTO BEGIN
;=========================================

END,
	XCALL W_PROC(WP_REMOVE,WND_1)
	XCALL W_PROC(WP_DELETE,WND_1)
	XCALL W_EXIT
ENDOFF,
	CALL CLOSE
	XRETURN
;==================================================

DISPLA,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	USING OPT SELECT
	('X'),	XCALL W_DISP(WND_1,WD_POS,2,1,'CANCEL PURCHASE ORDER')
	('C'),	XCALL W_DISP(WND_1,WD_POS,2,1,'CLOSE PURCHASE ORDER')
	ENDUSING

	XCALL W_DISP(WND_1,WD_POS,12,20,HVENDR)

;;;	BSMID = 1
;;;	SRCOPT = 4
;;;	ENTRY(1,4) = HVENDR
;;;	XCALL SERCH (5,VENIDX,ENTRY(1,4),1,4,ORG011,BSMID,SRCCTL,
;;;&			SRCOPT,5,10,0,0,0,0)
;;;	UNLOCK 5
;;;	IF (SRCCTL.EQ.0) GO TO FND

	LOKCTL = 1
;;;	read (chn011, vendor, hvendr)
	XCALL ISIO (CHN011, VENDOR, HVENDR, READ, LOKCTL)
	IF (LOKCTL .NE. 0)
		BEGIN
		NAME = 'VENDOR NOT ON FILE'
		GO TO NOTFND
		END
FND,
;;;	XCALL IO (CHN011,VENDOR,IRC011,READ,LOKCTL)
NOTFND,
	XCALL W_DISP(WND_1,WD_POS,12,26,NAME)
	XDATE(1,4) = HPODTE(5,8)
	XDATE(5,8) = HPODTE(1,4)
	ENTRY(1,10) = XDATE,	'XX/XX/XXXX'
	XCALL W_DISP(WND_1,WD_POS,13,26,HCONTC)

	XCALL W_DISP(WND_1,WD_POS,14,20,ENTRY(1,10) )
	XCALL W_DISP(WND_1,WD_POS,16,20,HSHPTO)
	XCALL W_DISP(WND_1,WD_POS,18,20,HBUYER)
	CLEAR PBLKEY
	TKEYNO = 2
	TKEYCD = HBUYER
	CALL GTBL2
	XCALL W_DISP(WND_1,WD_POS,18,24,DSC)

	XCALL W_DISP(WND_1,WD_POS,20,20,HSHPVI)
	CLEAR COPTBL
	TBLCOD = 'P1'
	P1_CODE = HSHPVI
	XCALL ISIO (CHN182, COPTBL, TBL_KEY, READ, LOKCTL)
	IF (LOKCTL .NE. 0)
	THEN	XCALL WNMSG (WND_1, 24, 'CODE NOT IN "P1" TABLE',1)
;;;	THEN	XCALL OLMSG (WND_1, 24, 'CODE NOT IN "P1" TABLE',1)
	ELSE	BEGIN
		CLEAR COPTBL
		TBLCOD = 'SC'
		SC_SCAC = P1_SCAC
		XCALL ISIO (CHN182, COPTBL, TBL_KEY, READ, LOKCTL)
		IF (LOKCTL.NE.0) 
		THEN	XCALL WNMSG (WND_1, 24, 'SCAC NOT IN "SC" TABLE',1)
	;;;	THEN	XCALL OLMSG (WND_1, 24, 'SCAC NOT IN "SC" TABLE',1)
		ELSE	XCALL W_DISP(WND_1,WD_POS,20,24,SC_NAME)
		END

	XCALL W_DISP(WND_1,WD_POS,22,20,HACKNW)
	XCALL W_DISP(WND_1,WD_POS,04,49,HCOLPP)
	XCALL W_DISP(WND_1,WD_POS,06,49,HTERMS)
	CLEAR PBLKEY
	TKEYNO = 4
	TKEYCD = HTERMS
	CALL GTBL2
	XCALL W_DISP(WND_1,WD_POS,06,51,DSC)


	XCALL W_DISP(WND_1,WD_POS,08,49,HFOB)
	CLEAR PBLKEY
	TKEYNO = 5
	TKEYCD = HFOB
	CALL GTBL2
	XCALL W_DISP(WND_1,WD_POS,08,51,DSC)

	XCALL W_DISP(WND_1,WD_POS,10,49,HCONFR)
	XCALL W_DISP(WND_1,WD_POS,04,74,HPRTPR)
	xcall w_updt
	RETURN
;------------------------------------------------------
GTBL2,
	BSMID = 1
	SRCCTL = 2
	XCALL SERCH (3,TABLE,PBLKEY,1,5,ORG153,BSMID,SRCCTL,4,6,10,0,0,0,0)
	UNLOCK 3
	RETURN
;------------------------------------------------------

INPUT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL WINPT (W_ID,ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL)
	RETURN
;------------------------------------------------------

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK

	SWITCH = 5
	XCALL FILES (1,'SU',151,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN151 = 1

	XCALL FILES (2,'SU',152,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN152 = 2

	XCALL FILES (3,'I',153,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN153 = 3

	XCALL FILES (4,'SI',011,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN011 = 4

;;;	XCALL FILES (5,'I',012,SWITCH)
;;;	IF (SWITCH .EQ. 9) RETURN
;;;	CHN012 = 5

	XCALL FILES (6,'SU',21,SWITCH)		;21 - PORHST.ISM
	IF (SWITCH .EQ. 9) RETURN
	CHN021 = 6

	XCALL FILES (7,'SU',22,SWITCH)		;22 - PORLST.ISM
	IF (SWITCH .EQ. 9) RETURN
	CHN022 = 7

	XCALL FILES (8,'SI',182,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN182 = 8

	XCALL FILES (9,'SU',041,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN041 = 9

	XCALL FILES (19,'SU',192,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN192 = 19


	LOKCTL = 0
	XCALL IO (CHN153,TBLCTL,1,READ,LOKCTL)
;;;	LOKCTL = 1
;;;	XCALL IO (CHN011,VENCTL,1,READ,LOKCTL)


	OPNOK = 1

	RETURN
;------------------------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF(CHN011) CLOSE CHN011
;;;	IF(CHN012) CLOSE CHN012
	IF(CHN021) CLOSE CHN021
	IF(CHN022) CLOSE CHN022
	IF(CHN151) CLOSE CHN151
	IF(CHN152) CLOSE CHN152
	IF(CHN153) CLOSE CHN153
	IF(CHN182) CLOSE CHN182
	IF(CHN041) CLOSE CHN041
	IF(CHN042) CLOSE CHN042
	IF(CHN192) CLOSE CHN192

	RETURN
;------------------------------------------------------

INIT_WINDOW,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; SET UP SCREEN 1 WINDOW
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	XCALL W_INIT(POOLSIZE,WNDCHNL,MAXWINS)
	XCALL W_PROC(WP_FIND,WND_1,'SCRN1')
	IF (.NOT. WND_1)
		BEGIN
		XCALL W_PROC(WP_CREATE,WND_1,'SCRN1',24,78)
		END
	XCALL W_BRDR(WND_1,WB_TITLE,'PURCHASE ORDERS',
&			WB_TPOS,WBT_TOP,WBT_CENTER)
	XCALL W_PROC(WP_PLACE,WND_1,1,1)	
	XCALL W_DISP(WND_1,WD_CLEAR)

	W_ID = WND_1

	RETURN
;-------------------------------------------------------------------

END

