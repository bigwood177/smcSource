SUBROUTINE SCRN3; (POHEDR,OPT,EXITSW)
	POHEDR	,A	;FIELD TO PASS BACK P/O HEADER RECORD BACK TO CALLING PROGRAM
	OPT	,D	;OPTION SWITCH IS SET TO :
			;		1 - ADD P/O HEADER
			;		2 - CHANGE/INQUIRE P/O HEADER

	EXITSW	,D	;SET TO 0 INDICATES THAT USER DOES NOT WISH TO EXIT
			;SET TO 1 INDICATES THAT USER WISHES TO EXIT

RECORD HEADER	
	.INCLUDE 'DEF:RD151A.DEF'

RECORD HDRCTL	
	.INCLUDE 'DEF:RD151B.DEF'

RECORD POLINE	
	.INCLUDE 'DEF:RD152A.DEF'

RECORD LINCTL	
	.INCLUDE 'DEF:RD152B.DEF'

RECORD VENDOR	
	.INCLUDE 'DEF:RD011A.DEF'

RECORD VENCTL	
	.INCLUDE 'DEF:RD011B.DEF'

RECORD VENIDX	
	.INCLUDE 'DEF:RD012A.DEF'

RECORD TBLCTL	
	.INCLUDE 'DEF:RD153B.DEF'

RECORD TBL
	TTBLNO	,18D2
	TCODE	,18A2
	TSEQNO	,18D1
	TDESC	,18A30

RECORD TABLE
	TNO	,D2
	CDE	,A2
	SQ	,D1
	DSC	,A30

RECORD MENLIN
	MCODE	,A2
		,A3,' = '
	MDESC	,A30

RECORD TBLKEY
	TKEYNO	,D2
	TKEYCD	,A2
	TKEYSQ	,D1

RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD COMMON
	ALF	,A2
	BRACKS	,A15,	']]]]]]]]]]]]]]]'
	OLDCNT	,D5
	DECMAL	,D4
	LOKCTL	,D1
	ENTRY	,A30
	FULL	,D1
	SWITCH	,D1
	INXCTL	,D1
	CNGCTL	,D1
	NOTADD	,D1
	WHATNO	,D2
	V	,D1
	READ	,D1,0
	WRITE	,D1,1
	PONUM	,D8
	SUB	,D2
	SEQ	,D1
	NT	,D1
	KEY	,A5
	SRCCTL	,D1
	SRCOPT	,D1
	NOTE	,A30
	IOCTL	,D1
	TBLNUM	,D2
	BSEND	,D5
	BSMID	,D5
	TLIMIT	,D2
	HRCNUM	,D5
	TKEY	,A2
	BLANKS	,A30
	LASPNO	,D6
	CHECK	,A142
	RELES	,D2
	SAVPO	,D6
	SAVRL	,D2
	CLSFLG	,D1
	OLDHDR	,A142
PROC
	XCALL TERID (V)
	V = 1
BEGIN,
	FULL =
	HEADER =
	CNGCTL =		;SSQ 8/21/91
	XCALL OUTPT (1,1,3,'PURCHASE ORDER ENTRY',V)
	IF (OPT.EQ.1) XCALL OUTPT (2,1,0,'ADD PURCHASE ORDER',V)
	IF (OPT.EQ.2) XCALL OUTPT (2,1,0,'CHANGE/INQUIRE P/O HEADER',V)
	XCALL OUTPT (4,2,0,'1. P/O NO',V)
	XCALL OUTPT (6,2,0,'2. P/O TYPE',V)
	XCALL OUTPT (8,2,0,'3. P/O STATUS',V)
	XCALL OUTPT (10,2,0,'4. CHANGE/CANCEL',V)
	XCALL OUTPT (12,2,0,'5. VENDOR NO',V)
	XCALL OUTPT (14,2,0,'6. P/O DATE',V)
	XCALL OUTPT (16,2,0,'7. SHIP TO',V)
	XCALL OUTPT (18,2,0,'8. BUYER',V)
	XCALL OUTPT (20,2,0,'9. SHIP-VIA',V)
	XCALL OUTPT (22,1,0,'10. ACKNOWLEDGE',V)
	XCALL OUTPT (4,33,0,'11. COL/PPD',V)
	XCALL OUTPT (6,33,0,'12. TERMS',V)
	XCALL OUTPT (8,33,0,'13. FOB',V)
	XCALL OUTPT (10,33,0,'14. CONFIRM',V)
	XCALL OUTPT (04,51,0,'15. CONFIRMED WITH',V)
	XCALL OUTPT (06,51,0,'16. PRINT PRICE',V)
	XCALL OUTPT (08,51,0,'17. USER CODE',V)
	XCALL OUTPT (10,51,0,'18. P/O WEIGHT',V)
	LOKCTL = 0
	XCALL IO (1,HDRCTL,1,READ,LOKCTL)
	IF (LOKCTL.EQ.1) GO TO ABORT
	OLDCNT = REC151
	UNLOCK 1
	LOKCTL = 0
	XCALL IO (2,LINCTL,1,READ,LOKCTL)
	IF (LOKCTL.EQ.1) GO TO ABORT
	UNLOCK 2
	LOKCTL = 0
	XCALL IO (3,TBLCTL,1,READ,LOKCTL)
	UNLOCK 3
	LOKCTL = 1
	XCALL IO (4,VENCTL,1,READ,LOKCTL)
	UNLOCK 4
	IF (OPT.EQ.2) GO TO INPT1
	IF (REC151.LT.MAX151) GO TO TEST2
FILFUL,
	XCALL OUTPT (4,1,2,' ',V)
	IF (FULL) XCALL OUTPT (10,20,0,'**WARNING - RECORD NOT ADDED**',V)
	XCALL OUTPT (12,20,0,'P/O HEADER FILE FULL.  PLEASE EXPAND THE PORHDR',V)
FULL2,
	XCALL OUTPT (14,20,0,'FILE USING THE "EXPAND" OPTION FROM',V)
	XCALL OUTPT (16,20,0,'THE SYSTEM FUNCTIONS MENU.',V)
	XCALL MESAG (' ',2)
	EXITSW = 1
	RETURN
TEST2,
	IF ((MAX152-REC152).GT.9) GO TO INPT1
	XCALL OUTPT (4,1,2,' ',V)
	XCALL OUTPT (12,20,0,'P/O LINE FILE FULL.  PLEASE EXPAND THE PORLIN',V)
	GO TO FULL2
INPT1,
	NPONUM = 
	IF (OPT.EQ.1) 
		BEGIN
		LOKCTL = 1
		XCALL IO (3,TBLCTL,1,READ,LOKCTL)
		END
INPT1A,
	CTL = '04,20,06,00,#E'
	CALL INPUT
	IF (INXCTL.EQ.2) EXITSW = 1
	GO TO (BEGIN,END), INXCTL
	IF (ENTRY.EQ.BLANKS.AND.OPT.EQ.1) 
		BEGIN
		NPONUM = NPONUM + 1
		ENTRY(1,6) = NPONUM
		END
	HPONUM = ENTRY(1,6)
	IF (HPONUM.EQ.0) GOTO INPT1A
	XCALL OUTPT (04,20,0,ENTRY(1,6),V)
	XCALL OUTPT (04,26,0,'-',V)
	HRLNUM = 00
	XCALL OUTPT (04,27,0,HRLNUM,V)

	IF (OPT.EQ.1)
		BEGIN
		LOKCTL = 1
		XCALL IO (3,TBLCTL,1,WRITE,LOKCTL)
		END
	UNLOCK 3
	PONUM(1,6) = HPONUM
	PONUM(7,8) = HRLNUM
	BSMID = 1
	SRCCTL = 2
	SRCOPT = 4
	XCALL SERCH (1,HEADER,PONUM,1,8,ORG151,BSMID,SRCCTL,
&			SRCOPT,9,15,0,0,0,0)

	IF (OPT.EQ.2) GO TO OPTN2
	IF (SRCCTL.EQ.1) GO TO HDROK
	XCALL MESAG ('PURCHASE ORDER ALREADY ON FILE',1)
	GO TO INPT1

HDROK,
	HEADER =
	HPONUM = PONUM(1,6)
	HRLNUM = PONUM(7,8)
	GO TO INPT2
OPTN2,
	IF (SRCCTL.EQ.1) GO TO NOSUCH
	LOKCTL = 0
	XCALL IO (1,HEADER,BSMID,READ,LOKCTL)
	IF (LOKCTL) GO TO ABORT
	OLDHDR = HEADER
	HRCNUM = BSMID
	CALL DISPLA
	GO TO ANYCNG
NOSUCH,
	HRCNUM =
	HEADER =
	XCALL MESAG ('PURCHASE ORDER NOT ON FILE',1)
	GO TO INPT1
INPT2,
	CTL = '06,20,01,00, A'
	CALL INPUT
	GO TO (BEGIN), INXCTL

	HPOTYP = ENTRY(1,1)
	IF (HPOTYP.EQ.BLANKS) HPOTYP = 'N'
	IF (HPOTYP.NE.'N'.AND.HPOTYP.NE.'B') GO TO INPT2
	IF (CNGCTL.EQ.1) GO TO CONT2
	HPOSTS = 'R'
;**	HPOSTS = 'U'
	HCXCDE = 'N'
	XCALL OUTPT (06,20,0,HPOTYP,V)
	XCALL OUTPT (08,20,0,HPOSTS,V)
	XCALL OUTPT (10,20,0,HCXCDE,V)
	GO TO (ANYCNG), CNGCTL
	GO TO INPT5
CONT2,
	XCALL OUTPT (06,20,0,HPOTYP,V)
	GO TO (ANYCNG), CNGCTL

INPT3,
	CLSFLG =
	CTL = '08,20,01,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (HPOTYP.EQ.'B') GO TO NOCHK
	IF (ENTRY(1,1).EQ.'P'.AND.HPOSTS.NE.'C'
&			     .AND.HPOSTS.NE.'P') GO TO INPT3
	IF (ENTRY.EQ.BLANKS) GO TO REDISP
	IF (HPOSTS.EQ.'P'.AND.ENTRY(1,1).NE.'C'
&			 .AND.ENTRY(1,1).NE.'P') GO TO INPT3
	IF (ENTRY(1,1).EQ.'C' .AND. HCXCDE.EQ.'C') GO TO MSTPRT
	IF (ENTRY(1,1).EQ.'C') CALL CHKSTS
	XCALL OUTPT (24,1,1,'\',V)
	IF (CLSFLG.EQ.1) GO TO NOCLOS
NOCHK,
	HPOSTS = ENTRY
	IF (HPOSTS.NE.'U'.AND.HPOSTS.NE.'R'.AND.HPOSTS.NE.'P'.AND.
&		HPOSTS.NE.'C'.AND.HPOSTS.NE.'X') GO TO INPT3
REDISP,
	XCALL OUTPT (08,20,0,HPOSTS,V)
	GO TO (ANYCNG), CNGCTL
	GO TO INPT4
NOCLOS,
	XCALL MESAG ('NOT ALL P/O LINES ARE CLOSED',1)
	GO TO INPT3
MSTPRT,
	XCALL MESAG ('CHANGE ORDER SHOULD BE PRINTED BEFORE CLOSING P/O',1)
	GO TO INPT3

INPT4,
	CTL = '10,20,01,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (ENTRY.NE.'X'.AND.ENTRY.NE.'C'.AND.ENTRY.NE.'N') GO TO INPT4
	HCXCDE = ENTRY
	XCALL OUTPT (10,20,0,HCXCDE,V)
	GO TO (ANYCNG), CNGCTL

INPT5,
	CTL = '12,20,04,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO INPT5
	HVENDR = ENTRY(1,4)
	XCALL FRMAT (HVENDR,4)
	XCALL OUTPT (12,20,0,HVENDR,V)

	BSMID = 1
	SRCOPT = 4		;BIN NOT SEQSEARCHES VENDOR MASTER FILE FOR VENDOR
;**	SRCOPT = 5		;SEARCHES VENDOR MASTER FILE FOR VENDOR
;**	SRCCTL = 2
	XCALL SERCH (5,VENIDX,HVENDR,1,4,ORG011,BSMID,SRCCTL,
&			SRCOPT,5,10,0,0,0,0)
	UNLOCK 5
	IF (SRCCTL.EQ.0) GO TO VENFND
	XCALL MESAG ('VENDOR NOT ON FILE',1)
	HVENDR =
	GO TO INPT5

VENFND,
	XCALL IO (4,VENDOR,IRC011,READ,LOKCTL)
	UNLOCK 4
	XCALL OUTPT (12,26,0,NAME,V)
	GO TO (ANYCNG), CNGCTL

INPT6,
	HPODTE =
	CTL = '14,20,06,00,D '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	HPODTE = ENTRY
	IF (HPODTE.EQ.0) XCALL RDATE (HPODTE)
	XCALL DSPLY (6,14,20,HPODTE,2,V)
	GO TO (ANYCNG), CNGCTL

INPT7,
	TBLKEY =
	TKEYNO = 1
	CALL FNDTBL
	SUB =
	CALL SUBMNU
CTL7,
	CTL = '16,20,02,00,AT'
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (INXCTL.EQ.3) CALL SUBMNU
	IF (INXCTL.EQ.3) GO TO CTL7
	ALF = ENTRY(1,2)
	CALL GETSUB
	IF (SUB.GT.TLIMIT) GO TO CTL7
	IF (SUB.NE.0) GO TO CONT7
	HSHPTO = DSHPTO
	GO TO DISP7
CONT7,
	IF (SUB.GT.18) GO TO CTL7
	HSHPTO = TCODE(SUB)
DISP7,
	XCALL OUTPT (16,20,0,HSHPTO,V)
	CALL CLRMEN
	GO TO (ANYCNG), CNGCTL

INPT8,
	TBLKEY =
	TKEYNO = 2
	CALL FNDTBL
	SUB =
	CALL SUBMNU
CTL8,
	CTL = '18,20,02,00,AT'
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (INXCTL.EQ.3) CALL SUBMNU
	IF (INXCTL.EQ.3) GO TO CTL8
	ALF = ENTRY(1,2)
	CALL GETSUB
	IF (SUB.GT.TLIMIT) GO TO CTL8
	IF (SUB.NE.0) GO TO CONT8
	HBUYER = DBUYER
	GO TO DISP8
CONT8,
	IF (SUB.GT.18) GO TO CTL8
	HBUYER = TCODE(SUB)
DISP8,
	XCALL OUTPT (18,20,0,HBUYER,V)
	CALL CLRMEN
	GO TO (ANYCNG), CNGCTL

INPT9,
	TBLKEY =
	TKEYNO = 3
	CALL FNDTBL
	SUB =
	CALL SUBMNU
CTL9,
	CTL = '20,20,02,00,AT'
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (INXCTL.EQ.3) CALL SUBMNU
	IF (INXCTL.EQ.3) GO TO CTL9
	ALF = ENTRY(1,2)
	CALL GETSUB
	IF (SUB.GT.TLIMIT) GO TO CTL9
	IF (SUB.NE.0) GO TO CONT9
	HSHPVI = SHPVIA
	GO TO DISP9
CONT9,
	IF (SUB.GT.18) GO TO CTL9
	HSHPVI = TCODE(SUB)
DISP9,
	XCALL OUTPT (20,20,0,'  ',V)
	XCALL OUTPT (20,20,0,HSHPVI,V)
	CALL CLRMEN
	GO TO (ANYCNG), CNGCTL

INPT10,
	CTL = '22,20,01,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	HACKNW = ENTRY
	IF (ENTRY.EQ.BLANKS) HACKNW = ACKNWL
	IF (HACKNW.NE.'Y'.AND.HACKNW.NE.'N'.AND.HACKNW.NE.'A') GO TO INPT10
	XCALL OUTPT (22,20,0,HACKNW,V)
	GO TO (ANYCNG), CNGCTL

INPT11,
	XCALL OUTPT (16,46,0,'C - COLLECT   P - PREPAID',V)
	CTL = '04,46,01,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	HCOLPP = ENTRY
	IF (ENTRY.EQ.BLANKS) HCOLPP = 'C'
	IF (HCOLPP.NE.'C'.AND.HCOLPP.NE.'P') GO TO INPT11
	XCALL OUTPT (04,46,0,HCOLPP,V)
	XCALL OUTPT (16,33,1,'\',V)
	GO TO (ANYCNG), CNGCTL

INPT12,
	TBLKEY =
	TKEYNO = 4
	CALL FNDTBL
	SUB =
	CALL SUBMNU
CTL12,
	CTL = '06,46,02,00,AT'
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (INXCTL.EQ.3) CALL SUBMNU
	IF (INXCTL.EQ.3) GO TO CTL12
	ALF = ENTRY(1,2)
	CALL GETSUB
	IF (SUB.GT.TLIMIT) GO TO CTL12
	IF (SUB.NE.0) GO TO CONT12
	HTERMS = TERMS
	GO TO DISP12
CONT12,
	IF (SUB.GT.18) GO TO CTL12
	CDE = TCODE(SUB)
	HTERMS = CDE(1,1)
DISP12,
	XCALL OUTPT (06,46,0,'  ',V)
	XCALL OUTPT (06,46,0,HTERMS,V)
	CALL CLRMEN
	GO TO (ANYCNG), CNGCTL

INPT13,
	TBLKEY =
	TKEYNO = 5
	CALL FNDTBL
	SUB =
	CALL SUBMNU
CTL13,
	CTL = '08,46,02,00,AT'
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (INXCTL.EQ.3) CALL SUBMNU
	IF (INXCTL.EQ.3) GO TO CTL13
	ALF = ENTRY(1,2)
	CALL GETSUB
	IF (SUB.GT.TLIMIT) GO TO CTL13
	IF (SUB.NE.0) GO TO CONT13
	HFOB = FOB
	GO TO DISP13
CONT13,
	IF (SUB.GT.18) GO TO INPT13
	CDE = TCODE(SUB)
	HFOB = CDE(1,1)
DISP13,
	XCALL OUTPT (08,46,0,'  ',V)
	XCALL OUTPT (08,46,0,HFOB,V)
	CALL CLRMEN
	GO TO (ANYCNG), CNGCTL

INPT14,
	CTL = '10,46,01,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	HCONFR = ENTRY(1,1)
	IF (ENTRY(1,1).EQ.BLANKS) HCONFR = CONFRM
	IF (HCONFR.NE.'Y'.AND.HCONFR.NE.'N'.AND.HCONFR.NE.'C') GO TO INPT14
	XCALL OUTPT (10,46,0,HCONFR,V)
	GO TO (ANYCNG), CNGCTL

INPT15,
	CTL = '04,71,03,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	HCNFRW = ENTRY
	XCALL OUTPT (04,71,0,HCNFRW,V)
	GO TO (ANYCNG), CNGCTL

INPT16,
	CTL = '06,71,01,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	HPRTPR = ENTRY
	IF (HPRTPR.EQ.BLANKS) HPRTPR = PRTPRC
	IF (HPRTPR.NE.'Y'.AND.ENTRY.NE.'N') HPRTPR = 'Y'
	XCALL OUTPT (06,71,0,HPRTPR,V)
	GO TO (ANYCNG), CNGCTL

INPT17,
	CTL = '08,71,02,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	HUSERC = ENTRY
	IF (ENTRY(1,2).EQ.BLANKS) HUSERC = USERCD
	XCALL OUTPT (08,71,0,HUSERC,V)
	GO TO (ANYCNG), CNGCTL
	IF (OPT.EQ.1) GO TO DISP18

INPT18,
	CTL = '10,71,06,00,# '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	HPOWGT = ENTRY (1,6)
DISP18,
	ENTRY(1,8) = HPOWGT,'ZZ,ZXX.X'
	XCALL OUTPT (10,71,0,ENTRY(1,8),V)
	GO TO (ANYCNG), CNGCTL

;**********************************************************************

CALDSP,
	IF (CNGCTL.EQ.1) GO TO ANYCNG
	IF (OPT.EQ.2) CALL DISPLA

ANYCNG,
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (NOTES), CNGCTL + 1
	GO TO (BR1,BR2), OPT

BADCNG,
	CNGCTL = 3
	GO TO ANYCNG

BR1,
	GO TO (INPT1,INPT2,INPT3,INPT4,INPT5,INPT6,INPT7,INPT8,INPT9,
&		INPT10,INPT11,INPT12,INPT13,INPT14,INPT15,INPT16,INPT17,INPT18), WHATNO
	GO TO BADCNG

BR2,
	IF (WHATNO.EQ.5.AND.HPOSTS.NE.'U'.AND.
&	    WHATNO.EQ.5.AND.HPOSTS.NE.'R') GO TO BADCNG

	IF (WHATNO.EQ.6.AND.HPOSTS.NE.'U'.OR.
&	    WHATNO.EQ.6.AND.HPOSTS.NE.'R') GO TO BADCNG
	IF (WHATNO.EQ.2.AND.HPOTYP.EQ.'B') GO TO INPT2

	GO TO (BADCNG,BADCNG,INPT3,INPT4,INPT5,INPT6,INPT7,INPT8,INPT9,
&		INPT10,INPT11,INPT12,INPT13,INPT14,INPT15,INPT16,INPT17,INPT18), WHATNO
	GO TO BADCNG

;**********************************************************************

NOTES,
	CALL NTSCRN
	IF (OPT.EQ.2) CALL NTSHOW
	IF (OPT.EQ.2) GO TO CNGNTS
INPT19,
	TABLE =
	CTL = '10,30,02,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	TBLKEY =
	TKEYCD = ENTRY(1,2)
	IF (ENTRY.EQ.BLANKS) GO TO BLNK19
	CALL NTSRCH
	IF (SRCCTL.EQ.1) XCALL MESAG ('(CODE NOT ON FILE)',V)
	IF (SRCCTL.EQ.1) GO TO INPT19
BLNK19,
	HPONCD(1) = ENTRY(1,2)
	XCALL OUTPT (10,30,0,HPONCD(1),V)
	XCALL OUTPT (10,34,0,DSC,V)
	GO TO (CNGNTS), CNGCTL
	IF (ENTRY.EQ.BLANKS) GO TO INPT22

INPT20,
	TABLE =
	CTL = '12,30,02,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	TBLKEY =
	TKEYCD = ENTRY(1,2)
	IF (ENTRY.EQ.BLANKS) GO TO BLNK20
	CALL NTSRCH
	IF (SRCCTL.EQ.1) XCALL MESAG ('(CODE NOT ON FILE)',1)
	IF (SRCCTL.EQ.1) GO TO INPT20
BLNK20,
	HPONCD(2) = ENTRY(1,2)
	XCALL OUTPT (12,30,0,HPONCD(2),V)
	XCALL OUTPT (12,34,0,DSC,V)
	GO TO (CNGNTS), CNGCTL
	IF (ENTRY.EQ.BLANKS) GO TO INPT22

INPT21,
	TABLE =
	CTL = '14,30,02,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	TBLKEY =
	TKEYCD = ENTRY(1,2)
	IF (ENTRY.EQ.BLANKS) GO TO BLNK21
	CALL NTSRCH
	IF (SRCCTL.EQ.1) XCALL MESAG ('(CODE NOT ON FILE)',1)
	IF (SRCCTL.EQ.1) GO TO INPT21
BLNK21,
	HPONCD(3) = ENTRY(1,2)
	XCALL OUTPT (14,30,0,HPONCD(3),V)
	XCALL OUTPT (14,34,0,DSC,V)
	GO TO (CNGNTS), CNGCTL

INPT22,
	CTL = '16,34,30,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	HPONTE(1) = ENTRY
	XCALL OUTPT (16,34,0,HPONTE(1),V)
	GO TO (CNGNTS), CNGCTL
	IF (ENTRY.EQ.BLANKS) GO TO CNGNTS
INPT23,
	CTL = '18,34,30,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	HPONTE(2) = ENTRY
	XCALL OUTPT (18,34,0,HPONTE(2),V)
	GO TO (CNGNTS),CNGCTL
	IF (ENTRY.EQ.BLANKS) GO TO CNGNTS
INPT24,
	CTL = '20,34,30,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	HPONTE(3) = ENTRY
	XCALL OUTPT (20,34,0,HPONTE(3),V)

;**********************************************************************

CNGNTS,
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (PROCES), CNGCTL + 1
	GO TO (INPT19,INPT20,INPT21,INPT22,INPT23,INPT24), WHATNO - 18

BADNTE,
	CNGCTL = 3
	GO TO CNGNTS

;**********************************************************************
;	THIS ROUTINE SEARCHES FOR A NOTE IN THE TABLES
;**********************************************************************

NTSRCH,
	BSMID = 1
	TKEYNO = 6
	SRCCTL = 2
	SRCOPT = 4
	XCALL SERCH (3,TABLE,TBLKEY,1,5,ORG153,BSMID,SRCCTL,
&                     SRCOPT,6,10,0,0,0,0)
	IF (SRCCTL.NE.1) GO TO FOUND
	UNLOCK 3
	ENTRY(1,2) = BLANKS
	TABLE =
	RETURN
FOUND,
	UNLOCK 3
	RETURN

;**********************************************************************

INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN

;**********************************************************************
;	THIS SECTION DOES THE IO IN THE PURCHASE ORDER HEADER FILE
;**********************************************************************

PROCES,
	XCALL WATE(3,V)
	IF (OPT.EQ.1) GO TO ADD
CHANGE,
	LOKCTL = 1
	XCALL IO (1,HEADER,HRCNUM,WRITE,LOKCTL)
FREBUF,
	LOKCTL = 1
	XCALL IO (1,HDRCTL,MAX151,READ,LOKCTL)
	XCALL IO (1,HDRCTL,1,READ,LOKCTL)
	GO TO END

;*************************************************************************

ADD,
	LOKCTL = 1
	XCALL IO (1,HDRCTL,1,READ,LOKCTL)
	IF (REC151.GE.MAX151) FULL = 1
	IF (FULL) GO TO FILFUL
	IF (OLDCNT.NE.REC151) CALL CHKADD
	IF (NOTADD) GO TO BEGIN
	INCR REC151
	LOKCTL = 1
	XCALL IO (1,HDRCTL,1,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IO (1,HEADER,REC151,WRITE,LOKCTL)
	GO TO FREBUF
ABORT,
	EXITSW = 1
END,
	IF (OPT.EQ.2.AND.HEADER.NE.OLDHDR) CALL CHKHDR
	POHEDR = HEADER
	XCALL WATE (1,V)
	RETURN
CHKADD,
	NOTADD =
	SAVPO = HPONUM
	SAVRL = HRLNUM
	POHEDR = HEADER
CHKLUP,
	INCR OLDCNT
	IF (OLDCNT.GT.REC151) GO TO CHKOK
	LOKCTL = 1
	XCALL IO (1,HEADER,OLDCNT,READ,LOKCTL)
	LOKCTL = 1
	XCALL IO (1,HDRCTL,1,READ,LOKCTL)
	IF (SAVPO.EQ.HPONUM .AND. SAVRL.EQ.HRLNUM) GO TO NOTADD
	GO TO CHKLUP
CHKOK,
	HEADER = POHEDR
	RETURN
NOTADD,
	XCALL MESAG ('RECORD ALREADY ADDED BY ANOTHER USER',1)
	NOTADD = 1
	POHEDR =
	RETURN

;**********************************************************************
;	THIS ROUTINE BRINGS A TABLE INTO MEMORY AND DISPLAYS SUBMENU
;**********************************************************************

FNDTBL,
	SRCCTL = 2
	SRCOPT = 4
	BSMID = 1
	XCALL SERCH (3,TABLE,TKEYNO,1,2,ORG153,BSMID,SRCCTL,
&                     SRCOPT,6,11,0,0,0,0)
	UNLOCK 3
	BSMID = BSMID - 1
	IF (SRCCTL.EQ.0) GO TO TBLOOP
	ENTRY = 'TABLE NUMBER XX IS EMPTY'
	ENTRY(14,15) = TKEYNO,'XX'
	TLIMIT = 1
	TBL =
	TCODE(1) = '**'
	TDESC(1) = ENTRY
	RETURN

TBLOOP,
	SUB =
LOOP,
	INCR SUB
NOSUB,
	INCR BSMID
	XCALL IO (3,TABLE,BSMID,READ,LOKCTL)
	UNLOCK 3
	IF (TNO.NE.TKEYNO) TLIMIT = SUB - 1
	IF (TNO.NE.TKEYNO) RETURN
	IF (SQ.GE.2) GO TO NOSUB
	TTBLNO(SUB) = TNO
	TCODE(SUB) = CDE
	TSEQNO(SUB) = SQ
	TDESC(SUB) = DSC
	IF (SUB.LT.18) GO TO LOOP
	RETURN
;**********************************************************************
SUBMNU,
	ROW = 12
SHLOOP,
	INCR SUB
	ROW = ROW + 2
	MCODE = TCODE(SUB)
	MDESC = TDESC(SUB)
	IF (MCODE.EQ.BLANKS) MENLIN =
	XCALL OUTPT (ROW,35,0,MENLIN,V)
	IF (MCODE.EQ.BLANKS) MENLIN(4,4) = '='
	IF (SUB.NE.6.AND.SUB.NE.12.AND.SUB.NE.18) GO TO SHLOOP
LEAVE,
	IF (SUB.GT.0.AND.SUB.LT.6) SUB = 6
	IF (SUB.GT.6.AND.SUB.LT.12) SUB = 12
	IF (SUB.GT.12.AND.SUB.LE.18) SUB =
	RETURN

;**********************************************************************
GETSUB,
	SUB = 0
	IF (ALF.EQ.BLANKS) RETURN
SBLOOP,
	INCR SUB
	IF (SUB.EQ.19) RETURN
	IF (ALF.EQ.TCODE(SUB)) RETURN
	GO TO SBLOOP
;**********************************************************************
;	THIS ROUTINE CLEARS THE SUBMENU FROM THE SCREEN
;**********************************************************************

CLRMEN,
	TLIMIT =
	TABLE =
	TBL =
	ROW = 12
CLRLP,
	INCR ROW
	XCALL OUTPT (ROW,33,1,'\',V)
	IF (ROW.EQ.24) RETURN
	GO TO CLRLP

;**********************************************************************
;	THIS DISPLAYS THE FIELD NAMES ON THE SCREEN
;**********************************************************************

DISPLA,
	XCALL OUTPT (06,20,0,HPOTYP,V)
	XCALL OUTPT (08,20,0,HPOSTS,V)
	XCALL OUTPT (10,20,0,HCXCDE,V)
	XCALL OUTPT (12,20,0,HVENDR,V)

	BSMID = 1
;**	SRCCTL = 2
	SRCOPT = 4
;**	SRCOPT = 5
	ENTRY(1,4) = HVENDR
	XCALL SERCH (5,VENIDX,ENTRY(1,4),1,4,ORG011,BSMID,SRCCTL,
&			SRCOPT,5,10,0,0,0,0)
	UNLOCK 5
	IF (SRCCTL.EQ.0) GO TO FND
	NAME = 'VENDOR NOT ON FILE'
	GO TO NOTFND
FND,
	XCALL IO (4,VENDOR,IRC011,READ,LOKCTL)
	UNLOCK 4
NOTFND,
	XCALL OUTPT (12,26,0,NAME,V)
	XCALL DSPLY (6,14,20,HPODTE,2,V)
	XCALL OUTPT (16,20,0,HSHPTO,V)
	XCALL OUTPT (18,20,0,HBUYER,V)
	XCALL OUTPT (20,20,0,HSHPVI,V)
	XCALL OUTPT (22,20,0,HACKNW,V)
	XCALL OUTPT (04,46,0,HCOLPP,V)
	XCALL OUTPT (06,46,0,HTERMS,V)
	XCALL OUTPT (08,46,0,HFOB,V)
	XCALL OUTPT (10,46,0,HCONFR,V)
	XCALL OUTPT (04,71,0,HCNFRW,V)
	XCALL OUTPT (06,71,0,HPRTPR,V)
	XCALL OUTPT (08,71,0,HUSERC,V)
	ENTRY(1,8) = HPOWGT,'ZZ,ZXX.X'
	XCALL OUTPT (10,71,0,ENTRY(1,8),V)
	RETURN

;**********************************************************************
; THIS ROUTINE DISPLAYS THE PURCHASE ORDER NOTES ENTRY SCREEN
;**********************************************************************

NTSCRN,
	XCALL OUTPT (1,1,3,'PURCHASE ORDER ENTRY',V)
	IF (OPT.EQ.1) XCALL OUTPT (2,1,0,'ADD PURCHASE ORDER',V)
	IF (OPT.EQ.2) XCALL OUTPT (2,1,0,'CHANGE/INQUIRE P/O HEADER',V)
	XCALL OUTPT (06,22,0,'ENTRY SCREEN FOR PURCHASE ORDER NOTES',V)
	XCALL OUTPT (08,32,0,'P/O NO',V)
	ENTRY (1,6) = HPONUM,'ZZZZXX'
	XCALL OUTPT (08,41,0,ENTRY(1,6),V)
	DISPLAY (15,'-')
	XCALL OUTPT (08,48,0,HRLNUM,V)
	XCALL OUTPT (10,18,0,'19. NOTE 1',V)
	XCALL OUTPT (12,18,0,'20. NOTE 2',V)
	XCALL OUTPT (14,18,0,'21. NOTE 3',V)
	XCALL OUTPT (16,18,0,'22. NOTE 4',V)
	XCALL OUTPT (18,18,0,'23. NOTE 5',V)
	XCALL OUTPT (20,18,0,'24. NOTE 6',V)
	RETURN

;**********************************************************************
;	THIS ROUTINE DISPLAYS THE CURRENT NOTES FOR CHANGE AND DELETE
;**********************************************************************

NTSHOW,
	ROW = 08
	NT =

DSNOTS,
	ROW = ROW + 2
	INCR NT
	IF (NT.EQ.4) NT = 0
	IF (NT.EQ.0) GO TO TXTNTS
	IF (HPONCD(NT).NE.BLANKS) GO TO FNDCDE
	GO TO DSNOTS

FNDCDE,
	TBLKEY =
	TKEYCD = HPONCD(NT)
	CALL NTSRCH
	IF (SRCCTL.EQ.0) GO TO FNDNTE
	IF (HPONCD(NT).NE.BLANKS) DSC = 'NOTE NOT ON FILE'
	IF (HPONCD(NT).EQ.BLANKS) DSC =

FNDNTE,
	XCALL OUTPT (ROW,30,0,HPONCD(NT),V)
	XCALL OUTPT (ROW,34,0,DSC,V)
	IF (NT.LT.3) GO TO DSNOTS
	NT =

TXTNTS,
	ROW = 14
NOTS,
	ROW = ROW + 2
	INCR NT
	XCALL OUTPT (ROW,34,0,HPONTE(NT),V)
	IF (NT.EQ.3) RETURN
	GO TO NOTS
;**********************************************************************
;	CHECKS IF ALL LINES FOR A PURCHASE ORDER ARE CLOSED
;**********************************************************************

CHKSTS,
	CLSFLG = 0
	XCALL OUTPT (24,1,0,'CHECKING FOR CLOSED LINES. PLEASE WAIT...',V)
	XCALL SERCH (2,POLINE,PONUM,1,8,ORG152,BSMID,SRCCTL,SRCOPT,12,17,0,0,0,0)
	IF (SRCCTL.EQ.0) GO TO CKREST
	RETURN
CKREST,
	BSMID = BSMID - 1
CKLOOP,
	INCR BSMID
	XCALL IO (2,POLINE,BSMID,READ,LOKCTL)
	IF (LITMNO.EQ.BRACKS) RETURN
	IF (BSMID.GT.REC152) RETURN
	IF (LITMNO(1,6).EQ.']]]DEL') GO TO CKLOOP
	IF (LINSTS.EQ.'C') GO TO CKLOOP
	IF (LQTYRC.GE.LQTYOR.AND.LQTYIV.GE.LQTYOR) GO TO CKLOOP
	IF (LPONUM.NE.HPONUM) GO TO ANYMOR
	CLSFLG = 1
	RETURN

ANYMOR,
	SRCCTL = 2
	SRCOPT = 5
	XCALL SERCH (2,POLINE,PONUM,1,8,ORG152,BSMID,SRCCTL,SRCOPT,12,17,0,0,0,0)
	IF (SRCCTL.EQ.1) RETURN
	BSMID = BSMID - 1
	GO TO CHECKL
CHECKL,
	INCR BSMID
	XCALL IO (2,POLINE,BSMID,READ,LOKCTL)
	IF (LITMNO.EQ.BRACKS) RETURN
	IF (BSMID.GT.REC152) RETURN
	IF (LPONUM.NE.HPONUM) GO TO CHECKL
	IF (LITMNO(1,6).EQ.']]]DEL') GO TO CHECKL
	IF (LRLNUM.NE.HRLNUM) GO TO CHECKL
	IF (LINSTS.EQ.'C') GO TO CHECKL
	IF (LQTYRC.GE.LQTYOR.AND.LQTYIV.GE.LQTYOR) GO TO CHECKL
	CLSFLG = 1
	RETURN

;**********************************************************************

CHKHDR,
	IF (HPOSTS.NE.'P') RETURN
	IF (HEADER(1,15).NE.OLDHDR(1,15)) GO TO MARKC
	IF (HEADER(18,23).NE.OLDHDR(18,23)) GO TO MARKC
	IF (HEADER(29,142).NE.OLDHDR(29,142)) GO TO MARKC
	RETURN
MARKC,
	HCXCDE = 'C'
	RETURN

;**********************************************************************

END

