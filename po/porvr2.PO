;POINQR.PO


	.DEFINE POOLSIZE	,25000
	.DEFINE WNDCHNL		,15
	.DEFINE MAXWINS		,10
	.INCLUDE 'WND:WINDOWS.DEF'


RECORD	COPTBL
	.INCLUDE 'DEF:RD182A.DEF'

RECORD	TBLCTL
	.INCLUDE 'DEF:RD153B.DEF'

RECORD	TABLE
	TNO	,D2
	CDE	,A2
	SQ	,D1
	DSC	,A30

RECORD PBLKEY
	TKEYNO	,D2
	TKEYCD	,A2
	TKEYSQ	,D1

RECORD	SVLINE
	SVL_CODE	,A1
		,A3,	' = '
	SVL_SCAC	,A4
		,A1
	SVL_NAME	,A15

RECORD	DDAT
	DT	,A20
RECORD,X
	YYYY	,D4
	MM	,D2
	DD	,D2
	PLIDX	,A6


RECORD	PORNXF
	.INCLUDE 'DEF:RD192A.DEF'

RECORD	VENMAS
	.INCLUDE 'DEF:RD011A.DEF'
;
RECORD	PORHDR
	.INCLUDE 'DEF:RD151A.DEF'

RECORD	PORLIN
	.INCLUDE 'DEF:RD152A.DEF'

RECORD	POP
	.INCLUDE 'DEF:POP1.DEF'

RECORD	POIDX
	O_ITEM	,A15
	O_PO	,D6

RECORD	KEY_SPEC
		,A*,	'START=1:16'
		,A*,	',LEN=15:6'
		,A*,	',ORDER=a:d'
		,A*,	',DUPS'

RECORD	APONUM
	APON	,A6
		,A1,	'-'
	ALON	,A2

RECORD	WN_NAME
		,A5,	'VCEN0'
	WN_TNMBR,D4

RECORD	WARS
	WND_1	,D4
	WND_2	,D4
	W_ID	,D4
	WLEN	,D2

RECORD	W2_LINE
	W2_NUM		,A3
	W2_ITEM		,A14
			,A1
	W2_DESCR	,A26
			,A1
	W2_QTY		,A7
	W2_UOFM		,A2
			,A1
	W2_PRICE	,A9
			,A1
	W2_EXT		,A13

RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
		,A1
	POS	,D2

RECORD	CHANNEL
	CHN011	,D3
	CHN021	,D3	;POHHDR
	CHN022	,D3
	CHN151	,D3
	CHN152	,D3
	CHN153	,D3
	CHN192	,D3
	CHN182	,D3
	CHNIDX	,D3
	CHNLIN	,D3

RECORD	VARS
	OPNOK	,D1
	KEYNO	,D2
	EXEPRC	,D12
	HFIL	,D1
	TL	,D6
	IDXFIL	,A14
	ORDER	,D6
	PATH	,A100
	TSTAT	,D1
	E_PDF	,A1
	I	,D6
	PORFA	,A6
	SAVNAM	,A30
	BSMID	,D6
	SRCCTL	,D1
	XDATE	,D8
	AKRF	,A5
	KRF	,D1
	HIST	,D1	;1 = DATA IS FROM HISTORY FILES
	ENTRY	,A30
	INXCTL	,D1
	BLANKS	,A30
	XVEN	,A30
	XINV	,A8
	XPO	,D6
	XSCAN	,A15
	XCHKNO	,D6
	XCHKDT	,D8
	READ	,D1,0
	WRITE	,D1,1
	LOKCTL	,D1
	CNGCTL	,D1
	WHATNO	,D2
	SWITCH	,D1
	V	,D1

PROC
	XCALL TERID (V)

	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF

	CALL INIT_WINDOW
DISPLA,
	CLEAR CNGCTL
	CLEAR XVEN, XINV, XPO, XSCAN, XCHKNO, XCHKDT
	XCALL W_DISP (WND_1, WD_POS, 1, 1, WD_CLR, WDC_WND)
	XCALL W_DISP (WND_1, WD_POS, 1,1, 'PURCHASE ORDER INQUIRE')
	XCALL W_DISP (WND_1, WD_POS, 4,4, '1. VENDOR')
	XCALL W_DISP (WND_1, WD_POS, 6,4, '2. INVOICE#')
	XCALL W_DISP (WND_1, WD_POS, 8,4, '3. PO#')
	XCALL W_DISP (WND_1, WD_POS,10,4, '4. ITEM SCAN')
	XCALL W_DISP (WND_1, WD_POS,12,4, '5. CHECK#')
	XCALL W_DISP (WND_1, WD_POS,14,4, '6. CHECK DATE')
VEN,
	CTL = '04,19,25,00,AX,00'
;;;	find (chn192, pornxf, ^first, krf:1) [err=ask3b]
	find (chn192, pornxf, ^first, krf:9) [err=ask3b]
;;;	find (chn192, pornxf, ^first, krf:8) [err=ask3b]
ASK3B,
	CALL CINPUT
;	      ^W,    <end>, <tab>, <cr>
	GOTO (DISPLA,ENDOFF,INV,ASK3C), INXCTL
;;;	GOTO (DISPLA,DISPLA,INV,ASK3C), INXCTL
	XVEN = ENTRY
	IF (POS) READ (CHN192,PORNXF,XVEN(1,POS),KRF:9) [KEY=ASK3B, EOF=ASK3B]
;;;	IF (POS) READ (CHN192,PORNXF,XVEN(1,POS),KRF:1) [KEY=ASK3B, EOF=ASK3B]
;;;	IF (POS) READ (CHN192,PORNXF,XVEN(1,POS)) [KEY=ASK3B, EOF=ASK3B]
	XCALL GETRFA (CHN192, PORFA)
	XCALL W_DISP(WND_1,WD_POS,ROW,COL,PXNAM)
	GOTO ASK3B
ASK3C,
	IF (PXNAM .EQ. BLANKS) GOTO INV
	ROW = 13
	KRF = 2
	AKRF = 'PXNAM'
	GOTO PROCES

INV,
	CTL = '06,19,08,00,AX,00'
	CALL INPUT
	GOTO (DISPLA,DISPLA,PO), INXCTL
	XINV = ENTRY(1,8)
	GOTO ANYCNG
PO,
	CTL = '08,19,06,00,#X'
	CALL INPUT
	GOTO (DISPLA, DISPLA, SCAN), INXCTL
	XPO = ENTRY(1,6)
	GOTO ANYCNG
SCAN,
	CTL = '10,19,15,00,AX'
	CALL INPUT
	GOTO (DISPLA,DISPLA,CHKNO),INXCTL
	XSCAN = ENTRY(1,15)
CHKNO,
	CTL = '12,19,06,00,AX'
	CALL INPUT
	XCHKNO = ENTRY(1,6)
	GOTO (DISPLA,DISPLA,CHKDT),INXCTL
CHKDT,
	CTL = '14,19,08,00,DX'
	CALL INPUT
	XCHKDT = ENTRY(1,8)
	GOTO (DISPLA,DISPLA),INXCTL

ANYCNG,
	GOTO (PROCES, CNGBR), CNGCTL+1
CNGBR,
	GOTO (VEN, INV, PO, SCAN, CHKNO, CHKDT), WHATNO
	GOTO ANYCNG

PROCES,
	IF (XVEN .NE. BLANKS) GOTO BYVEN
	IF (XINV .NE. BLANKS) 
		BEGIN
		CALL BYINV
		GOTO DISPLA
		END
	IF (XPO  .NE. 0) 
		BEGIN
		CALL BYPO
		GOTO DISPLA
		END
	IF (XSCAN.NE. BLANKS) GOTO BYSCAN

	IF (XCHKNO .NE. 0)
		BEGIN
		CALL BY_CHKNO
		GOTO DISPLA
		END

	IF (XCHKDT .NE. 0)
		BEGIN
		CALL BY_CHKDT
		GOTO DISPLA
		END

	GOTO DISPLA

;====================================================================

BY_CHKNO,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	RETURN
;--------------------------------------------------------

BY_CHKDT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	KEYNO = 6	;CHECK DATE
	READ (CHN192, PORNXF, XCHKDT, KRF:6) [ERR=MORE_POS]
	XCALL GETRFA (CHN192, PORFA)
	CALL BYVEN
	RETURN
;--------------------------------------------------------


BYVEN,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;     PO #    PO DATE  INV-NO     INV-DATE    INV-AMT CHECK#   CHK-DATE
;X) ZZZZZX XX/XX/XXXX  AAAAAAAA XX/XX/XXXX ZZZ,ZZX.XX ZZZZZX XX/XX/XXXX
;12345678901234567890123456789012345678901234567890123456789012345678901
;         1         2         3         4         5         6          7

	KEYNO = 0	;VENDOR

; display PO's for this vendor...
	SAVNAM = PXNAM
MORE_POS,
	CALL GET_POS
NXT_POP,
	XCALL TTSTS(TSTAT)
	IF (TSTAT) XCALL W_DISP(w_id,WD_READS,entry)
	IF (NUMARA .LE. 0) GOTO NO_POS
	DLINE = '       PO #    PO DATE     INV-NO     INV-DATE    INV-AMT CHECK#   CHK-DATE'
	XCALL POPN(POP)

	USING P_ACTION SELECT
	(0),	GOTO DISPLA		;NOTHING SELECTED
	(1),	BEGIN			;SELECTED(RT_ARO,LF_ARO,
		PORFA = PARRFA(PI)
	;;;	READ(CHN192, PORNXF,RFA:PORFA)
		READ(CHN192, PORNXF,KRF:1,RFA:PORFA)
		CALL DISPLA_PO		;DISPLAY PO HEADER
		GOTO NXT_POP		;BACK TO THE POP-UP
		END
	(4,6),	GOTO MORE_POS		;MORE RECORDS (CR, PG_DN)
	(2),	GOTO DISPLA		;INSERT
	ENDUSING
	GOTO DISPLA

NO_POS,
	;MESSAGE
	GOTO DISPLA

GET_POS,
	FOR I FROM 1 THRU MAXARA
		BEGIN
		CLEAR PARRY(I), PARRFA(I)
		END

	CLEAR I, NUMARA

;should already have the first/next record...
;;;	FIND (CHN192, PORNXF, PXKEY1) [ERR=GP_LOOP]
GP_LOOP,
	USING KEYNO SELECT
	(0),	IF (PXNAM .NE. SAVNAM) GOTO GP_EOF
	(6),	IF (PXCDT .NE. XCHKDT) GOTO GP_EOF
	ENDUSING


;;;	IF (PXNAM .NE. SAVNAM) GOTO GP_EOF

	IF (PXPO .GT. 0)
	THEN	BEGIN	
		HPONUM = PXPO
		HRLNUM = 0
		LOKCTL = 1
		USING PXPOCL SELECT
		('C'),		XCALL ISIO (CHN021, PORHDR, PORKEY, READ, LOKCTL)
		(),		XCALL ISIO (CHN151, PORHDR, PORKEY, READ, LOKCTL)
		ENDUSING

		IF (LOKCTL .NE. 0) CLEAR PORHDR
		END

	ELSE	CLEAR PORHDR

	INCR I

	CLEAR DLINE
	DLINE(1,1) = I, 'X'
	DLINE(2,2) = ')'

	DLINE(4,9) = PXPO,	'ZZZZZX'

	XDATE(1,4) = HPODTE(5,8)
	XDATE(5,8) = HPODTE(1,4)
	DLINE(11,20) = XDATE,	'ZX/XX/XXXX'

	IF (PXPOCL .EQ. 'C')
	THEN	DLINE(22,24) = 'CLS'
	ELSE	DLINE(22,24) = 'OPN'

	DLINE(26,33) = PXINV

	IF (PXIDT .GT. 0)
		BEGIN
		XDATE(1,4) = PXIDT(5,8)
		XDATE(5,8) = PXIDT(1,4)
		DLINE(35,44) = XDATE,	'ZX/XX/XXXX'
		DLINE(46,55) = PXIAMT,	'ZZZ,ZZX.XX'
		END
	IF (PXCHK .GT. 0)
		BEGIN
		DLINE(57,62) = PXCHK,	'ZZZZZZ'

		XDATE(1,4) = PXCDT(5,8)
		XDATE(5,8) = PXCDT(1,4)
		DLINE(64,73) = XDATE,	'ZX/XX/XXXX'
		END

	PARRY(I) = DLINE
	PARRFA(I) = PORFA

	READS (CHN192, PORNXF, GP_EOF, GETRFA:PORFA)

	IF (I .LT. MAXARA) GOTO GP_LOOP

GP_EOF,
	NUMARA = I

	RETURN
;------------------------------------------------------------

DISPLA_PO,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	XCALL W_DISP(WND_1,WD_CLEAR)
	XCALL W_DISP(WND_1,WD_POS,1,1,'PURCHASE ORDER INQUIRY')
	IF (PXPOCL .EQ. 'C') XCALL W_DISP(WND_1,WD_POS,2,1,'CLOSED')
	XCALL W_DISP(WND_1,WD_POS,4,2,'1. P/O NO')
	XCALL W_DISP(WND_1,WD_POS,12,2,'2. VENDOR NO')
	XCALL W_DISP(WND_1,WD_POS,13,2,'3. CONTACT')
	XCALL W_DISP(WND_1,WD_POS,14,2,'4. REQ DATE')
	XCALL W_DISP(WND_1,WD_POS,16,2,'5. SHIP TO')
	XCALL W_DISP(WND_1,WD_POS,18,2,'6. BUYER')
	XCALL W_DISP(WND_1,WD_POS,20,2,'7. SHIP-VIA')
	XCALL W_DISP(WND_1,WD_POS,22,2,'8. FAX PO? (N)')
	XCALL W_DISP(WND_1,WD_POS,4,34,'9. COL/PPD')
	XCALL W_DISP(WND_1,WD_POS,6,33,'10. TERMS')
	XCALL W_DISP(WND_1,WD_POS,7,33,'11. FOB')
	XCALL W_DISP(WND_1,WD_POS,8,33,'12. JOB')
;;;	XCALL W_DISP(WND_1,WD_POS,10,33,'13. CONFIRM (Y)')
;;;	XCALL W_DISP(WND_1,WD_POS,04,54,'14. PRINT PRICE (Y)')

	XCALL W_DISP(WND_1,WD_POS,12,20,PXVEN)
	XCALL W_DISP(WND_1,WD_POS,12,26,PXNAM)

	IF (PXPO .GT. 0)
	THEN	BEGIN
		HPONUM = PXPO
		HRLNUM = 0
		LOKCTL = 1

		USING PXPOCL SELECT
		('C'),		XCALL ISIO (CHN021, PORHDR, PORKEY, READ, LOKCTL)
		(),		XCALL ISIO (CHN151, PORHDR, PORKEY, READ, LOKCTL)
		ENDUSING
		END
	ELSE	BEGIN
		CLEAR PORHDR
		GOTO DPO_ASK
		END


	APON = HPONUM,	'ZZZZZX' [RIGHT]
	ALON = HRLNUM,	'XX'
	XCALL W_DISP(WND_1,WD_POS,04,20,APONUM)	

	XDATE(1,4) = HPODTE(5,8)
	XDATE(5,8) = HPODTE(1,4)
	ENTRY(1,10) = XDATE,	'XX/XX/XXXX'
	XCALL W_DISP(WND_1,WD_POS,13,20,HCONTC)

	XCALL W_DISP(WND_1,WD_POS,14,20,ENTRY(1,10) )
	XCALL W_DISP(WND_1,WD_POS,16,20,HSHPTO)
	XCALL W_DISP(WND_1,WD_POS,18,20,HBUYER)
	CLEAR PBLKEY
	TKEYNO = 2
	TKEYCD = HBUYER
	CALL GTBL2
	XCALL W_DISP(WND_1,WD_POS,18,24,DSC)

	XCALL W_DISP(WND_1,WD_POS,20,20,HSHPVI)
	CLEAR COPTBL
	TBLCOD = 'P1'
	P1_CODE = HSHPVI
	XCALL ISIO (CHN182, COPTBL, TBL_KEY, READ, LOKCTL)
	IF (LOKCTL .NE. 0)
	THEN	XCALL WNMSG (WND_1, 24, 'CODE NOT IN "P1" TABLE',1)
	ELSE	BEGIN
		SVL_SCAC = P1_SCAC
		CLEAR COPTBL
		TBLCOD = 'SC'
		SC_SCAC = SVL_SCAC
		XCALL ISIO (CHN182, COPTBL, TBL_KEY, READ, LOKCTL)
		IF (LOKCTL.NE.0) 
		THEN	XCALL WNMSG (WND_1, 24, 'SCAC NOT IN "SC" TABLE',1)
		ELSE	XCALL W_DISP(WND_1,WD_POS,20,24,SC_NAME)
		END

	XCALL W_DISP(WND_1,WD_POS,22,20,HACKNW)
	XCALL W_DISP(WND_1,WD_POS,04,49,HCOLPP)
	XCALL W_DISP(WND_1,WD_POS,06,49,HTERMS)
	CLEAR PBLKEY
	TKEYNO = 4
	TKEYCD = HTERMS
	CALL GTBL2
	XCALL W_DISP(WND_1,WD_POS,06,51,DSC)


	XCALL W_DISP(WND_1,WD_POS,07,49,HFOB)
	CLEAR PBLKEY
	TKEYNO = 5
	TKEYCD = HFOB
	CALL GTBL2
	XCALL W_DISP(WND_1,WD_POS,07,51,DSC)

	ENTRY(1,6) = HJOB,	'ZZZZZZ' [LEFT]
	XCALL W_DISP(WND_1,WD_POS,08,49,ENTRY(1,6))


DPO_ASK,
	XCALL W_DISP(WND_1,WD_POS,24,1,'D=PO DOCS, V=VENDOR DOCS, L=LINE ITEMS')
	CTL = '24,43,01,00,AE'
	CALL INPUT
	GOTO (END_DPO),INXCTL-1
	E_PDF = ENTRY(1,1)

	USING E_PDF SELECT
	('D'),	CALL PO_DOCS
	('V'),	CALL VEN_DOCS
	('L'),	CALL DISP_LINES
	ENDUSING

	GOTO DPO_ASK

END_DPO,

	RETURN
;------------------------------------------------------------

DISP_LINES,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; LOAD EXISTIN LINE ITEMS INTO WND_2
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


	CALL CREATE_WND2

	USING PXPOCL SELECT
	('C'),		CHNLIN = CHN022
	(),		CHNLIN = CHN152
	ENDUSING


	FIND (CHNLIN, PORLIN, HPONUM) [ERR=RES_LOOP, EOF=RES_EOF]
RES_LOOP,
	LOKCTL = 1
	XCALL IOS (CHNLIN,PORLIN,READ,LOKCTL)
	IF (LOKCTL .NE. 0) GOTO RES_EOF
	IF (LPONUM .NE. HPONUM) GOTO RES_EOF
	EXEPRC = (LQTYOR*LEXCST)#2

	XCALL W_AREA(WND_2, WA_SCROLL, WAS_UP, 1)
	CLEAR W2_LINE
	W2_NUM = LLINNO,	'ZZX' [LEFT]
	W2_ITEM = LITMNO
;;;W2_ITEM(14,14) = LINSTS
	W2_DESCR = LITMDS
	W2_QTY = LQTYOR,	'ZZZZZZ-'

	W2_PRICE = LEXCST,	'ZZZX.XXXX'
;;;	W2_PRICE = LEXCST,	'ZZZZZX.XXXX'

	W2_UOFM = LITMUM
	W2_EXT = EXEPRC,	'ZZZZZ,ZZX.XX-'
	XCALL W_DISP(WND_2, WD_POS, 14, 1, W2_LINE)
	XCALL W_UPDT
	GOTO RES_LOOP
RES_EOF,
;;;	CLOSE CHN152
	XCALL TTSTS(TSTAT)
	IF (TSTAT) XCALL W_DISP(w_id,WD_READS,entry)
	xcall w_disp (wnd_2, wd_pos, 1, 1)
	xcall w_disp (wnd_2, wd_reads, entry(1,1))

; restore current line items...
	if (wnd_2)
		begin
		XCALL W_PROC(WP_REMOVE,WND_2)
		XCALL W_PROC(WP_DELETE,WND_2)
		clear wnd_2
		end	
	xcall w_updt

	RETURN
;------------------------------------------------------------

PO_DOCS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	XCALL MAKP (HPONUM, 'P',PATH)
	XCALL MAKP (pxpo, 'P',PATH)		;3-20-19 incase roc po
	XCALL ADO (PATH)
	RETURN
;------------------------------------------------------------

VEN_DOCS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL MAKP (PXCHK, 'C', PATH)
	XCALL ADO (PATH)
	RETURN
;------------------------------------------------------------
GTBL2,
	BSMID = 1
	SRCCTL = 2
	XCALL SERCH (3,TABLE,PBLKEY,1,5,ORG153,BSMID,SRCCTL,4,6,10,0,0,0,0)
	UNLOCK 3
	RETURN
;------------------------------------------------------


BYINV,
; display PO for this invoice

	K2INV = XINV
	FIND (CHN192, PORNXF, PXKEY2, KRF:2) [ERR=BI_NEXT]
BI_NEXT,
	XCALL IOS (CHN192, PORNXF, READ, LOKCTL)
;;;	IF (LOKCTL .NE. 0) RETURN
	IF (LOKCTL.NE.0 .OR. PXINV .NE. XINV)
		BEGIN
		XCALL WNMSG (WND_1, 24, 'INVOICE NOT FOUND',1)
		RETURN
		END
	CALL DISPLA_PO
	RETURN
;-----------------------------------------------------------

BYPO,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; display this PO

; display PO for this invoice

	K2PO = XPO
	K2RL = 0
	FIND (CHN192, PORNXF, PXKEY3, KRF:3) [ERR=BP_NEXT]
BP_NEXT,
	XCALL IOS (CHN192, PORNXF, READ, LOKCTL)
	IF (LOKCTL .NE. 0) RETURN
	IF (PXPO .NE. XPO)
		BEGIN
		XCALL WNMSG (WND_1, 24, 'PURCHASE ORDER NOT FOUND',1)
		RETURN
		END
	CALL DISPLA_PO
	RETURN
;-----------------------------------------------------------

BYSCAN,
; scan PORLIN for this item

	CALL MAKE_IDX		;BUILD SCAN INDEX
MORE_SCAN,
	CALL GET_IDX
NXT_SCAN,
	XCALL TTSTS(TSTAT)
	IF (TSTAT) XCALL W_DISP(W_ID, WD_READS, ENTRY)
	IF (NUMARA .LE. 0) GOTO NO_SCAN
	DLINE = '       PO #    PO DATE ITEM NUMBER'
	XCALL POPN(POP)

	USING P_ACTION SELECT
	(0),	GOTO DISPLA
	(1),	BEGIN
		PORFA = PARRFA(PI)
		READ (CHN192, PORNXF, RFA:PORFA)
		CALL DISPLA_PO
		GOTO NXT_SCAN
		END
	(4,6),	GOTO MORE_SCAN
	(2),	GOTO DISPLA
	ENDUSING

	GOTO DISPLA
NO_SCAN,
	;MESAGE
	GOTO DISPLA

GET_IDX,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	FOR I FROM 1 THRU MAXARA
		BEGIN
		CLEAR PARRY(I), PARRFA(I)
		END

	CLEAR I, NUMARA

GI_LOOP,
	XCALL IOS (CHNIDX, POIDX, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO GI_EOF
	
	CLEAR PXKEY3
	K2PO = O_PO
	K2RL = 0
	READ (CHN192, PORNXF, PXKEY3, KRF:3, GETRFA:PORFA) [ERR=NO_PORNXF]

	IF (PXPO .GT. 0)
	THEN	BEGIN	
		HPONUM = PXPO
		HRLNUM = 0
		LOKCTL = 1
		USING PXPOCL SELECT
		('C'),		XCALL ISIO (CHN021, PORHDR, PORKEY, READ, LOKCTL)
		(),		XCALL ISIO (CHN151, PORHDR, PORKEY, READ, LOKCTL)
		ENDUSING

		IF (LOKCTL .NE. 0) CLEAR PORHDR
		END

	ELSE	CLEAR PORHDR

	GOTO SET_DLINE
NO_PORNXF,
	CLEAR PORNXF
	CLEAR PORHDR

SET_DLINE,
	INCR I
	CLEAR DLINE
	DLINE(1,1) = I, 'X'
	DLINE(2,2) = ')'

	DLINE(4,9) = PXPO,	'ZZZZZX'

	XDATE(1,4) = HPODTE(5,8)
	XDATE(5,8) = HPODTE(1,4)
	DLINE(11,20) = XDATE,	'ZX/XX/XXXX'

	DLINE (22,37) = O_ITEM

	PARRY(I) = DLINE
	PARRFA(I) = PORFA

	IF (I .LT. MAXARA) GOTO GI_LOOP

GI_EOF,
	NUMARA = I

	RETURN
;------------------------------------------------------------
MAKE_IDX,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	hfil = 1
	CHNLIN = CHN152

	if (%chopen(10) )
		begin
		close 10
		xcall delet (idxfil)
		end

	DT = %DATETIME
	IDXFIL = 'SPL:' + PLIDX

	XCALL ISAMC (IDXFIL,21, 1, KEY_SPEC)
	OPEN (10,SU, IDXFIL)
	CHNIDX = 10

	TL = %TRIM(XSCAN)
L_HIST,
	FIND (chnLIN, PORLIN, XSCAN, KRF:1) [ERR=LOOP]

loop,
	XCALL IOS (CHNLIN, PORLIN, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO EOF
	IF (LITMNO(1,TL) .NE. XSCAN(1,TL) ) GOTO EOF
	O_PO = LPONUM
	O_ITEM = LITMNO

	STORE (10, POIDX)
	GOTO LOOP
EOF,
	if (hfil .le. 1)
		begin
		incr hfil
		CHNLIN = CHN022
		GOTO L_HIST
		end
	CLOSE 10
	OPEN (10, SI, IDXFIL)
	FIND (CHNIDX, POIDX, ^FIRST) [ERR=GI_RETURN]
GI_RETURN,
	RETURN
;-----------------------------------------------------------

ENDOFF,
	CALL CLOSE
	XCALL PGCHN ('PO:POMENU',1)
	STOP

INPUT,
	XCALL WINPT (W_ID,ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL)
	RETURN

CINPUT,
	XCALL WCINP (W_ID,ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,POS)
	RETURN
;-----------------------------------------------------

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR CHANNEL
	OPNOK = 0

	SWITCH = 5
	XCALL FILES (1,'SI',11,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN011 = 1

	SWITCH = 5
	XCALL FILES (151,'SI',151,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN151 = 151

	SWITCH = 5
	XCALL FILES (152,'SI',152,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN152 = 152

	SWITCH = 5
	XCALL FILES (153,'I',153,SWITCH)
	CHN153 = 153

	SWITCH = 5
	XCALL FILES (021,'SI',021,SWITCH)	; 21 - POHHDR
	IF (SWITCH .EQ. 9) RETURN
	CHN021 = 21

	SWITCH = 5
	XCALL FILES (022,'SI',022,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN022 = 22

;;;	open (192, si, 'pornxf.ISM')

	SWITCH = 5
	XCALL FILES (182,'SI',182,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN182 = 182

	SWITCH = 5
	XCALL FILES (192,'SI',192,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
;;;	OPEN (192, SI, 'TST:PORNXF.TSM')

	CHN192 = 192

	LOKCTL = 0
	XCALL IO (CHN153, TBLCTL, 1, READ, LOKCTL)

	OPNOK = 1

	RETURN
;----------------------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	IF (CHN011) CLOSE CHN011
	IF (CHN021) CLOSE CHN021
	IF (CHN022) CLOSE CHN022
	IF (CHN151) CLOSE CHN151
	IF (CHN152) CLOSE CHN152
	IF (CHN153) CLOSE CHN153
	IF (CHN182) CLOSE CHN182
	IF (CHN192) CLOSE CHN192

	RETURN
;----------------------------------------------------


INIT_WINDOW,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; SET UP SCREEN 1 WINDOW
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL W_INIT(POOLSIZE,WNDCHNL,MAXWINS)

	XCALL TNMBR (WN_TNMBR)
	XCALL W_PROC(WP_FIND,WND_1,WN_NAME)
	IF (.NOT. WND_1)
		BEGIN
		XCALL W_PROC(WP_CREATE,WND_1,WN_NAME,0,0)
		END
	XCALL W_PROC(WP_PLACE,WND_1,1,1)	
	XCALL W_DISP(WND_1,WD_CLEAR)

	W_ID = WND_1


;;;;; INIT_POP ;;;;;;;;;;;;;;;;;;;;

;; POP info...
	MAXARA = 9		;9-19-97 NOT MORE THAN 1 FULL WINDOW
	PLEN = 74
	NUMROW = 9
	WX = 12
	WY = 2
	POP_WID(1,5) = "VCPOP"
	POP_TITLE = "PURCHASE ORDES"
	RETURN
;--------------------------------------------
;     PO #    PO DATE  INV-NO     INV-DATE    INV-AMT CHECK#   CHK-DATE
;X) ZZZZZX XX/XX/XXXX  AAAAAAAA XX/XX/XXXX ZZZ,ZZX.XX ZZZZZX XX/XX/XXXX
;12345678901234567890123456789012345678901234567890123456789012345678901
;         1         2         3         4         5         6          7

CREATE_WND2,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL W_PROC(WP_FIND,WND_2,'SCROL')
	IF (.NOT. WND_2)
		BEGIN
		XCALL W_PROC(WP_CREATE, WND_2, 'SCROL',10, 76)
		XCALL W_BRDR(WND_2,WB_TITLE,'LINE ITEMS',
&			WB_TPOS,WBT_TOP,WBT_CENTER)
		END
	XCALL W_PROC(WP_PLACE, WND_2, 8, 0)
	XCALL W_DISP(WND_2, WD_CLEAR)
	WLEN = 74
	RETURN
;--------------------------------------------------------

