SUBROUTINE ITCFG			;ITEM CONFIGURATOR
	LITMNO	,A		;ITEM NO
	TDESCR	,A		;CFG DESCRIPTION
	CHN182	,D
	CONFIG_PRICE	,D
	CONFIG_ERROR	,D
	WND_1	,D		;MAIN WINDOW
	WND_D	,D		;DAMPER WINDOW


.include 'wnd:windows.def'

EXTERNAL FUNCTION
	GNS	,D		;FUNCTION TO GET NUMBER OF DAMPER SECTIONS

RECORD	COPTBL
	.INCLUDE 'DEF:RD182A.DEF'

RECORD	DMPRIC
	.INCLUDE 'DEF:DMPRIC.DEF'

RECORD	DMPDAT
	DMAT	,A1
	DHT	,D3
	DLEN	,D3
	DITEM	,A15

RECORD	VARS
	ENTRY	,A30
	INXCTL	,D1
	N_PRICE	,D10
	N_NUM	,D10
	N_DIG	,D1
	D_SQFT	,D6
	D_HV	,A1	;(Y/N)
	D_FM	,A1
	D_SL	,A1
	D_CNGBR	,D1
	DDIM	,D3
	DQTY	,D5
	TL	,D6
	X	,D5
	Y	,D5
	I	,D5
	QLEN	,D3
	QHT	,D3
	TEMP	,D5
	CNGCTL	,D1
	WHATNO	,D2

.PROC

CFG_DAMPER,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; PRELIMINARY CALCS FOR ALL DAMPERS...
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	
	CLEAR DMPDAT, CONFIG_PRICE, CONFIG_ERROR, TDESCR

	DITEM = LITMNO(1,3)
	DMAT = LITMNO(4,4)		;MATERIAL

	USING DMAT SELECT		;NO MATERIAL IF GALV
	('A','S'),	DITEM = LITMNO
	('0' THRU '9'),	DITEM(5,15) = LITMNO(4,14)
	(),		GOTO DAMPER_ERROR
	ENDUSING

;;;	DLEN = %TRIM(DITEM(5,8))
;;;	IF (DLEN .LT. 4) GOTO DAMPER_ERROR		;MUST BE 4 DIGITS
	TL = %INSTR(1,DITEM,'X')			;FIND THE X

	ONERROR DAMPER_ERROR
	IF (TL .LE. 1) 
	THEN	BEGIN
		DLEN = DITEM(5,6)
		DHT = DITEM(7,8)
		END
	ELSE	BEGIN
		DLEN = DITEM(4,TL-1)
		DHT = DITEM(TL+1,%TRIM(DITEM))
		END
	OFFERROR

	IF (DLEN.LE.99)
	THEN	BEGIN
		TDESCR(1,2) = DLEN,	'ZX'
		TDESCR(3,3) = 'X'
		TDESCR(4,6) = DHT,	'ZZX' [LEFT]
		END
	ELSE	BEGIN
		TDESCR(1,3) = DLEN,	'ZZX'
		TDESCR(4,4) = 'X'
		TDESCR(5,7) = DHT,	'ZZX' [LEFT]
		END

;;;	ONERROR DAMPER_ERROR
;;;	DLEN = DITEM(5,6)
;;;	DHT = DITEM(7,8)
;;;	OFFERROR
;;;	TDESCR(1,2) = DLEN,	'ZX'
;;;	TDESCR(3,3) = 'X'
;;;	TDESCR(4,5) = DHT,	'ZX'

;148x148 PARALLEL BLADE STS STL
;123456789012345678901234567890

	USING DMAT SELECT
	('A'),	TDESCR(24,30) = 'ALUM'
	('S'),	TDESCR(24,30) = 'STS STL'
	ENDUSING

	USING DITEM SELECT
	('OB','PB'),	GOTO SMP	;BALANCING
	('SB'),		GOTO SBD	;SINGLE BLADE
	('BD'),		GOTO BDD	;BACKDRAFT
	ENDUSING

;;;	RETURN

DAMPER_ERROR,
	OFFERROR
	XCALL OLMSG(WND_1, 23,'INVALID DAMPER PART NUMBER',1)
	CONFIG_ERROR = 1
	RETURN
;----------------------------------------------------------

SMP,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; BALANCING DAMPER CONFIGURATOR
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	IF (DHT.LT.6) GOTO DAMPER_ERROR		;03/24/05 per MM
;;;	IF (DHT.LT.10) GOTO DAMPER_ERROR	;10/28/02 per SM
;;;	IF (DHT.LT.12) GOTO DAMPER_ERROR	;10/28/02 per SM
;;;	IF (DLEN.LT.12) GOTO DAMPER_ERROR	;10/28/02 per SM
	IF (DLEN.LT.10) GOTO DAMPER_ERROR	;05/25/05 per MM

	IF (DITEM(1,1) .EQ. 'P')
	THEN	TDESCR(9,22) = 'PARALLEL BLADE'
	ELSE	TDESCR(10,22) = 'OPPOSED BLADE'

	IF (DITEM(3,3) .EQ. 'S') TDESCR(24,30) = ' SEALED'

	OPEN(19,I,'SMC:DMPRIC.SMC')
;;;	OPEN(19,I,'tst:DMPRIC.tst')
	IF (DITEM(3,3) .EQ. 'N')
	THEN	READ(19,DMPRIC,1)	;NON-SEALED MATRIX
	ELSE	READ(19,DMPRIC,2)	;SEALED MATRIX
	CLOSE 19

	DDIM = 48
	CALL GET_DAMPER_SECTIONS

	DITEM(5,15) = 
	USING DHT SELECT		;FIND THE MATRIX ROW
	(00 THRU 11),	X = 1
	(12 THRU 18),	X = 2
	(19 THRU 24),	X = 3
	(25 THRU 32),	X = 4
	(33 THRU 40),	X = 5
	(41 THRU 48),	X = 5
	ENDUSING

	USING DLEN SELECT		;FIND THE MATRIX COLUMN
	(00 THRU 18),	Y = 1
	(19 THRU 24),	Y = 2
	(25 THRU 30),	Y = 3
	(31 THRU 36),	Y = 4
	(37 THRU 42),	Y = 5
	(43 THRU 48),	Y = 6
	ENDUSING
	
	I = (X-1)*6 + Y		;GET THE INDEX

	CONFIG_PRICE = (DM_PRICE(I) * 10)		;TO .XXX
;;;	CONFIG_PRICE = (DM_PRICE(I) * DM_MULT) #1	;TO .XXX

	USING DMAT SELECT
	('A'),	CONFIG_PRICE = (CONFIG_PRICE * 200)#2	;ALUM
	('S'),	CONFIG_PRICE = (CONFIG_PRICE * 225)#2	;STAINLES
	ENDUSING
	CONFIG_PRICE = CONFIG_PRICE * DQTY		;MULT BY # OF SEC
	CONFIG_PRICE = CONFIG_PRICE + (DQTY*DM_QUAD*10)	;QUADRANTS
	IF (DQTY .GT. 1) CONFIG_PRICE = CONFIG_PRICE + (DM_JACK*10)	
;;;	CALL ROUND_NICKLE		;ROUND CONFIG_PRICE UP TO NEAREST .05
	
	LITMNO = DITEM(1,4)
	RETURN
;----------------------------------------------------------

SBD,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; SINGLE BLADE DAMPER
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;	IF (DHT.LT.06 .OR. DHT.GT.12) GOTO DAMPER_ERROR
	IF (DHT.LT.04 .OR. DHT.GT.12) GOTO DAMPER_ERROR
	IF (DLEN.LT.06 .OR. DLEN.GT.48)GOTO DAMPER_ERROR
	
	TDESCR(7,20) = 'SINGLE BLADE'

	CLEAR TBL_KEY
	TBLCOD = 'SB'
	READ (CHN182,COPTBL,TBL_KEY)[ERR=DAMPER_ERROR]
	CONFIG_PRICE = (DLEN*DHT)*SB_PCUN + SB_QUAD
	IF (CONFIG_PRICE .LT. SB_MIN) CONFIG_PRICE = SB_MIN

	USING DMAT SELECT
	('A'),	CONFIG_PRICE = (CONFIG_PRICE*SB_AMUL)#2
	('S'),	CONFIG_PRICE = (CONFIG_PRICE*SB_SMUL)#2
	ENDUSING

	CONFIG_PRICE = (CONFIG_PRICE*10)		;.XXX
;;;	CONFIG_PRICE = (CONFIG_PRICE*SB_PMUL)#1		;.XXX
	LITMNO = DITEM(1,4)
	CALL ROUND_NICKLE		;ROUND CONFIG_PRICE UP TO NEAREST .05
	RETURN
;----------------------------------------------------------

BDD,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; BACKDRAFT DAMPER
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	IF (DHT.LT.06) GOTO DAMPER_ERROR
	IF (DLEN.LT.06)GOTO DAMPER_ERROR
	D_SQFT = ((DLEN*DHT*1000)/144)#1	 	;SQ FT (.xx)

	TDESCR(7,20) = 'BACKDRAFT'

	USING DMAT SELECT
;;;	(),	TDESCR(24,30) = 'ALUM'		;ASSUME ALUM 10/28/02
	('A'),	TDESCR(24,30) = 'ALUM'		;ssq 2/06/07 don't assume alum
;;;	('G'),	TDESCR(24,30) = 		;ssq 11/20/02
	('S'),	TDESCR(24,30) = 'STS STL'
	(),	TDESCR(24,30) = 		;ssq 2/6/07
	ENDUSING

	DDIM = 36
	CALL GET_DAMPER_SECTIONS

	CLEAR TBL_KEY
	TBLCOD = 'BD'
	READ (CHN182,COPTBL,TBL_KEY)[ERR=DAMPER_ERROR]
	CONFIG_PRICE = (D_SQFT*BD_PCUN)#2 	;PRICE/SQ FT (.xx)
	IF (CONFIG_PRICE .LT. BD_MIN) CONFIG_PRICE = BD_MIN

	USING DMAT SELECT
	('A'),	CONFIG_PRICE = (CONFIG_PRICE*BD_AMUL)#2
;;;	(),	CONFIG_PRICE = (CONFIG_PRICE*BD_AMUL)#2	;assume alum 11/20/02
	('S'),	CONFIG_PRICE = (CONFIG_PRICE*BD_SMUL)#2
	ENDUSING

; after this, price will be .XXX, convert all add-on's to 3 dec places...
	CONFIG_PRICE = (CONFIG_PRICE*10)		;.XXX
;;;	CONFIG_PRICE = (CONFIG_PRICE*BD_PMUL)#1		;.XXX

; Backdraft damper add-on's ...
D_DISPLA,
	CLEAR CNGCTL
	XCALL W_PROC(WP_PLACE, WND_D, 8, 15)
	XCALL W_DISP(WND_D,WD_POS,1,1,'1. SPRING LOAD/COUNTER BALANCE (Y/N)')
	XCALL W_DISP(WND_D,WD_POS,2,1,'2. FLANGED MODEL               (Y/N)')
	XCALL W_DISP(WND_D,WD_POS,3,1,'3. HIGH VELOCITY               (Y/N)')
	XCALL W_UPDT
D_SL,
	XCALL WINPT(WND_D, 1, 39, 01, 00, 'YN', ENTRY, INXCTL)
	D_SL = ENTRY(1,1)
	GOTO (D_ANY),CNGCTL
D_FM,
	XCALL WINPT(WND_D, 2, 39, 01, 00, 'YN', ENTRY, INXCTL)
	D_FM = ENTRY(1,1)
	GOTO (D_ANY),CNGCTL
D_HV,
	XCALL WINPT(WND_D, 3, 39, 01, 00, 'YN', ENTRY, INXCTL)
	D_HV = ENTRY(1,1)
D_ANY,
	XCALL WANCN(WND_D, 5, CNGCTL, WHATNO)
	GOTO (D_PROC,D_CNGBR),CNGCTL+1
D_CNGBR,
	GOTO (D_SL,D_FM,D_HV), WHATNO
	GOTO D_ANY
D_PROC,
	XCALL W_DISP(WND_D, WD_CLEAR)
	XCALL W_PROC(WP_REMOVE, WND_D)
	XCALL W_UPDT

	IF (D_SL .EQ. 'Y') CONFIG_PRICE = CONFIG_PRICE + (DQTY*BD_SL*10) ;.xxx
	IF (D_FM .EQ. 'Y') CONFIG_PRICE = CONFIG_PRICE + (D_SQFT*BD_FM)#1 ;.xxx
	IF (D_HV .EQ. 'Y') CONFIG_PRICE = CONFIG_PRICE + (D_SQFT*BD_HV)#1 ;.xxx

	LITMNO = DITEM(1,4)
	CALL ROUND_NICKLE		;ROUND CONFIG_PRICE UP TO NEAREST .05
	RETURN

ROUND_NICKLE,
	N_PRICE = CONFIG_PRICE#1	;.XXX -> .XX
	N_NUM = N_PRICE/10*10
	N_DIG = N_PRICE - N_NUM		;ENDING DIGIT .XX

	USING N_DIG SELECT
	(0),	RETURN		;ALREADY ENDS IN ZERO
	(.LE. 5),	N_PRICE = N_NUM + 5	;.05
	(.GT. 5),	N_PRICE = N_NUM + 10	;.10
	ENDUSING
	
	CONFIG_PRICE = N_PRICE * 10	;.XX -> .XXX
	RETURN
;----------------------------------------------------------
GET_DAMPER_SECTIONS,
; determine if overall size requires multiple damper sections...
	QLEN = %GNS(DLEN,DDIM)		;NUMBER OF COLUMNS
	QHT = %GNS(DHT,DDIM)		;NUMBER OF ROWS
	DQTY = QLEN * QHT		;NUMBER OF DAMPER SECTIONS

	TEMP = DLEN/QLEN 		;LEN OF EACH SEG
	IF (TEMP.LT.DLEN/QLEN*QLEN) TEMP = TEMP + 1
	DLEN = TEMP

	TEMP = DHT/QHT 			;HT OF EACH SEG
	IF (TEMP.LT.DHT/QHT*QHT) TEMP = TEMP + 1
	DHT = TEMP

	RETURN
.end
;--------------------------------------------------------
;;;.FUNCTION GNS		;GET NUMBER OF SECTIONS
;;;	NUM	,D	;HEIGHT OR WIDTH
;;;	DIM	,D	;MAX DIM (48 FOR OBN, 36 FOR BDD)
;;;RECORD
;;;	VAL	,D18
;;;.PROC
;;;	VAL = NUM/DIM
;;;	IF (NUM .GT. VAL*DIM) INCR VAL
;;;	FRETURN VAL	
;;;.END

