;  PRGREG.POR
;
;		PRINT PURCHASE ORDER PURGE REGISTER
; (01)	01-11-95 DKS - PRINT 2 MORE COMMENT LINES
;
RECORD HEADER	
	.INCLUDE 'DEF:RD151A.DEF'

RECORD POLINE	
	.INCLUDE 'DEF:RD152A.DEF'

RECORD DUMTBL	
	.INCLUDE 'DEF:RD153B.DEF'
			
RECORD VENDOR	
	.INCLUDE 'DEF:RD011A.DEF'
			
RECORD DUMVEN	
	.INCLUDE 'DEF:RD011B.DEF'
			
RECORD VENIDX	
	.INCLUDE 'DEF:RD012A.DEF'
			
RECORD INVCTL	
	.INCLUDE 'DEF:RD041B.DEF'

RECORD KEYPON
	KEY1	,D6
	KEY2	,D2

RECORD PLINE
		,A132

RECORD LINE1,X
		,A10
	KPONUM	,A6
	KDASH	,A1
	KRLNUM	,A2
		,A16
	KVNADR	,A30
		,A11
	KSHPTO	,A30
		,A12
	KCXCDE	,A1
		,A10
	KSTATS	,A1
		,A2
RECORD LINE2,X
		,A10
	KPODTE	,A8
		,A103
	KPOWGT	,A8
		,A3
RECORD LINE3,X
		,A10
	KPOTYP	,A7
		,A17
	KACKNO	,A3
		,A21
	KCLPPD	,A3
		,A11
	KTERMS	,A10
		,A14
	KBUYER	,A16
		,A17
	KPRIPC	,A1
		,A2
RECORD LINE4,X
		,A10
	KVENNO	,A4
		,A20
	KCONFM	,A3
		,A21
	KCNFWI	,A3
		,A11
	KFOB	,A9
		,A15
	KSHPVI	,A15
		,A17
	KUSRCD	,A2
		,A2
RECORD LINE8,X
	KLNNUM	,A3
		,A4
	KOURNO	,A15
		,A3
	KITMDS	,A30
		,A3
	KUMEAS	,A2
		,A10
	KQUANT	,A7
		,A9
	KUNCST	,A12
		,A2
	KNOTIF	,A3
		,A9
	KDATE	,A8
		,A2
	KAMNT	,A10
RECORD LINE9,X
		,A1
	KLSTAT	,A1
		,A5
	KLVENO	,A20
		,A3
	KNOTE	,A30
		,A3
	KCMDTY	,A4
		,A38
	KMOVET	,A3
		,A24
RECORD LINE10,X
		,A1
	KLCXCD	,A1
		,A56
	KBLNKT	,A3
		,A18
	KREJRE	,A20
		,A1
	KINSPC	,A3
		,A29
RECORD LINE11,X
		,A25
	KCDNOT	,A30
		,A2
	KLNOTE	,A30
		,A45
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD TBL
	TTBLNO	,18D2
	TCODE	,18A2
	TSEQNO	,18D1
	TDESC	,18A30

RECORD TABLE
	TNO	,D2
	CDE	,A2
	SQ	,D1
	DSC	,A30

RECORD TBLKEY
	TKEYNO	,D2
	TKEYCD	,A2
	TKEYSQ	,D1

RECORD RANGE1
	STPONO	,D6
	STRLNO	,D2
	ENPONO	,D6
	ENRLNO	,D2

RECORD RANGE2
	STPODA	,D6
	ENPODA	,D6
	ORDTYP	,A1
	ISSTYP	,A1
RECORD MENLIN
	MCODE	,A2
		,A3,	' = '
	MDESC	,A30
RECORD LABEL1
		,A45,	'P/O NMBR:            ORDERED FROM:           '
		,A45, 	'                      SHIP TO:               '
		,A42,	'                  C/X CODE:    STATUS:    '
RECORD LABEL2
		,A45,	'P/O DATE:                                    '
		,A45,	'                                             '
		,A42,	'                  P/O WEIGHT:             '
RECORD LABEL3
		,A45,	'P/O TYPE:            ACKNOWLEDGE:        COLL'
		,A45,	'ECT/PREPAID:        TERMS:                  B'
		,A42,	'UYER:                     PRINT PRICE:    '
RECORD LABEL4
		,A45,	'VENDOR #:                CONFIRM:         CON'
		,A45,	'FIRMED WITH:          FOB:               SHIP'
		,A42,	' VIA:                     USER CODE:      '
RECORD LABEL5
		,A45,	'LINE #  OUR-ITEM-NO      ITEM DESCRIPTION    '
		,A45,	'             U/M                             '
		,A42,	'        NOTIFY                            '
RECORD LABEL6
		,A45,	'STATUS  VENDOR-ITEM-NO   NOTES               '
		,A45,	'             COMDTY                  PER-UNIT'
		,A42,	'-COSTS  MOVE-TO                  LINE-COST'
RECORD LABEL7
		,A45,	'C/X     JOB-NUMBER       NOTES               '
		,A45,	'                     QUANTITIES:    (REJECT-R'
		,A42,	'EASON)  INSPCTR     DATES:    AMT-INVOICED'
RECORD LABEL8
		,A14
		,A10,	'P/O NOTES:'
		,A108

RECORD
	ADDR	,6A31
	ALF	,A2
	ALL	,D1
	BLANKS	,A31
	BRACKS	,A30,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
	BSMID	,D5
	BUYER	,A2
	CNGCTL	,D1
	CNT2	,D5
	DECMAL	,D4
	DSPSW	,D1
	ENTRY	,A30
	EOF	,D1
	EPO	,D1
	HDATE	,D6
	HRECNO	,D5
	INXCTL	,D1
	ISSCDE	,3A1,	'N','C','X'
	ISSNAM	,3A8,	'ORIGINAL','CHANGE  ','CANCEL  '
	LINCNT	,D2,	60
	LINCTL	,D1
	LOKCTL	,D1
	LPSW	,D1
	LRECNO	,D5
	LSTAT	,D1
	LSTATS	,5A8,	'NEW     ','PRINTED ','RECEIVED',
&			'INVOICED','CLOSED  '
	MUSTPT	,D1
	MSGCTL	,D1
	N	,D2
	NOABRT	,D1,	1
	NONE	,D1
	OLDCNT	,D2
	PGCNT	,D3,	000
	PLCNT	,D5
	PRTCTL	,D3
	PRTTYP	,A1
	READ	,D1,	0
	RECNO	,D5
	RJUST	,D1
	RPTNUM	,D3
	SHIPTO	,A2
	SPLFIL	,A14
	SRCOPT	,D1
	SRCCTL	,D1
	STANAM	,5A10,	'UNRELEASED','RELEASED  ','PRINTED   ',
&			'CLOSED    ','CANCELLED '
	STATUS	,A1
	STATYP	,5A1,	'U','R','P','C','X'
	SUB	,D2
	SWITCH	,D1
	TBLNUM	,D2
	TITLE	,A29,	'PURCHASE ORDER PURGE REGISTER'
	TLIMIT	,D2
	TODAY	,D6
	TYPCDE	,3A1,	'N','B','R'
	TYPNAM	,3A7,	'NORMAL ','BLANKET','RELEASE'
	V	,D1
	VADR	,4A30
	VENDNO	,A4
	WHATNO	,D2
	WRECNO	,D5
	WRITE	,D1,	1
	WTARG	,D1,	2
	XXCST,	D18
PROC
	XCALL TERID (V)
	V = 1
	XCALL OUTPT (1,1,2,'PURCHASE ORDER PURGE',V)
	XCALL OUTPT (12,20,0,'ARE YOU SURE YOU WANT TO RUN THIS PURGE?',V)
	CTL = '12,62,01,01,YN'
	CALL INPUT
	IF (INXCTL.EQ.2) XCALL PGCHN ('PO:POSFMN',1)
	XCALL WAIT (4,V)
	XCALL RDATE (TODAY)
	SPLFIL(5,6) = 'N9'

	SWITCH = 1
	XCALL FILES (10,'I',41,SWITCH)
	IF (SWITCH.EQ.9) GO TO INUSE1
	LOKCTL = 1
	XCALL IO (10,INVCTL,1,READ,LOKCTL)
	RJUST = JSTIFY
	XCALL FILES (10,'I',41,4)

	SWITCH = 1
	XCALL FILES (1,'SU',151,SWITCH)		; FILE 151, PORHDR.
	IF (SWITCH.EQ.9) GO TO INUSE1

	SWITCH = 1
	XCALL FILES (2,'SI',152,SWITCH)		; FILE 152, PORLIN.
	IF (SWITCH.EQ.9) GO TO INUSE2

	XCALL OUTPT (2,1,1,'CLOSE HEADERS',V)
	NONE =
	XCALL CLSPO (NONE,PLCNT)		; HEADER CLOSING ROUTINE
	IF (NONE)
	  BEGIN
	    XCALL MESAG ('NO PO''S TO PURGE',1)
	    GO TO INUSE3
	  END

	SWITCH = 1
	XCALL FILES (3,'I',153,SWITCH)		; FILE 153, PORTBL.
	IF (SWITCH.EQ.9) GO TO INUSE3

	LOKCTL = 0
	XCALL IO (3,DUMTBL,1,READ,LOKCTL)
	IF (LOKCTL.EQ.1) GO TO INUSE4

	SWITCH = 1
	XCALL FILES (4,'I',011,SWITCH)		; FILE 011, VENMAS.
	IF (SWITCH.EQ.9) GO TO INUSE4

	LOKCTL = 0
	XCALL IO (4,DUMVEN,1,READ,LOKCTL)
	IF (LOKCTL.EQ.1) GO TO INUSE5

	SWITCH = 1
	XCALL FILES (5,'I',012,SWITCH)		; FILE 012, VENIDX.
	IF (SWITCH.EQ.9) GO TO INUSE5

BEGIN,
	CNGCTL =
	LPSW = 2	; NOT DISPLAYABLE
	PGCNT =
	LINCNT = 60
	ALL = 1
PROCES,
	XCALL OUTPT (2,1,1,'PURGE REGISTER',V)
	HRECNO = 1
	LRECNO = 1
	CALL READHD		;READ FIRST IN-RANGE HEADER & LINE
	IF (EOF) GO TO NONE

	XCALL LPON (LPSW,SPLFIL)
	IF (LPSW.EQ.0) GO TO EXIT
	IF (LPSW.EQ.2) WTARG = 4
	IF (LPSW.NE.4) XCALL WAIT (WTARG,V)

	CALL PORUN		;PRINT ALL PURCHASE ORDERS

	XCALL LPOFF (LPSW,SPLFIL,PGCNT)
	GO TO EXIT
;**********************************************************************
NONE,
	XCALL MESAG ('THERE ARE NO PURCHASE ORDERS IN SELECTED RANGE.',2)
	GO TO NOPURG
;**********************************************************************
;	EACH PASS PRINTS ONE PURCHASE ORDER:
;**********************************************************************
PORUN,
	SRCOPT = 4
	BSMID = 1
	SRCCTL = 1
	VENDOR =
	XCALL SERCH (5,VENIDX,HVENDR,1,4,ORG011,BSMID,SRCCTL,SRCOPT,6,10,
&			0,0,0,0)
	IF (SRCCTL.EQ.0) GO TO FOUND
	NAME = 'VENDOR NOT ON FILE'
	GO TO PORUN2
FOUND,
	LOKCTL = NOABRT
	XCALL IO (4,VENDOR,IRC011,READ,LOKCTL)
PORUN2,
	XCALL LINFD (1)
	INCR LINCNT
	PLINE = LABEL1
	KPONUM = HPONUM,'ZZZZXX'
	KDASH = '-'
	KRLNUM = HRLNUM,'XX'
	KVNADR = NAME
	TBLKEY =
	TKEYNO = 1
	TKEYCD = HSHPTO
	TKEYSQ = 1
	CALL GETTBL
	KSHPTO = DSC
	KCXCDE = HCXCDE
	KSTATS = HPOSTS
	LINCTL = 0
	CALL PRINT

	ADDR(1) = ADD1
	ADDR(2) = ADD2
;;;	ADDR(3) = ADD3		;(01)
	ENTRY =
	ENTRY = CITY
	N = 16
FIND,
	N = N - 1
	IF (N.GT.1.AND.ENTRY(N,N).EQ.' ') GO TO FIND

	ENTRY(N+1,N+2) = ', '
	ENTRY(N+3,N+4) = STATE
	ENTRY(N+6,N+15) = ZIP
	ADDR(4) = ENTRY		;(01) WAS 3

	IF (ADDR(1).EQ.BLANKS) CALL MOVE1
	IF (ADDR(2).EQ.BLANKS) CALL MOVE2
	IF (ADDR(3).EQ.BLANKS) CALL MOVE3

	KVNADR = ADDR(1)
	TKEYSQ = 2
	CALL GETTBL
	KSHPTO = DSC
	LINCTL = 0
	CALL PRINT

	PLINE = LABEL2
	KPODTE = HPODTE,'ZX/XX/XX'
	KVNADR = ADDR(2)
	TKEYSQ = 3
	CALL GETTBL
	KSHPTO = DSC
	KPOWGT = HPOWGT,'ZZ,ZXX.X'
	LINCTL = 0
	CALL PRINT

	KVNADR = ADDR(3)
	TKEYSQ = 4
	CALL GETTBL
	KSHPTO = DSC
	LINCTL = 1
	CALL PRINT

	PLINE = LABEL3
	IF (HPOTYP.EQ.'N') KPOTYP = 'NORMAL'
	IF (HPOTYP.EQ.'B') KPOTYP = 'BLANKET'
	IF (HPOTYP.EQ.'R') KPOTYP = 'RELEASE'
ENDTYP,
	IF (HACKNW.EQ.'Y') KACKNO = 'YES'
	IF (HACKNW.EQ.'N') KACKNO = 'NO'
	IF (HACKNW.EQ.'A') KACKNO = 'RCD'

	IF (HCOLPP.EQ.'C') KCLPPD = 'COL'
	IF (HCOLPP.EQ.'P') KCLPPD = 'PPD'
	TBLKEY =
	TKEYNO = 04
	TKEYCD = HTERMS
	CALL GETTBL
	KTERMS = DSC
	TKEYNO = 02
	TKEYCD = HBUYER
	CALL GETTBL
	KBUYER = DSC
	KPRIPC = HPRTPR
	KVNADR = ADDR(4)	;(01)
	LINCTL = 0
	CALL PRINT

	PLINE = LABEL4
	KVENNO = HVENDR
	IF (HCONFR.EQ.'Y') KCONFM = 'YES'
	IF (HCONFR.EQ.'N') KCONFM = 'NO'
	IF (HCONFR.EQ.'C') KCONFM = 'CON'
	KCNFWI = HCNFRW
	TBLKEY =
	TKEYCD = HFOB
	TKEYNO = 05
	CALL GETTBL
	KFOB = DSC
	TBLKEY =
	TKEYNO = 3
	TKEYCD = HSHPVI
	CALL GETTBL
	KSHPVI = DSC
	KUSRCD = HUSERC
	LINCTL = 1
	CALL PRINT

	CALL PAGES

	N = 1
	PLINE = LABEL8
NTLOOP,
	IF (HPONCD(N).EQ.BLANKS) GO TO SKIP
	TKEYNO = 06
	TKEYCD = HPONCD(N)
	CALL GETTBL
	KCDNOT = DSC
SKIP,
	KLNOTE = HPONTE(N)
	LINCTL = 0
	CALL PRINT
	INCR N
	IF (N.LE.3) GO TO NTLOOP

	LINCNT = 60

	CALL READHD
	IF (EOF) RETURN
	GO TO PORUN
;**********************************************************************
MOVE1,
	ADDR(1) = ADDR(2)
MOVE2,
	ADDR(2) = ADDR(3)
MOVE3,
	ADDR(3) = ADDR(4)
MOVE4,
	ADDR(4) = ADDR(5)
MOVE5,
	ADDR(5) = ADDR(6)
	ADDR(6) = '                              *'
	IF (ADDR(1).EQ.BLANKS) GO TO MOVE1
	IF (ADDR(2).EQ.BLANKS) GO TO MOVE2
	IF (ADDR(3).EQ.BLANKS) GO TO MOVE3
	IF (ADDR(4).EQ.BLANKS) GO TO MOVE4
	RETURN
;**********************************************************************
;	HEADER CONTROL WITHIN EACH PURCHASE ORDER
;**********************************************************************
PAGES,
	PLINE = LABEL5
	LINCTL = 0
	CALL PRINT
	PLINE = LABEL6
	LINCTL = 0
	CALL PRINT
	PLINE = LABEL7
	IF (HPOTYP.NE.'N') PLINE(59,62) = 'BLKT'
	LINCTL = 1
	CALL PRINT

	CALL LINES

	IF (EOF.OR.EPO) RETURN
	GO TO PAGES
;**********************************************************************
;	EACH PASS PRINTS ONE LINE ITEM:
;**********************************************************************
LINES,
	OLDCNT = LINCNT
	PLINE(66,69) = 'ORD:'
	PLINE(82,85) = 'EXP:'
	PLINE(108,111) = 'REQ:'
	KLNNUM = LLINNO,'XXX'
	KUMEAS = LITMUM
	KOURNO = LITMNO
	IF (RJUST) XCALL LEFTJ (KOURNO(1,15),15)
	KITMDS = LITMDS
	KQUANT = LQTYOR,'ZZZ,ZXX'
	KUNCST = LEXCST,'ZZZ,ZXX.XXXX'
	KNOTIF = LNOTIF
	KDATE = LDTERQ,'XX/XX/XX'
	XXCST = LACCST
	IF(LACCST.EQ.0)XXCST = LEXCST
	KAMNT = (LQTYOR*XXCST)#2,'ZZZ,ZXX.XX'
	IF(LITMUM.EQ.'C') KAMNT = (LQTYOR*XXCST)#4,'ZZZ,ZXX.XX'
	IF(LITMUM.EQ.'M') KAMNT = (LQTYOR*XXCST)#5,'ZZZ,ZXX.XX'
;
	LINCTL = 0
	CALL PRINT

SETNOT,
	TBLKEY =
	TKEYNO = 06
	TKEYCD = LPONCD(1)
	CALL GETTBL
	ADDR(1) = DSC
	TKEYCD = LPONCD(2)
	CALL GETTBL
	ADDR(2) = DSC
	ADDR(3) = LPONTE(1)
	ADDR(4) = LPONTE(2)
	ADDR(5) = LPONTE(3)			;(01)
	ADDR(6) = LPONTE(4)			;(01)
	IF (ADDR(1).EQ.BLANKS) CALL MOVE1
	IF (ADDR(2).EQ.BLANKS) CALL MOVE2
	IF (ADDR(3).EQ.BLANKS) CALL MOVE3
	IF (ADDR(4).EQ.BLANKS) CALL MOVE4
	IF (ADDR(5).EQ.BLANKS) CALL MOVE5

	PLINE(66,69) = 'RCV:'
	IF (HPOTYP.EQ.'B') PLINE(66,69) = 'RLS:'
	PLINE(82,85) = 'ACT:'
	PLINE(107,111) = 'PROM:'
	KLSTAT = LINSTS
	KLVENO = LVITMN
	IF (RJUST) XCALL LEFTJ (KLVENO(1,20),20)
	KNOTE = ADDR(1)
	KCMDTY = LITMCC
	KQUANT = LQTYRC,'ZZZ,ZXX'
	KUNCST = LACCST,'ZZZ,ZXX.XXXX'
	KMOVET = LMOVET
	KDATE = LDTEPM,'XX/XX/XX'
	KAMNT = LDINVC,'ZZZ,ZXX.XX'
	LINCTL = 0
	CALL PRINT

	PLINE(66,69) = 'REJ:'
	PLINE(107,111) = 'RCVD:'
	IF (HPOTYP.EQ.'B') PLINE(66,69) = 'RCV:'
	KLCXCD = LCXCDE
	KLVENO = LJOBNO
	KNOTE = ADDR(2)
	IF (LBLKTP.EQ.'F') KBLNKT = 'FRM'
	IF (LBLKTP.EQ.'E') KBLNKT = 'EST'
	IF (LBLKTP.EQ.'M') KBLNKT = 'MAX'
	IF (LBLKTP.EQ.'N') KBLNKT = 'MIN'
	KQUANT = LQTYRJ,'ZZZ,ZXX'
	IF (HPOTYP.EQ.'B') GO TO SKIPRJ
	TBLKEY =
	TKEYNO = 07
	TKEYCD = LREJCD
	CALL GETTBL
	KREJRE = DSC
SKIPRJ,
	KINSPC = LRCVER
	KDATE = LDTERC,'XX/XX/XX'
	LINCTL = 0
	CALL PRINT

	PLINE(66,69) = 'INV:'
	KNOTE = ADDR(3)
	KQUANT = LQTYIV,'ZZZ,ZXX'
	LINCTL = 0
	CALL PRINT

	KNOTE = ADDR(4)
	LINCTL = 0
	CALL PRINT

	KNOTE = ADDR(5)
	LINCTL = 0
	CALL PRINT

	KNOTE = ADDR(6)
	LINCTL = 1
	CALL PRINT

	CALL READLN
	IF (EOF.OR.EPO) RETURN
	IF (LINCNT.LT.OLDCNT) RETURN
	GO TO LINES
;
XCST,
	RETURN
;

;**********************************************************************
;	READ ONE IN-RANGE HEADER RECORD AND ONE IN-RANGE LINE RECORD
;**********************************************************************
READHD,
	EOF =
REREAD,
	LOKCTL = 1
	XCALL IOS (1,HEADER,READ,LOKCTL)
	IF (LOKCTL.NE.0) GOTO ENDFIL
	IF (HPOSTS.NE.'C'.AND.HPOSTS.NE.'X'.AND.HPOSTS.NE.'D') GO TO REREAD
	IF (HCXCDE.EQ.BLANKS) HCXCDE = 'N'

	CALL READLN
	IF (EOF.OR.EPO) GO TO NAKED
	RETURN
NAKED,
	IF (EOF.AND.EPO) GO TO REREAD
	POLINE =
	LITMDS = 'NO LINE ITEMS FOR THIS P/O'
	EOF = 0
	RETURN
ENDFIL,
	EOF = 1
	RETURN
;**********************************************************************
;	READ ONE IN-RANGE LINE RECORD
;**********************************************************************

READLN,
	EOF =
	EPO =
	KEY1 = HPONUM
	KEY2 = HRLNUM
	LOKCTL = 1
	XCALL ISIO (2,POLINE,KEYPON,READ,LOKCTL)
	GOTO CONTIN
REPEAT,
	LOKCTL = 1
	XCALL IOS (2,POLINE,READ,LOKCTL)
CONTIN,
	IF (LOKCTL.EQ.2) GOTO TOOFAR
	IF (LOKCTL.EQ.1) GOTO EXIT2
	IF (LPONUM.LT.HPONUM) GO TO REPEAT
	IF (LPONUM.GT.HPONUM) GO TO TOOFAR
	IF (LRLNUM.LT.HRLNUM) GO TO REPEAT
	IF (LRLNUM.GT.HRLNUM) GO TO TOOFAR
	RETURN
TOOFAR,
	EPO = 1
	RETURN
EXIT2,
	EOF = 1
	RETURN
;**********************************************************************
;	TABLE SEARCH, INPUT, PRINT, CLOSES, IN-USE, AND EXIT ROUTINES
;**********************************************************************
GETTBL,
	SRCOPT = 4
	BSMID = 1
	SRCCTL = 2
	XCALL SERCH (3,TABLE,TBLKEY,1,5,ORG153,BSMID,SRCCTL,SRCOPT,
&			6,11,0,0,0,0)
	IF (SRCCTL.EQ.1) TABLE =
	RETURN
;**********************************************************************

;**********************************************************************
;	THIS ROUTINE BRINGS A TABLE INTO MEMORY AND DISPLAYS SUBMENU
;**********************************************************************

FNDTBL,
	SRCCTL = 2
	SRCOPT = 4
	BSMID = 1
	XCALL SERCH (3,TABLE,TBLNUM,1,2,ORG153,BSMID,SRCCTL,
&                     SRCOPT,6,11,0,0,0,0)
	BSMID = BSMID - 1
	IF (SRCCTL.EQ.0) GO TO TBLOOP
	ENTRY = 'TABLE NUMBER XX IS EMPTY'
	ENTRY(14,15) = TBLNUM,'XX'
	TLIMIT = 1
	TBL =
	TCODE(1) = '**'
	TDESC(1) = ENTRY
	RETURN

TBLOOP,
	SUB =
LOOP,
	INCR SUB
NOSUB,
	INCR BSMID
	LOKCTL = 1
	XCALL IO (3,TABLE,BSMID,READ,LOKCTL)
	IF (TNO.NE.TBLNUM) TLIMIT = SUB - 1
	IF (TNO.NE.TBLNUM) RETURN
	IF (SQ.GE.2) GO TO NOSUB
	IF (DSC.EQ.']]]DEL') GO TO NOSUB
	TTBLNO(SUB) = TNO
	TCODE(SUB) = CDE
	TSEQNO(SUB) = SQ
	TDESC(SUB) = DSC
	IF (TCODE.EQ.BLANKS) TLIMIT = SUB - 1
	IF (SUB.LT.18) GO TO LOOP
	RETURN
;**********************************************************************
SUBMNU,
	ROW = 10
SHLOOP,
	INCR SUB
	ROW = ROW + 2
	MCODE = TCODE(SUB)
	MDESC = TDESC(SUB)
	IF (MCODE.EQ.BLANKS) MENLIN =
	XCALL OUTPT (ROW,40,0,MENLIN,V)
	IF (MCODE.EQ.BLANKS) MENLIN(4,4) = '='
	IF (SUB.NE.6.AND.SUB.NE.12.AND.SUB.LT.18) GO TO SHLOOP
LEAVE,
	IF (SUB.GT.0.AND.SUB.LT.6) SUB = 6
	IF (SUB.GT.6.AND.SUB.LT.12) SUB = 12
	IF (SUB.GT.12) SUB =
	RETURN
;**********************************************************************
GETSUB,
	SUB = 0
	IF (ALF.EQ.BLANKS) RETURN
SBLOOP,
	INCR SUB
	IF (SUB.EQ.19) RETURN
	IF (ALF.EQ.TCODE(SUB)) RETURN
	GO TO SBLOOP
;**********************************************************************
;	THIS ROUTINE CLEARS THE SUBMENU FROM THE SCREEN
;**********************************************************************

CLRMEN,
	TLIMIT =
	TABLE =
	TBL =
	ROW = 10
CLRLP,
	ROW = ROW + 2
	XCALL OUTPT (ROW,40,1,'\',V)
	IF (ROW.EQ.24) RETURN
	GO TO CLRLP

;**********************************************************************
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
;**********************************************************************
PRINT,
	PRTCTL = 132
	XCALL LPOUT (LINCNT,PGCNT,PLINE,TITLE,'NO HDR',' ',' ',
&		'NO LEGEND',' ',' ',LINCTL,132,PRTCTL,0,LPSW,RPTNUM,PRTTYP)
	RETURN
;**********************************************************************
EXIT,
	XCALL OUTPT (3,1,2,'\',V)
	XCALL OUTPT (12,20,0,'NO PURGING DONE YET, OK TO PROCEED WITH PURGE?',V)
	CTL = '12,68,01,01,YN'
	CALL INPUT
	XCALL WAIT (4,V)
	IF (INXCTL.EQ.2) GOTO NOPURG
    	KEY1 = 
	KEY2 = 
	LOKCTL = 1
	XCALL ISIO (1,HEADER,KEYPON,READ,LOKCTL)
	GOTO CNTPUR
READIT,
	LOKCTL = 1
	XCALL IOS (1,HEADER,READ,LOKCTL)
CNTPUR,
	IF (LOKCTL.NE.0) GOTO NOPURG
        IF (HPOSTS.EQ.'D')
		BEGIN
		HPOSTS = 'P'
	        LOKCTL = 1
		XCALL ISIO (1,HEADER,PORKEY,WRITE,LOKCTL)
		END
	GOTO READIT
NOPURG,
	XCALL FILES (5,'I',012,4)
INUSE5,
	XCALL FILES (4,'I',011,4)
INUSE4,
	XCALL FILES (3,'I',153,4)
INUSE3,
	XCALL FILES (2,'SI',152,4)
INUSE2,
	XCALL FILES (1,'SU',151,4)
INUSE1,
	IF (INXCTL.EQ.2) XCALL PGCHN ('PO:POSFMN',1)
	XCALL PGCHN ('PO:PRGPUR',1)
;**********************************************************************

END
