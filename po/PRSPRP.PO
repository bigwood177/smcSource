;  PRSPRP / POR - D11
;
;
;
;		HANDLES SPOOLED REPORTS FOR THE PO & R SYSTEM
;
;
RECORD MESARA
		,A123
	DFPRT	,D1
	COMNAM	,A3
		,A9
RECORD SPLDIR	,X
	SPLDEV	,A3
		,A1
	SPNAME	,A2
	SPTERM	,A2
	SPSEQ	,A2
		,A1
	SPCOMP	,A3
	SPDATE	,A9
	SPTIME	,A5
	SPPAGS	,D3
RECORD	,X
	SPLREC	,D3
		,A1
	SPLDEL	,A2
RECORD	,X
	SPLNAM	,A14
RECORD BRACKS
		,A31,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
RECORD TITLES
		,A31,'1PURCHASE ORDER EDIT LIST      '
		,A31,'2SCHEDULED RECEIPTS REPORT     '
		,A31,'3RECEIPTS AUDIT TRAIL REPORT   '
		,A31,'4VENDOR ITEM REPORT            '
		,A31,'5COMMODITY CODE VENDOR REPORT  '
		,A31,'6VENDOR PERFORMANCE ANALYSIS   '
		,A31,'7P/O TABLES LISTING            '
		,A31,'8VENDOR LISTING                '
		,A31,'9PURCHASE ORDER PURGE REGISTER '
		,A31,'ARECEIVING REPORT BY ITEM      '
		,A31,'BVARIANCE REPORT BY ITEM       '
		,A31,'CDAILY P/O ENTRY REPORT        '
		,A31,'DP/O HISTORY REPORT BY ITEM    '
		,A31,'EON ORDER DOLLARS AGED BY ITEM '
		,A31,'FSTOCK STATUS ALLOCATION REPORT'
		,A31,'GINVENTORY USAGE REPORT        '
RECORD	,X
	RPTNAM	,16A31			;(004) was 9
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD DSPLIN
		,A1
	TAGLIT	,A5,'   . '
	DSPTIT	,A30
		,A2
	DSPTRM	,A2
		,A4
	DSPSEQ	,A2
		,A3
	DSPDAT	,A9
		,A2
	DSPTIM	,A5
		,A2
	DSPPGS	,A3
		,A2
	DSPDEV	,A3
RECORD
	ACHAR	,A1
	ARYEND	,D3
	ARYPNT	,D3
	BLANKS	,A3
	CTLL	,D3,	012
	COMCOD	,A3
	DEFPRT	,D1
	DELNAM	,A14
	DSPCNT	,D3
	DSPROW	,D2
	ENTRY	,A4
	FORMFD	,A1
	FUNCTN	,A1
	I	,D2
	INXCTL	,D1
	J	,D2
	KTERMN	,D2
	LOKCTL	,D1
	NOABRT	,D1,	1
	PAGSKP	,D3
	PAGEND	,D3	;(001)
	PAGTOT	,D3	;(001)
	PROGNM	,A9,	'PO:POSFMN'
;;	PRTARR	,4A3,	'LQ:','LR:','LS:','LP:'
	PRTARR	,4A7	,'MFG_P1:','MFG_P2:','ACC_P1:','MFG_P3:'
	PRTNUM	,D1
	RDCNT	,D3
	READ	,D1,	0
	RECNO	,D3,	001
	REMOVE	,D1
	RPTNUM	,D3
	RPTPNT	,D3
	SCARAY	,200D3
	SCRNI	,D2
	SPLCNT	,D3
	SYSTYP	,A1,	'N'
	TBLEND	,D2,	16				;(004) was 9
	TERMNO	,D2
	TITLE	,A31
	V	,D1
	WRTCNT	,D3
	WRITE	,D1,	1
PROC 
	XCALL TNMBR(TERMNO)
	XCALL ASCII(CTLL,FORMFD)
	XCALL TERID(V)
	V = 1
	ON ERROR NODIR
	OPEN (1,I,'UT:SPLDIR')
	OFF ERROR
	OPEN (13,I,'UT:MESARA')
	ON ERROR READMS
READMS,
	LOKCTL = NOABRT
	KTERMN = TERMNO + 1
	XCALL IO (13,MESARA,KTERMN,READ,LOKCTL)
	OFF ERROR
	CLOSE 13
	DEFPRT = DFPRT
	COMCOD = COMNAM
	LOKCTL = NOABRT
	XCALL IO (1,SPLDIR,1,READ,LOKCTL)
	SPLCNT = SPLREC
DISPLA,
	XCALL OUTPT(1,1,2,'PRINT SPOOLED REPORTS - ',1)
	XCALL OUTPT(0,0,0,'PURCHASE ORDER & RECEIVING',1)
	XCALL OUTPT(3,7,0,'REPORT TITLE',1)
	XCALL OUTPT(3,38,0,'TRM#  SEQ#    DATE     TIME  PAGES DEV',1)
	SCRNI =
	SCARAY (1,600) =
	ARYPNT =
	RECNO = 1
	CALL SETUP
	IF (ARYEND.EQ.0) GO TO NOFILS
	CALL NXTSCN
SELECT,
	CTL = '24,00,03,00,NX'
	XCALL OUTPT(24,1,1,'SELECT REPORT',1)
	IF (ARYPNT.LT.ARYEND) XCALL OUTPT(0,0,0,' OR (CR) FOR NEXT SCREEN',1)
	IF (SCRNI.GT.1) XCALL OUTPT(0,0,0,' OR (TAB) FOR PREVIOUS SCREEN',1)
	COL = 16
	IF (ARYPNT.LT.ARYEND) COL = COL + 24
	IF (SCRNI.GT.1) COL = COL + 29
	CALL INPUT
	GO TO (SELECT,END,SETPRV), INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO SETNXT
	RPTNUM = ENTRY (1,3)
	IF (RPTNUM.GT.ARYPNT) GO TO SELECT
	IF (RPTNUM.LT.(SCRNI-1)*16+1) GO TO SELECT
	RPTPNT = SCARAY (RPTNUM)
	LOKCTL = NOABRT
	XCALL IO (1,SPLDIR,RPTPNT,READ,LOKCTL)
	ON ERROR NORPT
	OPEN (2,I,SPLNAM)
	OFF ERROR
	CLOSE 2
	DSPROW = RPTNUM - (SCRNI - 1)*16 + 4
	XCALL OUTPT(DSPROW,78,0,'***',V)
FUNCT,
	XCALL OUTPT(24,1,1,'(P)=PRINT   (D)=DELETE',1)
	CTL = '24,25,01,01,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	FUNCTN = ENTRY(1,1)
	IF (FUNCTN.NE.'P'.AND.FUNCTN.NE.'D') GO TO FUNCT
	IF (FUNCTN.EQ.'D') GO TO DELETE
SPAGE,
	XCALL OUTPT(24,30,0,'STARTING PAGE #',1)
	CTL = '24,47,03,00,# '
	CALL INPUT
	GO TO (FUNCT), INXCTL
;;	XCALL OUTPT(24,1,1,'\',1)
	PAGSKP = ENTRY (1,3)
	PAGSKP = PAGSKP - 1

;;;; (001) add ending page number ;;;;
EPAGE,
	XCALL OUTPT(24,55,0,'ENDING PAGE #',1)
	CTL = '24,70,03,00,# '
	CALL INPUT
	GO TO (SPAGE), INXCTL
	XCALL OUTPT(24,1,1,'\',1)
	PAGEND = ENTRY (1,3)
	IF (PAGEND.EQ.0) PAGEND = 999
	XCALL OUTPT(24,70,0,PAGEND,V)
;;;; end of change (001) ;;;;

OPEN,
	ENTRY(1,1) = DEFPRT
	PRTNUM = DEFPRT
	XCALL OUTPT (24,1,1,'ENTER NUMBER OF PRINTER TO USE',1)
	CTL = '24,33,01,01,# '
	CALL INPUT
	GO TO (EPAGE), INXCTL
	PRTNUM = ENTRY
	IF (PRTNUM.LT.1.OR.PRTNUM.GT.4) GO TO OPEN
OPEN1,
	ON ERROR NOPRTR
	CLOSE 14
	OPEN (14,O,PRTARR(PRTNUM))
	DISPLAY (14,13,7)
	CLOSE 14
	OPEN (14,O,PRTARR(PRTNUM))
	OFF ERROR
	GO TO OPEND
NOPRTR,
	DEFPRT = 0
	XCALL OUTPT (24,1,1,'PRINTER NOT AVAILABLE - TRY AGAIN ?',1)
	CTL = '24,38,01,01,YN'
	CALL INPUT
	GO TO (OPEN,SELECT), INXCTL
OPEND,
	OPEN (2,I,SPLNAM)
	PAGTOT = 0		;(001)
	ON ERROR ENDPRT
	IF (PAGSKP.LT.1) GO TO PRINT
	XCALL OUTPT(24,1,1,'SKIPPING PAGES',1)
SKPLP,
	ACCEPT(2,ACHAR)
	IF (ACHAR.NE.FORMFD) GO TO SKPLP
	PAGTOT = PAGTOT + 1	;(001)
	PAGSKP = PAGSKP - 1
	IF (PAGSKP.GT.0) GO TO SKPLP
PRINT,
	XCALL OUTPT(24,1,1,'PRINTING ...',1)
PRNTLP,
	ACCEPT (2,ACHAR)
	DISPLAY (14,ACHAR)

;;;;(001) Check for ending page number
	IF (PAGEND.LT.1) GOTO PRNTLP
	IF (ACHAR.EQ.FORMFD) PAGTOT = PAGTOT + 1
	IF (PAGTOT.EQ.PAGEND) GOTO ENDPRT
;;;; end of change

	GO TO PRNTLP
ENDPRT,
	OFF ERROR
	CLOSE 14
	CLOSE 2
	XCALL MESAG('PRINT-OUT DONE',2)
	XCALL OUTPT(DSPROW,78,0,'   ',V)
	GO TO SELECT
SETNXT,
	IF (ARYPNT.GE.ARYEND) GO TO SELECT
	CALL NXTSCN
	GO TO SELECT
SETPRV,
	IF (SCRNI.LE.1) GO TO SELECT
	SCRNI = SCRNI - 2
	ARYPNT = ARYPNT - DSPCNT - 16
	CALL NXTSCN
	GO TO SELECT
DELETE,
	XCALL OUTPT(0,0,0,'  ARE YOU SURE ?',1)
	CTL = '24,44,01,01,YN'
	CALL INPUT
	GO TO (SELECT), INXCTL - 1
DELET2,
	CLOSE 1
	OPEN (1,U,'UT:SPLDIR')
	ON ERROR LOCKED
LOCKED,
	LOKCTL = NOABRT
	XCALL IO (1,SPLDIR,RPTPNT,READ,LOKCTL)
	DELNAM = SPLNAM
	SPLDEL = '00'
	LOKCTL = NOABRT
	XCALL IO (1,SPLDIR,RPTPNT,WRITE,LOKCTL)
	OFF ERROR
	CLOSE 1
	GO TO (OPNDIR), REMOVE
	XCALL DELET(2,DELNAM)
	XCALL MESAG('REPORT DELETED',2)
OPNDIR,
	OPEN (1,I,'UT:SPLDIR')
	GO TO DISPLA
SETUP,
	INCR RECNO
	IF (RECNO.GT.SPLCNT) GO TO SETEND
	LOKCTL = NOABRT
	XCALL IO (1,SPLDIR,RECNO,READ,LOKCTL)
	IF (SPCOMP.NE.COMCOD) GO TO SETUP
	IF (SPNAME(1,1).NE.SYSTYP) GO TO SETUP
	IF (SPLDEL.EQ.'00') GO TO SETUP
	INCR ARYPNT
	SCARAY (ARYPNT) = RECNO
	GO TO SETUP
SETEND,
	ARYEND = ARYPNT
	ARYPNT =
	RETURN
NOFILS,
	XCALL MESAG('NO MORE SPOOLED REPORTS',1)
	GO TO END
NORPT,
	OFF ERROR
	REMOVE =
	XCALL OUTPT(24,1,1,'REPORT NOT FOUND - REMOVE FROM LIST ?',1)
	CTL = '24,40,01,01,YN'
	CALL INPUT
	GO TO (SELECT), INXCTL - 1
	REMOVE = 1
	GO TO DELET2
NXTSCN,
	IF (ARYPNT.GE.ARYEND) GO TO NOFILS
	INCR SCRNI
	XCALL OUTPT(5,1,2,'\',1)
	DSPCNT =
NXTLP,
	INCR ARYPNT
	IF (ARYPNT.GT.ARYEND) GO TO RETNXT
	RECNO = SCARAY (ARYPNT)
	LOKCTL = NOABRT
	XCALL IO (1,SPLDIR,RECNO,READ,LOKCTL)
	INCR DSPCNT
	CALL DSPLIN
	IF (DSPCNT.EQ.16) RETURN
	GO TO NXTLP
RETNXT,
	ARYPNT = ARYPNT - 1
	RETURN
DSPLIN,
	CALL FNDTIT
	TAGLIT (1,3) = (SCRNI - 1)*16 + DSPCNT,'ZZX'
	ROW = DSPCNT + 4
	DSPTIT = TITLE (2,31)
	DSPTRM = SPTERM
	DSPSEQ = SPSEQ
	DSPDAT = SPDATE
	DSPTIM = SPTIME
	DSPPGS = SPPAGS
	DSPDEV = SPLDEV
	XCALL OUTPT(ROW,1,1,DSPLIN,1)
	RETURN
FNDTIT,
	J =
FNDLP,
	INCR J
	IF (J.GT.TBLEND) GO TO FNDLP2
	IF (RPTNAM(J).NE.SPNAME(2,2)) GO TO FNDLP
	TITLE = RPTNAM (J)
	RETURN
FNDLP2,
	TITLE = '** NO TITLE *'
	RETURN
NODIR,
	XCALL MESAG('SPOOLER DIRECTORY NOT FOUND',1)
	GO TO END
END,
	XCALL WATE(3,V)
	CLOSE 1
	OPEN (1,U,'UT:SPLDIR')
	RDCNT = 1
	WRTCNT = 1
	LOKCTL = NOABRT
	XCALL IO (1,SPLDIR,1,READ,LOKCTL)
	RECNO = SPLREC
PRGLP,
	INCR RDCNT
	IF (RDCNT.GT.RECNO) GO TO END2
	LOKCTL = NOABRT
	XCALL IO (1,SPLDIR,RDCNT,READ,LOKCTL)
	IF (SPLDEL.EQ.'00') GO TO PRGLP
	INCR WRTCNT
	LOKCTL = NOABRT
	XCALL IO (1,SPLDIR,WRTCNT,WRITE,LOKCTL)
	GO TO PRGLP
END2,
	LOKCTL = NOABRT
	XCALL IO (1,SPLDIR,1,READ,LOKCTL)
	SPLREC = WRTCNT
	LOKCTL = NOABRT
	XCALL IO (1,SPLDIR,1,WRITE,LOKCTL)
BRACKS,
	INCR WRTCNT
	IF (WRTCNT.GT.RECNO) GO TO END3
	LOKCTL = NOABRT
	XCALL IO (1,BRACKS,WRTCNT,WRITE,LOKCTL)
	GO TO BRACKS
END3,
	CLOSE 1
	XCALL PGCHN(PROGNM,1)
INPUT,
	XCALL INPUT(ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN

END

