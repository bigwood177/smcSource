; "PO" SPECIFIC.
;10-OCT-01 SSQ: Changed to "POPOP.PO"  added pg_up, pg_dn capability.
;
;POPOP.DBL
;		AUTHOR: SHERWOOD S. QUIRING
;		POPUP WINDOW ROUTINE
;
SUBROUTINE	POPOP
	POPAR	,A		;POP UP WINDOW DATA
	
	.INCLUDE 'DEF:WINDOWS.DEF'

RECORD	POPARA
	.INCLUDE 'DEF:poPOP.DEF'

RECORD	FUNKEY
	.INCLUDE 'DEF:FUNKEY.DEF'

RECORD	WRKLIN
	ARO	,A1
		,A1
	REST	,A80

RECORD	VARS
	STAT	,D1
	STAT_KEY	,D3
	R_ADD	,A75
	WND_2	,D4
	W2_ID	,A8
	DEC	,D6
	ALPHA	,A3
	WHDR	,A80
	F_KEY	,D3
	I	,D5
	VAL	,D1
	WROW	,D2
	WCOL	,D2
	FIRST_ROW	,D2
	LAST_ROW	,D2
	SAVE_ROW	,D2
	X	,D2
	Y	,D2
	HT	,D2
	LN	,D2
	MAXROW	,D2
	WLEN	,D2
	TITLEN	,D2
PROC
	POPARA = POPAR		;POP UP DATA

	CALL DSPWND		;DISPLAY WINDOW

	CLEAR VAL
	CLEAR SAVE_ROW
	FIRST_ROW = 2
	WROW = 2
	I = 1
	CALL DSPLIN

DSPLOP,
	IF (SAVE_ROW .NE. 0)	CALL CLEAR_LAST_LINE

	WROW = WROW + VAL
	IF (WROW .GT. LAST_ROW) CALL SCROLL_DN
	IF (WROW .LT. FIRST_ROW) CALL SCROLL_UP

	I = I + VAL
	IF (I .LE. 0) I = 1
	IF (I .GT. PNUMARA) I = PNUMARA

	CALL DSPLIN
	CALL INPUT
	USING F_KEY SELECT
	(EXIT_KEY),	BEGIN
			CLEAR PPI
			CLEAR PP_ACTION
			END
	(UP_ARO),	BEGIN
			VAL = - 1
			GOTO DSPLOP
			END
	(DN_ARO),	BEGIN
			VAL =  1
			GOTO DSPLOP
			END
	(RGHT_ARO),	BEGIN
			PP_ACTION = 1
			PPI = I		;SAVE SELECTED ARRAY EL.
			PPFLAGS(I) = 1
			END
	(LEFT_ARO),	BEGIN
			PPFLAGS(I) = 0
			GOTO DSPLOP
			END
	(CR_KEY),	BEGIN
			PP_ACTION = 4	;next page
			PPI = I		;SAVE SELECTED ARRAY EL.
			END
	(PAGE_UP),	BEGIN
			PP_ACTION = 5	;prev page
			END
	(PAGE_DN),	BEGIN
			PP_ACTION = 6	;next page
			END

	ENDUSING
	
	POPAR = POPARA		;POP UP DATA

	XCALL W_DISP (PPOP_WND,WD_ATTR,ATTR_CLR)
	XCALL W_UPDT
	XCALL W_PROC(WP_DELETE,PPOP_WND)
	XCALL W_PROC(WP_DELETE,WND_2)
	RETURN

DSPLIN,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; move arrow, highlight selected line
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	ARO = '>'
	REST = PPARRY(I)
	XCALL W_DISP (PPOP_WND,WD_ATTR,ATTR_SET+ATTR_RVRS)
	XCALL W_DISP (PPOP_WND,WD_POS,WROW,1,WRKLIN(1,WLEN))
	XCALL W_DISP (PPOP_WND,WD_POS,WROW,1)

	R_ADD = PP_ADD(I)
	XCALL W_DISP (WND_2,WD_POS,1,1,R_ADD(1,25) )
	XCALL W_DISP (WND_2,WD_POS,2,1,R_ADD(26,46) )
	XCALL W_DISP (WND_2,WD_POS,3,1,R_ADD(47,75) )
	SAVE_ROW = WROW
	RETURN
;----------------------------------------------------------------------

CLEAR_LAST_LINE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
			;;; CLEAR HI-LITE ON PREV LINE
			;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR ARO
	IF (I.GT.0)
		BEGIN
	;;;	IF (PPFLAGS(I).EQ.1)
	;;;	THEN	WRKLIN(WLEN,WLEN) = '*'
	;;;	ELSE	CLEAR WRKLIN(WLEN,WLEN)
		PPARRY(I) = REST(1,WLEN)
		END
	XCALL W_DISP (PPOP_WND,WD_ATTR,ATTR_CLR+ATTR_RVRS)
	XCALL W_DISP (PPOP_WND,WD_POS,SAVE_ROW,1,WRKLIN(1,WLEN))
	RETURN
;----------------------------------------------------------------------
INPUT,	;;;;;;;;;;;;;;;;;;;;;;;
	;;; FUNCTION KEY INPUT
	;;;;;;;;;;;;;;;;;;;;;;;

	XCALL W_DISP(PPOP_WND,WD_ACCEPT,STAT_KEY)
	XCALL TTSTS(STAT)
	IF (STAT) 
	THEN	XCALL W_DISP(PPOP_WND,WD_ACCEPT,F_KEY)
	ELSE	F_KEY = STAT_KEY

	CASE F_KEY OF
	BEGINCASE
	079:	F_KEY = 027
	133:	F_KEY = 027
	008:	F_KEY = 027		;<BS>
	010:	F_KEY = 013		;<CR>
	ENDCASE

	RETURN

GETCHR,	
	XCALL W_DISP(PPOP_WND,WD_ACCEPT,ALPHA)
	XCALL DECML (ALPHA, DEC)
	RETURN

;----------------------------------------------------------------------

;;; WINDOW SCROLLING ROUTINES
SCROLL_DN,
	WROW = LAST_ROW
	IF (I .EQ. PNUMARA) RETURN
	XCALL W_AREA(PPOP_WND,WA_SCROLL,WAS_UP,1)
	XCALL W_DISP(PPOP_WND,WD_POS,1,1,WD_CLR,WDC_EOL )
	XCALL W_DISP(PPOP_WND,WD_POS,1,1,WHDR(1,PPLEN) )
	RETURN

SCROLL_UP,
	WROW = FIRST_ROW
	IF (I .EQ. 1) RETURN
	XCALL W_AREA(PPOP_WND,WA_SCROLL,WAS_DOWN,1)
	XCALL W_DISP(PPOP_WND,WD_POS,1,1,WD_CLR,WDC_EOL )
	XCALL W_DISP(PPOP_WND,WD_POS,1,1,WHDR(1,PPLEN) )
	RETURN
;--------------------------

DSPWND,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; DISPLAY WINDOW, FILL W/ DATA
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; determine height & length of window, x & y coordinates
;;; to center window on screen.
	LAST_ROW = PNUMROW + 1
	IF (PNUMROW .GT. PNUMARA) LAST_ROW = PNUMARA + 1
	HT = LAST_ROW		;HEIGHT OF WINDOW, LEAVE ROOM FOR HEADER
	LN = PPLEN + 2		;LENGHT OF WINDOW
	
	LN = LN + 1		;FOR "*"

	WHDR = PDLINE

	IF (PWX .LE. 0)
	THEN	X = (24-HT)/2		;X CO-ORDINATE
	ELSE	X = PWX
	IF (PWY .LE. 0)
	THEN	Y = (80-LN)/2		;Y CO-ORDINATE
	ELSE 	Y = PWY

;;; place window...
	XCALL W_PROC(WP_FIND,PPOP_WND,PPOP_WID)
	IF (.NOT. PPOP_WND) XCALL W_PROC(WP_CREATE,PPOP_WND,PPOP_WID,HT,LN)
	TITLEN = %TRIM(PPOP_TITLE)
	IF (TITLEN .GT.0)
&	 XCALL W_BRDR(PPOP_WND,WB_TITLE,PPOP_TITLE(1,TITLEN),WB_TPOS,WBT_TOP,WBT_CENTER)
	XCALL W_PROC(WP_PLACE,PPOP_WND,X,Y)
	XCALL W_DISP(PPOP_WND,WD_CLEAR)
	XCALL W_DISP (PPOP_WND,WD_ATTR,ATTR_CLR+ATTR_RVRS)
	XCALL W_DISP(PPOP_WND,WD_POS,1,1,WHDR(1,PPLEN) )

;;; fill window w/ data...
	CLEAR ARO
	WLEN = LN
	WROW = 1
	FOR I FROM 1 THRU LAST_ROW-1
		BEGIN
		INCR WROW
		PDLINE = PPARRY(I)
		REST = PDLINE(1,PPLEN)
		XCALL W_DISP(PPOP_WND,WD_POS,WROW,1,WRKLIN(1,WLEN) )
		END

;; create a 2nd window for address data...
;;; place window...
	W2_ID = PPOP_WID
	W2_ID(1,5) = 'POPAD'
	XCALL W_PROC(WP_FIND,WND_2,W2_ID)
	IF (.NOT. WND_2) XCALL W_PROC(WP_CREATE,WND_2,W2_ID,4,25)
	XCALL W_PROC(WP_PLACE,WND_2,X,Y+LN+2)
	XCALL W_DISP(WND_2,WD_CLEAR)

	RETURN
;---------------------------------------------------------------------

