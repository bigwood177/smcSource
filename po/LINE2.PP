SUBROUTINE LINE2 ; (POHEDR,OPT,EXITSW,UPDSW)
	POHEDR	,A
	OPT	,D	;OPTION SWITCH IS SET TO :
			;	1 - ADD RELEASE OF BLANKET P/O
			;	2 - CHANGE/INQUIRE RELEASE OF BLANKET P/O LINE
	EXITSW	,D	;EXIT SWITCH IS SET TO :
			;	0 - USER DOES NOT WISH TO EXIT
			;	1 - USER DOES WISHES TO EXIT
	UPDSW	,D	;UPDATE SWITCH IS SET TO :
			;	0 - DON'T UPDATE PORNXF FILE (TERMINAL PO ENTRY)
			;	1 - UPDATE PORNXF FILE (REGULAR PO ENTRY)
RECORD HEADER
	.INCLUDE 'DEF:RD151A.DEF'

RECORD POLINE
	.INCLUDE 'DEF:RD152A.DEF'

RECORD PORNXF
	.INCLUDE 'DEF:RD242A.DEF'		;(01)

RECORD KLINE
	KPONUM	,D6	;P/O NUMBER
	KRLNUM	,D2	;RELEASE NUMBER  (00 FOR NORMAL & BLANKET PO'S)
	KLINNO	,D3	;LINE NUMBER  (XXX)
	KITMNO	,A15	;ITEM NUMBER   (]]]DEL)
	KITMDS	,A30	;ITEM DESCRIPTION
	KITMCC	,A4	;ITEM COMMODITY CODE
	KITMUM	,A2	;ITEM PURCHASE UNIT OF MEASURE
	KVITMN	,A20	;VENDOR'S ITEM NUMBER
	KJOBNO	,A6	;JOB NUMBER  (XXXXXX)
	KEXCST	,D10	;EXPECTED COST PER UNIT  (XXX,XXX.XXXX)
	KACCST	,D10	;ACTUAL COST PER UNIT  (XXX,XXX.XXXX)
	KBLKTP	,A1	;BLANKET QUANTITY TYPE CODE  (F=FIRM, E=ESTIMATED,
			;--                M=MAXIMUM, N=MINIMUM)
	KQTYCG	,D1	;QUANTITY ORDERED CHANGE CODE  (1=CHANGE, 0=NO CHANGE)
	KQTYOR	,D6	;QUANTITY ORDERED  (XXX,XXX)
	KQTYRC	,D6	;QUANTITY RECEIVED  (XXX,XXX)
			;-- FOR BKANKET PO, LQTYRC IS QUANTITY RELEASED.
	KQTYRJ	,D6	;QUANTITY REJECTED  (XXX,XXX)
			;-- FOR BKANKET PO, LQTYRJ IS QUANTITY RECEIVED.
	KDTECG	,D1	;DATE REQUESTED CHANGE CODE  (1=CHANGE, 0=NO CHANGE)
	KDTERQ	,D6	;DATE REQUESTED  (MM/DD/YY)
	KDTEPM	,D6	;DATE PROMISED  (MM/DD/YY)
	KDTERC	,D6	;DATE RECEIVED  (MM/DD/YY)
	KNOTIF	,A3	;NOTIFY
	KMOVET	,A3	;MOVE TO
	KRCVER	,A3	;RECEIVER/INSPECTOR
	KREJCD	,A2	;REJECT REASON CODE  (SEE TABLE 7)
	KCXCDE	,A1	;CHANGE/CANCEL CODE  (N=NO CHANGE, C=CHANGE, X=CANCEL)
	KINSTS	,A1	;LINE STATUS  (N=NEW, P=PRINTED, R=RECEIVED, I=INVOICED,
			;--            C=CKOSED, X=CANCELLED)
	KPONCD	,2A2	;P/O NOTE CODES
	KPONTE	,4A30	;P/O NOTES
	KQTYIV	,D6	;INVOICE QUANTITY RECEIVED  (XXX,XXX)
	KDINVC	,D8	;DOLLARS INVOICED  (XXX,XXX.XX)
	KQTYHD	,D6	;QUANTITY HOLD  (XXX,XXX)
	KITCAT	,A2	;PRODUCT CAT
	KNOSTD	,D1	;1 = NON ITEM (ITEM NOT IN MASTER FILE)
		,A12	;UNUSED

RECORD TABLE	
	.INCLUDE 'DEF:RD153A.DEF'

RECORD VENIDX
	.INCLUDE 'DEF:RD012A.DEF'

RECORD TBLCTL	
	.INCLUDE 'DEF:RD153B.DEF'

RECORD ITMMAS		
	.INCLUDE 'DEF:RD041A.DEF'

RECORD ITMCTL		
	.INCLUDE 'DEF:RD041B.DEF'

RECORD ITMIDX	
	.INCLUDE 'DEF:RD042A.DEF'


RECORD VIPART
	IPART	,A15		; INVENTORY PART #
	IVEN	,D4		; VENDOR #
	VPART	,A15		; VENDOR'S PART #

RECORD DUMVPT
		,A14
	DFL061	,D1
	SFL061	,D1
	ORG061	,D5
	REC061	,D5
	MAX061	,D5
	DEL061	,D3

RECORD VPTIDX
	VPTKEY	,A19
	IRC061	,D5

RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD TBLKEY
	TKEYNO	,D2
	TKEYCD	,A2
	TKEYSQ	,D1

RECORD COMMON
	LOKCTL	,D1
	SWITCH	,D1
	SAVPO	,D6
	SAVRL	,D2
	SAVLIN	,D3
	NOTADD	,D1
	FULL	,D1
	OLDCNT	,D5
	INXCTL	,D1
	CNGCTL	,D1
	WHATNO	,D2
	V	,D1
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	PONUM	,D8
	SRCCTL	,D1
	SRCOPT	,D1
	BSEND	,D5
	BSMID	,D5
	NOTE	,A30
	IOCTL	,D1
	LINEIN	,D3
	ENTRY	,A30
	NEXREC	,D5
	DENTRY	,D8
	LASNUM	,D3
	LINWGT	,D7
	DKEY	,D11
	AKEY	,A5
	KEY	,A19
	QONHND	,D8
	NLOC	,D2
	ALLOC	,D8
	QONORD	,D8
	REORLV	,D8
	WCHLIN	,D5
	AENTRY	,A15
	BLANKS	,A30
	OLDLIN	,A319
	NEXNUM	,D3
	OSWICH	,D1
	NOABRT	,D1,	1
	RJUST	,D1
	AITMNO	,A15
PROC
	XCALL TERID (V)
	V = 1
	HEADER = POHEDR
	LASNUM = HLLNUM
	IF (OPT.EQ.2) LASNUM = 0
BEGIN,
	FULL =
	SWITCH =
	LINWGT =
	CNGCTL=
	KLINE =
	POLINE =
	XCALL OUTPT (1,1,3,'PURCHASE ORDER ENTRY',V)
	IF (OPT.EQ.1) XCALL OUTPT (2,1,0,'ADD P/O LINE',V)
	IF (EXITSW.EQ.2) XCALL OUTPT (2,1,0,'ADD RELEASE OF BLANKET P/O',V)
	IF (OPT.EQ.2) XCALL OUTPT (2,1,0,'CHANGE/INQUIRE P/O LINE',V)
	XCALL OUTPT (2,41,0,'P/O NO',V)
	ENTRY(1,6) = HPONUM,'ZZZZXX'
	XCALL OUTPT (2,52,0,ENTRY(1,6),V)
	XCALL OUTPT (2,58,0,'-',V)
	XCALL OUTPT (2,59,0,HRLNUM,V)
	XCALL OUTPT (4,2,0,'1. LINE NO',V)
	XCALL OUTPT (6,2,0,'2. STATUS',V)
	XCALL OUTPT (8,2,0,'3. CHANGE/CANCEL',V)
	XCALL OUTPT (10,2,0,'4. ITEM NO',V)
	XCALL OUTPT (12,2,0,'5. DESCRIPTION',V)
	XCALL OUTPT (14,2,0,'6. U OF M',V)
	XCALL OUTPT (16,2,0,'7. COMMODITY',V)
	XCALL OUTPT (18,2,0,'8. COST/UNIT',V)
	XCALL OUTPT (20,2,0,'9. VEND ITM #',V)
	XCALL OUTPT (22,1,0,'10. BLANKET TYPE',V)
	XCALL OUTPT (4,37,0,'11. QTY ORD',V)
	XCALL OUTPT (6,37,0,'12. QTY RCV',V)
	XCALL OUTPT (8,37,0,'13. QTY REJ',V)
	XCALL OUTPT (10,37,0,'14. NOTIFY',V)
	XCALL OUTPT (14,37,0,'15. DATE REQ',V)
	XCALL OUTPT (16,37,0,'16. DATE PROM',V)
	XCALL OUTPT (18,37,0,'17. DATE RCVD',V)
	XCALL OUTPT (20,37,0,'18. P/N NO',V)
	XCALL OUTPT (22,37,0,'19. MOVE TO',V)
	XCALL OUTPT (6,63,0,'SHIP-TO LOC',V)
	XCALL OUTPT (8,63,0,'P/O WGT',V)
	XCALL OUTPT (10,63,0,'LIN WGT',V)
	XCALL OUTPT (12,63,0,'ON-HAND',V)
	XCALL OUTPT (14,63,0,'ALLOC',V)
	XCALL OUTPT (16,63,0,'ON-ORDER',V)
	XCALL OUTPT (18,63,0,'RE-ORDER',V)
	LOKCTL = 1
	XCALL IO (7,ITMCTL,1,READ,LOKCTL)
	UNLOCK 7
	RJUST = JSTIFY
	LOKCTL = 1
	XCALL IO (3,TBLCTL,1,READ,LOKCTL)
	UNLOCK 3
	LOKCTL = 1
	XCALL IO (8,DUMVPT,1,READ,LOKCTL)
	UNLOCK 8
	GOTO INPT1

;**********************************************************************
;	SEARCHES FOR A LINE RECORD IN PORLIN
;**********************************************************************

GETLIN,
	DKEY(1,6) = HPONUM
	DKEY(7,8) = HRLNUM
	DKEY(9,11) = LINEIN
	LOKCTL = 1
	XCALL ISIO (2,POLINE,DKEY,READ,LOKCTL)
	RETURN

;**********************************************************************
;	IN CHANGE MODE, FINDS NEXT LINE ON DEFAULT AT LINE NUMBER.
;**********************************************************************

NEXLIN,
	DKEY(1,6) = HPONUM
	DKEY(7,8) = HRLNUM
	LOKCTL = 1
	XCALL ISIO (2,KLINE,DKEY(1,8),READ,LOKCTL)
	IF (LOKCTL.NE.0) GOTO NONE
	NEXNUM = 999
READ,
	LOKCTL = 1
	XCALL IOS (2,KLINE,READ,LOKCTL)
	IF (LOKCTL.NE.0) GOTO GETNXT
	IF (KPONUM.NE.HPONUM) GO TO READ
	IF (KLINNO.LE.LASNUM) GO TO READ
	IF (KLINNO.GT.NEXNUM) GO TO READ
	NEXNUM = KLINNO
	DKEY(1,6) = KPONUM
	DKEY(7,8) = KRLNUM
	DKEY(9,11) = KLINNO
	IF (KLINNO.EQ.LASNUM+1) GO TO GETNXT
	GO TO READ
GETNXT,
	IF (NEXNUM.EQ.999) GO TO CHK999
	LOKCTL = 1
	XCALL ISIO (2,POLINE,DKEY,READ,LOKCTL)
	GO TO OPTN2B
CHK999,
	LINEIN = 999
	CALL GETLIN
	IF (LOKCTL.EQ.0) GOTO OPTN2B
NOLINS,
	XCALL MESAG ('NO MORE LINES FOUND',1)
	LASNUM = 0
	GO TO BEGIN
NONE,
	XCALL MESAG ('NO LINES FOUND. PLEASE RECHECK RELEASE NUMBER.',1)
	GO TO BEGIN


;**********************************************************************
;	IN ADD MODE, FIND NEXT BLANKET ORDER LINE WHICH HAS NOT
;	YET BEEN ADDED TO THE RELEASE.
;**********************************************************************
ADDNEX,
	DKEY(1,6) = HPONUM
	DKEY(7,8) = 00
	SWITCH = 0
	LOKCTL = 1
	XCALL ISIO (2,KLINE,DKEY(1,8),READ,LOKCTL)
	NEXNUM = 999
	IF (LOKCTL.NE.0) GOTO NOBLNS
	GOTO READ2A
READ2,
	LOKCTL = 1
	XCALL IOS (2,KLINE,READ,LOKCTL)
	IF (LOKCTL) GO TO ABORT
READ2A,
	UNLOCK 2
	IF (LOKCTL.NE.0) GOTO GETNX2
	IF (KPONUM.NE.HPONUM) GO TO READ2
	IF (KLINNO.LE.LASNUM) GO TO READ2
	IF (KLINNO.GT.NEXNUM) GO TO READ2
	NEXNUM = KLINNO
	DKEY(1,6) = KPONUM
	DKEY(7,8) = KRLNUM
	DKEY(9,11) = KLINNO
	IF (NEXNUM.EQ.999) SWITCH = 1
	IF (KLINNO.EQ.LASNUM+1) GO TO GETNX2
	GO TO READ2
GETNX2,
	IF (NEXNUM.EQ.999.AND.SWITCH.EQ.0) GO TO NOLIN2
	LOKCTL = 0
	XCALL ISIO (2,POLINE,DKEY,READ,LOKCTL)
	IF (LOKCTL.EQ.1) GO TO ABORT
	LINEIN = NEXNUM
	XCALL OUTPT (4,20,0,LINEIN,V)
	CALL GETLIN
	IF (LOKCTL.NE.0) GO TO CNTOP1
	LASNUM = NEXNUM
	GO TO ADDNEX
NOLIN2,
	XCALL MESAG ('NO MORE BLANKET P/O LINES FOUND.',1)
	LASNUM = 0
	GO TO BEGIN

NOBLNS,
	XCALL MESAG ('THERE ARE NO LINES IN THE BLANKET P/O.',1)
	GO TO BEGIN

;**********************************************************************
INPT1,
	CTL = '04,20,03,00,NE'
	CALL INPUT
	GO TO (BEGIN,ABORT), INXCTL
	LINEIN = ENTRY(1,3)
	IF (OPT.EQ.2) GO TO OPTN2
OPTN1,
	IF (LINEIN.EQ.0) GO TO ADDNEX
	XCALL OUTPT (4,20,0,LINEIN,V)
	CALL GETLIN
	GO TO (CNTOP1,ABORT),LOKCTL
	XCALL MESAG ('LINE HAS ALREADY BEEN ADDED',1)
	GO TO INPT1

CNTOP1,
	POLINE =
	LASNUM = LINEIN
	DKEY(1,6) = HPONUM
	DKEY(7,8) = 00
	DKEY(9,11) = LINEIN
	LOKCTL = 1
	XCALL ISIO (2,POLINE,DKEY,READ,LOKCTL)
	GO TO (LNAVBL,NOTFND,ABORT),LOKCTL+1
NOTFND,
	XCALL MESAG ('NO CORRESPONDING LINE IN BLANKET P/O',1)
	POLINE =
	LINEIN =
	GO TO INPT1
LNAVBL,
	KLINE = POLINE
	LRLNUM = HRLNUM
	LINSTS = 'N'
	LCXCDE = 'N'
	LQTYRC =
	LQTYRJ =
	LDTEPM =
	LDTERC =
	LQTYOR = KQTYOR - KQTYRC
	KQTYRC = KQTYRC + LQTYOR
	LNOSTD = 0			;(01)
	CALL FNDITM
	LINWGT = LQTYOR*WEIGHT
	HPOWGT = ((HPOWGT*10)+LINWGT)#1
	HLLNUM = LLINNO
	CALL DISPLA
	LBLKTP =
ASKANY,
	XCALL OUTPT (24,1,0,'ANY CHANGE ?',V)
	CTL = '24,14,01,00,AT'
	CALL INPUT
	IF (INXCTL.NE.0) GO TO DONTAD
	IF (ENTRY.EQ.'N'.OR.ENTRY.EQ.BLANKS) GO TO NOTES
	IF (ENTRY.EQ.'Y') GO TO ANYCNG
	GO TO ASKANY
OPTN2,
	IF (LINEIN.EQ.0) GO TO NEXLIN
	CALL GETLIN
	IF (LOKCTL.NE.0) GOTO NONFIL
OPTN2B,
	OLDLIN = POLINE
	LASNUM = LLINNO
	CALL DISPLA
	GO TO ANYCNG
NONFIL,
	POLINE =
	XCALL MESAG ('PURCHASE ORDER LINE NOT ON FILE',1)
	GO TO INPT1
DONTAD,
	ENTRY =
	ENTRY(1,4) = 'LINE'
	ENTRY(6,8) = LINEIN,'XXX'
	ENTRY(10,18) = 'NOT ADDED'
	XCALL MESAG (ENTRY,2)
	IF (INXCTL.EQ.2) GO TO END
	GO TO BEGIN
INPT2,
	IF (OPT.EQ.1) LINSTS = 'N'
INPT3,
	CTL = '08,20,01,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LCXCDE = ENTRY
	IF (LCXCDE.NE.'C'.AND.LCXCDE.NE.'N'.AND.LCXCDE.NE.'X') GO TO INPT3
	IF (HPOSTS.EQ.'P'.AND.(LCXCDE.EQ.'C'.OR.LCXCDE.EQ.'X')) HCXCDE = 'C'
	XCALL OUTPT (08,20,0,LCXCDE,V)
	GO TO ANYCNG
FNDITM,
	LOKCTL = NOABRT
	XCALL IO (7,ITMCTL,1,READ,LOKCTL)
	UNLOCK 7
	BSMID = 1
	SRCCTL = 1
	SRCOPT = 4
	XCALL SERCH
&	(6,ITMIDX,LITMNO,1,15,ORG041,BSMID,SRCCTL,SRCOPT,16,20,0,0,0,0)
	UNLOCK 6
	IF (SRCCTL.EQ.0) GO TO ITMFND
	XCALL MESAG ('ITEM NOT ON FILE',2)
	LNOSTD = 1			;(01)
	RETURN
ITMFND,
	LOKCTL = 1
	XCALL IO (7,ITMMAS,IRC041,READ,LOKCTL)
	UNLOCK 7
	RETURN

INPT8,
	CTL = '18,20,10,00,# '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	XCALL FRMAT (ENTRY,10)
	IF (ENTRY.NE.BLANKS) GO TO CONT8
	AENTRY(1,12) = (LSTCST*100),'ZZZ,ZXX.XXXX'
	LEXCST = LSTCST * 100
	GO TO DISP8
CONT8,
	LEXCST = ENTRY (1,10)
	AENTRY(1,12) = LEXCST,'ZZZ,ZXX.XXXX'
DISP8,
	XCALL OUTPT (18,20,0,AENTRY(1,12),V)
	GO TO (ANYCNG), CNGCTL
INPT9,
	CTL = '20,16,20,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LVITMN = ENTRY
	IF (LVITMN.EQ.BLANKS) CALL VNPART
	IF (SRCCTL) LVITMN = LITMNO
	SRCCTL =
	XCALL OUTPT (20,16,0,LVITMN,V)
	XCALL OUTPT (20,37,0,'18',V)
	GO TO (ANYCNG), CNGCTL

INPT11,
	CTL = '04,52,06,00,# '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	HPOWGT = ((HPOWGT*10)-LINWGT)#1
	KQTYRC = KQTYRC - LQTYOR
	LQTYOR = ENTRY(1,6)
	LINWGT = LQTYOR * WEIGHT
	AENTRY(1,9) = LINWGT,'ZZ,ZXX.XX'
	XCALL OUTPT (10,72,0,AENTRY(1,9),V)
	HPOWGT = ((HPOWGT*10)+LINWGT)#1
	AENTRY(1,8) = HPOWGT,'ZZ,ZXX.X'
	XCALL OUTPT (08,72,0,AENTRY(1,8),V)
	AENTRY(1,7) = LQTYOR,'ZZZ,ZXX'
	XCALL OUTPT (04,52,0,AENTRY(1,7),V)
	KQTYRC = KQTYRC + LQTYOR
	GO TO (ANYCNG), CNGCTL

INPT12,
	CTL = '06,52,06,00,# '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LQTYRC = ENTRY(1,6)
	AENTRY(1,7) = LQTYRC,'ZZZ,ZXX'
	XCALL OUTPT (06,52,0,AENTRY(1,7),V)
	GO TO (ANYCNG), CNGCTL
INPT13,
	CTL = '08,52,06,00,# '
	CALL INPUT
	GO TO (BEGIN),INXCTL
	LQTYRJ = ENTRY(1,6)
	AENTRY(1,7) = LQTYRJ,'ZZZ,ZXX'
	XCALL OUTPT (08,52,0,AENTRY(1,7),V)
	GO TO (ANYCNG), CNGCTL
INPT14,
	CTL = '10,52,03,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (ENTRY.NE.BLANKS) GO TO CONT14
	GO TO DISP14
CONT14,
	LNOTIF = ENTRY
DISP14,
	XCALL OUTPT (10,52,0,LNOTIF,V)
	GO TO (ANYCNG), CNGCTL

INPT15,
	CTL = '14,52,06,00,D '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (ENTRY.EQ.BLANKS) XCALL RDATE (ENTRY(1,6))
	LDTERQ = ENTRY(1,6)
	XCALL DSPLY (06,14,52,LDTERQ,2,V)
	GO TO (ANYCNG), CNGCTL

INPT16,
	CTL = '16,52,06,00,D '
	CALL INPUT
	GO TO (BEGIN),INXCTL
	LDTEPM = ENTRY(1,6)
	XCALL DSPLY (06,16,52,LDTEPM,2,V)
	GO TO (ANYCNG), CNGCTL
INPT17,
	CTL = '18,52,06,00,D '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LDTERC = ENTRY(1,6)
	XCALL DSPLY (06,18,52,LDTERC,2,V)
	GO TO (ANYCNG), CNGCTL

INPT18,
	CTL = '20,52,06,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LJOBNO = ENTRY(1,6)
	GO TO (ANYCNG), CNGCTL

INPT19,
	CTL = '22,52,03,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (ENTRY.NE.BLANKS) GO TO CONT19
	GO TO DISP19
CONT19,
	LMOVET = ENTRY
DISP19,
	XCALL OUTPT (22,52,0,LMOVET,V)
	GO TO (ANYCNG), CNGCTL

;**********************************************************************

ANYCNG,
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (NOTES), CNGCTL + 1
	GO TO (BADCNG,BADCNG,INPT3,BADCNG,BADCNG,BADCNG,BADCNG,INPT8,
&		INPT9,BADCNG,INPT11,INPT12,INPT13,INPT14,INPT15,
&		INPT16,INPT17,INPT18,INPT19), WHATNO

BADCNG,
	CNGCTL = 3
	GO TO ANYCNG

;**********************************************************************


NOTES,
	CALL NTSCRN
	CALL DSNOTS
	GO TO NTECNG
INPT20,
	TABLE =
	IF (CNGCTL.EQ.1) XCALL OUTPT (12,30,1,'\',V)
	CTL = '12,30,02,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO BLNK20
	TBLKEY =
	TKEYCD = ENTRY(1,2)
	CALL NTSRCH
	IF (SRCCTL.EQ.1) XCALL MESAG ('(CODE NOT ON FILE)',V)
	IF (SRCCTL.EQ.1) GO TO INPT20
BLNK20,
	LPONCD(1) = ENTRY(1,2)
	XCALL OUTPT (12,30,0,LPONCD(1),V)
	XCALL OUTPT (12,34,0,TDESC,V)
	GO TO (NTECNG), CNGCTL
	IF (ENTRY.EQ.BLANKS.AND.CNGCTL.EQ.0) GO TO INPT22
INPT21,
	TABLE =
	IF (CNGCTL.EQ.1) XCALL OUTPT (14,30,1,'\',V)
	CTL = '14,30,02,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO BLNK21
	TBLKEY =
	TKEYCD = ENTRY(1,2)
	CALL NTSRCH
	IF (SRCCTL.EQ.1) XCALL MESAG ('(CODE NOT ON FILE)',V)
	IF (SRCCTL.EQ.1) GO TO INPT21
BLNK21,
	LPONCD(2) = ENTRY(1,2)
	XCALL OUTPT (14,30,0,LPONCD(2),V)
	XCALL OUTPT (14,34,0,TDESC,V)
	GO TO (NTECNG), CNGCTL
INPT22,
	CTL = '16,34,30,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LPONTE(1) = ENTRY
	XCALL OUTPT (16,34,0,LPONTE(1),V)
	IF (ENTRY.EQ.BLANKS.AND.CNGCTL.EQ.0) GO TO NTECNG
	GO TO (NTECNG), CNGCTL
INPT23,
	CTL = '18,34,30,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LPONTE(2) = ENTRY
	XCALL OUTPT (18,34,0,LPONTE(2),V)
	IF (ENTRY.EQ.BLANKS.AND.CNGCTL.EQ.0) GO TO NTECNG
	GO TO (NTECNG), CNGCTL
INPT24,
	CTL = '20,34,30,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LPONTE(3) = ENTRY
	XCALL OUTPT (20,34,0,LPONTE(3),V)
	IF (ENTRY.EQ.BLANKS.AND.CNGCTL.EQ.0) GO TO NTECNG
	GO TO (NTECNG), CNGCTL
INPT25,
	CTL = '22,34,30,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LPONTE(4) = ENTRY
	XCALL OUTPT (22,34,0,LPONTE(4),V)
	IF (ENTRY.EQ.BLANKS.AND.CNGCTL.EQ.0) GO TO NTECNG
	GO TO NTECNG

;**********************************************************************
;	SEARCHES FOR NOTES IN THE P/O TABLES
;**********************************************************************

NTSRCH,
	TKEYNO = 6
	BSMID = 1
	SRCCTL = 2
	SRCOPT = 4
	XCALL SERCH (3,TABLE,TBLKEY,1,5,ORG153,BSMID,SRCCTL,SRCOPT,
&			6,11,0,0,0,0)
	UNLOCK 3
	IF (SRCCTL.EQ.1) TABLE =
	RETURN

;**********************************************************************

NTECNG,
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (PROCES), CNGCTL + 1
	GO TO (INPT20,INPT21,INPT22,INPT23,INPT24,INPT25), WHATNO - 19
	CNGCTL = 3
	GO TO NTECNG
;**********************************************************************

CHANGE,
	IF (POLINE.NE.OLDLIN) CALL CHKLIN
	LOKCTL = 1
	XCALL ISIO (2,POLINE,DKEY,WRITE,LOKCTL)
FREBUF,
	UNLOCK 2
	GO TO BEGIN
;*************************************************************************
PROCES,
	XCALL WATE (3,V)
	IF (OPT.EQ.2) GO TO CHANGE
ADD,
	HLLNUM = LLINNO
	IF (HPOSTS.EQ.'P') HCXCDE = 'C'
	LOKCTL = 1
	XCALL ISIO (2,POLINE,POLKEY,STORE,LOKCTL)
;>(01)
	IF (UPDSW.EQ.1)
		BEGIN
		PORPN = LJOBNO
		PORPO = LPONUM
		PORREL = LRLNUM
		PORLNO = LLINNO
		POPART = LITMNO
		LOKCTL = 1
		XCALL ISIO (9,PORNXF,PNXKEY,STORE,LOKCTL)
		END
;<(01)

	LOKCTL = 1
	XCALL ISIO (2,KLINE,DKEY,WRITE,LOKCTL)
	GO TO FREBUF
ABORT,
	EXITSW = 1
END,
	POHEDR = HEADER
	XCALL WATE (3,V)
	RETURN

;**********************************************************************
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN

;**********************************************************************
;	THIS ROUTINE DISPLAYS THE NOTES SCREEN
;**********************************************************************

NTSCRN,
	XCALL OUTPT (1,1,3,'PURCHASE ORDER ENTRY',V)
	IF (OPT.EQ.1) XCALL OUTPT (2,1,0,'ADD P/O LINE',V)
	IF (EXITSW.EQ.2) XCALL OUTPT (2,1,0,'ADD RELEASE OF BLANKET P/O',V)
	IF (OPT.EQ.2) XCALL OUTPT (2,1,0,'CHANGE/INQUIRE P/O LINE',V)
	XCALL OUTPT (06,24,0,'ENTRY SCREEN FOR P/O LINE NOTES',V)
	XCALL OUTPT (08,22,0,'P/O NO',V)
	ENTRY(1,6) = LPONUM,'ZZZZXX'
	XCALL OUTPT (08,32,0,ENTRY(1,6),V)
	XCALL OUTPT (08,38,0,'-',V)
	XCALL OUTPT (08,39,0,LRLNUM,V)
	XCALL OUTPT (08,45,0,'LINE NO',V)
	XCALL OUTPT (08,55,0,LLINNO,V)
	XCALL OUTPT (12,18,0,'20. NOTE 1',V)
	XCALL OUTPT (14,18,0,'21. NOTE 2',V)
	XCALL OUTPT (16,18,0,'22. NOTE 3',V)
	XCALL OUTPT (18,18,0,'23. NOTE 4',V)
	RETURN

;**********************************************************************

DSNOTS,
	IF (LPONCD.EQ.BLANKS) GO TO SCNDNT
	XCALL OUTPT (12,30,0,LPONCD(1),V)
	TBLKEY =
	TKEYCD = LPONCD(1)
	CALL NTSRCH
	IF (SRCCTL.EQ.0) GO TO FOUND1
	IF (LPONCD(1).NE.BLANKS) XCALL OUTPT (12,34,0,'CODE NOT ON FILE',1)
	GO TO SCNDNT
FOUND1,
	XCALL OUTPT (12,34,0,TDESC,V)
SCNDNT,
	IF (LPONCD.EQ.BLANKS) GO TO THRDNT
	XCALL OUTPT (14,30,0,LPONCD(2),V)
	TBLKEY =
	TKEYCD = LPONCD(2)
	CALL NTSRCH
	IF (SRCCTL.EQ.0) GO TO FOUND2
	IF (LPONCD(2).NE.BLANKS) XCALL OUTPT (14,34,0,'CODE NOT ON FILE',1)
	GO TO THRDNT
FOUND2,
	XCALL OUTPT (14,34,0,TDESC,V)
THRDNT,
	XCALL OUTPT (16,34,0,LPONTE(1),V)
	XCALL OUTPT (18,34,0,LPONTE(2),V)
	XCALL OUTPT (20,34,0,LPONTE(3),V)
	XCALL OUTPT (22,34,0,LPONTE(4),V)
	RETURN
;**********************************************************************
;	DISPLAYS THE LINE INFO ON THE SCREEN
;**********************************************************************


DISPLA,
	SRCCTL =
	ITMMAS =
	ITMIDX =
	AENTRY(1,15) = LITMNO
	XCALL SERCH (6,ITMIDX,AENTRY,1,15,ORG041,BSMID,SRCCTL,SRCOPT,16,20,0,0,0,0)
	UNLOCK 6
	IF (SRCCTL.EQ.1) GO TO SKIP
	LOKCTL = 1
	XCALL IO (7,ITMMAS,IRC041,READ,LOKCTL)
	UNLOCK 7
SKIP,
	QONHND =
	QONORD =
	REORLV =
	XCALL OUTPT (04,20,0,LLINNO,V)
	XCALL OUTPT (06,20,0,LINSTS,V)
	XCALL OUTPT (08,20,0,LCXCDE,V)
	AITMNO = LITMNO
	IF (RJUST) XCALL LEFTJ (AITMNO(1,15),15)
	XCALL OUTPT (10,20,0,AITMNO,V)
	XCALL OUTPT (12,20,0,LITMDS,V)
	XCALL OUTPT (14,20,0,LITMUM,V)
	XCALL OUTPT (16,20,0,LITMCC,V)
	AENTRY(1,12) = LEXCST,'ZZZ,ZXX.XXXX'
	XCALL OUTPT (18,20,0,AENTRY(1,12),V)
	XCALL OUTPT (20,16,0,LVITMN,V)
	IF (LBLKTP.EQ.'F') XCALL OUTPT (22,20,0,'FIRM',V)
	IF (LBLKTP.EQ.'E') XCALL OUTPT (22,20,0,'ESTIMATED',V)
	IF (LBLKTP.EQ.'M') XCALL OUTPT (22,20,0,'MAXIMUM',V)
	IF (LBLKTP.EQ.'N') XCALL OUTPT (22,20,0,'MINIMUM',V)
	AENTRY(1,7) = LQTYOR,'ZZZ,ZXX'
	XCALL OUTPT (04,52,0, AENTRY(1,7),V)
	AENTRY(1,7) = LQTYRC,'ZZZ,ZXX'
	XCALL OUTPT (06,52,0,AENTRY(1,7),V)
	AENTRY(1,7) = LQTYRJ,'ZZZ,ZXX'
	XCALL OUTPT (08,52,0,AENTRY(1,7),V)
	XCALL OUTPT (10,52,0,LNOTIF,V)
	XCALL DSPLY (06,14,52,LDTERQ,2,V)
	XCALL DSPLY (06,16,52,LDTEPM,2,V)
	XCALL DSPLY (06,18,52,LDTERC,2,V)
	XCALL OUTPT (20,52,0,LJOBNO,V)
	XCALL OUTPT (22,52,0,LMOVET,V)
	AENTRY(1,8) = HPOWGT,'ZZ,ZXX.X'
	XCALL OUTPT (08,72,0,AENTRY(1,8),V)
	AENTRY(1,9) = LINWGT,'ZZ,ZXX.XX'
	XCALL OUTPT (10,72,0,AENTRY(1,9),V)
LEVELS,
	QONHND =				; ACCUMULATES QTY ALLOCATED
	ALLOC = 				; ACCUMULATES QTY ON-HAND
	NLOC =
; only 1 loc for smc...
FNDLOC,
	QONHND = QTYONH ;;;(NLOC)		; SAME AS MASTER LOCATION THEN
	ALLOC = QTYCOM  ;;;(NLOC)		; SHOW TOTALS FOR SUBSIDIARY
	QONORD = QTYONO ;;;(NLOC)		; LOCATION ONLY
	REORLV = REOLVL ;;;(NLOC)

	XCALL OUTPT (12,20,0,LITMDS,V)
	XCALL OUTPT (14,20,0,LITMUM,V)
	XCALL OUTPT (16,20,0,LITMCC,V)
	XCALL OUTPT (6,76,0,HSHPTO,V)

	AENTRY (1,10) = QONHND,'ZZ,ZZZ,ZXX'
	XCALL OUTPT (12,71,0,AENTRY(1,10),V)
	AENTRY(1,10) = ALLOC,'ZZ,ZZZ,ZXX'
	XCALL OUTPT (14,71,0,AENTRY(1,10),V)
	AENTRY(1,10) = QONORD,'ZZ,ZZZ,ZXX'
	XCALL OUTPT (16,71,0,AENTRY(1,10),V)
	AENTRY(1,10) = REORLV,'ZZ,ZZZ,ZXX'
	XCALL OUTPT (18,71,0,AENTRY(1,10),V)
	RETURN
;**********************************************************************
;	MARKS HEADER AND LINE RECORDS IF ANY CHANGE HAS BEEN MADE TO LINE
;**********************************************************************

CHKLIN,
	IF (LINSTS.EQ.'N'.OR.LINSTS.EQ.'X') RETURN
	IF (HPOSTS.NE.'P') RETURN
	IF (POLINE(66,82).NE.OLDLIN(66,82)) GO TO CNG
	IF (POLINE(89,98).NE.OLDLIN(89,98)) GO TO CNG
	IF (POLINE(111,116).NE.OLDLIN(111,116)) GO TO CNG
	IF (POLINE(130,135).NE.OLDLIN(130,135)) GO TO CNG
	IF (POLINE(161,224).NE.OLDLIN(161,224)) GO TO CNG
	RETURN
CNG,
	HCXCDE = 'C'
	LCXCDE = 'C'
	RETURN

;**********************************************************************
VNPART,
	KEY(1,15) = LITMNO
	KEY(16,19) = HVENDR
	XCALL SERCH (9,VPTIDX,KEY,1,19,ORG061,BSMID,SRCCTL,1,20,24,0,0,0,0)
	UNLOCK 9
	IF (SRCCTL) RETURN
	LOKCTL = 1
	XCALL IO (8,VIPART,IRC061,READ,LOKCTL)
	UNLOCK 8
	LVITMN = VPART
	RETURN
;**********************************************************************

END

