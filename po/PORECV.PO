;PORECV isam
;
;		RECEIPTS ENTRY
;
; 12-18-07 ssq: use itmmas default keys

RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR


RECORD RD143A	
	.INCLUDE 'DEF:RD143A.DEF'

RECORD RD143B
	.INCLUDE 'DEF:RD143B.DEF'

RECORD RD151A	
	.INCLUDE 'DEF:RD151A.DEF'

RECORD RD152A	
	.INCLUDE 'DEF:RD152A.DEF'

RECORD RD153A	
	.INCLUDE 'DEF:RD153A.DEF'

RECORD RD153B	
	.INCLUDE 'DEF:RD153B.DEF'

RECORD RD154A	
	.INCLUDE 'DEF:RD154A.DEF'

RECORD RD041A	
	.INCLUDE 'DEF:RD041A.def'

RECORD RD041B,X	
	.INCLUDE 'DEF:RD041B.def'

RECORD	ITMKEY
	.INCLUDE 'DEF:RD041K.DEF'

RECORD	COPTBL
	.INCLUDE 'DEF:RD182A.DEF'

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;RECORD RD042A		
;;;	.INCLUDE 'DEF:RD042A.DEF'
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

RECORD SUB
	ADDED	,D1
	ARKEYS	,5A15
	ARRECS	,5D5
	ARMAX	,D1,	5
	WKDY1	,D1
	WKDY2	,D1
	TODAY	,D6
	SYSTEM	,D1
	V	,D1
	BSEND	,D5
	SWITCH	,D1
	DECMAL	,D6
	KEY	,A23
	BSMID	,D5
	READ	,D1,	0
	WRITE	,D1,	1
	STORE	,D1,	2
	STPOS1	,D2
	ENPOS1	,D2
	STPOS2	,D2
	ENPOS2	,D2
	NUMDAY	,D3
	WHATNO	,D2
	CNGCTL	,D1
	MSGCTL	,D1
	ENTRY	,A15
	SRCCTL	,D1
	SRCOPT	,D1
	LOKCTL	,D1
	INXCTL	,D1
	CNT	,D2
	ALPHA	,A3
	TT	,D2
	NOSTK	,D1		;(004)

;**********************************************************************

RECORD CLEAR
	TQTYDU	,D6
	TPONUM	,A6
	TRLNUM	,A2
	KCOST	,D10
	TAVCST	,D9
	TDTERC	,D8
	RCVQTY	,D6
	ABRQTY	,D6
	TQTYRC	,D7
	RCVUM	,A2
	COST	,D10
	CSTCOD	,D1
	CSTFMT	,A12
	TRCVER	,A3
	TQTYRJ	,D6
	TREJCD	,A2
	TNWCST	,D10
	REJQTY	,D6

;**********************************************************************

RECORD SHPMSG
		,A14	,'EARLY SHIP BY '
	FMTDIF	,A3
		,A22	,' DAYS.  PLEASE NOTIFY '
	TNOTIF	,A3
		,A27	,' BEFORE ACCEPTING SHIPMENT.'

;**********************************************************************

RECORD OSMSG
		,A12	,'OVERSHIP BY '
	DIFFMT	,A6
		,A15	,' PLEASE NOTIFY '
	NOTIFY	,A3
		,A27	,' BEFORE ACCEPTING SHIPMENT.'

;**********************************************************************

RECORD XLLED
		,A22,	'P/O LINE IS CANCELLED.'
		,A16,	'  PLEASE NOTIFY '
	XNOTIF	,A3
		,A27,	' BEFORE ACCEPTING SHIPMENT.'

;**********************************************************************

RECORD CONTRL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

;**********************************************************************
RECORD LINKEY
	SVPONO	,D8
	TLINNO	,D3

;**********************************************************************
RECORD SKPKEY
	DECI8	,D8
	ALFA15	,A15

;**********************************************************************

RECORD	CHANNEL
	CHN182	,D2

RECORD	VARS
	DF1	,D3
	DF2	,D3
	DF3	,D5
	FIRST	,D1
	BRAKTS	,A20,	']]]]]]]]]]]]]]]]]]]]'
	MATCH	,D8
	DIFF	,D3
	PONFMT	,A6
	LINFMT	,A3
	ITMFMT	,A15
	VITFMT	,A15
	REQFMT	,A7
	REJFMT	,A7
	KDATE	,D8
	RCVFMT	,A7
	MSKSIX	,A7,	'ZZZZZX-'
	LOCTOT	,D2
	NOABRT	,D1,	1
	TOTONH	,D8
	CTR	,D2
	ABOH	,D8
	RECEIV	,D6
	LSTDAT	,D6
	ACTDYS	,D4
	BLANKS	,A20
	EARLY	,D3
	EXPDYS	,D4
	OSDIFF	,D6
	LNNOSW	,D1
	SELECT	,D1
	RECNO	,D5
	RJUST	,D1
	DUMPTR	,D5		;Dummy record pointer for SERCH

;**********************************************************************

PROC
	XCALL TERID (V)

RCVMNU,
	XCALL OUTPT (1,1,2,'RECEIPTS ENTRY',V)
	XCALL OUTPT (5,20,0,'PLEASE SELECT APPLICATION',V)
	XCALL OUTPT (6,25,0,'1. ADD RECEIPTS',V)
	XCALL OUTPT (7,25,0,'2. PRINT RECEIPTS AUDIT TRAIL',V)

MNUSEL,
	CONTRL = '05,47,01,00,#E'
	CALL INPUT
	GO TO (MNUSEL,ENDALL), INXCTL
	SELECT = ENTRY
	IF (SELECT.EQ.0.OR.SELECT.GT.2) GO TO MNUSEL

;**********************************************************************
;OPEN FILES
;**********************************************************************

	IF (SELECT.EQ.1) XCALL OUTPT (2,1,2,'ADD RECEIPTS',1)
	IF (SELECT.EQ.2) XCALL OUTPT (2,1,2,'PRINT RECEIPTS AUDIT TRAIL',1)
	XCALL WATE (4,V)

	SWITCH = 1
	XCALL FILES (1,'SU',154,SWITCH)			;RCVHST FILE - ISAM
	IF (SWITCH.EQ.9) GO TO ENDALL

	IF (SELECT.EQ.2) GO TO PRINT	
	ADDED = 0

	SWITCH = 1
	XCALL FILES (2,'SI',151,SWITCH)		;FILE #151 -- PORHDR FILE
	IF (SWITCH.EQ.9) GO TO CLOSE1

	SWITCH = 1
	XCALL FILES (3,'SU',152,SWITCH)		;FILE #152 -- PORLIN FILE
	IF (SWITCH.EQ.9) GO TO CLOSE2

	SWITCH = 1
	XCALL FILES (4,'U',143,SWITCH)		;FILE #143 -- PORTRX FILE
	IF (SWITCH.EQ.9) GO TO CLOSE3

	LOKCTL = 0
	XCALL IO (4,RD143B,1,READ,LOKCTL)
	IF (LOKCTL.EQ.1) GO TO CLOSE4
	UNLOCK 4

	SWITCH = 1
	XCALL FILES (5,'I',153,SWITCH)		;FILE #153 -- PORTBL FILE
	IF (SWITCH.EQ.9) GO TO CLOSE4

;;;	SWITCH = 1
;;;	XCALL FILES (6,'I',42,SWITCH)		;FILE # 42 -- ITMIDX FILE
;;;	IF (SWITCH.EQ.9) GO TO CLOSE5

	SWITCH = 1
	XCALL FILES (7,'SI',41,SWITCH)		;FILE# 41 -- ITMMAS FILE
	IF (SWITCH.EQ.9) GO TO CLOSE6
	LOKCTL = 1
	
	ITEMNO = '!!!!!!!!!!!!!!!'
	XCALL ISIO (7, RD041A, ITEMNO, READ, LOKCTL)
;;;	XCALL IO (7,RD041B,1,READ,LOKCTL)
	RJUST= JSTIFY
	FIRST = 1

	SWITCH = 5
	XCALL FILES (17, 'SI', 182, SWITCH)	;182 = COPTBL
	CHN182 = 17

;**********************************************************************
;DISPLAY SCREEN
;**********************************************************************
DISPLA,
	CNGCTL =
	CLEAR =
	LNNOSW =
	RD154A =
	RD143A =
	NOSTK = 0					;(004)
	IF (REC143.GE.MAX143) GO TO FULLTX
	XCALL OUTPT (2,1,2,'ADD RECEIPTS',1)
	XCALL OUTPT (2,3,2,'1. PURCHASE ORDER NO',V)
	XCALL OUTPT (2,37,0,'2. LINE NO',V)
	XCALL OUTPT (2,61,0,'P/O U/M',V)
	XCALL OUTPT (3,3,0,'3. ITEM NUMBER',V)
;;;	XCALL OUTPT (4,3,0,'4. VEN-ITEM NO',V)
;;;	XCALL OUTPT (4,40,0,'COMMODITY',V)
;;;	XCALL OUTPT (4,61,0,'JOB NO',V)
	XCALL OUTPT (5,6,0,'DATE REQUESTED',V)
	XCALL OUTPT (5,40,0,'QTY ORD',V)
;;;	XCALL OUTPT (5,61,0,'NOTIFY',V)
	XCALL OUTPT (6,6,0,'DATE PROMISED',V)
	XCALL OUTPT (6,40,0,'QTY DUE',V)
;;;	XCALL OUTPT (6,61,0,'MOVE TO',V)
	XCALL OUTPT (8,3,0,'5. DATE RECEIVED',V)
	XCALL OUTPT (8,37,0,'6. QTY RCV',V)
	XCALL OUTPT (8,58,0,'7. U OF MEASURE',V)
	XCALL OUTPT (9,3,0,'8. COST',V)
;;;	XCALL OUTPT (9,37,0,'9. RECEIVER',V)
	XCALL OUTPT (9,58,0,'10. QTY REJ',V)
	XCALL OUTPT (10,2,0,'11. REJECTION CODE',V)

;**********************************************************************
;ACCEPT P/O # AND IDENTIFY RECORD WITH LINE #, ITEM # OR VEN-ITEM #
;**********************************************************************
IDNTFY,
	CONTRL = '02,25,06,00,AE'
	CALL INPUT
	GO TO (DISPLA,CLOSIT), INXCTL
	IF (ENTRY.EQ.BLANKS.AND.FIRST) GO TO SKIP1
	IF (ENTRY.EQ.BLANKS) GO TO SHOW
	SVPONO(1,6) = ENTRY
	TPONUM = SVPONO(1,6),'ZZZZXX'
	XCALL OUTPT (2,25,0,TPONUM,V)
	XCALL OUTPT (2,31,0,'-',V)

	CONTRL = '02,32,02,00,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	IF (ENTRY.EQ.BLANKS) ENTRY = 00
	SVPONO(7,8) = ENTRY
	TRLNUM = SVPONO(7,8),'XX'
	XCALL OUTPT (2,32,0,TRLNUM,V)
	GO TO REDHDR

SHOW,
	TPONUM = SVPONO(1,6),'ZZZZXX'
	XCALL OUTPT (2,25,0,TPONUM,V)
	XCALL OUTPT (2,31,0,'-',V)
	TRLNUM = SVPONO(7,8),'XX'
	XCALL OUTPT (2,32,0,TRLNUM,V)
REDHDR,
	UNLOCK 2
	RD151A =
	KEY =
	KEY(1,8) = SVPONO,'XXXXXXXX'
	LOKCTL = 1
	XCALL ISIO (2,RD151A,KEY,READ,LOKCTL)
	IF (HPOTYP.EQ.'B') GO TO BLANKT
	IF (LOKCTL.EQ.0) GO TO PORLIN
NOTONF,
	XCALL MESAG ('THIS PURCHASE ORDER IS NOT ON FILE',1)
	GO TO DISPLA

BLANKT,
	XCALL MESAG ('PURCHASE ORDER IS A BLANKET P/O',1)
	GO TO DISPLA

PORLIN,
	UNLOCK 3

NOSKIP,
	FIRST =
	CONTRL = '02,52,03,00,AA'
	CALL INPUT
	GO TO (DISPLA), INXCTL
;;;	IF (ENTRY.EQ.BLANKS) GO TO SKIP1
;;;	LNNOSW = 1
	TLINNO = ENTRY
;;;	XCALL OUTPT (2,52,0,TLINNO,V)
	LOKCTL = 1
	READ (3,RD152A,LINKEY,KRF=0) [ERR=CHKPOL]
;;;	READ (3,RD152A,LINKEY,KRF=0) [EOF=BADPO,KEY=BADPO,ERR=BADPO]
CHKPOL,
	IF (LPONUM .NE. HPONUM) GOTO BADPO
	GO TO FMTPON
BADPO,
	XCALL MESAG ('THIS P/O NO, LINE NO COMBINATION IS NOT ON FILE',1)
	GO TO NOSKIP
SKIP1,
	CONTRL = '03,19,15,00,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO SKIP2
	ALFA15 = ENTRY(1,15)
	IF (RJUST) XCALL FRMAT (ALFA15,15)
	DECI8 = SVPONO
	IF (SVPONO.EQ.0) GO TO SEQ1	;PO # & Line # have been skipped
	READ (3,RD152A,SKPKEY(1,8),KRF=0) [EOF=NOTONF,KEY=NOTONF,ERR=NOTONF]
	GO TO RITONE			;Now search for the Item #

SEQ1,				;Sequentially search for the Item #
;;;	READ (3,RD152A,ALFA15,KRF=2) [EOF=RITONE, KEY=RITONE, ERR=RITONE]
	READ (3,RD152A,ALFA15,KRF=1) [EOF=RITONE, KEY=RITONE, ERR=RITONE]
	IF (LRLNUM.NE.0.OR.LBLKTP.EQ.' ') GO TO FMTPON
	GO TO RITONE

SKIP2,
	CONTRL = '04,19,15,00,A '
	CALL INPUT
	GO TO (DISPLA),INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO DISPLA
	ALFA15 = ENTRY
	DECI8 = SVPONO
	IF (SVPONO.EQ.0) GO TO SEQ2	;PO # & Line # have been skipped
	READ (3,RD152A,SKPKEY(1,8),KRF=0) [EOF=NOTONF,KEY=NOTONF,ERR=NOTONF]
	GO TO RITONE			;Now search for the Vendor Item #

SEQ2,				;Sequentially search for the Vendor Item #
	READ (3,RD152A,ALFA15,KRF=3) [EOF=RITONE, KEY=RITONE, ERR=RITONE]
	IF (LRLNUM.NE.0.OR.LBLKTP.EQ.' ') GO TO FMTPON
	GO TO RITONE

;**********************************************************************
;DISPLAY THE VALUES OF THE FOUND PORLIN RECORD
;**********************************************************************

FMTPON,
	PONFMT = LPONUM,'ZZZZXX'
	XCALL OUTPT (2,25,0,PONFMT,V)
	XCALL OUTPT (2,31,0,'-',V)
	XCALL OUTPT (2,32,0,LRLNUM,V)

VALUES,
	ENTRY(1,3) = LLINNO,'ZZX'
	XCALL OUTPT (2,52,0,ENTRY(1,3),V)
;;;	XCALL OUTPT (2,52,0,LLINNO,V)
	XCALL OUTPT (2,75,0,LITMUM,V)
	ITMFMT = LITMNO
	IF (RJUST)XCALL LEFTJ (ITMFMT(1,15),15)
	XCALL OUTPT (3,19,0,ITMFMT,V)
	XCALL OUTPT (3,40,0,LITMDS,V)
;;;	VITFMT = LVITMN
;;;	XCALL FRMAT (VITFMT,15)
;;;	XCALL OUTPT (4,19,0,VITFMT,V)
;;;	XCALL OUTPT (4,51,0,LITMCC,V)
;;;	XCALL OUTPT (4,71,0,LJOBNO,V)

	XCALL DATE8(LDTERQ, D_OUT, D_OUTR, D_FMT, D_SW)
	XCALL OUTPT (5,26,0,D_FMT,V)
;;;	XCALL DSPLY (6,5,26,LDTERQ,2,V)

	REQFMT = LQTYOR,MSKSIX
	XCALL OUTPT (5,49,0,REQFMT,V)
;;;	XCALL OUTPT (5,74,0,LNOTIF,V)

	XCALL DATE8(LDTEPM, D_OUT, D_OUTR, D_FMT, D_SW)
	XCALL OUTPT (6,26,0,D_FMT,V)
;;;	XCALL DSPLY (6,6,26,LDTEPM,2,V)

	TQTYDU = LQTYOR - LQTYRC
	RCVFMT = TQTYDU,MSKSIX
	XCALL OUTPT (6,49,0,RCVFMT,V)
;;;	XCALL OUTPT (6,74,0,LMOVET,V)

	XCALL OUTPT (12,1,0,'RIGHT ITEM (Y)?',V)
	CONTRL = '12,18,01,00,YY'
	CALL INPUT
	XCALL OUTPT (12,1,1,'\',V)
	GO TO (ADD,RITONE) , INXCTL

RITONE,
	IF (LNNOSW) GO TO DISPLA
	LOKCTL = NOABRT
	XCALL IOS (3,RD152A,READ,LOKCTL)
	IF (LOKCTL.NE.0) GOTO MSG
	IF (SVPONO.EQ.0) GO TO CHECK		;No P/O # was specified
						;sequentially read the PORLIN file
	IF (LPONUM.NE.SVPONO(1,6).AND.LRLNUM.NE.SVPONO(7,8)) GO TO NOTONF
CHECK,

	IF (LRLNUM.EQ.0.AND.LBLKTP.NE.' ') GO TO RITONE
	IF (LITMNO.EQ.ALFA15.OR.LVITMN(1,15).EQ.ALFA15) GO TO FMTPON
	GO TO RITONE
MSG,
 	XCALL MESAG ('ITEM NUMBER IS NOT ON FILE',1)
	GO TO DISPLA

;**********************************************************************
;PRINT THE AUDIT TRAIL OR SERIAL NUMBERS
;**********************************************************************
PRINT,
	XCALL FILES (1,'SU',154,4)
	XCALL PGCHN ('PO:POAUDT',1)
ANYWAY,
	XCALL WATE (4,V)
	XCALL PGCHN ('PO:POAUDT',1)
;**********************************************************************
;ACCEPT DATE RECEIVED AND COMPUTE EARLY SHIP
;**********************************************************************
ADD,
	UNLOCK 2
	KEY =
	RD151A =
	KEY(1,6) = LPONUM,'XXXXXX'
	KEY(7,8) = LRLNUM,'XX'
	READ (2,RD151A,KEY,KRF=0) [EOF=NOTONF, KEY=NOTONF, ERR=NOTONF]
	IF (LINSTS.EQ.'X'.OR.HPOSTS.EQ.'X') GO TO CANMSG
DATRCV,
	IF (CNGCTL) XCALL OUTPT (8,26,0,'        ',V)
	CONTRL = '08,26,08,00,D '
	CALL INPUT
	IF (INXCTL) GO TO DISPLA
	TDTERC = ENTRY
	IF (ENTRY.EQ.BLANKS) XCALL RDAT8 (TDTERC)

;;;	XCALL DSPLY (6,8,26,TDTERC,2,V)
	XCALL DATE8(TDTERC, D_OUT, D_OUTR, D_FMT, D_SW)
	XCALL OUTPT (8,26,0,D_FMT,V)

	KDATE = LDTEPM
	IF (LDTEPM.EQ.0) KDATE = LDTERQ
	XCALL BDATE (TDTERC,HPODTE,WKDY1,WKDY2,NUMDAY)
	ACTDYS = NUMDAY
	XCALL BDATE (KDATE,HPODTE,WKDY1,WKDY2,NUMDAY)
	EXPDYS = NUMDAY
	DIFF = EXPDYS - ACTDYS
	EARLY = (EXPDYS * 1)#2
	IF (DIFF.GT.0.AND.DIFF.GE.EARLY) GO TO SHPMSG
	IF (CNGCTL) GO TO ANYCN1
	GO TO QTYRCV

CANMSG,
	DISPLAY (15,7,7)
	XNOTIF = LNOTIF
	XCALL OUTPT (11,7,2,XLLED,V)
	XCALL OUTPT (12,1,0,'ACCEPT SHIPMENT ?',V)
	CONTRL = '12,20,01,00,YY'
	CALL INPUT
	XCALL OUTPT (11,1,2,'\',V)
	IF (INXCTL.EQ.2) GO TO DISPLA
	GO TO DATRCV

SHPMSG,
	DISPLAY (15,7,7)
	TNOTIF = LNOTIF
	FMTDIF = DIFF,'ZZX'
	XCALL OUTPT (11,7,2,SHPMSG,V)
	XCALL OUTPT (12,1,0,'ACCEPT SHIPMENT ?',V)
	CONTRL = '12,20,01,00,YY'
	CALL INPUT
	XCALL OUTPT (11,1,2,'\',V)
	IF (INXCTL.EQ.2) GO TO DISPLA
	IF (CNGCTL) GO TO ANYCN1
	GO TO QTYRCV

;**********************************************************************
;ACCEPT THE QUANTITY RECEIVED AND THE UNIT OF MEASURE
;**********************************************************************
QTYRCV,
	CONTRL = '08,49,06,00,#-'
	CALL INPUT
	IF (INXCTL) GO TO DISPLA
	IF (ENTRY.EQ.BLANKS.OR.ENTRY.EQ.'0') GO TO RCVMSG
	RCVQTY = ENTRY
	RCVFMT = RCVQTY,MSKSIX
	XCALL OUTPT (8,49,0,RCVFMT,V)
	TQTYRC = LQTYRC + RCVQTY
	IF (TQTYRC.LT.0) GO TO INVMSG
	OSDIFF = TQTYRC - LQTYOR
	DIFFMT = OSDIFF,MSKSIX
;;	IF (OSDIFF.GT.0.AND.OSDIFF.GT.(OVRSHP*LQTYOR)#2) GO TO OSMSG
	IF (OSDIFF.GT.0) GOTO OSMSG
	IF (CNGCTL) GO TO ANYCN1


RCVUM,
	CONTRL = '08,75,02,00,A '
	CALL INPUT
	IF (INXCTL) GO TO DISPLA
	RCVUM = ENTRY
	IF (ENTRY.EQ.BLANKS) RCVUM = LITMUM
	XCALL OUTPT (8,75,0,RCVUM,V)

	IF (RCVUM.NE.LITMUM) GO TO QTYMSG
	IF (CNGCTL) GO TO ANYCN1
	GO TO COST

OSMSG,
	DISPLAY (15,7,7)
	NOTIFY = LNOTIF
	XCALL OUTPT (11,7,2,OSMSG,V)
	XCALL OUTPT (12,1,0,'ACCEPT SHIPMENT ?',V)
	CONTRL = '12,20,01,00,YY'
	CALL INPUT
	XCALL OUTPT (11,1,2,'\',V)
	IF (CNGCTL) GO TO ANYCN1
	GO TO (RCVUM,DISPLA),INXCTL

INVMSG,
	XCALL MESAG ('INVALID ENTRY: OVER CORRECTION',1)
	GO TO QTYRCV

RCVMSG,
	XCALL MESAG ('A POSITIVE OR A NEGATIVE QUANTITY IS REQUIRED',1)
	GO TO QTYRCV
QTYMSG,
	XCALL MESAG ('PLEASE RECOUNT IN UNIT OF MEASURE FROM PURCHASE ORDER',1)
	GO TO QTYRCV

;**********************************************************************
;ACCEPT COST
;**********************************************************************
COST,
	IF (CNGCTL) XCALL OUTPT (9,12,0,'                      ',V)
	XCALL OUTPT (11,15,0,'1 = UNIT COST   2 = TOTAL COST',V)
	CONTRL = '09,12,01,00,# '
	CALL INPUT
	IF (ENTRY.EQ.BLANKS) ENTRY(1,1) = '1'
	CSTCOD = ENTRY
	IF (INXCTL) GO TO DISPLA
	IF (ENTRY.NE.'1'.AND.ENTRY.NE.'2') GO TO COST
	IF (CSTCOD.EQ.1) XCALL OUTPT (9,12,0,'(UNIT)',V)
	IF (CSTCOD.EQ.2) XCALL OUTPT (9,12,0,'(TOTAL)',V)
	XCALL OUTPT (11,1,1,'\',V)

	CSTFMT = LEXCST,'ZZZ,ZZX.XXXX'
	XCALL OUTPT (11,15,0,'EXPECTED COST IS ',V)
	XCALL OUTPT (11,32,0,CSTFMT,V)
	XCALL OUTPT (11,45,0,' (RETURN TO DEFAULT)',V)

	CONTRL = '09,24,10,00,# '
	CALL INPUT
	COST = ENTRY
	IF (INXCTL) GO TO DISPLA
	IF (ENTRY.EQ.BLANKS) COST = LEXCST		;(001)
	CSTFMT = COST,'ZZZ,ZZX.XXXX'
	XCALL OUTPT (9,22,0,CSTFMT,V)
	CALL COMPUT
	XCALL OUTPT (11,1,1,'\',V)			;(001)
	IF (CNGCTL) GO TO ANYCN1

;;;	GO TO RCVER
;;;DEFOLT,
;;;	COST =
;;;	CSTFMT = COST,'ZZZ,ZZX.XXXX'
;;;	XCALL OUTPT (9,22,0,CSTFMT,V)
;;;	XCALL OUTPT (11,1,1,'\',V)
;;;	CALL COMPUT
;;;	IF (CNGCTL) GO TO ANYCN1

;**********************************************************************
;ACCEPT RECEIVER'S INITIALS
;**********************************************************************
RCVER,
;;;	CONTRL = '09,52,03,00,A '
;;;	CALL INPUT
;;;	IF (INXCTL) GO TO DISPLA
;;;	TRCVER = ENTRY
	IF (CNGCTL) GO TO ANYCN1

;**********************************************************************
;RECEIVE REJECT QUANTITY AND REJECT CODE AND DISPLAY
;**********************************************************************
RCVREJ,
	CONTRL = '09,71,06,00,#-'
	CALL INPUT
	IF (INXCTL) GO TO DISPLA
	REJQTY = ENTRY
	REJFMT = REJQTY,MSKSIX
	IF (REJQTY.EQ.0) TREJCD =
	XCALL OUTPT (9,71,0,REJFMT,V)
	IF (TREJCD.EQ.BLANKS .AND. CNGCTL) XCALL OUTPT (10,32,1,'\',V)
	TQTYRJ = LQTYRJ + REJQTY
	IF (TQTYRJ.LT.0) GO TO CORMSG
	IF (REJQTY.EQ.0) GO TO ANYCN1

RCVRCD,
	IF (REJQTY.EQ.0) GO TO RCVREJ
	XCALL OUTPT (10,32,1,'\',V)
	CONTRL = '10,32,02,00,A '
	CALL INPUT
	IF (INXCTL) GO TO DISPLA
	TREJCD = ENTRY
	IF (TREJCD.EQ.BLANKS) GOTO ANYCN1
	LOKCTL = NOABRT
	XCALL IO (5,RD153B,1,READ,LOKCTL)		;READ PORTBL CONTROL RECORD
	BSEND = ORG153

	SRCCTL = 2
	KEY =
	KEY(1,2) = 07,'XX'
	KEY(3,4) = TREJCD
	XCALL SERCH (5,RD153A,KEY,1,4,BSEND,BSMID,SRCCTL,1,6,11,0,0,0,0)
	IF (SRCCTL) GO TO REJMSG
	XCALL OUTPT (10,40,0,TDESC,V)
	GO TO ANYCN1
REJMSG,
	XCALL MESAG ('REJECTION CODE IS NOT ON FILE',1)
	GO TO RCVRCD

CORMSG,
	XCALL MESAG ('INVALID ENTRY: OVER CORRECTION',1)
	GO TO RCVREJ

;**********************************************************************
;ALLOW CHANGE
;**********************************************************************
ANYCN1,
	XCALL ANYCN (CNGCTL,WHATNO)
	IF (CNGCTL) GO TO (CNGMSG,CNGMSG,CNGMSG,CNGMSG,
&	DATRCV,QTYRCV,UMMSG,COST,RCVER,RCVREJ,RCVRCD) , WHATNO
	GO TO UDRCVH

CNGMSG,
	XCALL MESAG ('KEY FIELDS MAY NOT BE CHANGED',2)
	GO TO ANYCN1

UMMSG,
	XCALL MESAG ('UNIT OF MEASURE MAY NOT BE CHANGED',2)
	GO TO ANYCN1

MSG2,
	XCALL MESAG ('QUANTITY INVOICED IS NEGATIVE ???????',2)
	GO TO CLOSIT


;**********************************************************************
;COMPUTE THE NEW COST PER UNIT
;**********************************************************************

COMPUT,
	ON ERROR SIMPLE
	IF (LQTYIV.LT.0) GO TO MSG2
	IF (LQTYIV.LT.TQTYRC.OR.LQTYIV.EQ.0) GO TO ABSLUT

	TNWCST = ((LDINVC*10000)/LQTYIV)#2
	OFF ERROR
	RETURN

ABSLUT,
	ABRQTY = RCVQTY
	IF (RCVQTY.LT.0) ABRQTY = - RCVQTY
	IF (COST.NE.0.AND.CSTCOD.EQ.1) KCOST = COST
	IF (COST.NE.0.AND.CSTCOD.EQ.2) KCOST = ( (COST * 100)/ABRQTY)#2
	IF (COST.EQ.0.AND.LACCST.NE.0) KCOST = LACCST
	IF (COST.EQ.0.AND.LACCST.EQ.0) KCOST = LEXCST

	IF (TQTYRC.EQ.0) GO TO SIMPLE

	TNWCST = ((KCOST*100*(TQTYRC - LQTYIV))/TQTYRC)#2
&	+ ((LDINVC * 10000)/TQTYRC)#2
	OFF ERROR
	RETURN

SIMPLE,
	TNWCST = KCOST
	RETURN

;**********************************************************************
;UPDATE THE RECEIVING HISTORY FILE
;**********************************************************************

UDRCVH,
UPDTRX,
	XCALL WATE (4,V)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	LOKCTL = NOABRT
;;;	XCALL IO (7,RD041B,1,READ,LOKCTL)

; first, check for default keys...
	CLEAR DF1, DF2, DF3

	CLEAR TBL_KEY		;is there a default key for this item?
	TBLCOD = 'IK'		
	IK_ITEM = LITMNO
	READ (CHN182,COPTBL,TBL_KEY)[ERR=NO_DEFAULT]
	DF1 = IK_F1		;note that these values will 
	DF2 = IK_F2		;be overridden if notes are
	DF3 = IK_F3		;running

no_default,

	CLEAR ITMKEY
	K_ITEM = LITMNO
	K_F1 = DF1,	'XXX'
	K_F2 = DF2,	'XXX'
	K_F3 = DF3,	'XXXXX'
	READ (7, RD041A, ITMKEY, KEYNUM:1) [ERR = NO_ITEM]
	GOTO ITEM_OK

;;;	LOKCTL = 1
;;;	XCALL ISIO (7, RD041A, LITMNO, READ, LOKCTL)
;;;	IF (LOKCTL .NE. 0) 
;;;		BEGIN
;;;		NOSTK = 1
;;;		GOTO NONSTK
;;;		END
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;----------------------------------------------------------------

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	LOCTOT = NUMLOC
;;;	SRCCTL =
;;;	KEY =
;;;	KEY = LITMNO
;;;	XCALL SERCH (6,RD042A,KEY,1,15,ORG041,DUMPTR,SRCCTL,4,16,20,0,0,0,0)
;;;	IF (SRCCTL.EQ.1) NOSTK = 1				;(004)
;;;	GO TO (NONSTK), SRCCTL					;(004)
;;;	LOKCTL = 1
;;;	XCALL IO (7,RD041A,IRC041,READ,LOKCTL)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
ITEM_OK,
	CALL FNDLOC						;(002)
	GOTO UPDHST

NO_ITEM,
	NOSTK = 1
NONSTK,
	RD041A = 
UPDHST,
	RD154A =
	RDTERC = TDTERC
	RPONUM = LPONUM
	RRLNUM = LRLNUM
	RLINNO = LLINNO
	REXCST = LEXCST
	RREJCD = TREJCD
	RCVINO = LITMNO
	RCVDSC = LITMDS
	RSHPTO = HSHPTO
	RQTYOR = LQTYOR
	RQTYRC = TQTYRC
	REJNOW = REJQTY
	RCVNOW = RCVQTY
	RINVUM = LITMUM
	RITMCC = LITMCC
	RDTEPM = LDTEPM
	ROLDAV = AVGCST
	RNWCST = TNWCST
	RNWAVG = TAVCST
	RNOTIF = LNOTIF
	RMOVET = LMOVET
	RRCVER = TRCVER
	RVENDR = HVENDR
	RORDNO = LJOBNO
;>(01)
	RVITMN = LVITMN
	RPONCD = LPONCD(1)
	RNOSTD = LNOSTD
;<(01)
	ADDED = -1
	LOKCTL = NOABRT
	XCALL IO (4,RD143B,1,READ,LOKCTL)
	IF (REC143.GE.MAX143) GO TO FULLTX
;>(005)
	LOKCTL = 1
	XCALL ISIO (1,RD154A,RCVKEY,STORE,LOKCTL)
	ADDED = 1
			; FALL THROUGH TO UPDINV

;**********************************************************************
;UPDATE THE INVENTORY TRANSACTION FILE
;**********************************************************************

UPDINV,
	IF (NOSTK.EQ.1) GOTO UDPOLN				;(004)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; removed per jessie 12-20-07...
;;;	IF (PRDCAT .NE. 'J') GOTO UDPOLN	;SSQ 10-20-05
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	RD143A =

	CALL FNDLOC						;(002)

	RITMNO = LITMNO
	RDESCR = LITMDS
	LOCTO  = HSHPTO
	QTYRCD = RCVQTY
	OLDAVG = AVGCST
	NEWCST = (TNWCST)#2
	CALL AVCOST
	NEWAVG = TAVCST
	PONUM (1,6) = LPONUM, 'ZZZZXX'
	PONUM (7,7) = '-'
	PONUM (8,9) = LRLNUM, 'XX'
		
	IF (LQTYOR.LE.TQTYRC) ORDCMP = 'Y'
	TRXTYP =

	INCR REC143
	LOKCTL = 1
	XCALL IO (4,RD143B,1,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IO (4,RD143A,REC143,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IO (4,RD143B,MAX143,READ,LOKCTL)
	LOKCTL = 1
	XCALL IO (4,RD143B,1,READ,LOKCTL)
	UNLOCK 4
	GOTO UDPOLN
;**********************************************************************
;COMPUTE THE AVERAGE COST FOR THE ITEM MASTER FILE
;**********************************************************************

AVCOST,
	TOTONH = QTYONH
AVG2,
	IF (TOTONH + RCVQTY.GT.0.AND.TOTONH.GT.0) GO TO AVG1
	TAVCST = (TNWCST)#1
	RETURN

AVG1,
	TAVCST = ( (((TNWCST * RCVQTY)#1 + (AVGCST * TOTONH)) * 100)
&	/ (RCVQTY + TOTONH) )#2
	RETURN

;**********************************************************************
;UPDATE THE PORLIN FILE
;**********************************************************************

UDPOLN,
	LDTERC = TDTERC
	LACCST = TNWCST
	LRCVER = TRCVER
	LREJCD = TREJCD
	LQTYRC = TQTYRC
	LQTYRJ = TQTYRJ
	IF (LINSTS.EQ.'N'.OR.LINSTS.EQ.'X') GO TO WRLINE
	LINSTS = 'P'
	IF (LQTYRC.GT.0) LINSTS = 'R'
	IF (LQTYIV.GT.0) LINSTS = 'I'
	IF (LQTYRC.LT.LQTYOR) GO TO WRLINE
	IF (LQTYIV.LT.LQTYOR) GO TO WRLINE
	LINSTS = 'C'
WRLINE,
	LOKCTL = NOABRT
	XCALL ISIO (3,RD152A,POLKEY,WRITE,LOKCTL)

BLNKET,
	IF (LRLNUM.EQ.0) GO TO DISPLA

	KEY =
	KEY(1,6) = LPONUM,'XXXXXX'
	KEY(7,8) = '00'
	KEY(9,11) = LLINNO,'XXX'
	READ (3,RD152A,KEY,KRF=0) [EOF=DISPLA, KEY=DISPLA, ERR=DISPLA]

	LACCST = TNWCST
	LRCVER = TRCVER
	LQTYRJ = LQTYRJ + RCVQTY
	LDTERC = TDTERC

	LOKCTL = NOABRT
	XCALL ISIO (3,RD152A,POLKEY,WRITE,LOKCTL)
	UNLOCK 3
	GO TO DISPLA

;**********************************************************************
FULL,
	XCALL OUTPT (2,0,2,' ',V)
	XCALL OUTPT (6,15,0,'The RCVHST file is now full.  Use the EXPAND',V)
	XCALL OUTPT (7,15,0,'option from the SYSTEMS FUNCTIONS menu to',V)
	XCALL OUTPT (8,15,0,'increase the size of the RCVHST file before',V)
	GO TO BOTTOM
FULLTX,
	XCALL OUTPT (2,0,2,' ',V)
;;;	XCALL OUTPT (6,15,0,'The INVTRX file is now full.  Use the EXPAND',V)
	XCALL OUTPT (6,15,0,'The PORTRX file is now full.  Use the EXPAND',V)
	XCALL OUTPT (7,15,0,'option from the SYSTEM FUNCTIONS menu to',V)
	XCALL OUTPT (8,15,0,'increase the size of the INVTRX file before',V)
BOTTOM,
	XCALL OUTPT (9,15,0,'re-entering the RECEIPTS ENTRY application.',V)
	IF (ADDED.EQ.0) XCALL MESAG (' ',2)
	IF (ADDED.EQ.1) XCALL MESAG ('LAST RECEIPT WAS ADDED CORRECTLY.',2)
	IF (ADDED.EQ.-1) XCALL MESAG
&		('WARNING: LAST RECEIPT ENTERED WAS NOT ACCEPTED/ADDED.',2)
	GO TO CLOSIT
;**********************************************************************
;SUBROUTINE TO IDENTIFY FIELDS IN THE ITMMAS
;**********************************************************************
FNDLOC,
	NEWLOC =
	TOOONH = QTYONH
	TOOONO = QTYONO
	RETURN

;**********************************************************************
;INPUT
;**********************************************************************
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN

;**********************************************************************
;**********************************************************************
;CLOSE FILES
;**********************************************************************
CLOSIT,
	XCALL WATE (3,V)
	XCALL FILES (7,'I',41,4)	;CLOSE ITMMAS FILE
	XCALL FILES (6,'I',42,4)	;CLOSE ITMIDX FILE
	XCALL FILES (5,'I',153,4)	;CLOSE PORTBL FILE
	XCALL FILES (4,'U',143,4)	;CLOSE INVTRX FILE
	XCALL FILES (3,'SU',152,4)	;CLOSE PORLIN FILE
	XCALL FILES (2,'SI',151,4)	;CLOSE PORHDR FILE
	XCALL FILES (1,'SU',154,4)	;CLOSE RCVHST FILE	(005)
	IF (CHN182) CLOSE CHN182

	GO TO RCVMNU
CLOSE7,
	XCALL FILES (7,'I',41,4)	;CLOSE ITMMAS FILE	(003)

CLOSE6,
	XCALL FILES (6,'I',42,4)	;CLOSE ITMIDX FILE

CLOSE5,
	XCALL FILES (5,'I',153,4)	;CLOSE PORTBL FILE

CLOSE4,
	XCALL FILES (4,'U',143,4)	;CLOSE PORTRX FILE

CLOSE3,
	XCALL FILES (3,'SU',152,4)	;CLOSE PORLIN FILE

CLOSE2,
	XCALL FILES (2,'SI',151,4)	;CLOSE PORHDR FILE

CLOSE1,
	XCALL FILES (1,'SU',154,4)	;CLOSE RCVHST FILE	(005)
ENDALL,
	IF (CHN182) CLOSE CHN182
	XCALL PGCHN ('PO:POMENU',1)
;**********************************************************************

END

