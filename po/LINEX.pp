;LINEX.PO

SUBROUTINE LINEX ; (POHEDR,OPT,EXITSW,VNAME)

	POHEDR	,A
	OPT	,D	;OPTION SWITCH IS SET TO :
			;	1 - ADD P/O LINE
			;	2 - CHANGE/INQUIRE P/O LINE
	EXITSW	,D	;EXIT SWITCH IS SET TO :
			;	0 - USER DOES NOT WISH TO EXIT
			;	1 - USER DOES WISHES TO EXIT

	VNAME	,A	;VENDOR NAME
	UCDE	,A	;USER'S INITIALS


.INCLUDE 'WND:WINDOWS.DEF'

RECORD	FKEYS
	.INCLUDE 'DEF:FUNKEY.DEF'

RECORD	POP
	.INCLUDE 'DEF:POP1.DEF'

RECORD HEADER		
	.INCLUDE 'DEF:RD151A.DEF'

RECORD POLINE			
	.INCLUDE 'DEF:RD152A.DEF'

RECORD TABLE			
	.INCLUDE 'DEF:RD153A.DEF'

;;;RECORD VENIDX			
;;;	.INCLUDE 'DEF:RD012A.DEF'

RECORD TBLCTL			
	.INCLUDE 'DEF:RD153B.DEF'

RECORD ITMMAS			
	.INCLUDE 'DEF:RD041A.DEF'

RECORD ITMCTL			
	.INCLUDE 'DEF:RD041B.DEF'

RECORD ITMIDX			
	.INCLUDE 'DEF:RD042A.DEF'

RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD TBLKEY
	TKEYNO	,D2
	TKEYCD	,A2
	TKEYSQ	,D1

RECORD	ID_LINE
		,A*,	'PO: '
	ID_ORDER	,A6
		,A1
		,A*,	'VENDOR: '
	ID_VNUM	,A4
		,A1
	ID_NAME	,A30

RECORD	HD_LINE
;;;,A*,'    ITEM                           QTY-ORD UM        COST         EXT'
,A*,'    ITEM(1)/DESC(2)         (3)QTY-ORD     UM(4)      (5)COST          EXT'
;    ITEM(1)/DESC(2)         (3)QTY-ORD     UM(4)      (5)COST          EXT'
;1234567890123456789012345678901234567890123456789012345678901234567890123456
;         1         2         3         4         5         6         7
RECORD	W2_LINE
	W2_NUM		,A3
	W2_ITEM		,A14
			,A1
	W2_DESCR	,A28
			,A1
	W2_QTY		,A7
	W2_UOFM		,A2
			,A1
	W2_PRICE	,A9
			,A1
	W2_EXT		,A11
	

RECORD	WVARS
	W_ID	,D4
	WND_1	,D4	;MAIN
	WND_2	,D4	;LINE ITEMS
	WND_3	,D4	;ADD INVENTORY ITEMS
	WND_4	,D4	;LINE ITEM NOTES
	WND_D	,D4	;DAMPER WINDOW
	WN_NAME	,A20
	WLEN	,D2

RECORD	CFGS
	CFG_PRICE	,D8
	CFG_ERROR	,D1
	IS_CFG		,D1
	CHN182	,D2,10


RECORD	VARS
	tstat	,d4
	F_POLINE	,A50	;FILE SPEC FOR POLINE
	ADDOK	,D1
	XITEM	,A15
	XDESCR	,A30
	XPRDCAT	,A2
	XREOLVL	,D8
	XAVGCST	,D9
	XSTOCK	,A1
	XSUOFM	,A2
	DEFALT	,A2
	EXTCST	,D10
	XDESC	,A30
	LN	,D4
	IREC	,D6
	I	,D6
	F_KEY	,D3
	LOPT	,D1
	ROW2	,D2
	EXEPRC	,D10
	CHN152	,D2,	02
	CHN41A	,D2,	33
	CHN42A	,D2,	34

RECORD	OLDLIN
	.INCLUDE 'DEF:RD152C.DEF'

RECORD COMMON
	LOKCTL	,D1
	SWITCH	,D1
	SAVPO	,D6
	SAVRL	,D2
	SAVLIN	,D3
	NOTADD	,D1
	OLDCNT	,D5
	FULL	,D1
	INXCTL	,D1
	CNGCTL	,D1
	WHATNO	,D2
	V	,D1
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	DELETE	,D1,3
	PONUM	,D8
	SRCCTL	,D1
	SRCOPT	,D1
	BSEND	,D5
	BSMID	,D5
	NOTE	,A30
	IOCTL	,D1
	LINEIN	,D3
	AL	,A3
	ENTRY	,A30
	DENTRY	,D8
	LASNUM	,D3
	LINWGT	,D7
	DKEY	,D11
	AKEY	,A5
	KEY	,A19
	NLOC	,D2
	ALLOC	,D8
	QONHND	,D8
	QONORD	,D8
	REORLV	,D8
	WCHLIN	,D5
	AENTRY	,A12
	BLANKS	,A30
;;;	OLDLIN	,A319
	RJUST	,D1
	AITMNO	,A15
	NEWKEY	,D1

PROC
	V = 1
	CALL INIT_WINDOW

	HEADER = POHEDR
;;;	LASNUM = HLLNUM
	IF (OPT.EQ.2) LASNUM = 0
BEGIN,
	LASNUM = HLLNUM
	W_ID = WND_1
	FULL =
	LINWGT =
	CNGCTL =
	POLINE =

	ID_ORDER = HPONUM
	ID_VNUM = HVENDR
	ID_NAME = VNAME

	XCALL W_DISP(WND_1,WD_POS,1,1,ID_LINE)
	XCALL W_DISP(WND_1,WD_POS,4,1,HD_LINE)
	XCALL W_DISP(WND_1,WD_POS,5,1,WD_CLR,WDC_LIN)
	XCALL W_DISP(WND_1,WD_POS,6,1,WD_CLR,WDC_LIN)
	XCALL W_DISP(WND_1,WD_POS,24,1,WD_CLR,WDC_LIN)
	CALL LOAD_LINE_ITEMS

	LOKCTL = 1
	XCALL IO (7,ITMCTL,1,READ,LOKCTL)
	UNLOCK 7
	RJUST = JSTIFY
	LOKCTL = 1
	XCALL IO (3,TBLCTL,1,READ,LOKCTL)
	UNLOCK 3

	ROW = 5
	ROW2 = 6
LLINNO,
	CTL = '05,01,03,00,#E'
	CALL INPUT
	GO TO (BEGIN,ABORT), INXCTL
	LINEIN = ENTRY(1,3)
	IF (ENTRY.EQ.BLANKS) LINEIN = LASNUM + 1
	AL = LINEIN,'XXX'
	XCALL W_DISP(W_ID,WD_POS,5,1,AL)

	CALL GETLIN

	IF (LOKCTL .EQ. 0)
		BEGIN
		LOPT = 2	;CHANGE EXISTING LINE
		LASNUM = LINEIN
		CALL DISPLA
		GO TO ANYCNG
		END

	LOPT = 1	;NEW LINE 

	XCALL W_DISP(W_ID,WD_POS,5,01,AL)
	LLINNO = LINEIN
	LPONUM = HPONUM
	LRLNUM = HRLNUM
	LINSTS = 'N'
	IF (HPOSTS.EQ.'P') HCXCDE = 'C'
	LCXCDE = 'N'
	GO TO (ANYCNG), CNGCTL
LITMNO,
	XCALL W_DISP(W_ID,WD_POS,24,1,WD_CLR,WDC_LIN)
	XCALL W_DISP(W_ID,WD_POS,24,1,'<F1>=LOOK-UP, <F2>=ADD INVENTORY')
	XCALL W_UPDT
	CTL = '05,20,15,00,A '
	XCALL WINPT(W_ID,5,5,15,00,'A ',ENTRY,INXCTL,F_KEY)
	GO TO (BEGIN), INXCTL
	USING F_KEY SELECT
	(F_01),	BEGIN
		CALL ALPHA_ITEM
		IF(INXCTL) GOTO LITMNO
		END
	(F_02),	BEGIN
		CALL ADD_INV
		IF(.NOT. ADDOK) GOTO LITMNO
		ENTRY = ITEMNO
		END
	ENDUSING
ADDINV,
	IF (ENTRY .EQ. BLANKS) ENTRY = LITMNO
	IF (RJUST) XCALL FRMAT (ENTRY(1,15),15)
	LITMNO = ENTRY(1,15)
	IF (LITMNO.EQ.BLANKS) GO TO LITMNO
	AITMNO = LITMNO
	IF (RJUST) XCALL LEFTJ (AITMNO(1,15),15)
	XCALL W_DISP(W_ID,WD_POS,5,5,AITMNO)
	XCALL W_UPDT
;;;	XCALL W_DISP(W_ID,WD_POS,10,37,'1')

	USING LITMNO SELECT
	('OB','PB','SBD','BDD'),	BEGIN
				XCALL ITCFG(LITMNO,XDESCR,CHN182,
&				CFG_PRICE,CFG_ERROR,WND_1,WND_D)

				GOTO(LITMNO),CFG_ERROR
				IS_CFG = 1
				END
	(),	IS_CFG = 0

	ENDUSING

	NEWKEY = 1
	ITMMAS =
	LNOSTD = 0			;(01)
	BSMID = 1
	SRCCTL = 1
	SRCOPT = 4
	XCALL SERCH (6,ITMIDX,LITMNO,1,15,ORG041,BSMID,SRCCTL,SRCOPT,16,20,0,0,0,0)
	UNLOCK 6
	IF (SRCCTL.EQ.0) GO TO ITMFND
;;;	XCALL OLMSG (W_ID,24,'ITEM NOT ON FILE',2)
	XCALL W_DISP(W_ID,WD_POS,24,1,'Item not on file...  Add to inventory?')
	CTL = '24,40,01,01,YN'
	CALL INPUT
	GOTO (NONINV),INXCTL-1

	CALL ADD_INV
	IF(.NOT. ADDOK) GOTO LITMNO
	ENTRY = ITEMNO
	GOTO ADDINV

NONINV,
	LNOSTD = 1			;(01)
	GO TO (ANYCNG), CNGCTL
	GO TO LITMDS

ITMFND,
	XCALL IO (7,ITMMAS,IRC041,READ,LOKCTL)
	UNLOCK 7
	IF (LOKCTL.EQ.1) GO TO BEGIN
;;;	LITMDS = DESCR
	IF (IS_CFG)
		BEGIN
		DESCR = XDESCR
		AVGCST = CFG_PRICE
		END
	
	LITMDS = DESCR

	LITCAT = PRDCAT

	LITMUM = SUOFM
	LITMCC =
;;;	LITMCC = COMCOD

	XCALL W_DISP(W_ID,WD_POS,6,5,LITMDS)
	XCALL W_UPDT
	GO TO (ANYCNG), CNGCTL
	GO TO LQTYOR

LITMDS,
	CTL = '06,05,30,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (ENTRY .EQ. BLANKS) ENTRY = LITMDS
	LITMDS = ENTRY
	XCALL W_DISP(W_ID,WD_POS,06,05,LITMDS)
	XCALL W_UPDT
	GO TO (ANYCNG), CNGCTL

LQTYOR,
	CTL = '05,33,06,00,# '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (ENTRY .EQ. BLANKS) ENTRY(1,6) = LQTYOR,'ZZZZZZ' [LEFT]
	IF (ENTRY .EQ. BLANKS) ENTRY(1,6) = 1,'ZZZZZX'	[LEFT]

	LQTYOR = ENTRY(1,6)
	AENTRY(1,6) = LQTYOR,'ZZZZZX' [left]
	XCALL W_DISP(W_ID,WD_POS,05,33,AENTRY(1,6))
	XCALL W_UPDT
	GO TO (ANYCNG),CNGCTL
LITMUM,
	CTL = '05,44,02,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (ENTRY .EQ. BLANKS) ENTRY = LITMUM
	IF (ENTRY .EQ. BLANKS)	ENTRY(1,2) = 'EA'
	LITMUM = ENTRY
DISP6,
	XCALL W_DISP(W_ID,WD_POS,5,44,LITMUM)
	XCALL W_UPDT
	GO TO (ANYCNG), CNGCTL

LEXCST,
	ENTRY(1,11) = AVGCST*10, '[ZZZX.XXXX]'
	XCALL W_DISP(W_ID,WD_POS,6,50,ENTRY(1,11))

	CTL = '05,54,09,00,# '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (ENTRY .EQ. BLANKS) ENTRY(1,9) = AVGCST*10,'ZZZZZZZZX'
	XCALL DEC4(ENTRY(1,10), LEXCST)
;;;	XCALL FRMAT (ENTRY,10)
;;;	LEXCST = ENTRY (1,10)
	AENTRY = LEXCST,'ZZZX.XXXX' [left]
	XCALL W_DISP(W_ID,WD_POS,5,54,AENTRY)
	GO TO (ANYCNG), CNGCTL

;**********************************************************************

ANYCNG,
	EXTCST = (LQTYOR*LEXCST)#2
	ENTRY(1,11) = EXTCST,	'ZZZ,ZZX.XX-'
	XCALL W_DISP(W_ID,WD_POS,5,65,ENTRY(1,11))
	XCALL W_UPDT
;;;	XCALL WANFK(W_ID,24,CNGCTL,WHATNO,F_KEY,'<F1> = NOTES')
	XCALL WANFK(W_ID,24,CNGCTL,WHATNO,F_KEY,'<F1> = NOTES  <F3> = DELETE')
	IF (F_KEY .EQ. F_01) GOTO NOTES
	IF (F_KEY .EQ. F_03)
		BEGIN
		XCALL W_DISP(W_ID,WD_POS,24,1,WD_CLR,WDC_LIN,
&			'DELETE, ARE YOU SURE?')
		CTL = '24,23,01,01,YN'
		CALL INPUT
		GOTO (DELETE),INXCTL
		GOTO ANYCNG
		END

	GO TO (PROCES), CNGCTL + 1
	GO TO (LITMNO,LITMDS,LQTYOR,LITMUM,LEXCST),WHATNO
BADCNG,
	GOTO ANYCNG

;**********************************************************************

NOTES,
	CLEAR CNGCTL
	W_ID = WND_4

	XCALL W_PROC(WP_PLACE,WND_4,13,25)	
	XCALL W_DISP(W_ID,WD_CLEAR)

	XCALL W_DISP(W_ID,WD_POS,2,1,'1. NOTE 1')
	XCALL W_DISP(W_ID,WD_POS,3,1,'2. NOTE 2')
	XCALL W_DISP(W_ID,WD_POS,4,1,'3. NOTE 3')
	XCALL W_DISP(W_ID,WD_POS,5,1,'4. NOTE 4')
	XCALL W_DISP(W_ID,WD_POS,6,1,'5. NOTE 5')
	XCALL W_DISP(W_ID,WD_POS,7,1,'6. NOTE 6')

	IF (LOPT.EQ.2)
		BEGIN
		CALL DSNOTS
		GO TO NTECNG
		END
INPT20,
	TABLE =
	IF (CNGCTL.EQ.1) XCALL W_DISP(W_ID,WD_POS,2,13,WD_CLR,WDC_EOL)
	CTL = '02,13,02,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO BLNK20
	TBLKEY =
	TKEYCD = ENTRY(1,2)
	CALL NTSRCH
	IF (SRCCTL.EQ.1) XCALL OLMSG (W_ID,24,'(CODE NOT ON FILE)')
	IF (SRCCTL.EQ.1) GO TO INPT20
BLNK20,
	LPONCD(1) = ENTRY(1,2)
	XCALL W_DISP(W_ID,WD_POS,02,13,LPONCD(1))
	XCALL W_DISP(W_ID,WD_POS,02,17,TDESC)
	GO TO (NTECNG), CNGCTL
	IF (ENTRY.EQ.BLANKS) GO TO INPT22
INPT21,
	TABLE =
	IF (CNGCTL.EQ.1) XCALL W_DISP(W_ID,WD_POS,03,13,WD_CLR,WDC_EOL)
	CTL = '03,13,02,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO BLNK21
	TBLKEY =
	TKEYCD = ENTRY(1,2)
	CALL NTSRCH
	IF (SRCCTL.EQ.1) XCALL OLMSG (W_ID,24,'(CODE NOT ON FILE)')
	IF (SRCCTL.EQ.1) GO TO INPT21
BLNK21,
	LPONCD(2) = ENTRY(1,2)
	XCALL W_DISP(W_ID,WD_POS,03,13,LPONCD(2))
	XCALL W_DISP(W_ID,WD_POS,03,17,TDESC)
	GO TO (NTECNG), CNGCTL
INPT22,
	CTL = '04,17,30,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LPONTE(1) = ENTRY
	XCALL W_DISP(W_ID,WD_POS,04,17,LPONTE(1))
	IF (ENTRY.EQ.BLANKS) GO TO NTECNG
	GO TO (NTECNG), CNGCTL
INPT23,
	CTL = '05,17,30,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LPONTE(2) = ENTRY
	XCALL W_DISP(W_ID,WD_POS,05,17,LPONTE(2))
	IF (ENTRY.EQ.BLANKS) GO TO NTECNG
	GO TO (NTECNG),CNGCTL
INPT24,
	CTL = '06,17,30,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LPONTE(3) = ENTRY
	XCALL W_DISP(W_ID,WD_POS,06,17,LPONTE(3))
	IF (ENTRY.EQ.BLANKS) GO TO NTECNG
	GO TO (NTECNG), CNGCTL
INPT25,
	CTL = '07,17,30,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	LPONTE(4) = ENTRY
	XCALL W_DISP(W_ID,WD_POS,07,17,LPONTE(4))

NTECNG,
	XCALL WANCN (W_ID,10,CNGCTL,WHATNO)
	GO TO (NPROC), CNGCTL + 1
	GO TO (INPT20,INPT21,INPT22,INPT23,INPT24,INPT25), WHATNO 
BDNTCG,
	CNGCTL = 3
	GO TO NTECNG
NPROC,
	XCALL W_PROC(WP_REMOVE,WND_4)
	GOTO PROCES
;**********************************************************************

DELETE,
	LOKCTL = 1
	XCALL ISIO (CHN152,POLINE,POLKEY,DELETE,LOKCTL)
	GOTO FREBUF

CHANGE,
	LASNUM = LLINNO
	IF (OLDLIN.NE.POLINE) CALL CHKLIN
	IF (NEWKEY.EQ.1) GOTO ADDNEW
	LOKCTL = 1
	XCALL ISIO (CHN152,POLINE,POLKEY,WRITE,LOKCTL)
	GOTO  FREBUF

ADDNEW,
	OLDLIN = POLINE
	LOKCTL = 1
	XCALL ISIO (CHN152,POLINE,DKEY,DELETE,LOKCTL)
	POLINE = OLDLIN
	LOKCTL = 1
	XCALL ISIO (CHN152,POLINE,POLKEY,STORE,LOKCTL)	
	NEWKEY = 0
FREBUF,
	GO TO BEGIN
;*************************************************************************
PROCES,
;;;	IF (OPT.EQ.2) GO TO CHANGE
	IF (LOPT.EQ.2) GO TO CHANGE
ADD,
	LASNUM = LLINNO
	HLLNUM = LLINNO
	LDTERQ = HPODTE
	LOKCTL = 1
	XCALL ISIO (CHN152,POLINE,POLKEY,STORE,LOKCTL)
	IF (LOKCTL.NE.0) XCALL OLMSG (W_ID,24,'ERROR ADDING P.O. LINE',1)
	GO TO FREBUF
ABORT,
	EXITSW = 1
	XCALL W_DISP(W_ID,WD_POS,24,1,'PRINT PO? <Y>')
	CTL = '24,16,01,00,YY'
	CALL INPUT
	IF(INXCTL .EQ. 1) OPT = 3	;PRINT
END,
	POHEDR = HEADER
	IF(WND_1)
		BEGIN
		XCALL W_PROC(WP_REMOVE,WND_1)
		XCALL W_PROC(WP_DELETE,WND_1)
		END
	IF(WND_2)
		BEGIN
		XCALL W_PROC(WP_REMOVE,WND_2)
		XCALL W_PROC(WP_DELETE,WND_2)
		END
;;;	IF(WND_3)
;;;		BEGIN
;;;		XCALL W_PROC(WP_REMOVE,WND_3)
;;;		XCALL W_PROC(WP_DELETE,WND_3)
;;;		END
	IF(WND_4)
		BEGIN
		XCALL W_PROC(WP_REMOVE,WND_4)
		XCALL W_PROC(WP_DELETE,WND_4)
		END
	IF(WND_D)
		BEGIN
		XCALL W_PROC(WP_REMOVE,WND_D)
		XCALL W_PROC(WP_DELETE,WND_D)
		END
	XRETURN
;**********************************************************************
;**********************************************************************

GETLIN,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; GET A PO LINE
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	NEWKEY = 0
	DKEY(1,6) = HPONUM
	DKEY(7,8) = HRLNUM
	DKEY(9,11) = LINEIN
	LOKCTL = 1
	XCALL ISIO (CHN152,POLINE,DKEY,READ,LOKCTL)
	IF (LOKCTL.NE.0) POLINE =
	OLDLIN = POLINE
	RETURN
;-------------------------------------------------

NTSRCH,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; SEARCHES FOR NOTES IN THE P/O TABLES
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	TKEYNO = 6
	BSMID = 1
	SRCCTL = 2
	SRCOPT = 4
	XCALL SERCH (3,TABLE,TBLKEY,1,5,ORG153,BSMID,SRCCTL,SRCOPT,
&			6,11,0,0,0,0)
	UNLOCK 3
	IF (SRCCTL.EQ.1) TABLE =
	RETURN
;-------------------------------------------------

ALPHA_ITEM,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; ITEM DESCRIPTION SCAN
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL W_DISP(W_ID,WD_POS,24,1,WD_CLR,WDC_LIN,'DESCRIPTION: ')
	CTL = '24,01,30,01,AE'
	CALL INPUT
	GOTO (ALPHA_ITEM),INXCTL
	IF (INXCTL .EQ. 2) RETURN

	XDESC = ENTRY(1,30)	

	SWITCH = 5
	XCALL FILES(33,'I',041,SWITCH)
	CHN41A = 33
	XCALL FILES(34,'I',042,SWITCH)

;;;	XCALL IO (CHN41A,ITMMAS,1,READ,LOKCTL)
	XCALL IO (CHN42A,ITMIDX,1,READ,LOKCTL)	;READ FIRST
	CALL GET_ITEMS

AI_LOOP,
	IF (NUMARA .EQ. 0) RETURN
	DLINE = '  ITEM  DESCRIPTION'
	XCALL TTSTS(TSTAT)
	IF (TSTAT) XCALL W_DISP(W_ID,WD_READS,ENTRY)
	XCALL POP1(POP)
	USING P_ACTION SELECT
	(0),	BEGIN
		INXCTL = 2	;ABORT
		CLOSE CHN41A
		CLOSE CHN42A
		RETURN
		END
	(1),	BEGIN
		DLINE = PARRY(PI)
		ENTRY = DLINE(1,15)
		INXCTL = 0	;FOUND ITEM
		CLOSE CHN41A
		CLOSE CHN42A
		RETURN
		END
	(4),	CALL MORE_ITEMS		
	ENDUSING
	GOTO AI_LOOP
;============================================
GET_ITEMS,
	LN = %TRIM(XDESC)
;;;	XCALL IOS (CHN41A, ITMMAS, READ, LOKCTL)
	XCALL IOS (CHN42A, ITMIDX, READ, LOKCTL)
	IREC = 1
MORE_ITEMS,
	CLEAR NUMARA, I
GI_LOOP,
	INCR IREC
;;;	XCALL IOS (CHN41A, ITMMAS, READ, LOKCTL)
	XCALL IOS (CHN42A, ITMIDX, READ, LOKCTL)
;;;	IF(LOKCTL.NE.0 .OR. ITMMAS.EQ.']]]]]]') GOTO GI_EOF
	IF(LOKCTL.NE.0 .OR. ITMIDX.EQ.']]]]]]') GOTO GI_EOF
	IF(IRC041 .LE. 0) GOTO GI_LOOP
	XCALL IO (CHN41A,ITMMAS,IRC041,READ,LOKCTL)
	IF(%INSTR(1,IITMNO,XDESC(1,LN))) GOTO DESC_OK
	IF(.NOT. %INSTR(1,DESCR,XDESC(1,LN))) GOTO GI_LOOP
DESC_OK,
	INCR I
	DLINE(1,15) = ITEMNO
	DLINE(16,45) = DESCR
	PARRY(I) = DLINE
	PARRFA(I) = IRC041,	'XXXXXX'
;;;	PARRFA(I) = IREC,	'XXXXXX'
	IF (I .LT. MAXARA) GOTO GI_LOOP
GI_EOF,
	NUMARA = I
	RETURN
;-------------------------------------------------

ADD_INV,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; ADD ITMMAS RECORD
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	ADDOK = 0
	XCALL W_PROC(WP_FIND,WND_3,'ADINV')
	IF (.NOT. WND_3)
		BEGIN
		XCALL W_PROC(WP_CREATE, WND_3, 'ADINV',10, 50)
		XCALL W_BRDR(WND_3,WB_TITLE,'ADD INVENTORY ITEM',
&			WB_TPOS,WBT_TOP,WBT_CENTER)
		END
	XCALL W_PROC(WP_PLACE, WND_3, 10, 10)

	W_ID = WND_3
W3_DISPLA,
	CLEAR CNGCTL
	XCALL W_DISP(WND_3, WD_CLEAR)
	XCALL W_DISP(W_ID,WD_POS,1,1,'1. ITEM #')
	XCALL W_DISP(W_ID,WD_POS,2,1,'2. DESCR')
	XCALL W_DISP(W_ID,WD_POS,3,1,'3. U OF M')
	XCALL W_DISP(W_ID,WD_POS,4,1,'4. STOCKED')
	XCALL W_DISP(W_ID,WD_POS,5,1,'5. PROD CAT')
	XCALL W_DISP(W_ID,WD_POS,6,1,'6. REO LVL')
	XCALL W_DISP(W_ID,WD_POS,7,1,'7. AVG COST')
	XCALL W_UPDT

	IF (LITMNO .EQ. BLANKS) GOTO ITEMNO
	XITEM = LITMNO
	XCALL W_DISP(W_ID,WD_POS,1,15,XITEM)
	XCALL W_UPDT
	GOTO I_LOOKUP
ITEMNO,
	CTL = '01,15,15,00,AE'		;DBG
	CALL INPUT			;DBG
	GOTO(W3_DISPLA,END_ADD),INXCTL	
	XITEM = ENTRY(1,15)
I_LOOKUP,
	ITMMAS =
	BSMID = 1
	SRCCTL = 1
	XCALL SERCH (6,ITMIDX,XITEM,1,15,ORG041,BSMID,SRCCTL,4,16,20,0,0,0,0)
	UNLOCK 6
	IF (SRCCTL.EQ.0)
		BEGIN
		XCALL OLMSG (W_ID,10,'ITEM ALREADY ON FILE',2)
		GOTO W3_DISPLA
		END

	GOTO (W3_ANYCN),CNGCTL
DESCR,
	CTL = '02,15,30,00,A '
	CALL INPUT
	GOTO (W3_DISPLA),INXCTL
	XDESCR = ENTRY(1,30)
	GOTO (W3_ANYCN),CNGCTL

SUOFM,
	CTL = '03,15,02,00,A '
	CALL INPUT
	GOTO(W3_DISPLA),INXCTL
	XSUOFM = ENTRY(1,2)
	IF (XSUOFM .EQ. '  ')
		BEGIN
		XSUOFM = 'EA'
		XCALL W_DISP(W_ID,WD_POS,ROW,COL,XSUOFM)
		XCALL W_UPDT
		END

	GOTO (W3_ANYCN),CNGCTL
STOCK,
	CTL = '04,15,01,00,A '
	CALL INPUT
	GOTO (W3_DISPLA),INXCTL
	XSTOCK = ENTRY(1,1)
;;;	IF (XSTOCK .EQ. ' ') XSTOCK = 'S'
	IF (XSTOCK .EQ. ' ') XSTOCK = 'N'	;9-7-01 per SteveM
	XCALL W_DISP(W_ID,WD_POS,ROW,COL,XSTOCK)
	IF (XSTOCK.NE.'N' .AND. XSTOCK.NE.'S') GOTO STOCK
	GOTO (W3_ANYCN),CNGCTL
	IF (XSTOCK .EQ. 'N')
		BEGIN
		XPRDCAT = 'ZZ'
		IF (UCDE .EQ. 'MW') XPRDCAT = 'ZW'	;MARTY
		XCALL W_DISP(W_ID,WD_POS,5,COL,XPRDCAT)
		XCALL W_UPDT

		XREOLVL = 
		XAVGCST = 
		GOTO W3_ANYCN
		END

PRDCAT,
	CTL = '05,15,02,00,A '
	CALL INPUT
	GOTO (W3_DISPLA),INXCTL
	XPRDCAT = ENTRY(1,2)
	IF (XPRDCAT .EQ. '  ')
		BEGIN
		XPRDCAT = 'ZZ'
		IF (UCDE .EQ. 'MW') XPRDCAT = 'ZW'	;MARTY
		XCALL W_DISP(W_ID,WD_POS,ROW,COL,XPRDCAT)
		XCALL W_UPDT
		END
	GOTO (W3_ANYCN),CNGCTL
REOLVL,
	CTL = '06,15,08,00,# '
	CALL INPUT
	GOTO (W3_DISPLA),INXCTL
	XREOLVL = ENTRY(1,8)
	GOTO (W3_ANYCN),CNGCTL
AVGCST,
	CTL = '07,15,09,00,# '
	CALL INPUT
	GOTO (W3_DISPLA),INXCTL
	XAVGCST = ENTRY(1,9)
	ENTRY(1,11) = XAVGCST,	'ZZZ,ZZX.XXX'[LEFT]
	XCALL W_DISP(W_ID,WD_POS,ROW,COL,ENTRY(1,11))
	GOTO (W3_ANYCN),CNGCTL

W3_ANYCN,
	XCALL WANCN (W_ID,10,CNGCTL,WHATNO)
	GOTO (W3_PROCES,W3_CNGBR),CNGCTL+1
W3_CNGBR,
	GOTO (ITEMNO,DESCR,SUOFM,STOCK,PRDCAT,REOLVL,AVGCST),WHATNO
	GOTO W3_ANYCN

W3_PROCES,
	SWITCH = 5
	XCALL FILES(33,'U',041,SWITCH)
;;;	IF(SWITCH .EQ. 33)
	IF(SWITCH .EQ. 9)
		BEGIN
		XCALL OLMSG (W_ID,10,'CANNOT OPEN ITMMAS',2)
		GOTO END_ADD
		END
	CHN41A = 33

	XCALL FILES(34,'U',042,SWITCH)
	IF (SWITCH .EQ. 9)
		BEGIN
		XCALL OLMSG (W_ID,10,'CANNOT OPEN ITMIDX',2)
		GOTO END_ADD
		END

	USRDEF = XPRDCAT
	TXFLAG = 'Y'
	LOC = DFLTLO

	XCALL IO(CHN41A,ITMCTL,1,READ,LOKCTL)
	INCR REC041

	ITEMNO = XITEM
	DESCR = XDESCR
	PRDCAT = XPRDCAT
	REOLVL = XREOLVL
	AVGCST = XAVGCST
	STOCK = XSTOCK
	SUOFM = XSUOFM

	XCALL IO(CHN41A,ITMMAS,REC041,WRITE,LOKCTL)

	IITMNO = ITEMNO
	IRC041 = REC041
	IPRCAT = PRDCAT
	XCALL IO(CHN42A,ITMIDX,REC041,WRITE,LOKCTL)

	XCALL IO(CHN41A,ITMCTL,1,WRITE,LOKCTL)
	CLOSE CHN41A
	CLOSE CHN42A
	ADDOK = 1		;SUCCESS

END_ADD,
	XCALL W_PROC(WP_REMOVE,WND_3)
	XCALL W_PROC(WP_DELETE,WND_3)
	W_ID = WND_1
	RETURN
;-------------------------------------------------

;**********************************************************************
INPUT,
	XCALL WINPT (W_ID,ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL)
	RETURN

;**********************************************************************

DSNOTS,
	IF (LPONCD.EQ.BLANKS) GO TO SCNDNT
	XCALL W_DISP(W_ID,WD_POS,02,13,LPONCD(1))
	TBLKEY =
	TKEYCD = LPONCD(1)
	CALL NTSRCH
	IF (SRCCTL.EQ.0) GO TO FOUND1
	IF (LPONCD(1).NE.BLANKS) XCALL W_DISP(W_ID,WD_POS,02,17,'CODE NOT ON FILE',1)
	GO TO SCNDNT
FOUND1,
	XCALL W_DISP(W_ID,WD_POS,02,17,TDESC)
SCNDNT,
	IF (LPONCD.EQ.BLANKS) GO TO THRDNT
	XCALL W_DISP(W_ID,WD_POS,03,13,LPONCD(2))
	TBLKEY =
	TKEYCD = LPONCD(2)
	CALL NTSRCH

	IF (SRCCTL.EQ.0) GO TO FOUND2
	IF (LPONCD(2).NE.BLANKS) XCALL W_DISP(W_ID,WD_POS,03,17,'CODE NOT ON FILE',1)
	GO TO THRDNT
FOUND2,
	XCALL W_DISP(W_ID,WD_POS,03,17,TDESC)
THRDNT,
	XCALL W_DISP(W_ID,WD_POS,04,13,LPONTE(1))
	XCALL W_DISP(W_ID,WD_POS,05,17,LPONTE(2))
	XCALL W_DISP(W_ID,WD_POS,06,17,LPONTE(3))		;(01)
	XCALL W_DISP(W_ID,WD_POS,07,17,LPONTE(4))		;(01)
	RETURN

;**********************************************************************
;	DISPLAYS THE LINE INFO ON THE SCREEN
;**********************************************************************

DISPLA,
	SRCCTL =
	ITMMAS =
	ITMIDX =
	AITMNO(1,15) = LITMNO
	XCALL SERCH (6,ITMIDX,AITMNO,1,15,ORG041,BSMID,SRCCTL,SRCOPT,16,20,0,0,0,0)
	UNLOCK 6
	IF (SRCCTL.EQ.1) GO TO SKIP
	XCALL IO (7,ITMMAS,IRC041,READ,LOKCTL)

	UNLOCK 7
SKIP,
	AITMNO = LITMNO
	IF (RJUST) XCALL LEFTJ(AITMNO(1,15),15)
	XCALL W_DISP(W_ID,WD_POS,5,5,AITMNO)
	XCALL W_DISP(W_ID,WD_POS,6,5,LITMDS)

	AENTRY(1,6) = LQTYOR,'ZZZZZX' [left]
	XCALL W_DISP(W_ID,WD_POS,05,33, AENTRY(1,6))

	XCALL W_DISP(W_ID,WD_POS,5,44,LITMUM)
	AENTRY = LEXCST,'ZZZX.XXXX' [left]
	XCALL W_DISP(W_ID,WD_POS,5,54,AENTRY)

	EXTCST = (LQTYOR*LEXCST)#2
	ENTRY(1,11) = EXTCST,	'ZZZ,ZZX.XX-'
	XCALL W_DISP(W_ID,WD_POS,5,65,ENTRY(1,11))

	XCALL W_UPDT

CHKLIN,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; MARKS HEADER AND LINE RECORDS IF ANY CHANGE 
	;;; HAS BEEN MADE TO LINE
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	IF (LINSTS.EQ.'N'.OR.LINSTS.EQ.'X') RETURN
	IF (HPOSTS.NE.'P') RETURN
	IF (POLINE(61,82).NE.OLDLIN(61,82)) GO TO CNG
	IF (POLINE(89,98).NE.OLDLIN(89,98)) GO TO CNG
	IF (POLINE(111,116).NE.OLDLIN(111,116)) GO TO CNG
	IF (POLINE(130,135).NE.OLDLIN(130,135)) GO TO CNG
	IF (POLINE(161,224).NE.OLDLIN(161,224)) GO TO CNG
	RETURN
CNG,
	HCXCDE = 'C'
	LCXCDE = 'C'
	RETURN
;--------------------------------------------------

LOAD_LINE_ITEMS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
			;;; LOAD EXISTIN LINE ITEMS INTO WND_2
			;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; restore current line items...
	XCALL W_PROC(WP_REMOVE,WND_2)
	XCALL W_PROC(WP_DELETE,WND_2)
	CALL CREATE_WND2

	XCALL FILNM(CHN152, F_POLINE)	;GET THE FILE NAME
	CLOSE CHN152
	OPEN(CHN152, SI, F_POLINE)

	FIND (CHN152, POLINE, HPONUM) [ERR=RES_LOOP, EOF=RES_EOF]
RES_LOOP,
	LOKCTL = 1
	XCALL IOS (CHN152,POLINE,READ,LOKCTL)
	IF (LOKCTL .NE. 0) GOTO RES_EOF
	IF (LPONUM .NE. HPONUM) GOTO RES_EOF
	EXEPRC = (LQTYOR*LEXCST)#2

	XCALL W_AREA(WND_2, WA_SCROLL, WAS_UP, 1)
	CLEAR W2_LINE
	W2_NUM = LLINNO,	'ZZX' [LEFT]
	W2_ITEM = LITMNO
;;;W2_ITEM(14,14) = LINSTS
	W2_DESCR = LITMDS
	W2_QTY = LQTYOR,	'ZZZZZZ-'
	W2_PRICE = LEXCST,	'ZZZX.XXXX'
	W2_UOFM = LITMUM
	W2_EXT = EXEPRC,	'ZZZ,ZZX.XX-'
	XCALL W_DISP(WND_2, WD_POS, 14, 1, W2_LINE)
	XCALL W_UPDT
	GOTO RES_LOOP
RES_EOF,
;;;	UNLOCK CHN152
	CLOSE CHN152
	OPEN(CHN152, SU, F_POLINE)
	RETURN
;----------------------------------------------------

;===========================================================

INIT_WINDOW,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; SET UP SCREEN 1 WINDOW
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	WN_NAME = 'LINEX'

	XCALL W_PROC(WP_FIND,WND_1,WN_NAME)
	IF (.NOT. WND_1)
		BEGIN
		XCALL W_PROC(WP_CREATE,WND_1,WN_NAME,0,0)
		END
	XCALL W_BRDR(WND_1,WB_TITLE,'PURCHASE ORDERS',
&			WB_TPOS,WBT_TOP,WBT_CENTER)
	XCALL W_PROC(WP_PLACE,WND_1,1,1)	
	XCALL W_DISP(WND_1,WD_CLEAR)

	W_ID = WND_1

	CALL CREATE_WND2

;-
	XCALL W_PROC(WP_CREATE, WND_D, 'DAMPER',5, 42)
	XCALL W_DISP(WND_D, WD_CLEAR)
;-
	XCALL W_PROC(WP_FIND,WND_4,'LNOTES')
	IF (.NOT. WND_4)
		BEGIN
		XCALL W_PROC(WP_CREATE,WND_4,"LNOTES",10,50)
		END
	XCALL W_BRDR(WND_4,WB_TITLE,'NOTES',WB_TPOS,WBT_TOP,WBT_CENTER)

;pop info:
	MAXARA = 10
	NUMROW = 10
	POP_WID = "ISCAN"
	POP_TITLE = "DESC SCAN"
	WX = 10
	WY = 10
	PLEN = 50
	RETURN
;---------------------------------------

CREATE_WND2,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL W_PROC(WP_FIND,WND_2,'SCROL')
	IF (.NOT. WND_2)
		BEGIN
		XCALL W_PROC(WP_CREATE, WND_2, 'SCROL',10, 78)
		XCALL W_BRDR(WND_2,WB_TITLE,'LINE ITEMS',
&			WB_TPOS,WBT_TOP,WBT_CENTER)
		END
	XCALL W_PROC(WP_PLACE, WND_2, 8, 0)
	XCALL W_DISP(WND_2, WD_CLEAR)
	WLEN = 78
	RETURN
;--------------------------------------------------------

END

