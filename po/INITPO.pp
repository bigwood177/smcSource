; INITPO / POR - D11
;
;		PROGRAM TO INITIALIZE ALL FILES IN THE PURCHASE ORDER
;		& RECEIVING SYSTEM
;

RECORD DUMHDR
	.INCLUDE 'DEF:RD151B.DEF'

RECORD DUMLIN
	.INCLUDE 'DEF:RD152B.DEF'

RECORD FILES
	PO1	,A14,	'   :PORHDR.   '
	PO2	,A14,	'   :PORLIN.   '
	PO3	,A14,	'   :PORTBL.   '
	PO4	,A14,	'   :RCVHST.   '

RECORD ,X
	PO	,4A14

RECORD FILBL
	FILNAM	,A14
		,A1,	'['
	FILSIZ	,D5
		,A1,	']'

RECORD DEVICE
				; DEVICE RECORD - DEV001.DEF
				; MAIN RECORD DEFINITION FOR "DEVICE.DDF"
				; RECORD LENGTH - 46
		,A6		; FILE NAME
	DEVNAM	,8A3		; DEVICE FOR FILE IN ORDER BY COMPANY LOC
		,8D2		; 0-NOT USED, 1-98-INUSE, 99-PROTECTED
;-
RECORD COMPNY
	COMCOD	,8A3

RECORD CTLVAR
		,A10
		,D2,	00
		,D10,	0000100001
	MAXREC	,D5
		,D3,	000

RECORD BRACKS
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A19,	']]]]]]]]]]]]]]]]]]]'
RECORD
	BLANKS	,A10
	WRTREC	,A256
	LOKCTL	,D1
	FILCNT	,D2,	00
	MAXCNT	,4D5
	RECSIZ	,4D3,	142,319,035,185
	BLKSIZ	,4D5
	ENTRY	,A6
	SWITCH	,D1
	FILNUM	,4D3,	151,152,153,154
	INXCTL	,D1
	CNGCTL	,D1
	NOABRT	,D1,	1
	WHATNO	,D2
	RECCNT	,D5
	V	,D1
	CPYEXT	,A3
	CPNTR	,D2
	READ	,D1, 0
	WRITE	,D1, 1

RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2


PROC
	XCALL TERID (V)
	V = 1
	XCALL OUTPT (1,1,3,'INITIALIZE PURCHASE ORDER AND RECEIVING FILES',V)

	OPEN (2,I,'UT:COMPNY')
	LOKCTL = NOABRT
	XCALL IO (2,COMPNY,1,READ,LOKCTL)
	CLOSE 2
	OPEN (2,I,'UT:DEVICE')
BEGIN,
	CTLVAR(1,10) =
	CNGCTL =
	XCALL OUTPT (2,1,2,'\',V)
	XCALL OUTPT (6,23,0,'1. COMPANY CODE',V)
	XCALL OUTPT (8,8,0,
&	  'PLEASE ENTER THE MAX NUMBER OF RECORDS TO ALLOW FOR EACH FILE:',V)
	XCALL OUTPT (10,23,0,'2. PURCHASE ORDER HEADER FILE',V)
	XCALL OUTPT (12,23,0,'3. PURCHASE ORDER LINE FILE',V)
	XCALL OUTPT (14,23,0,'4. P/O TABLES FILE',V)
	XCALL OUTPT (16,23,0,'5. RECEIVINGS HISTORY FILE',V)

INPUT1,
	CTL = '06,40,03,03,AE'
	CALL INPUT
	GO TO (BEGIN,ENDOFF), INXCTL
	CPYEXT = ENTRY(1,3)
	CPNTR =
FINDCO,
	INCR CPNTR
	IF (CPNTR.GT.8) GO TO CMPNTF
	IF (COMCOD(CPNTR).NE.CPYEXT) GO TO FINDCO
	GO TO (ANYCNG), CNGCTL
	GO TO INPUT2
CMPNTF,
	XCALL MESAG ('INVALID COMPANY CODE',2)
	GO TO INPUT1
INPUT2,					; NUMBER OF RECORDS FOR PORHDR
	CTL = '10,54,04,00,# '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	XCALL FRMAT (ENTRY,6)
	MAXCNT(1) = ENTRY
	XCALL DSPLY (5,10,54,MAXCNT(1),1,V)
	GO TO (ANYCNG), CNGCTL
INPUT3,					; NUMBER OF RECORDS FOR PORLIN
	CTL = '12,54,05,00,# '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	XCALL FRMAT (ENTRY,6)
	MAXCNT(2) = ENTRY
	XCALL DSPLY (5,12,54,MAXCNT(2),1,V)
	GO TO (ANYCNG), CNGCTL
INPUT4,					; NUMBER OF RECORDS FOR PORTBL
	CTL = '14,54,03,00,# '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	XCALL FRMAT (ENTRY,6)
	MAXCNT(3) = ENTRY
	XCALL DSPLY (5,14,54,MAXCNT(3),1,V)
	GO TO (ANYCNG), CNGCTL
INPUT5,					; NUMBER OF RECORDS FOR RCVHST
	CTL = '16,54,04,00,# '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	XCALL FRMAT (ENTRY,6)
	MAXCNT(4) = ENTRY
	XCALL DSPLY (5,16,54,MAXCNT(4),1,V)
	GO TO (ANYCNG), CNGCTL


;*************************************************************************

ANYCNG,
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (PROCES,CNGBR), CNGCTL + 1
BADCNG,
	CNGCTL = 3
	GO TO ANYCNG

CNGBR,
	GO TO (INPUT1,INPUT2,INPUT3,INPUT4,INPUT5), WHATNO
	GO TO BADCNG

;*************************************************************************

PROCES,
	XCALL WATE (1,V)

	LOKCTL = NOABRT
	XCALL IO (2,DEVICE,151,READ,LOKCTL)			; PORHDR
	PO1(1,3) = DEVNAM(CPNTR)
	IF (PO1(1,3).EQ.'   ') GO TO NODEV
	PO1(12,14) = CPYEXT

	LOKCTL = NOABRT
	XCALL IO (2,DEVICE,152,READ,LOKCTL)			; PORLIN
	PO2(1,3) = DEVNAM(CPNTR)
	IF (PO2(1,3).EQ.'   ') GO TO NODEV
	PO2(12,14) = CPYEXT

	LOKCTL = NOABRT
	XCALL IO (2,DEVICE,153,READ,LOKCTL)			; PORTBL
	PO3(1,3) = DEVNAM(CPNTR)
	IF (PO3(1,3).EQ.'   ') GO TO NODEV
	PO3(12,14) = CPYEXT

	LOKCTL = NOABRT
	XCALL IO (2,DEVICE,154,READ,LOKCTL)			; RCVHST
	PO4(1,3) = DEVNAM(CPNTR)
	IF (PO4(1,3).EQ.'   ') GO TO NODEV
	PO4(12,14) = CPYEXT
PROCS1,
	FILCNT =
BLOCKS,
	INCR FILCNT
	IF (FILCNT.GT.4) GO TO WRLOOP
	BLKSIZ (FILCNT) = (((RECSIZ(FILCNT)+2)*(MAXCNT(FILCNT)+2))/512) + 1
	GO TO BLOCKS
WRLOOP,
	FILCNT =
WRLOP1,
	INCR FILCNT
	IF (FILCNT.GT.4) GO TO DFLTS
	IF (MAXCNT(FILCNT).EQ.0) GO TO WRLOP1
	MAXREC = MAXCNT(FILCNT) + 1
	WRTREC =

	WRTREC(RECSIZ(FILCNT)-17,RECSIZ(FILCNT)) = CTLVAR(13,30)
OPEFIL,
	FILNAM = PO(FILCNT)
	FILSIZ = BLKSIZ(FILCNT)
	ONERROR FULFIL
	OPEN (1,O,FILBL)
	OFFERROR
	LOKCTL = 1
	XCALL IOS (1,WRTREC(1,RECSIZ(FILCNT)),WRITE,LOKCTL)
	RECCNT = 1
WRBRKS,
	INCR RECCNT
	IF (RECCNT.GT.MAXREC+1) GO TO WRTDUN
	LOKCTL = 1
	XCALL IOS (1,BRACKS(1,RECSIZ(FILCNT)),WRITE,LOKCTL)
	GO TO WRBRKS
WRTDUN,
	CLOSE 1
	WRTREC =
	GO TO WRLOP1
;***********************************************************************
ENDOFF,
	CLOSE 2
	CLOSE 15
	XCALL PGMND
	STOP
;**********************************************************************
NODEV,
	XCALL MESAG ('ERROR--NO DEVICE SPECIFIED VIA SECURITY SYSTEM-EXITING',2)
	STOP
;**********************************************************************
FULFIL,
	XCALL OUTPT (22,1,0,'NOT ENOUGH ROOM ON DEVICE FOR ',V)
	DISPLAY (15,PO(FILCNT))
	XCALL MESAG (' ',1)
	GO TO ENDOFF
;*************************************************************************
; THIS SECTION ASKS FOR THE STARTING P/O NUMBER AND DEFAULT VALUES
;**********************************************************************

DFLTS,
	XCALL WATE (3,V)
	OPEN (3,U,PO1)
	LOKCTL = 0
	XCALL IO (3,DUMHDR,1,READ,LOKCTL)
	IF (LOKCTL.EQ.1) GO TO CLOSE3

	OPEN (4,U,PO2)
	LOKCTL = 0
	XCALL IO (4,DUMLIN,1,READ,LOKCTL)
	IF (LOKCTL.EQ.1) GO TO CLOSE4

	XCALL OUTPT (0,0,3,'INITIALIZE PURCHASE ORDER AND RECEIVING FILES',V)
	XCALL OUTPT (6,13,0,
&	'PLEASE ENTER DEFAULT VALUES FOR THE FOLLOWING FIELDS:',V)
	XCALL OUTPT (8,25,0,'1. STARTING P/O NUMBER',V)
	XCALL OUTPT (10,25,0,'2. SHIP TO',V)
	XCALL OUTPT (12,25,0,'3. BUYER',V)
	XCALL OUTPT (14,25,0,'4. NOTIFY',V)
	XCALL OUTPT (16,25,0,'5. MOVE TO',V)
	XCALL OUTPT (18,25,0,'6. PERCENT OVERSHIP',V)
	XCALL OUTPT (20,25,0,'7. PERCENT EARLY-SHIP',V)
PONUM,
	CTL = '08,49,06,00,#E'
	CALL INPUT
	GO TO (DFLTS,BEGIN),INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO PONUM2
;;;	NPONUM = ENTRY
;;;	XCALL DSPLY (6,08,49,NPONUM,1,V)
;;;	NPONUM = NPONUM - 1
PONUM2,
	GO TO (ANYCH),CNGCTL
SHIPTO,
	CTL = '10,49,02,00,A '
	CALL INPUT
	GO TO (DFLTS),INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO SHIPT2
	DSHPTO= ENTRY(1,2)
	XCALL OUTPT (10,49,0,DSHPTO,V)
SHIPT2,
	GO TO (ANYCH),CNGCTL
BUYER,
	CTL = '12,49,02,00,A '
	CALL INPUT
	GO TO (DFLTS),INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO BUYER2
	DBUYER = ENTRY(1,2)
	XCALL OUTPT (12,49,0,DBUYER,V)
BUYER2,
	GO TO (ANYCH),CNGCTL
NOTIFY,
	CTL = '14,49,03,00,A '
	CALL INPUT
	GO TO (DFLTS),INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO NOTIF2
	DNOTIF = ENTRY(1,3)
	XCALL OUTPT (14,49,0,DNOTIF,V)
NOTIF2,
	GO TO (ANYCH),CNGCTL
MOVETO,
	CTL = '16,49,03,00,A '
	CALL INPUT
	GO TO (DFLTS),INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO MOVET2
	DMOVET = ENTRY(1,3)
	XCALL OUTPT (16,49,0,DMOVET,V)
MOVET2,
	GO TO (ANYCH),CNGCTL
OVSHP,
	CTL = '18,49,02,00,# '
	CALL INPUT
	GO TO (DFLTS),INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO OVSHP2
	OVRSHP = ENTRY(1,2)
	XCALL DSPLY (2,18,49,OVRSHP,1,V)
OVSHP2,
	GO TO (ANYCH),CNGCTL
ERSHP,
	CTL = '20,49,02,00,# '
	CALL INPUT
	GO TO (DFLTS),INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO ANYCH
	ERLSHP = ENTRY(1,2)
	XCALL DSPLY (2,20,49,ERLSHP,1,V)
ANYCH,
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (WRIT,BRANCH),CNGCTL + 1
BADCHA,
	CNGCTL = 3
	GO TO ANYCH
BRANCH,
	GO TO (PONUM,SHIPTO,BUYER,NOTIFY,MOVETO,OVSHP,ERSHP),WHATNO
	GO TO BADCHA
;**********************************************************************
; THIS SECTION WRITES THE CONTROL RECORDS FOR PORHDR AND PORLIN
;**********************************************************************
WRIT,
	LOKCTL = NOABRT
	XCALL IO (3,DUMHDR,1,WRITE,LOKCTL)
	LOKCTL = NOABRT
	XCALL IO (4,DUMLIN,1,WRITE,LOKCTL)
CLOSE4,
	CLOSE 4
CLOSE3,
	CLOSE 3
	GO TO BEGIN
;**********************************************************************
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
;**********************************************************************

END

