;  POEDLS isam
;
;
;		PRINT PURCHASE ORDER EDIT LIST
;

RECORD	POSHIP
	.INCLUDE 'DEF:RD149A.DEF'

RECORD	COPTBL
	.INCLUDE 'DEF:RD182A.DEF'

RECORD HEADER	
	.INCLUDE 'DEF:RD151A.DEF'

RECORD POLINE	
	.INCLUDE 'DEF:RD152A.DEF'

RECORD DUMTBL	
	.INCLUDE 'DEF:RD153B.DEF'

RECORD VENDOR	
	.INCLUDE 'DEF:RD011A.DEF'

RECORD DUMVEN		
	.INCLUDE 'DEF:RD011B.DEF'

;;;RECORD VENIDX	
;;;	.INCLUDE 'DEF:RD012A.DEF'

RECORD	ITMMAS
	.INCLUDE 'DEF:RD041A.def'
RECORD INVCTL,X
	.INCLUDE 'DEF:RD041B.def'

RECORD KEYPON
	KEY1	,D6
	KEY2	,D2

RECORD PLINE
		,A132

RECORD LINE1,X
		,A10
	KPONUM	,A6
	KDASH	,A1
	KRLNUM	,A2
		,A16
	KVNADR	,A30
		,A11
	KSHPTO	,A30
		,A12
	KCXCDE	,A1
		,A10
	KSTATS	,A1
		,A2
RECORD LINE2,X
		,A10
	KPODTE	,A10
		,A101
	KPOWGT	,A8
		,A3
RECORD LINE9,X
		,A1
	KLSTAT	,A1
		,A5
	KLVENO	,A20
		,A3
	KNOTE	,A30
		,A3
	KCMDTY	,A4
		,A38
	KMOVET	,A3
		,A24
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD TBL
	TTBLNO	,18D2
	TCODE	,18A2
	TSEQNO	,18D1
	TDESC	,18A30

RECORD TABLE
	TNO	,D2
	CDE	,A2
	SQ	,D1
	DSC	,A30

RECORD OBLKEY
	TKEYNO	,D2
	TKEYCD	,A2
	TKEYSQ	,D1

RECORD RANGE1
	STPONO	,D6
	STRLNO	,D2
	ENPONO	,D6
	ENRLNO	,D2

RECORD RANGE2
	STPODA	,D8
	ENPODA	,D8
	ORDTYP	,A1
	ISSTYP	,A1
RECORD MENLIN
	MCODE	,A2
		,A3,	' = '
	MDESC	,A30
RECORD LABEL1
		,A45,	'P/O NMBR:            ORDERED FROM:           '
		,A45, 	'                      SHIP TO:               '
		,A42	;;;>,	'                  C/X CODE:    STATUS:    '
RECORD LABEL2
		,A45,	'P/O DATE:                                    '
		,A45,	'                                             '
		,A42,	'                  P/O WEIGHT:             '
RECORD LABEL3
		,A40,	'VENDOR #:        CONFIRM:      TERMS:   '
		,A40,	'          COL/PPD:    FOB:            SH'
		,A40,	'IP VIA:                  BUYER:         '
		,A12
RECORD	LABEL4
		,A40,	'LINE #  ITEM-NO         ITEM-DESCRIPTION'
		,A40,	'                UM  QTY-REJ  QTY-REC  QT'
		,A40,	'Y-ORD       COST     LINE-COST          '
		,A12
;                        1234567890123456789012345678901234567890

RECORD	CHANNEL
	CHN011	,D2
	CHN041	,D2
	CHN149	,D2	
	CHN151	,D2
	CHN152	,D2
	CHN153	,D2
	CHN182	,D2

RECORD	VARS
	OPNOK	,D1
	HIST	,A1
	TOTCST	,D10
	ADDR	,6A31
	SHPTO	,5A30
	ALF	,A2
	ALL	,D1
	BLANKS	,A31
	A30	,A30
	BRACKS	,A30,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
	BSMID	,D5
	BUYER	,A2
	CNGCTL	,D1
	DECMAL	,D4
	DSPSW	,D1
	ENTRY	,A30
	EOF	,D1
	EPO	,D1
	HDATE	,D8
	HRECNO	,D5
	INXCTL	,D1
	ISSCDE	,3A1,	'N','C','X'
	ISSNAM	,3A8,	'ORIGINAL','CHANGE  ','CANCEL  '
	LINCNT	,D2,	60
	LINCTL	,D1
	LOKCTL	,D1
	LPSW	,D1
	LRECNO	,D5
	LSTAT	,D1
	LSTATS	,5A8,	'NEW     ','PRINTED ','RECEIVED',
&			'INVOICED','CLOSED  '
	MUSTPT	,D1
	MSGCTL	,D1
	N	,D2
	NOABRT	,D1,	1
	OLDCNT	,D2
	PGCNT	,D3,	000
	PRTCTL	,D3
	PRTTYP	,A1
	READ	,D1,	0
	RECNO	,D5
	RPTNUM	,D3
	SHIPTO	,A2
	SPLFIL	,A14
	SRCOPT	,D1
	SRCCTL	,D1
	STANAM	,5A10,	'UNRELEASED','RELEASED  ','PRINTED   ',
&			'CLOSED    ','CANCELLED '
	STATUS	,A1
	STATYP	,5A1,	'U','R','P','C','X'
	SUB	,D2
	SWITCH	,D1
	TBLNUM	,D2
	TITLE	,A24,	'PURCHASE ORDER EDIT LIST'
	TLIMIT	,D2
	TODAY	,D8
	TYPCDE	,3A1,	'N','B','R'
	TYPNAM	,3A7,	'NORMAL ','BLANKET','RELEASE'
	V	,D1
	VADR	,4A30
	VENDNO	,A4
	WHATNO	,D2
	WRECNO	,D5
	WTARG	,D1,	2
	RJUST	,D1
	XXCST,	D18


PROC
	XCALL TERID (V)
	V = 1
	XCALL OUTPT (2,1,2,'\',1)
	XCALL WATE (4,V)
;;;	XCALL RDAT8 (TODAY)
	SPLFIL(5,6) = 'N1'


BEGIN,
	CNGCTL =
	LPSW = 1
	PGCNT =
	LINCNT = 60
	ALL = 1
	XCALL OUTPT (1,1,3,'PURCHASE ORDER ENTRY',V)
	XCALL OUTPT (2,1,0,'PURCHASE ORDER EDIT LIST',V)
	XCALL OUTPT (06,03,0,'1. STARTING P/O NUMBER ',V)
	XCALL OUTPT (08,03,0,'2. ENDING P/O NUMBER ',V)
	XCALL OUTPT (10,03,0,'3. STARTING P/O DATE ',V)
	XCALL OUTPT (12,03,0,'4. ENDING P/O DATE ',V)
	XCALL OUTPT (14,03,0,'5. P/O TYPE',V)
	XCALL OUTPT (16,03,0,'6. P/O STATUS',V)
	XCALL OUTPT (18,03,0,'7. VENDOR NUMBER',V)
	XCALL OUTPT (20,03,0,'8. SHIP TO',V)
	XCALL OUTPT (06,45,0,'9. BUYER',V)
	XCALL OUTPT (08,44,0,'10. P/O LINE STATUS',V)
	XCALL OUTPT (10,44,0,'11. CURRENT/HISTORIC PO (C/H)',V)
STARPO,
	CTL = '06,27,06,00,#E'
	CALL INPUT
	GO TO (BEGIN,EXIT), INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO ALLPO
	ALL =
	STPONO = ENTRY(1,6)
	ENTRY(1,6) = STPONO,'ZZZZXX'
	XCALL OUTPT (6,27,0,ENTRY(1,6),V)
	STRLNO =

	IF (ENPONO.EQ.999999.AND.ENRLNO.EQ.99) GO TO ENDNO2
	IF (CNGCTL.NE.1) GO TO ENDNO2
	IF (ENPONO.LT.STPONO) GO TO MSG1
	GO TO ANYCNG
ENDNO,
	IF (ENPONO.EQ.999999.AND.ENRLNO.EQ.99) GO TO STARPO
ENDNO2,
	CTL = '08,27,06,00,# '
	CALL INPUT
	IF (INXCTL.EQ.1) GO TO BEGIN
	IF (ENTRY.EQ.BLANKS) ENTRY(1,6) = STPONO
	ENPONO = ENTRY(1,6)
	ENTRY(1,6) = ENPONO,'ZZZZXX'
	XCALL OUTPT (08,27,0,ENTRY(1,6),V)
	ENRLNO =

	IF (ENPONO.LT.STPONO) GO TO MSG1
	IF (ENPONO.EQ.STPONO.AND.ENRLNO.LT.STRLNO) GO TO MSG1
ENDNO3,
	GO TO (ANYCNG), CNGCTL
STDTE,
	CTL = '10,27,08,00,D '
	CALL INPUT
	IF (INXCTL.EQ.1) GO TO BEGIN
	IF (ENTRY.EQ.BLANKS) GO TO ALLDTE
	ALL =
	STPODA = ENTRY(1,8)

	IF (ENPODA.EQ.99999999) GO TO ENDTE2
	IF (CNGCTL.NE.1) GO TO ENDTE2
	IF (ENPODA.LT.STPODA) GO TO MSG2
	GO TO ANYCNG
ENDTE,
	IF (ENPODA.EQ.99999999) GO TO STDTE
ENDTE2,
	CTL = '12,27,08,00,D '
	CALL INPUT
	IF (INXCTL.EQ.1) GO TO BEGIN
	IF (ENTRY.EQ.BLANKS) GO TO SAMEDA
	ENPODA = ENTRY(1,8)

	IF (ENPODA.LT.STPODA) GO TO MSG2
ENDTE3,
	GO TO (ANYCNG),CNGCTL
ORDER,
	XCALL OUTPT (12,40,0,'1 = NORMAL ',V)
	XCALL OUTPT (14,30,0,'          2 = BLANKET ',V)
	XCALL OUTPT (16,40,0,'3 = RELEASE ',V)
	CTL = '14,27,01,00,# '
	CALL INPUT
	IF (INXCTL.EQ.1) GO TO BEGIN
	IF (ENTRY.EQ.BLANKS) GO TO ALLORD
	ALL =
	N = ENTRY
	IF (N.LT.1.OR.N.GT.3) GO TO ORDER
	ORDTYP = TYPCDE(N)
	XCALL OUTPT (ROW,COL,0,TYPNAM(N),V)
ORDER2,
	CALL CLRMEN
	GO TO (ANYCNG), CNGCTL
STATUS,
	XCALL OUTPT (12,40,0,'1 = UNRELEASED',V)
	XCALL OUTPT (14,40,0,'2 = RELEASED',V)
	XCALL OUTPT (16,30,0,'          3 = PRINTED',V)
	XCALL OUTPT (18,40,0,'4 = CLOSED',V)
	XCALL OUTPT (20,40,0,'5 = CANCELLED',V)
	CTL = '16,27,01,00,# '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO ALSTAT
	ALL =
	SUB = ENTRY(1,1)
	IF (SUB.LT.1.OR.SUB.GT.5) GO TO STATUS
	STATUS = STATYP(SUB)
	XCALL OUTPT (ROW,COL,0,STANAM(SUB),V)
ENSTAT,
	CALL CLRMEN
	GO TO (ANYCNG), CNGCTL
VENENT,
	CTL = '18,27,04,00,A '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (ENTRY(1,4).EQ.BLANKS) GO TO ALLVEN
	ALL =
	XCALL FRMAT (ENTRY,4)
	VENDNO = ENTRY(1,4)
	XCALL OUTPT (ROW,COL,0,VENDNO,V)
ENDVEN,
	GO TO (ANYCNG), CNGCTL
SHIPTO,
	TBLNUM = 01
	CALL FNDTBL
	SUB =
	CALL SUBMNU
ASKSHP,
	CTL = '20,27,02,00,AT'
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (INXCTL.EQ.3) CALL SUBMNU
	IF (INXCTL.EQ.3) GO TO ASKSHP
	ALF = ENTRY (1,2)
	CALL GETSUB
	IF (SUB.GT.TLIMIT) GO TO ASKSHP
	IF (ENTRY.EQ.BLANKS) GO TO ALLSHP
	ALL =
	SHIPTO = TCODE(SUB)
	XCALL OUTPT (ROW,COL,0,TCODE(SUB),V)
ENDSHP,
	CALL CLRMEN
	GO TO (ANYCNG), CNGCTL
BUYER,
	TBLNUM = 02
	CALL FNDTBL
	SUB =
	CALL SUBMNU
ASKBYR,
	CTL = '06,65,02,00,AT'
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (INXCTL.EQ.3) CALL SUBMNU
	IF (INXCTL.EQ.3) GO TO ASKBYR
	ALF = ENTRY(1,2)
	CALL GETSUB
	IF (SUB.GT.TLIMIT) GO TO ASKBYR
	IF (ENTRY.EQ.BLANKS) GO TO ALLBYR
	ALL =
	BUYER = TCODE(SUB)
	XCALL OUTPT (ROW,COL,0,TCODE(SUB),V)
ENDBYR,
	CALL CLRMEN
	GO TO (ANYCNG), CNGCTL
LSTATS,
	XCALL OUTPT (10,40,0,'ONLY P/OS WITH:',V)
	XCALL OUTPT (12,40,0,'1 = ONE OR MORE NEW LINES',V)
	XCALL OUTPT (14,40,0,'2 = ALL LINES PRINTED',V)
	XCALL OUTPT (16,40,0,'3 = ALL LINES RECEIVED',V)
	XCALL OUTPT (18,40,0,'4 = ALL LINES INVOICED',V)
	XCALL OUTPT (20,40,0,'5 = ALL LINES CLOSED',V)

	CTL = '08,65,01,00,# '
	CALL INPUT
	GO TO (BEGIN), INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO ALLINS
	ALL =
	LSTAT = ENTRY(1,1)
	IF (LSTAT.LT.1.OR.LSTAT.GT.5) GO TO LSTATS
	XCALL OUTPT (ROW,COL,0,LSTATS(LSTAT),V)
ENDLST,
	XCALL OUTPT (10,40,1,'\',V)
	CALL CLRMEN
	GO TO (ANYCNG), CNGCTL
HIST,
	XCALL OUTPT (10,44,0,'11. CURRENT/HISTORIC PO (C/H)',V)
	CTL = '10,77,01,00,A '
	CALL INPUT
	GOTO (BEGIN),INXCTL
	HIST = ENTRY(1,1)
	USING HIST SELECT
	('C','H'),	NOP
	(),		GOTO HIST
	ENDUSING

ANYCNG,
	WHATNO =
	XCALL ANYCN (CNGCTL,WHATNO)
	IF (CNGCTL.EQ.0) GO TO PROCES
CNGBR,
	GO TO (STARPO,ENDNO,STDTE,ENDTE,ORDER,STATUS,VENENT,SHIPTO,
&		BUYER,LSTATS,HIST), WHATNO
BADCNG,
	CNGCTL = 3
	GO TO ANYCNG
;**********************************************************************
ALLPO,
	XCALL OUTPT (06,27,0,'ALL      ',V)
	XCALL OUTPT (08,27,0,'         ',V)
	STPONO =
	STRLNO =
	ENPONO = 999999
	ENRLNO = 99
	GO TO ENDNO3
;**********************************************************************
MSG1,
	XCALL MESAG ('STARTING/ENDING PO NUMBERS ARE OUT OF ORDER',1)
	ENPONO = 999999
	ENRLNO = 99
	GO TO STARPO
;**********************************************************************
ALLDTE,
	XCALL OUTPT (10,27,0,'ALL      ',V)
	XCALL OUTPT (12,27,0,'         ',V)
	STPODA =
	ENPODA = 99999999
	GO TO ENDTE3
;**********************************************************************
MSG2,
	XCALL MESAG ('STARTING/ENDING PO DATES ARE OUT OF ORDER',1)
	ENPODA = 99999999
	GO TO STDTE
;**********************************************************************
SAMEDA,
	ENPODA = STPODA
	HDATE(1,4) = ENPODA(5,8)
	HDATE(5,8) = ENPODA(1,4)
	ENTRY(1,10) = HDATE,	'XX/XX/XXXX'
	XCALL OUTPT (ROW,COL,0,ENTRY(1,10),V)

;;;	ENTRY(1,5) = STPODA(3,6), 'XX/XX'
;;;	ENTRY(6,8) = STPODA(1,2), '/XX'
;;;	XCALL OUTPT (ROW,COL,0,ENTRY(1,8),V)
	GO TO (ANYCNG), CNGCTL
	GO TO ORDER
;**********************************************************************
ALLORD,
	XCALL OUTPT (14,27,0,'ALL',V)
	ORDTYP =
	GO TO ORDER2
;**********************************************************************
ALSTAT,
	XCALL OUTPT (16,27,0,'ALL',V)
	STATUS =
	GO TO ENSTAT
;**********************************************************************
ALLVEN,
	XCALL OUTPT (18,27,0,'ALL ',V)
	VENDOR =
	GO TO ENDVEN
;**********************************************************************
;;;ALLTYP,
;;;	XCALL OUTPT (19,27,0,'ALL  ',V)
;;;	HPOTYP =
;;;	GO TO ENDTYP
;**********************************************************************
ALLSHP,
	XCALL OUTPT (20,27,0,'ALL',V)
	SHIPTO =
	GO TO ENDSHP
;**********************************************************************
ALLBYR,
	XCALL OUTPT (06,65,0,'ALL',V)
	BUYER =
	GO TO ENDBYR
;**********************************************************************
ALLINS,
	XCALL OUTPT (08,65,0,'ALL',V)
	LSTAT =
	GO TO ENDLST
;**********************************************************************
;	PRINT CONTROL ROUTINE
;**********************************************************************
PROCES,
	CALL OPENS
	IF (.NOT. OPNOK) GOTO EXIT

	FIND(1,HEADER,^FIRST) [ERR=NONE]
	CALL READHD		;READ FIRST IN-RANGE HEADER & LINE
	IF (EOF) GO TO NONE

	XCALL LPON (LPSW,SPLFIL)
	IF (LPSW.EQ.0) GO TO EXIT
	IF (LPSW.EQ.2) WTARG = 4
	IF (LPSW.NE.4) XCALL WATE (WTARG,V)

	CALL PORUN		;PRINT ALL PURCHASE ORDERS

	XCALL LPOFF (LPSW,SPLFIL,PGCNT)
	IF (ALL) GO TO EXIT
	GO TO BEGIN
;**********************************************************************
NONE,
	XCALL MESAG ('THERE ARE NO PURCHASE ORDERS IN SELECTED RANGE.',2)
	GO TO BEGIN
;**********************************************************************
;	EACH PASS PRINTS ONE PURCHASE ORDER:
;**********************************************************************
PORUN,
	SRCOPT = 4
	BSMID = 1
	SRCCTL = 1
	VENDOR =
	LOKCTL = 1
	XCALL ISIO (4, VENDOR, HVENDR, READ, LOKCTL)
	IF (LOKCTL .EQ. 0)
	THEN	SRCCTL = 0
	ELSE	SRCCTL = 1

;;;	XCALL SERCH (5,VENIDX,HVENDR,1,4,ORG011,BSMID,SRCCTL,SRCOPT,6,10,
;;;&			0,0,0,0)
	IF (SRCCTL.EQ.0) GO TO FOUND
	NAME = 'VENDOR NOT ON FILE'
	GO TO PORUN2
FOUND,
;;;	LOKCTL = NOABRT
;;;	XCALL IO (4,VENDOR,IRC011,READ,LOKCTL)
PORUN2,
	XCALL LINFD (1)
	INCR LINCNT
	PLINE = LABEL1
	KPONUM = HPONUM,'ZZZZXX'
	KVNADR = NAME
	OBLKEY =
	TKEYNO = 1
	TKEYCD = HSHPTO
	TKEYSQ = 1
	CALL GETTBL
	KSHPTO = DSC

;-
	IF(HSHPTO .EQ. '99' .OR. HSHPTO.EQ.'2')
	THEN	BEGIN
		SHONUM = HPONUM
		SHLNUM = HRLNUM
		XCALL ISIO (CHN149,POSHIP,SHKEY,READ,LOKCTL)
		IF (SHKEY .EQ. PORKEY) 
			THEN	BEGIN
				SHPTO(1) = SHADD1
				SHPTO(2) = SHADD2
				SHPTO(3) = SHADD3
				SHPTO(4) = SHADD4
				END
			ELSE	BEGIN
				KSHPTO = ;;;>'SHIP TO'
				CLEAR POSHIP
				SHADD1 = '*** NOT ON FILE ***'
				END
		END
	ELSE	BEGIN
		TKEYSQ = 2
		CALL GETTBL
		SHPTO(1) = DSC
		TKEYSQ = 3
		CALL GETTBL
		SHPTO(2) = DSC
		TKEYSQ = 4
		CALL GETTBL
		SHPTO(3) = DSC
		END
;-
	LINCTL = 0
	CALL PRINT

	ADDR(1) = ADD1
	ADDR(2) = ADD2
	ENTRY =
	ENTRY = CITY
	N = 16
FIND,
	N = N - 1
	IF (N.GT.1.AND.ENTRY(N,N).EQ.' ') GO TO FIND

	ENTRY(N+1,N+2) = ', '
	ENTRY(N+3,N+4) = STATE
	ENTRY(N+6,N+15) = ZIP
	ADDR(4) = ENTRY			;(01)	WAS 3

	ENTRY(1,10) = 'CONTACT:'
	ENTRY(11,30) = HCONTC
	ADDR(5) = ENTRY

	IF (ADDR(1).EQ.BLANKS) CALL MOVE1
	IF (ADDR(2).EQ.BLANKS) CALL MOVE2
	IF (ADDR(3).EQ.BLANKS) CALL MOVE3	
	IF (ADDR(4).EQ.BLANKS) CALL MOVE4

	KVNADR = ADDR(1)
	KSHPTO = SHPTO(1)
	LINCTL = 0
	CALL PRINT

	PLINE = LABEL2
	HDATE(1,4) = HPODTE(5,8)
	HDATE(5,8) = HPODTE(1,4)
	KPODTE = HDATE,'ZX/XX/XXXX'
	KVNADR = ADDR(2)
	KSHPTO = SHPTO(2)
	KPOWGT = HPOWGT,'ZZ,ZXX.X'
	LINCTL = 0
	CALL PRINT

	KVNADR = ADDR(3)
	KSHPTO = SHPTO(3)
	LINCTL = 1
	CALL PRINT

	KVNADR = ADDR(4)
	CALL PRINT

	PLINE = LABEL3
	PLINE(11,14) = HVENDR
	USING HCONFR SELECT
	('Y'),	PLINE(27,29) = 'YES'
	('N'),	PLINE(27,29) = 'NO'
	ENDUSING

	PLINE(60,60) = HCOLPP

	OBLKEY =
	TKEYNO = 04
	TKEYCD = HTERMS
	CALL GETTBL
	PLINE(39,48) = DSC	

	TKEYNO = 02
	TKEYCD = HBUYER
	CALL GETTBL
	PLINE(113,132) = DSC

	OBLKEY =
	TKEYCD = HFOB
	TKEYNO = 05
	CALL GETTBL
	PLINE (68,76) = DSC

	CLEAR TBL_KEY
	TBL_KEY = 'P1'
	P1_CODE = HSHPVI
	XCALL ISIO (CHN182,COPTBL,TBL_KEY,READ,LOKCTL)
	IF (LOKCTL .EQ. 0)
	THEN	BEGIN
		TBL_KEY = 'SC'
		SC_SCAC = P1_SCAC
		XCALL ISIO (CHN182,COPTBL,TBL_KEY,READ,LOKCTL)
		IF (LOKCTL .EQ. 0) 
		THEN	PLINE(89,103) = SC_NAME
		ELSE	PLINE(89,103) = "* NOT ON FILE *"
		END
	ELSE	PLINE(89,103) = "* NOT ON FILE *"

	LINCTL = 1
	CALL PRINT

	CALL PAGES

	N = 1
;;;	PLINE = LABEL8
	PLINE(87,97) = 'TOTAL COST:'
	PLINE(99,110) = TOTCST,	'Z,ZZZ,ZZX.XX'
	TOTCST =
	CALL PRINT
NTLOOP,
	IF (HPONCD(N).EQ.BLANKS) GO TO SKIP
	TKEYNO = 06
	TKEYCD = HPONCD(N)
	CALL GETTBL
	PLINE(10,40) = DSC
SKIP,
	PLINE(43,73) = HPONTE(N)
	LINCTL = 0
	CALL PRINT
	INCR N
	IF (N.LE.3) GO TO NTLOOP

;;;	LINCNT = 60
	CALL PRINT
	CALL PRINT

	CALL READHD
	IF (EOF) RETURN
	GO TO PORUN
;**********************************************************************
MOVE1,
	ADDR(1) = ADDR(2)
MOVE2,
	ADDR(2) = ADDR(3)
MOVE3,
	ADDR(3) = ADDR(4)
MOVE4,						;(01)
	ADDR(4) = ADDR(5)
MOVE5,						;(01)
	ADDR(5) = ADDR(6)	
	ADDR(6) = '                              *'
	IF (ADDR(1).EQ.BLANKS) GO TO MOVE1
	IF (ADDR(2).EQ.BLANKS) GO TO MOVE2
	IF (ADDR(3).EQ.BLANKS) GO TO MOVE3	;(01)
	IF (ADDR(4).EQ.BLANKS) GO TO MOVE4	;(01)
	RETURN
;**********************************************************************
;	HEADER CONTROL WITHIN EACH PURCHASE ORDER
;**********************************************************************
PAGES,
	PLINE = LABEL4
	LINCTL = 1
	CALL PRINT

	CALL LINES

	IF (EOF.OR.EPO) RETURN
	GO TO PAGES
;**********************************************************************
;	EACH PASS PRINTS ONE LINE ITEM:
;**********************************************************************
LINES,
	OLDCNT = LINCNT
	
	PLINE(1,3) = LLINNO,	'XXX'
	PLINE(9,23) = LITMNO
	PLINE(25,54) = LITMDS
	PLINE(57,58) = LITMUM
	PLINE(61,67) = LQTYRJ,	'ZZZ,ZZX'
	PLINE(70,76) = LQTYRC,	'ZZZ,ZZX'
	PLINE(79,85) = LQTYOR,	'ZZZ,ZZX'
	PLINE(88,96) = LEXCST,	'ZZZX.XXXX'
	XXCST = (LQTYOR*LEXCST)#2
	PLINE(99,110) = XXCST,	'Z,ZZZ,ZZX.XX'
	TOTCST = TOTCST + XXCST
	LINCTL = 0
	CALL PRINT

SETNOT,
	OBLKEY =
	TKEYNO = 06
	TKEYCD = LPONCD(1)
	CALL GETTBL
	ADDR(1) = DSC
	TKEYCD = LPONCD(2)
	CALL GETTBL
	ADDR(2) = DSC
	ADDR(3) = LPONTE(1)
	ADDR(4) = LPONTE(2)
	ADDR(5) = LPONTE(3)			;(01)
	ADDR(6) = LPONTE(4)			;(01)
	IF (ADDR(1).EQ.BLANKS) CALL MOVE1
	IF (ADDR(2).EQ.BLANKS) CALL MOVE2
	IF (ADDR(3).EQ.BLANKS) CALL MOVE3
	IF (ADDR(4).EQ.BLANKS) CALL MOVE4	;(01)
	IF (ADDR(5).EQ.BLANKS) CALL MOVE5	;(01)

	LINCTL = 0
	IF(ADDR(1) .EQ. A30) GOTO NO_LNOTES
	PLINE(30,60) = ADDR(1)
	CALL PRINT
	IF(ADDR(2) .EQ. A30) GOTO NO_LNOTES
	PLINE(30,60) = ADDR(2)
	CALL PRINT
	IF(ADDR(3) .EQ. A30) GOTO NO_LNOTES
	PLINE(30,60) = ADDR(3)
	CALL PRINT
	IF(ADDR(4) .EQ. A30) GOTO NO_LNOTES
	PLINE(30,60) = ADDR(4)
	CALL PRINT
	IF(ADDR(5) .EQ. A30) GOTO NO_LNOTES
	PLINE(30,60) = ADDR(5)
	CALL PRINT

NO_LNOTES,

;;;	TBLKEY =
;;;	TKEYNO = 07
;;;	TKEYCD = LREJCD
;;;	CALL GETTBL
;;;	KREJRE = DSC


	CALL REPEAT
	IF (EOF.OR.EPO) RETURN
	IF (LINCNT.LT.OLDCNT) RETURN
	GO TO LINES

;**********************************************************************
;	READ ONE IN-RANGE HEADER RECORD AND ONE IN-RANGE LINE RECORD
;**********************************************************************
READHD,
	EOF =
REREAD,
	LOKCTL = 1
	XCALL IOS (1,HEADER,READ,LOKCTL)
	IF (LOKCTL.NE.0) GOTO ENDFIL
	IF (HPONUM.LT.STPONO) GO TO REREAD
	IF (HPONUM.GT.ENPONO) GO TO ENDFIL
	IF (HPODTE.LT.STPODA .OR. HPODTE.GT.ENPODA) GO TO REREAD
	IF (ORDTYP.NE.BLANKS.AND.ORDTYP.NE.HPOTYP) GO TO REREAD
	IF (HCXCDE.EQ.BLANKS) HCXCDE = 'N'
	IF (STATUS.NE.BLANKS.AND.STATUS.NE.HPOSTS) GO TO REREAD
	IF (VENDNO.NE.BLANKS.AND.VENDNO.NE.HVENDR) GO TO REREAD
	IF (SHIPTO.NE.BLANKS.AND.SHIPTO.NE.HSHPTO) GO TO REREAD
	IF (BUYER.NE.BLANKS.AND.BUYER.NE.HBUYER) GO TO REREAD

	CALL READLN
	IF (EOF.OR.EPO) GO TO NAKED
	RETURN
NAKED,
	IF (EOF.AND.EPO) GO TO REREAD
	POLINE =
	LITMDS = 'NO LINE ITEMS FOR THIS P/O'
	EOF = 0
	RETURN
ENDFIL,
	EOF = 1
	RETURN
;**********************************************************************
;	READ ONE IN-RANGE LINE RECORD
;**********************************************************************
READLN,
	EOF =
	EPO =
	KEY1 = HPONUM
	KEY2 = HRLNUM
	XCALL ISIO (2,POLINE,KEYPON,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GOTO TOOFAR
	IF (LOKCTL.EQ.1) GOTO EXIT2
	GOTO REPEA2
REPEAT,
	LOKCTL = 1
	XCALL IOS (2,POLINE,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GOTO TOOFAR
	IF (LOKCTL.EQ.1) GOTO EXIT2
REPEA2,
	IF (LITMNO(1,6).EQ.']]]DEL') GO TO REPEAT
	IF (LPONUM.LT.HPONUM) GO TO REPEAT
	IF (LPONUM.GT.HPONUM) GO TO TOOFAR
	IF (LSTAT.NE.0) CALL SCANL
	RETURN
TOOFAR,
	EPO = 1
	RETURN
EXIT2,
	EOF = 1
	RETURN
;**********************************************************************
;	SCAN LINE RECORDS TO DETERMINE IF PO SHOULD BE INCLUDED
;**********************************************************************
SCANL,
;;	WRECNO = LRECNO
CHSTAT,
	GO TO (SMNEW,ALPRIN,ALRCVD,ALINVC,ALCLSD), LSTAT
	GO TO REJECT
SMNEW,
	IF (LINSTS.EQ.'N') GO TO RESTOR
	GO TO SCANL2
ALPRIN,
	IF (LINSTS.EQ.'N') GO TO REJECT
	GO TO SCANL2
ALRCVD,
	IF (LINSTS.EQ.'N'.OR.LINSTS.EQ.'P') GO TO REJECT
	GO TO SCANL2
ALINVC,
	IF (LINSTS.EQ.'N'.OR.LINSTS.EQ.'P'.OR.LINSTS.EQ.'R') GO TO REJECT
	GO TO SCANL2
ALCLSD,
	IF (LINSTS.EQ.'C'.OR.LINSTS.EQ.'X') GO TO SCANL2
	GO TO REJECT
SCANL2,
;;	INCR WRECNO
	LOKCTL = 1
	XCALL IOS (2,POLINE,READ,LOKCTL)
	IF (LOKCTL.NE.0) GOTO ENDIT
	IF (LITMNO(1,6).EQ.']]]DEL') GO TO SCANL2
	IF (LPONUM.NE.HPONUM) GO TO ENDPO
	IF (LRLNUM.NE.HRLNUM) GO TO ENDPO
	GO TO CHSTAT
ENDPO,
	IF (LSTAT.EQ.1) GO TO REJECT
RESTOR,
	LOKCTL = 1
	XCALL IO (2,POLINE,LRECNO,READ,LOKCTL)
	RETURN
ENDIT,
	IF (LSTAT.NE.1) GO TO RESTOR
REJECT,
;;	LRECNO = LRECNO - 1
	EPO = 1
	EOF = 1
	RETURN
;**********************************************************************
;	TABLE SEARCH, INPUT, PRINT, CLOSES, IN-USE, AND EXIT ROUTINES
;**********************************************************************
GETTBL,
	SRCOPT = 4
	BSMID = 1
	SRCCTL = 2
	XCALL SERCH (3,TABLE,OBLKEY,1,5,ORG153,BSMID,SRCCTL,SRCOPT,
&			6,11,0,0,0,0)
	IF (SRCCTL.EQ.1) TABLE =
	RETURN
;**********************************************************************

;**********************************************************************
;	THIS ROUTINE BRINGS A TABLE INTO MEMORY AND DISPLAYS SUBMENU
;**********************************************************************

FNDTBL,
	SRCCTL = 2
	SRCOPT = 4
	BSMID = 1
	XCALL SERCH (3,TABLE,TBLNUM,1,2,ORG153,BSMID,SRCCTL,
&                     SRCOPT,6,11,0,0,0,0)
	BSMID = BSMID - 1
	IF (SRCCTL.EQ.0) GO TO TBLOOP
	ENTRY = 'TABLE NUMBER XX IS EMPTY'
	ENTRY(14,15) = TBLNUM,'XX'
	TLIMIT = 1
	TBL =
	TCODE(1) = '**'
	TDESC(1) = ENTRY
	RETURN

TBLOOP,
	SUB =
LOOP,
	INCR SUB
NOSUB,
	INCR BSMID
	LOKCTL = 1
	XCALL IO (3,TABLE,BSMID,READ,LOKCTL)
	IF (TNO.NE.TBLNUM) TLIMIT = SUB - 1
	IF (TNO.NE.TBLNUM) RETURN
	IF (SQ.GE.2) GO TO NOSUB
	IF (DSC.EQ.']]]DEL') GO TO NOSUB
	TTBLNO(SUB) = TNO
	TCODE(SUB) = CDE
	TSEQNO(SUB) = SQ
	TDESC(SUB) = DSC
	IF (TCODE.EQ.BLANKS) TLIMIT = SUB - 1
	IF (SUB.LT.18) GO TO LOOP
	RETURN
;**********************************************************************
SUBMNU,
	ROW = 10
SHLOOP,
	INCR SUB
	ROW = ROW + 2
	MCODE = TCODE(SUB)
	MDESC = TDESC(SUB)
	IF (MCODE.EQ.BLANKS) MENLIN =
	XCALL OUTPT (ROW,40,0,MENLIN,V)
	IF (MCODE.EQ.BLANKS) MENLIN(4,4) = '='
	IF (SUB.NE.6.AND.SUB.NE.12.AND.SUB.LT.18) GO TO SHLOOP
LEAVE,
	IF (SUB.GT.0.AND.SUB.LT.6) SUB = 6
	IF (SUB.GT.6.AND.SUB.LT.12) SUB = 12
	IF (SUB.GT.12) SUB =
	RETURN
;**********************************************************************
GETSUB,
	SUB = 0
	IF (ALF.EQ.BLANKS) RETURN
SBLOOP,
	INCR SUB
	IF (SUB.EQ.19) RETURN
	IF (ALF.EQ.TCODE(SUB)) RETURN
	GO TO SBLOOP
;**********************************************************************
;	THIS ROUTINE CLEARS THE SUBMENU FROM THE SCREEN
;**********************************************************************

CLRMEN,
	TLIMIT =
	TABLE =
	TBL =
	ROW = 10
CLRLP,
	ROW = ROW + 2
	XCALL OUTPT (ROW,40,1,'\',V)
	IF (ROW.EQ.24) RETURN
	GO TO CLRLP

;**********************************************************************
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
;**********************************************************************
PRINT,
	PRTCTL = 132
	XCALL LPOUT (LINCNT,PGCNT,PLINE,TITLE,'NO HDR',' ',' ',
&		'NO LEGEND',' ',' ',LINCTL,132,PRTCTL,0,LPSW,RPTNUM,PRTTYP)
	RETURN
;**********************************************************************

EXIT,
	CALL CLOSE
	XCALL PGCHN ('PO:POMENU',1)

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK
	
	USING HIST SELECT
	('C'),	BEGIN
		SWITCH = 5
		XCALL FILES (1, 'SI', 151, SWITCH)
		IF (SWITCH .EQ. 9) RETURN
		CHN151 = 1

		SWITCH = 5
		XCALL FILES (2, 'SI', 152, SWITCH)
		IF (SWITCH .EQ. 9) RETURN
		CHN152 = 2
		END
	('H'),	BEGIN
		SWITCH = 5
		XCALL FILES (1, 'SI', 021, SWITCH)
		IF (SWITCH .EQ. 9) RETURN
		CHN151 = 1

		SWITCH = 5
		XCALL FILES (2, 'SI', 022, SWITCH)
		IF (SWITCH .EQ. 9) RETURN
		CHN152 = 2
		END

	ENDUSING


	SWITCH = 5
	XCALL FILES (3, 'I', 153, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN153 = 3

	SWITCH = 5
	XCALL FILES (4, 'SI', 011, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN011 = 4

	SWITCH = 5
	XCALL FILES (6, 'SI', 182, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN182 = 6

	SWITCH = 5
	XCALL FILES (7, 'SI', 149, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN149 = 7

	SWITCH = 5
	XCALL FILES (10, 'SI', 041, SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN041 = 10


	ITEMNO = '!!!!!!!!!!!!!!!'
	LOKCTL = 1
	XCALL ISIO (10,INVCTL,ITEMNO,READ,LOKCTL)
	RJUST = JSTIFY

	LOKCTL = 0
	XCALL IO (3,DUMTBL,1,READ,LOKCTL)
	IF (LOKCTL.EQ.1) RETURN


	OPNOK = 1
	RETURN
;------------------------------------------------------------------
CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	IF (CHN151) CLOSE CHN151
	IF (CHN152) CLOSE CHN152
	IF (CHN153) CLOSE CHN153
	IF (CHN011) CLOSE CHN011
	IF (CHN182) CLOSE CHN182
	IF (CHN149) CLOSE CHN149
	IF (CHN041) CLOSE CHN041

	RETURN
;------------------------------------------------------------------


;**********************************************************************

END

