;this routine has poclos.po logic, and is used after inventory
;receipt posting...

SUBROUTINE POCLS			;CLOSE PO'S
	R_PONO	,D			;PO NUMBER TO CLOSE
	R_FLAG	,D			;0=OK, 1=PO NOT FOUND

;		CLOSE PRINTED PO'S 
;

RECORD	PARAM
	OPT	,A1,	'C'		;CLOSE

RECORD	ITMMAS
	.INCLUDE 'DEF:RD041A.DEF'
RECORD,X
	.INCLUDE 'DEF:RD041B.DEF'

RECORD	ITMIDX
	.INCLUDE 'DEF:RD042A.DEF'

RECORD PORHDR	
	.INCLUDE 'DEF:RD151A.DEF'

RECORD PORLIN	
	.INCLUDE 'DEF:RD152A.DEF'


RECORD PBLKEY
	TKEYNO	,D2
	TKEYCD	,A2
	TKEYSQ	,D1


RECORD	CHANNEL
	CHN021	,D2
	CHN022	,D2
	CHN151	,D2
	CHN152	,D2
	CHN153	,D2
	CHN182	,D2
	CHN041	,D2
	CHN042	,D2

RECORD	VARS
	OPNOK	,D1
	I	,D4
	XDATE	,D8
	TODAY	,D8
	TODAA	,A10		;FORMAT XX/XX/XXXX
	REM	,D10
	ALF	,A2
	BRACKS	,A15,	']]]]]]]]]]]]]]]'
	OLDCNT	,D5
	DECMAL	,D4
	LOKCTL	,D1
	ENTRY	,A30
	FULL	,D1
	SWITCH	,D1
	INXCTL	,D1
	CNGCTL	,D1
	NOTADD	,D1
	WHATNO	,D2
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	PONUM	,D8
	SUB	,D2
	SEQ	,D1
	NT	,D1
	KEY	,A5
	SRCCTL	,D1
	SRCOPT	,D1
	NOTE	,A30
	IOCTL	,D1
	TLIMIT	,D2
	HRCNUM	,D5
	TKEY	,A2
	BLANKS	,A30
	LASPNO	,D6
	RELES	,D2
	SAVPO	,D6
	SAVRL	,D2
	CLSFLG	,D1

PROC
	R_FLAG = 1		;ASSUME NOT FOUND

	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF


	HPONUM = R_PONO
	HRLNUM = 00

	PONUM(1,6) = HPONUM
	PONUM(7,8) = HRLNUM
	LOKCTL = 1
	XCALL ISIO (CHN151,PORHDR,PORKEY,READ,LOKCTL)
	IF (LOKCTL .NE. 0) GOTO ENDOFF

PROCES,
	R_FLAG = 0

	FIND (CHN152,PORLIN,PORKEY) [ERR=LINLOP]

LINLOP,
	XCALL IOS (CHN152, PORLIN, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO LL_EOF
	IF (LPONUM .NE. HPONUM) GOTO LL_EOF
	DELETE (CHN152)				;DELETE THE LINE
	IF(OPT .EQ. 'X') GOTO CANCEL

	REM = LQTYOR - LQTYRC
	IF (REM .LE. 0) GOTO CANCEL

	XCALL SERCH (CHN042,ITMIDX,LITMNO,1,15,BSENDI,BSMID,SRCCTL,4,16,20,0,0,0,0)
	IF (SRCCTL.EQ.1) GO TO CANCEL
	XCALL IO (CHN041,ITMMAS,IRC041,READ,LOKCTL)
	QTYONO = QTYONO - REM
	XCALL IO (CHN041,ITMMAS,IRC041,WRITE,LOKCTL)

CANCEL,
	XCALL ISIO (CHN022, PORLIN, POLKEY, STORE, LOKCTL)
	IF (LOKCTL .NE. 0)
		BEGIN
		XCALL OLMSG (WND_1, 24, 'ERROR STORING PORLIN TO HISTORY',1)
		END
	GOTO LINLOP

LL_EOF,
	HPOSTS = OPT
	XCALL ISIO (CHN021, PORHDR, PORKEY, STORE, LOKCTL)
	IF (LOKCTL .NE. 0)
		BEGIN
		XCALL OLMSG (WND_1, 24, 'ERROR STORING PORHDR TO HISTORY',1)
		END
	DELETE (CHN151)			;DELETE THE HEADER

	XRETURN

	GOTO BEGIN
;=========================================

END,
ENDOFF,
	CALL CLOSE
	XRETURN
;==================================================


OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK

	SWITCH = 5
	XCALL FILES (1,'SU',151,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN151 = 1

	XCALL FILES (2,'SU',152,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN152 = 2

	XCALL FILES (3,'I',153,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN153 = 3

	XCALL FILES (6,'SU',21,SWITCH)		;21 - PORHST.ISM
	IF (SWITCH .EQ. 9) RETURN
	CHN021 = 6

	XCALL FILES (7,'SU',22,SWITCH)		;22 - PORLST.ISM
	IF (SWITCH .EQ. 9) RETURN
	CHN022 = 7

	XCALL FILES (8,'SI',182,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN182 = 8

	XCALL FILES (9,'U',041,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN041 = 9

	XCALL FILES (10,'I',042,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN042 = 10

	XCALL IO (CHN041,ITMMAS,1,READ,LOKCTL)
	BSENDI = ORG041

	OPNOK = 1

	RETURN
;------------------------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF(CHN021) CLOSE CHN021
	IF(CHN022) CLOSE CHN022
	IF(CHN151) CLOSE CHN151
	IF(CHN152) CLOSE CHN152
	IF(CHN153) CLOSE CHN153
	IF(CHN182) CLOSE CHN182
	IF(CHN041) CLOSE CHN041
	IF(CHN042) CLOSE CHN042
	RETURN
;------------------------------------------------------


END

