SUBROUTINE VCHE2; (NEWAP1,WORK1)
;
;
	NEWAP1	,A
	WORK1	,A
	W_ID	,D
;

	.INCLUDE 'WND:WINDOWS.DEF'

RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR


RECORD	COPTBL
	.INCLUDE 'DEF:RD182A.DEF'

RECORD NEWAP	
		.INCLUDE 'DEF:RD014A.DEF'
RECORD DUMNAP	
		.INCLUDE 'DEF:RD014B.DEF'
RECORD NEWAP2
		.INCLUDE 'DEF:RD014E.DEF'
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;		,A291
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
RECORD APOPEN,X	
		.INCLUDE 'DEF:RD017A.DEF'
RECORD DUMAPO,X	
		.INCLUDE 'DEF:RD017B.DEF'
RECORD VENMAS	
		.INCLUDE 'DEF:RD011A.DEF'
RECORD DUMVEN,X	
		.INCLUDE 'DEF:RD011B.DEF'

;;;RECORD VENIDX	
;;;		.INCLUDE 'DEF:RD012A.DEF'

RECORD EXPACT	
		.INCLUDE 'DEF:RD013A.DEF'
RECORD DUMEXP,X	
		.INCLUDE 'DEF:RD013B.DEF'
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD WORK			;DON'T CHANGE THIS RECORD !!
	WND_ON	,D1
	ACTITL	,A6
	ACTNUM	,D7
	ALPHA	,A8
	APOREC	,D5
	APOEND	,D5
	BLANKS	,A23
	BSEND	,D5
	BSMID	,D5
	CNGCTL	,D1
	CNT	,D2
	DECMAL	,D18
	DUPFLG	,D1
	DUEDT2	,D8
	ENTRY	,A38
	EXPEND	,D5
	IDX	,D2
	INXCTL	,D1
	INVDT2	,D8
	KEY	,A12
	MASK	,A7,	'XXXXXXX'
	MASK2	,A8,	'XXXX-XXX'
	MSGCTL	,D1
	NAPREC	,D5
	NEWCNT	,D3,	000
	NUM	,D10
	OPTION	,D1
	SAVVCH	,D6
	SELECT	,D1
	SRCCTL	,D1
	SWITCH	,D1,	1
	SYSTEM	,D1
	TCHAR	,D3
	TOTEXP	,D8
	V	,D1,	1
	VENREC	,D5	
	VENEND	,D5
	WHATNO	,D2

RECORD	VARS
	CHN182	,D2,10			;COPTBL CHANNEL
	I	,D5
	SAVRFA	,A6
	LOKCTL	,D1
	READ	,D1,	0
	WRITE	,D1,	1

PROC
	NEWAP = NEWAP1
	WORK = WORK1

	IF (WHATNO.EQ.0) GO TO DEFACC	;CHANGING FIELDS, ALLOWS CHANGE TO
					;VOUCHER DATE AND ALL ACCRUAL ACCTS
	IF (WHATNO.LE.19) GO TO EXPACC	;CHANGE TO AN EXPENSE DISTRIBUTION
	GOTO (FNDVCH,FNDVC2,REDISP), WHATNO-20	;20 = CHANGE MODE, FIND VOUCHER
						;21 = ADD MODE, DUPLICATE TRX
						;     FOUND ON NEWAP AND USER
						;     WANTS TO CHANGE IT
						;22 = MANUAL PYT
DEFACC,
	LOKCTL = 1
	XCALL IO (4,DUMNAP,1,READ,LOKCTL)
	UNLOCK 4
	IF (CNGCTL.OR.WHATNO.EQ.23)  GOTO APACC
	IF (WINVAM.EQ.0) GO TO ENDACC
	IF (WCHKNO.EQ.0.AND.MLTAP.EQ.'N') GO TO ENDACC
	IF (WCHKNO.NE.0.AND.MLTCSH.EQ.'N'.AND.MLTDSC.EQ.'N') GO TO ENDACC
	XCALL W_DISP(W_ID,WD_POS,4,48,WD_CLR,WDC_EOL,'USE ACCT DEFAULTS ?')
	CTL = '04,69,01,00,YY'
	CALL INPUT
	IF (INXCTL .EQ. 1)  GOTO ENDACC
APACC,
	IF (WCHKNO.NE.0.OR.WNDISC.EQ.-1)  GOTO CSHACC
	ACTITL = 'A/P '
	ACTNUM = WAPACT
	CALL GETACC
	GO TO (DISPLA), INXCTL
	WAPACT = ACTNUM
	GO TO ENDACC
CSHACC,
	IF (WHATNO.EQ.23.AND.MLTCSH.EQ.'N') GO TO DSCACC
	ACTITL = 'CASH'
	ACTNUM = WCSACT
	CALL GETACC
	GO TO (DISPLA), INXCTL
	WCSACT = ACTNUM
DSCACC,
	IF (WHATNO.EQ.23.AND.MLTDSC.EQ.'N') GO TO ENDACC
	ACTITL = 'DISC'
	ACTNUM = WDSACT
	CALL GETACC
	GO TO (DISPLA), INXCTL
	WDSACT = ACTNUM
ENDACC,
	XCALL W_DISP(W_ID,WD_POS,2,41,WD_CLR,WDC_EOL,' ')
	XCALL W_DISP(W_ID,WD_POS,4,42,'      EXP ACCT   AMOUNT     TOTAL-DIST')
	IF (WHATNO.EQ.23) GO TO RETURN		;FIRST ENTRY OF MANUAL PAYMENT
	GOTO (ANYCNG), CNGCTL
	GOTO EXPENS
GETACC,
	ROW = 4
	ACTITL(5,5) = '?'
	XCALL W_DISP(W_ID,WD_POS,4,42,WD_CLR,WDC_EOL,ACTITL)
	XCALL W_DISP(W_ID,WD_POS,2,48,WD_CLR,WDC_EOL,' ')
	IF (ACTNUM .EQ. 0)  GOTO GETAC2
	ALPHA = ACTNUM,MASK2
	XCALL W_DISP(W_ID,WD_POS,4,48,ALPHA)
GETAC1,
;;;	ACCEPT (15,TCHAR)
	XCALL W_DISP(W_ID,WD_ACCEPT,TCHAR)
	IF (TCHAR .EQ. 21)  GOTO GETAC2
	IF (TCHAR .NE. 13)  GOTO GETAC1
;;;	IF (SYSTEM .EQ. 2) ACCEPT (15,TCHAR)
	IF (SYSTEM .EQ. 2) XCALL W_DISP(W_ID,WD_ACCEPT,TCHAR)
	CALL SERCH
	GOTO (GETACC),SRCCTL
	SLEEP 1
	RETURN
GETAC2,
	XCALL W_DISP(W_ID,WD_POS,4,48,WD_CLR,WDC_EOL,' ')
	CTL = '04,48,04,03,# '
	CALL INPUT
	GOTO (GETAC3), INXCTL
	IF (ENTRY(1,3) .EQ. '000') GO TO GETAC2
	ACTNUM(1,4) = ENTRY(1,4)
	XCALL W_DISP(W_ID,WD_POS,4,52,'-')
	CTL = '04,53,03,00,# '
	CALL INPUT
	GOTO (GETAC2), INXCTL
	ACTNUM(5,7) = ENTRY(1,3)
	CALL SERCH
	GOTO (GETACC), SRCCTL
	SLEEP 1
GETAC3,
	RETURN
EXPENS,
	IDX = 0
	WDACTS(1,63) =
	WDAMTS (1,72) =
	CALL TOTDIS
EXPACC,
	INCR IDX
	ROW = 2*IDX + 4
	IF (CNGCTL.EQ.0) GOTO EXPAC2
	IDX = WHATNO -10
	ROW = 2*IDX + 4
	XCALL W_DISP(W_ID,WD_POS,ROW,48,WD_CLR,WDC_EOL,' ')
EXPAC2,
	XCALL W_DISP(W_ID,WD_POS,2,48,WD_CLR,WDC_EOL,' ')
	XCALL W_DISP(W_ID,WD_POS,ROW,48,WD_CLR,WDC_EOL,' ')
	ACTNUM =
	IF (IDX.GE.10) GOTO ANYCNG
	CTL(4,14) = '48,04,00,N '

C_EXP,
	CALL INPUT
	GOTO (CLRALL), INXCTL
	IF (ENTRY(1,3) .EQ. '000') GO TO EXPAC2
	ACTNUM(1,4) = ENTRY(1,4)
	IF (ACTNUM.EQ.0.AND.CNGCTL.EQ.0) GOTO ANYCNG
	IF (ACTNUM.EQ.0) GO TO CLREXP
	IF (ACTNUM(1,4).LT.100) GOTO TOOSHT
	XCALL W_DISP(W_ID,WD_POS,ROW,52,'-')
	CTL(4,14) = '53,03,00,# '
	CALL INPUT
	GOTO (EXPAC2), INXCTL
	IF (ENTRY .NE. BLANKS) 	ACTNUM(5,7) = ENTRY(1,3)
C_ACCT,
	ALPHA = ACTNUM,MASK2
	XCALL W_DISP(W_ID,WD_POS,ROW,48,ALPHA)
	XCALL W_UPDT

	WDACTS(IDX) = ACTNUM
	CALL SERCH
	GOTO (EXPAC2), SRCCTL
	CALL DSPACC
	CTL(4,14) = '59,08,00,$-'
	CALL INPUT
	GOTO (EXPAC2), INXCTL
	IF (ENTRY.EQ.BLANKS .AND. CNGCTL.EQ.0) GOTO FULAMT
	WDAMTS(IDX) = ENTRY(1,9)
	CALL TOTDIS
	GO TO (ANYCNG), CNGCTL
	GOTO EXPACC
TOOSHT,
	XCALL WNMSG(W_ID,24,'TOO SHORT',1)
	GOTO EXPAC2
FULAMT,
	DECMAL = WINVAM - TOTEXP
	CALL DSPDLR
	WDAMTS(IDX) = WINVAM - TOTEXP
	CALL TOTDIS
	GOTO ANYCNG
CLREXP,
	XCALL W_DISP(W_ID,WD_POS,ROW,48,WD_CLR,WDC_EOL,' ')
	WDACTS(IDX) =
	WDAMTS(IDX) =
	CALL TOTDIS
	IDX = IDX - 1
	ROW = 2*IDX + 4
	GO TO (ANYCNG), CNGCTL
	GOTO EXPACC
CLRALL,
	IF (CNGCTL)  GOTO DISPLA
	IF (IDX.EQ.1) GOTO DISPLA
	GOTO EXPENS
TOTDIS,
	NUM =
	TOTEXP =
	COL = 70
LOOP3,
	INCR NUM
	IF (NUM.GT.9) RETURN
	ROW = NUM*2 + 4
	IF (WDAMTS(NUM).NE.0) GO TO TOTDS2
	XCALL W_DISP(W_ID,WD_POS,ROW,48,WD_CLR,WDC_EOL,' ')
	WDACTS (NUM) =
	GO TO LOOP3
TOTDS2,
	TOTEXP = TOTEXP + WDAMTS (NUM)
	DECMAL = TOTEXP
	CALL DSPDLR
	GO TO LOOP3
SERCH,
	ALPHA = ACTNUM,MASK2
	XCALL W_DISP(W_ID,WD_POS,ROW,48,ALPHA)
	KEY(1,7) = ACTNUM,MASK
	BSEND = EXPEND

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	XCALL ACCT(KEY(1,7), ACDESC, SRCCTL)

	XCALL SERCH (3,EXPACT,KEY(1,7),1,7,BSEND,BSMID,SRCCTL,4,32,37,0,0,0,0)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	IF (SRCCTL)  ACDESC =
DSPACC,
	XCALL W_DISP(W_ID,WD_POS,2,48,WD_CLR,WDC_EOL,ACDESC)
	GOTO (BADACC), SRCCTL
	RETURN
BADACC,
	XCALL WNMSG(W_ID,24,'ACCT NOT ON FILE',1)
	RETURN
RETURN,
	IF (WHATNO .NE. 1)  INXCTL = 0
	XCALL W_DISP(W_ID,WD_POS,2,41,WD_CLR,WDC_EOL,' ')
	NEWAP1 = NEWAP
	WORK1 = WORK
	RETURN
BADCNG,
	XCALL WNMSG(W_ID,24,'MUST DELETE AND RE-ENTER',1)
DISPLA,
	WHATNO = 1		; 1 = ADD MODE: ABORT KEY PRESSED
				;     CHANGE MODE: ABORT KEY PRESSED OF
				;     VOUCHER NOT FOUND OR RECORD LOCKED
				;     DELETE MODE: DON'T DELETE VOUCHER
	GOTO RETURN
DELETE,
	WHATNO = 2		; 2 = DELETE MODE: DELETE THE VOUCHER
	GOTO RETURN
ANYCNG,
	IF (WNDISC.EQ.-1.AND.SELECT.EQ.2) GO TO BADCNG
	WHATNO = 3		; 3 = CHANGE MODE, VOUCHER HAS BEEN FOUND
	GOTO RETURN
NOTFND,
	XCALL WNMSG(W_ID,24,'VOUCHER NOT FOUND',1)
	GOTO DISPLA
FNDVCH,
	DUPFLG = 0
	KEY(1,6) = WVCHNO,MASK
	BSMID = 1
	BSEND = REC014
;;;	XCALL WATE (3,1)
	XCALL SERCH(4,NEWAP,KEY(1,6),1,6,BSEND,BSMID,SRCCTL,5,38,43,0,0,0,0)
	GOTO (NOTFND), SRCCTL
FNDVC2,
	CTL =
	NAPREC = BSMID
REREAD,
	LOKCTL = 1
	XCALL IO (4,NEWAP,NAPREC,READ,LOKCTL)
	IF (LOKCTL.EQ.1) GO TO DISPLA
REDISP,
	ENTRY(1,6) = WVCHNO,	'ZZZZZX' [LEFT]
	XCALL W_DISP(W_ID,WD_POS,4,16,ENTRY(1,6))
;;;	XCALL W_DISP(W_ID,WD_POS,4,16,WVCHNO)
	CTL = '04,33'
	DECMAL(1,8) = WVCHDT
	CALL DSPDTE
	XCALL W_DISP(W_ID,WD_POS,6,16,WVENNO)
	XCALL W_DISP(W_ID,WD_POS,8,8,WNAME)
	XCALL W_DISP(W_ID,WD_POS,10,16,WINVNO)
	XCALL W_DISP(W_ID,WD_POS,10,29,'PO:')
	XCALL W_DISP(W_ID,WD_POS,10,32,WPCHNO)
	XCALL W_DISP(W_ID,WD_POS,12,16,WDESC)
	CTL = '14,16'
	DECMAL (1,8) = WINVDT
	CALL DSPDTE
	CTL = '16,16,08'
	DECMAL = WINVAM
	CALL DSPDLR
	IF (WNDISC.EQ.-1) XCALL W_DISP(W_ID,WD_POS,16,8,'AMT PAID')
	IF (WNDISC.EQ.-1) XCALL W_DISP(W_ID,WD_POS,20,8,'CHK')
	IF (WNDISC.EQ.-1) GO TO AMT
	IF (WNDISC.EQ.0) GOTO DISDAT
;;;	CNT = 18
	CNT = 16
	DECMAL = WINVAM
	CALL COUNT
	XCALL W_DISP(W_ID,WD_POS,16,CNT,'(')
	INCR CNT
	DECMAL = WNDISC
	CTL = '16,00,07'
	COL = CNT
	CALL DSPDLR
	CALL COUNT
	XCALL W_DISP(W_ID,WD_POS,16,CNT,')')
DISDAT,
	IF (WDISDT.EQ.0) GO TO DISPCT
	CTL = '18,16'
	DECMAL (1,8) = WDISDT
	CALL DSPDTE
DISPCT,
	IF (WDAMT.NE.0.OR.WNDISC.EQ.-1) GOTO AMT
	CTL = '18,35,03'
	DECMAL = WDPCT
	CALL DSPPCT
	GOTO NOAMT
AMT,
	XCALL W_DISP(W_ID,WD_POS,18,28,'7. AMT         ')
	CTL = '18,35,06'
	DECMAL = WDAMT
	CALL DSPDLR
NOAMT,
	IF (DUPFLG.EQ.2) GO TO DEFACC		; 2 = MANUAL PYT
	CTL = '20,16'
	DECMAL (1,8) = WDUEDT
	CALL DSPDTE
	CTL = '22,16,06'
	DECMAL = WCHKNO
	IF (DECMAL.NE.0) CALL DSPNUM
	IDX = 0
	TOTEXP =
	CTL(4,8) = '59,08'
DSPEXP,
	INCR IDX
	ROW = IDX*2 + 4
	IF (WDACTS(IDX).EQ.0) GOTO SKPDSP
	ALPHA = WDACTS(IDX),'XXXX-XXX'
	XCALL W_DISP(W_ID,WD_POS,ROW,48,ALPHA)
	DECMAL = WDAMTS(IDX)
	COL = 59
	CALL DSPDLR
SKPDSP,
	IF (IDX.LT.9) GOTO DSPEXP
	CALL TOTDIS
	IF (SELECT.NE.3) GOTO ANYCNG
	XCALL W_DISP(W_ID,WD_POS,24,1,WD_CLR,WDC_LIN,'OK TO DELETE ?')
	CTL = '24,17,01,01,YN'
	CALL INPUT
	GOTO (DELETE,DISPLA), INXCTL
WAIT1,
;;;	XCALL WATE(3,1)
	GOTO REREAD
COUNT,
	NUM = 1
	IF (DECMAL.GE.0) GOTO CNTLP
	INCR CNT
	DECMAL = -DECMAL
CNTLP,
	IF (DECMAL .LT. NUM) GOTO CNTRET
	CNT = CNT + 1
	NUM = 10 * NUM
	GOTO CNTLP
CNTRET,
	CNT = CNT +1
	IF (DECMAL.LT.10) CNT = CNT + 2
	IF (DECMAL .GT. 9) INCR CNT
	IF (DECMAL .GT. 99999) INCR CNT
	IF (DECMAL .GT. 99999999) INCR CNT
	RETURN
INPUT,
	XCALL WINPT(W_ID,ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL)
;;;	XCALL INPUT(ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	RETURN
DSPNUM,
	OPTION = 1
	GOTO CALDSP
DSPDTE,
	XCALL DATE8(DECMAL(1,8), D_OUT, D_OUTR, D_FMT, D_SW)
	XCALL W_DISP(W_ID,WD_POS,ROW, COL, D_FMT)
	RETURN
DSPDLR,
	OPTION = 3
	GOTO CALDSP
DSPPCT,
	OPTION = 5
CALDSP,
	XCALL WDSPL(W_ID,MAX,ROW,COL,DECMAL,OPTION)
	RETURN

END

