;  NAPPR2 / AP 
;
;
;			::PCPYAP.DEF::
;******************************************************************************
;		ACCOUNTS PAYABLE
;
;		RELEASED: AUGUST 1, 1984 (d70s10)
;		MODIFIED: 17-MAY-85 MRF 00939
;		MODIFIED: 13-AUG-85 MRF 01125
;******************************************************************************
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984
;		MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;		NEW PAYABLES POSTING PREPARATION (JC-SPC-PO VERSION)
;
;
RECORD
	,A64,'THIS MATERIAL CONTAINS THE VALUABLE PROPERTIES AND TRADE SECRETS'
	,A62,'OF MCBA, EMBODYING CONFIDENTIAL INFORMATION AND IDEAS, NO PART'
	,A56,'OF WHICH MAY BE USED AND/OR DISCLOSED WITHOUT MCBAs DULY'
	,A55,'AUTHORIZED LICENSE AGREEMENT AND/OR WRITTEN PERMISSION.'
	,A61,'COPYRIGHT (C) MCBA, AN UNPUBLISHED WORK. ALL RIGHTS RESERVED.'
RECORD NEWAP	
		.INCLUDE 'DEF:RD014G.DEF'
RECORD DUMNAP	
		.INCLUDE 'DEF:RD014C.DEF'
RECORD APDIST	
		.INCLUDE 'DEF:RD016B.DEF'
RECORD NEWAPD	
		.INCLUDE 'DEF:RD015B.DEF'		
RECORD	,X	
		.INCLUDE 'DEF:RD015A.DEF'
RECORD	,X
		,A5
	PROGNM	,A6
		,A24
RECORD
		.INCLUDE 'DEF:RD015S.DEF'
RECORD APOPEN	
		.INCLUDE 'DEF:RD017B.DEF'
RECORD APINTR	
		.INCLUDE 'DEF:RD127B.DEF'
RECORD SNDMSG
		,A9,	'AP:VCHRG2'
RECORD BRACKS
		,A35,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
RECORD
	APDFIL	,D1
	APDOVF	,D5
	APIFIL	,D1
	APIOVF	,D5
	APOFIL	,D1
	APOOVF	,D5
	ALPHA	,A5
	BLANKS	,A15
	BLKSIZ	,D4
	CPNTR	,D2
	DSCAMT	,D6
	DSTCNT	,D5
	DSTIDX	,D2
	INTCNT	,D5
	MSGCTL	,D1
	NAPCNT	,D5
	NAPREC	,D5
	NO	,D1,	0
	NPDFIL	,D1
	NPDOVF	,D5
	ROW	,D2
	ROW2	,D2
	SWITCH	,D1,3
	TRXCNT	,D5
	LOKCTL	,D1
	READ	,D1,	0
	WRITE	,D1,	1
	V	,D1
	YES	,D1,	1
	ERROR   ,D1
PROC
	XCALL TERID (V)
	V = 1
	XCALL WATE (4,V)
	XCALL OUTPT(2,1,0,'POSTING PREPARATION',V)
	XCALL FILES(4,'U',14,SWITCH)		;NEWAP0 FILE
	IF (SWITCH.EQ.9) GO TO EXIT
	XCALL FILES(5,'U',15,SWITCH)		;NEWAPD FILE
	IF (SWITCH.NE.9) GO TO OPEN6
	CALL CLOSE1
	GO TO EXIT
OPEN6,
	XCALL FILES(6,'U',16,SWITCH)		;APDIST FILE
	IF (SWITCH.NE.9) GO TO OPEN7
	CALL CLOSE2
	GO TO EXIT
OPEN7,
	XCALL FILES(7,'U',17,SWITCH)		;APOPEN FILE
	IF (SWITCH.NE.9) GO TO OPEN2
	CALL CLOSE3
	GO TO EXIT
OPEN2,
	SWITCH = 1
	XCALL FILES(2,'U',12,SWITCH)		;VENIDX FILE
	IF (SWITCH.NE.9) GO TO OPEN9
	CALL CLOSE4
	GO TO EXIT
OPEN9,
	SWITCH = 3
	XCALL FILES (9,'U',127,SWITCH)		;APINTR FILE
	IF (SWITCH.NE.9) GO TO PROCES
	CALL CLOSE5
	GO TO EXIT
PROCES,
	CLOSE 2
	XCALL FILES (4,'I',14,5)
	XCALL FILES (6,'I',16,5)
	XCALL FILES (7,'I',17,5)
	XCALL FILES (9,'I',127,5)
	LOKCTL = 1
	XCALL IO (4,DUMNAP,1,READ,LOKCTL)
	NAPREC = REC014
	NAPCNT =
	DSTCNT =
	TRXCNT =
RDNEXT,
	LOKCTL = 1
	XCALL IOS (4,NEWAP,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO CHKFIL
	IF (WNAME.EQ.'00000') GO TO RDNEXT
	IF (WNAME.EQ.BRACKS) GO TO CHKFIL
	INCR TRXCNT
	IF (WNDISC.NE.-1.AND.WINVAM.NE.0) INCR NAPCNT
	IF (WNDISC.EQ.-1.AND.WINVAM.NE.WDAMTS(1)) INCR NAPCNT
	CALL CNTDST
	GO TO RDNEXT
CHKFIL,
	IF (TRXCNT.EQ.0) GO TO NOTRX
	APOFIL = NO
	APDFIL = NO
	APIFIL = NO
	NPDFIL = NO
	LOKCTL = 1
	XCALL IO (7,APOPEN,1,READ,LOKCTL)
	APOOVF = (REC017+NAPCNT) - MAX017
	IF (APOOVF.GT.0) APOFIL = YES
	LOKCTL = 1
	XCALL IO (6,APDIST,1,READ,LOKCTL)
	APDOVF = (DSTCNT+REC016) - MAX016
	IF (APDOVF.GT.0) APDFIL = YES
	LOKCTL = 1
	XCALL IO (9,APINTR,1,READ,LOKCTL)
	APIOVF = (INTCNT+REC127) - MAX127
	IF (APIOVF.GT.0) APIFIL = YES
 	BLKSIZ = ((SIZ015+2) * (DSTCNT+2))/512 + 1
	XCALL OFILE (5,15,BLKSIZ,SIZ015,SWITCH)
	IF (SWITCH.EQ.1) GO TO NPDERR
CHKFL2,
	IF (APOFIL.OR.APDFIL.OR.NPDFIL.OR.APIFIL) GO TO NOPOST
	NEWAPD =
	LOKCTL = 1
	XCALL IOS (5,NEWAPD,WRITE,LOKCTL)
	NAPCNT = 1
	LOKCTL = 1
	XCALL IO (4,NEWAP,1,READ,LOKCTL)
MAKDST,
	LOKCTL = 1
	XCALL IOS (4,NEWAP,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO ENDPRP
	IF (WNAME.EQ.BRACKS) GO TO ENDPRP
	IF (WNAME.EQ.'00000') GO TO MAKDST
	CALL MOVE
	IF (WNDISC.EQ.-1) GO TO MAKDS3
	IF (WCHKNO.NE.0) GO TO MAKDS2
	NACCT = WAPACT
	NTRXAM = WINVAM
	NTYPE = 1
	CALL WRITED
	GO TO MAKEXP
MAKDS2,
	CALL CLCDSC
	NTYPE = 2
	NACCT = WCSACT
	NTRXAM = WINVAM - DSCAMT
	CALL WRITED
	NTYPE = 3
	NACCT = WDSACT
	NTRXAM = DSCAMT
	CALL WRITED
	GO TO MAKEXP
MAKDS3,
	NTYPE = 4
	NACCT = WAPACT
	NTRXAM = WINVAM
	CALL WRITED
	NTYPE = 2
	NACCT = WCSACT
	NTRXAM = WINVAM - WDAMT
	CALL WRITED
	NTYPE = 3
	NACCT = WDSACT
	NTRXAM = WDAMT
	CALL WRITED
	GO TO MAKDST
MAKEXP,
	DSTIDX =
	NTYPE = 6
MAKEX2,
	INCR DSTIDX
	IF (DSTIDX.GT.9) GO TO MAKDST
	NACCT = WDACTS (2*DSTIDX-1)
	NTRXAM = WDAMTS (2*DSTIDX-1)
	CALL WRITED
	NACCT = WDACTS (2*DSTIDX)
	NTRXAM = WDAMTS (2*DSTIDX)
	CALL WRITED
	GO TO MAKEX2
CNTDST,
	CALL CLCDSC
	IF (WNDISC.NE.-1) GO TO CNTDS4
	DSTCNT = DSTCNT + 2
	IF (DSCAMT.NE.0.AND.DSCAMT.NE.WINVAM) INCR DSTCNT
	RETURN
CNTDS4,
	IF (WINVAM.NE.0) INCR DSTCNT
	IF (WCHKNO.EQ.0) GO TO CNTEXP
	IF (DSCAMT.EQ.0.OR.DSCAMT.EQ.WINVAM) GO TO CNTEXP
	INCR DSTCNT
CNTEXP,
	DSTIDX =
CNTEX2,
	INCR DSTIDX
	IF (DSTIDX.GT.9) RETURN
	IF (WDAMTS(2*DSTIDX-1).NE.0) INCR DSTCNT
	IF (WDAMTS(2*DSTIDX).NE.0) INCR DSTCNT
	IF (WDPRTN(DSTIDX).NE.BLANKS.OR.WDJOBN(DSTIDX).NE.BLANKS) INCR INTCNT
	GO TO CNTEX2
CLCDSC,
	DSCAMT = ((WINVAM - WNDISC) * WDPCT) #3
	IF (WDAMT.NE.0.OR.WNDISC.EQ.-1) DSCAMT = WDAMT
	RETURN
MOVE,
	NDATE = WVCHDT			;Voucher date
	IF (WCHKNO.GT.0 .AND. WNDISC.NE.-1) NDATE = WDUEDT	;Prepaid
	IF (WNDISC.EQ.-1) NDATE = WDUEDT			;Manual Payment
	NVENNO = WVENNO
	NVCHNO = WVCHNO
	RETURN
WRITED,
	IF (NTRXAM.EQ.0) RETURN
	LOKCTL = 1
	XCALL IOS (5,NEWAPD,WRITE,LOKCTL)
	INCR NAPCNT
	RETURN
NOTRX,
	XCALL MESAG('THERE ARE NO TRANSACTIONS TO POST',1)
	CALL CLOSES
	GO TO EXIT
NOPOST,
	XCALL OUTPT(2,1,2,'\',1)
	XCALL OUTPT(6,21,0,'THE NEW A/P TRX CANNOT BE POSTED BECAUSE THE',1)
	XCALL OUTPT(7,21,0,'FOLLOWING FILE(S) DO NOT HAVE ENOUGH ROOM:',1)
	XCALL OUTPT(11,30,0,'FILE           ROOM NEEDED',1)
	XCALL OUTPT(12,30,0,'----           ---- ------',1)
	ROW = 0
	IF (APOFIL) CALL DSPAPO
	IF (APDFIL) CALL DSPAPD
	IF (APIFIL) CALL DSPAPI
	IF (NPDFIL) CALL DSPNPD
	XCALL OUTPT(21,21,0,'PLEASE SEE INSTRUCTIONS',1)
	XCALL MESAG (' ',2)
	CALL CLOSES
	XCALL PGCHN ('AP:VCHENT',1)
DSPAPO,
	ROW2 = ROW + 14
	XCALL OUTPT(ROW2,24,0,'A/P OPEN ITEM',1)
	ALPHA = APOOVF
	ROW2 = ROW + 14
	XCALL OUTPT(ROW2,45,0,ALPHA,1)
	XCALL OUTPT(0,0,0,' RECORDS',1)
	INCR ROW
	RETURN
DSPAPD,
	ROW2 = ROW + 14
	XCALL OUTPT(ROW2,24,0,'A/P DISTRIBUTIONS',1)
	ALPHA = APDOVF
	ROW2 = ROW + 14
	XCALL OUTPT(ROW2,45,0,ALPHA,1)
	XCALL OUTPT(0,0,0,' RECORDS',1)
	INCR ROW
	RETURN
DSPAPI,
	ROW2 = ROW + 14
	XCALL OUTPT(ROW2,24,0,'NON-G/L INTERFACE',1)
	ALPHA = APIOVF
	ROW2 = ROW + 14
	XCALL OUTPT(ROW2,45,0,ALPHA,1)
	XCALL OUTPT(0,0,0,' RECORDS',1)
	INCR ROW
	RETURN
DSPNPD,
	ROW2 = ROW + 14
	XCALL OUTPT(ROW2,24,0,'NEW A/P DISTRIBUTIONS',1)
	ALPHA = NPDOVF
	ROW2 = ROW + 14
	XCALL OUTPT(ROW2,45,0,ALPHA,1)
	XCALL OUTPT(0,0,0,' RECORDS',1)
	INCR ROW
	RETURN
ENDPRP,
	LOKCTL = 1
	XCALL IOS (5,BRACKS,WRITE,LOKCTL)
	CLOSE 5
	XCALL FILES(5,'U',15,5)
	LOKCTL = 1
	XCALL IO (5,NEWAPD,1,READ,LOKCTL)
	REC015 = NAPCNT
	PROGNM = 'PSTAP2'
	LOKCTL = 1
	XCALL IO (5,NEWAPD,1,WRITE,LOKCTL)
	CLOSE 5
	MSGCTL = 5
	XCALL SNMSG (SNDMSG,MSGCTL)
	XCALL PGCHN('AP:SRTVCA',0)
EXIT,
	XCALL PGCHN('AP:VCHENT',1)
CLOSES,
	XCALL WATE(3,V)
	XCALL FILES(9,'U',127,4)
CLOSE5,
	XCALL FILES(2,'U',12,4)
CLOSE4,
	XCALL FILES(7,'U',17,4)
CLOSE3,
	XCALL FILES(6,'U',16,4)
CLOSE2,
	XCALL FILES(5,'O',15,4)
CLOSE1,
	XCALL FILES(4,'U',14,4)
	RETURN
NPDERR,
	NPDFIL = 1
	NPDOVF = DSTCNT + 2
	GO TO CHKFL2
END
