NOT USED FOR SMC
; VCHEN1 / AP 
;
;
RECORD NEWAP	
		.INCLUDE 'DEF:RD014G.DEF'
RECORD DUMNAP	
		.INCLUDE 'DEF:RD014C.DEF'
RECORD APOPEN,X	
		.INCLUDE 'DEF:RD017A.DEF'
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD WORKA
	CSSEND	,D5
	ITMEND	,D5
	LOKCTL	,D1
	NAPEND	,D5
	NUMBER	,D2
	PRECSN	,D1
	SCREEN	,D1
	TBLEND	,D5
RECORD WORK
	ACTITL	,A6
	ACTNUM	,D7
	ALPHA	,A8
	APOREC	,D5
	APOEND	,D5
	BLANKS	,A19
	BSEND	,D5
	BSMID	,D5
	CNGCTL	,D1
	CNT	,D2
	DECMAL	,D18
	DUPFLG	,D1		; 1 = DUP INV ON NEWAP 2 = DUP INV ON APOPEN
	DUEDT2	,D6
	ENTRY	,A38
	EXPEND	,D5
	IDX	,D2
	INXCTL	,D1
	INVDT2	,D6
	KEY	,A12
	MASK	,A7,	'XXXXXXX'
	MASK2	,A8,	'XXXX-XXX'
	MSGCTL	,D1
	NAPREC	,D5
	NEWCNT	,D3,	000
	NUM	,D10
	OPTION	,D1
	SAVVCH	,D6
	SELECT	,D1
	SRCCTL	,D1
	SWITCH	,D1,	1
	SYSTEM	,D1
	TCHAR	,D3
	TOTEXP	,D8
	V	,D1		; 1 = ENTERING RECORD 2 = CHANGING RECORD
	VENREC	,D5
	VENEND	,D5
	WHATNO	,D2		;ALSO USED AS FUNCTIONAL RETURN
				;FROM VCHE0, VCHE1, VCHE2
RECORD
	READ	,D1,	0
	WRITE	,D1,	1
PROC
	XCALL ENVRN (SYSTEM)
	XCALL TERID (V)
V = 1
	MSGCTL = 1
	XCALL SNMSG (ENTRY,MSGCTL)
	SELECT = ENTRY (1,1)
	MSGCTL = 4
	XCALL SNMSG (ENTRY,MSGCTL)
	XCALL OPNAP(DUMNAP,WORK,WORKA)
	IF (NUMBER.LT.7) GO TO END
	IF (INTRJC.AND.(INTRSP.OR.INTRPO).AND.INTRIM.AND.NUMBER.LT.11) GO TO END
	IF (INTRSP.AND.INTRPO.AND.INTRIM.AND.NUMBER.LT.12) GO TO END
	IF (INTRJC.AND.INTRSP.AND.INTRPO.AND.INTRIM.AND.NUMBER.LT.13) GO TO END
	IF (INTRJC.AND.(INTRSP.OR.INTRPO).AND.(INTRIM.NE.1).AND.NUMBER.LT.9) GO TO END
	IF (INTRSP.AND.INTRPO.AND.INTRIM.NE.1.AND.NUMBER.LT.10) GO TO END
	IF (INTRJC.AND.INTRSP.AND.INTRPO.AND.INTRIM.LT.1.AND.NUMBER.LT.11) GO TO END
	GO TO BEGIN
END,
	XCALL CLSAP(NUMBER,INTRJC,INTRSP,INTRPO,INTRIM)
	XCALL PGCHN('AP:VCHENT',1)
BEGIN,
	GO TO (DEFALT,DISPLA,DISPLA), SELECT
	GO TO END
FULL,
	UNLOCK 4
	XCALL OUTPT(23,1,1,'THE TRANSACTION FILE IS FULL. RUN "XPAND" TO',1)
	XCALL MESAG('EXPAND THE "NEWAP0" FILE.',1)
	XCALL OUTPT(23,1,1,'\',1)
	GO TO END
DEFALT,
	XCALL VCH10 (WORK)
	IF (WHATNO.EQ.4)  GO TO END
DISPLA,
	UNLOCK 4
	CNGCTL =
	NEWAP(7,894) =
	XCALL AP3 (SELECT)
	V = SELECT
	SCREEN = 1
	TOTEXP =
VCHNUM,
	CTL = '04,25,06,00,NE'
	IF (INXCTL.EQ.1)  DUPFLG = -1
	CALL INPUT
	GO TO (DISPLA,END), INXCTL
	IF (SELECT.EQ.1.AND.CNGCTL.EQ.0.AND.ENTRY.NE.BLANKS) GO TO BADVCH
	GO TO (VCHADD), SELECT
	WVCHNO = ENTRY(1,6)
	IF (WVCHNO.EQ.0) GO TO VCHNUM
	WHATNO = 34				; 34 = FIND THE VOUCHER
	GO TO DISP1
BADVCH,
	XCALL MESAG('MUST ENTER ONLY (CR)',1)
	GO TO VCHNUM
VCHADD,
	LOKCTL = 1
	XCALL IO (4,DUMNAP,1,READ,LOKCTL)
	IF (REC014.GE.MAX014) GO TO FULL
	IF (DUPFLG.NE.0) GO TO DSPVCH
	IF (DVCHNO.EQ.0.OR.DVCHNO.EQ.999999) DVCHNO = 1
	WVCHNO = DVCHNO
	SAVVCH = WVCHNO
	DVCHNO = DVCHNO+1
	LOKCTL = 1
	XCALL IO (4,DUMNAP,1,WRITE,LOKCTL)
DSPVCH,
	CNT = 1
	XCALL IO (4,DUMNAP,MAX014,READ,CNT)	;FREE THE BUFFER
	CNT = 1
	XCALL IO (4,DUMNAP,1,READ,CNT)
	UNLOCK 4
	XCALL OUTPT(24,1,1,'\',1)
	XCALL OUTPT (4,25,0,SAVVCH,1)
	WVCHNO = SAVVCH
	DUPFLG = 0
	WAPACT = DFLAP
	WCSACT = DFLCSH
	WDSACT = DFLDSC
	WHATNO = 0
LFSIDE,
	XCALL VCH11 (NEWAP,WORK)
	GO TO (DISPLA), INXCTL
	IF (WHATNO.EQ.19) GO TO DUPAPO		; 19 = MAKING A MANUAL PYT
	IF (WHATNO.EQ.21) GO TO SHWDUP		; 21 = DUPLICATE INVOICE ON NEWAP
	GO TO ANYCNG
RTSIDE,
	XCALL APSC2 (NEWAP,WORK,WORKA,INTRJC,INTRSP,INTRPO,INTRIM)
	GO TO (DISPLA), INXCTL
	V = 2
	GO TO ANYCNG
RENTER,
	XCALL MESAG('MANUAL PYT - MUST DELETE & RE-ENTER',1)
	GO TO DISPLA
NEWDSP,
	INXCTL =
	GO TO (DISP2,DISP1), SCREEN
SHWDUP,
	V = 2
DISP1,
	SCREEN = 1
	IF (WHATNO.NE.34) XCALL AP3 (SELECT)	; 34 = FIND THE VOUCHER
	XCALL VCH12 (NEWAP,WORK,WORKA)
	IF (WHATNO.EQ.35) GO TO DISPLA		; 35 = NOT FOUND OR NOT OK TO DELETE
	IF (WHATNO.EQ.22) GO TO LFSIDE		; 22 = MAKING A MANUAL PAYMENT
	IF (SELECT.EQ.2.AND.WHATNO.EQ.23) GO TO RENTER	; 23 = TRYING TO CHANGE A MANUAL PYT
	IF (SELECT.EQ.3) GO TO DELETE
	GO TO ANYCNG
DISP2,
	SCREEN = 2
	XCALL AP4 (SELECT)
	IF (V.EQ.1) GO TO RTSIDE
	XCALL VCH12 (NEWAP,WORK,WORKA)
	GO TO ANYCNG
CNGBR,
	IF (SCREEN.EQ.1.AND.WHATNO.LE.15) GO TO LFSIDE
	IF (SCREEN.EQ.2.AND.WHATNO.LE.9) GO TO RTSIDE
BADCNG,
	XCALL MESAG(' ',6)
ANYCNG,
	XCALL ANYCN(CNGCTL,WHATNO)
	GO TO (CHKNXT,CNGBR,DISPLA), CNGCTL+1
CHKNXT,
	IF (WNDISC.EQ.-1) GO TO PROCES
	IF (WCHKNO.NE.0.AND.WINVAM.EQ.0) GO TO PROCES
	IF (V.EQ.1) GO TO DISP2
	XCALL OUTPT (24,1,1,'DISPLAY SCREEN   ?',1)
	MSGCTL = 3 - SCREEN
	ALPHA (1,1) = MSGCTL
	XCALL OUTPT (24,16,0,ALPHA(1,1),1)
	CTL = '24,21,01,00,YN'
	CALL INPUT
	GO TO (NEWDSP), INXCTL
PROCES,
	IF (SELECT.EQ.3) GO TO DELETE
	IF (WNDISC.EQ.-1) GO TO UPDAPO
	IF (TOTEXP.NE.WINVAM) GO TO NOTEQL
	XCALL WATE (3,V)
	IF (SELECT.EQ.2) GO TO CHANGE
ADDAP,
	IF (DUPFLG.EQ.1) GO TO CHANGE
	LOKCTL = 1
	XCALL IO (4,DUMNAP,1,READ,LOKCTL)
	INCR REC014
	IF (REC014.GT.MAX014) GO TO FULL
WRTERR,
	LOKCTL = 1
	XCALL IO (4,DUMNAP,1,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IO (4,NEWAP,REC014,WRITE,LOKCTL)
	NAPREC = REC014
	GO TO FREBUF
DELETE,
	WNAME = '000000'
CHANGE,
	LOKCTL = 1
	XCALL IO (4,NEWAP,NAPREC,WRITE,LOKCTL)
	IF (SELECT.EQ.3) XCALL MESAG('VOUCHER DELETED',2)
FREBUF,
	LOKCTL = 1
	XCALL IO (4,DUMNAP,MAX014,READ,LOKCTL)
	LOKCTL = 1
	XCALL IO (4,DUMNAP,1,READ,LOKCTL)
	UNLOCK 4
	GO TO DISPLA
DUPAPO,
	APOREC = BSMID
	LOKCTL = 1
	XCALL IO (7,APOPEN,APOREC,READ,LOKCTL)
	WVCHNO = AVCHNO
	WDESC = ADESC
	WINVDT = AINVDT
	WINVNO = AINVNO
	WAPACT = AAPACT
	WINVAM = AINVAM - APAID
	WDAMT = ADSCAM - ADSTKN
	IF (WDAMT.LT.0) WDAMT = 0
	WDAMTS = WINVAM
	WNDISC = -1				;FLAG AS A MANUAL PYT
	WHATNO = 22
	GO TO SHWDUP
UPDAPO,
	IF (WCHKNO.NE.0.AND.WDUEDT.NE.0) GO TO ADDAP
	XCALL MESAG('MISSING CHECK DATA',1)
	GO TO ANYCNG
NOTEQL,
	XCALL MESAG('AMT DISTRIBUTED NOT = INVOICE AMT',1)
	IF (SCREEN.EQ.2) GO TO ANYCNG
	GO TO DISP2
INPUT,
	XCALL INPUT(ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	RETURN
DSPDTE,
	OPTION = 2
	XCALL DSPLY(MAX,ROW,COL,DECMAL,OPTION,1)
	RETURN
END
