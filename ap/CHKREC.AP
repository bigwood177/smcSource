;  CHKREC / PR & AP 
;
;		CHECK RECONCILIATION PROGRAM
;

RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR


RECORD VENMAS	
		.INCLUDE 'DEF:RD011B.DEF'
RECORD RECONC	,X
		.INCLUDE 'DEF:RD078A.DEF'
RECORD DUMREC	
		.INCLUDE 'DEF:RD078C.DEF'
RECORD PRACCT	
		.INCLUDE 'DEF:RD098A.DEF'
RECORD DUMACT	,X	
		.INCLUDE 'DEF:RD098B.DEF'
RECORD	,X	
		.INCLUDE 'DEF:RD013F.DEF'
RECORD RCVMSG
	PROGNM	,A10
RECORD OUTNAM
	OUTDEV	,A2
		,A7,':CHKLST'
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD
	ACTMSK	,A8,'XXXX-XXX'
	ALPHA	,A8
	BLANKS	,A4
	BSEND	,D5
	BSMID	,D5
	CNGCTL	,D1
	COL2	,D2
	DATMSK	,A8,'XX/XX/XX'
	DEFACT	,D7
	DECMAL	,D10
	EBSEND	,D5
	ENTRY	,A8
	INXCTL	,D1
	KEY	,A7
	KEY2	,A13
	KEYMSK	,A7,'XXXXXXX'
	LOKCTL	,D1
	LSTCSH	,D7
	LSTDTE	,D8
	MSGCTL	,D1
	OPTION	,D1
	RBSEND	,D5
	SAVCSH	,D7
	SELECT	,D1
	SRCCTL	,D1
	SVBSMD	,D5
	SWITCH	,D1,1
	SYSTEM	,D1
	TSTCSH	,A7
	READ	,D1,	0
	WRITE	,D1, 	1
	V	,D1,1
	WHATNO	,D1
	TDATE	,D6

PROC
	XCALL TERID (V)
	V = 1
	XCALL ENVRN(SYSTEM)
	XCALL RDATE(TDATE)
	XCALL DATE8(D_IN, D_OUT, LSTDTE, D_FMT, D_SW)
	MSGCTL = 1
	XCALL SNMSG (RCVMSG,MSGCTL)
	IF (PROGNM.EQ.'PR') GO TO PAYROL
	SWITCH = 5
	XCALL FILES(1,'I',11,SWITCH)
	IF (SWITCH.EQ.9) GO TO EXIT
	LOKCTL = 1
	XCALL IO (1,VENMAS,1,READ,LOKCTL)
	CLOSE 1
	SAVCSH = VENDEF(10,16)
	DEFACT = VENDEF(10,16)
	SWITCH = 1
	XCALL FILES (3,'I',13,SWITCH)		; EXPACT FILE
	IF (SWITCH.EQ.9) GO TO EXIT
	LOKCTL = 1
	XCALL IO (3,PRACCT,1,READ,LOKCTL)
	EBSEND = ORG013
	GO TO GOON
PAYROL,
	SWITCH = 1
	XCALL FILES (3,'I',98,SWITCH)		; PRACCT FILE
	IF (SWITCH.EQ.9) GO TO EXIT
	LOKCTL = 1
	XCALL IO (3,PRACCT,1,READ,LOKCTL)
	EBSEND = ORG098
GOON,
	XCALL FILES(10,'U',78,SWITCH)		;RECONC FILE
	IF (SWITCH.NE.9) GO TO BEGIN
	CALL CLOSE1
	GO TO EXIT
BEGIN,
	LOKCTL = 1
	XCALL IO (10,DUMREC,1,READ,LOKCTL)
	LSTCSH = SAVCSH
	RBSEND = ORG078
	XCALL OUTPT(1,1,2,'CHECK RECONCILIATION',V)
INPUTX,
	XCALL OUTPT(10,20,2,'PLEASE SELECT APPLICATION',V)
	XCALL OUTPT(12,25,0,'1. SELECT RECONCILED CHECKS',V)
	XCALL OUTPT(14,25,0,'2. PRINT RECONCILIATION REPORT',V)
	CTL = '10,47,01,01,NE'
	CALL INPUT
	GOTO (INPUTX,END), INXCTL
	SELECT = ENTRY (1,1)
	IF (SELECT.NE.1.AND.SELECT.NE.2) GO TO INPUTX
	GO TO (RECON), SELECT
DISPLA,
	CNGCTL =
	XCALL OUTPT (4,1,2,'\',V)
	XCALL OUTPT(8,15,2,'PLEASE ENTER:',V)
	XCALL OUTPT(10,20,0,'1. CASH ACCOUNT',V)
	XCALL OUTPT(12,20,0,'2. STARTING CHECK DATE',V)
	XCALL OUTPT(14,20,0,'3. ENDING CHECK DATE',V)
	XCALL OUTPT(16,20,0,'4. RECONCILIATION DATE',V)
	XCALL OUTPT(18,20,0,'5. SHOW RECONCILED CHKS ?',V)
	XCALL OUTPT(20,20,0,'6. SHOW UNRECONCILED CHKS ?',V)
CASH,
	XCALL OUTPT(10,37,1,'\',V)
	DEFACT = SAVCSH
	CTL = '10,37,04,00,#X'
	CALL INPUT
	GOTO (DISPLA,BEGIN,CASH2), INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO ALLCSH
	DEFACT(1,4) = ENTRY(1,4)
	XCALL OUTPT (10,41,0,'-',V)
	CTL(4,8) = '42,03'
	CALL INPUT
	GOTO (CASH), INXCTL
	DEFACT(5,7) = ENTRY(1,3)
CASH2,
	CSHACT = DEFACT
	IF (CSHACT.EQ.0) GO TO CASH
	COL = 37
	CALL DSPACT
CASH3,
	GO TO (ANYCNG), CNGCTL
	GO TO STRDAT
ALLCSH,
	XCALL OUTPT(10,37,1,'ALL',V)
	CSHACT = -1
	GO TO CASH3
STRDAT,
	CTL = '12,49,08,00,D '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	STCHDT = ENTRY(1,8)
	IF (STCHDT.EQ.0) GO TO ALLDAT
ENDDAT,
	IF (STCHDT.EQ.0) GO TO ANYCNG
	CTL = '14,49,08,05,D '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	ENCHDT = ENTRY(1,8)

	IF (ENCHDT .GE. STCHDT) GOTO OKDATE
	XCALL MESAG ('ENDING DATE MUST NOT BE EARLIER THAN STARTING DATE',1)
	XCALL OUTPT (14,49,1,'\',V)
	GO TO STRDAT
OKDATE,
	GO TO (ANYCNG), CNGCTL
	GO TO RECDAT
ALLDAT,
	STCHDT =
	ENCHDT = 999999
	XCALL OUTPT(12,49,0,'ALL',V)
	XCALL OUTPT(14,49,1,'\',V)
	GO TO (ANYCNG), CNGCTL
RECDAT,
	CTL = '16,49,08,00,D '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	RECDTE = ENTRY(1,8)
	IF (RECDTE.EQ.0) GO TO ALLREC
	GO TO (ANYCNG), CNGCTL
	GO TO SHWREC
ALLREC,
	XCALL OUTPT(16,49,0,'ALL',V)
	GO TO (ANYCNG), CNGCTL
SHWREC,
	CTL = '18,49,01,00,YN'
	CALL INPUT
	RECFLG = 2 - INXCTL
	GO TO (ANYCNG), CNGCTL
SHWUNR,
	CTL = '20,49,01,00,YN'
	CALL INPUT
	UNRCFL = 2 - INXCTL
	GO TO ANYCNG
CNGBR,
	GO TO (CASH,STRDAT,ENDDAT,RECDAT,SHWREC,SHWUNR), WHATNO
	CNGCTL = 3
	GOTO ANYCNG
DSPACT,
	BSEND = EBSEND
	KEY = DEFACT, KEYMSK

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL ACCT(DEFACT, DESCR, SRCCTL)

;;;	XCALL SERCH(3,PRACCT,KEY,1,7,BSEND,BSMID,SRCCTL,4,32,37,0,0,0,0)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (SRCCTL.EQ.1) DESCR = '** ACCOUNT NOT ON FILE **'
	ALPHA = DEFACT, ACTMSK
	XCALL OUTPT(ROW,COL,1,ALPHA,V)
	COL2 = COL + 10
	XCALL OUTPT(ROW,COL2,0,DESCR,V)
	RETURN
PROCES,
	LOKCTL = 1
	XCALL IO (10,DUMREC,1,1,LOKCTL)
	CALL CLOSE2
	MSGCTL = 5
	XCALL SNMSG (RCVMSG,MSGCTL)
	OUTDEV = PROGNM
	XCALL PGCHN (OUTNAM,1)
RECON,
	BSMID =
	CNGCTL =
	UNLOCK 10
	XCALL OUTPT(6,10,2,'1. CASH ACCOUNT',V)
	DEFACT = LSTCSH
	CTL = '06,30,04,00,NE'
	CALL INPUT
	GOTO (RECON,BEGIN), INXCTL
	IF (ENTRY.EQ.BLANKS.AND.DEFACT.NE.0) GO TO RECCS2
	IF (ENTRY.EQ.BLANKS) GO TO RECON
	DEFACT(1,4) = ENTRY(1,4)
;	GOTO (CASH), INXCTL			;AP22
	XCALL OUTPT (6,34,0,'-',V)
	CTL(4,8) = '35,03'
	CALL INPUT
	GOTO (RECON), INXCTL			;AP22
	DEFACT(5,7) = ENTRY(1,3)
RECCS2,
	RCSHAC = DEFACT
	LSTCSH = DEFACT
	COL = 30
	CALL DSPACT
	KEY = RCSHAC, KEYMSK
	BSEND = RBSEND
	XCALL SERCH(10,RECONC,KEY,1,7,BSEND,BSMID,SRCCTL,4,1,6,0,0,0,0)
	GO TO (NOMOR), SRCCTL
BACK0,
	BSMID = BSMID - 1
	LOKCTL = 1
	XCALL IO (10,RECONC,BSMID,0,LOKCTL)
	TSTCSH = RCSHAC, KEYMSK
	IF (TSTCSH.EQ.KEY) GO TO BACK0
	UNLOCK 10
	SVBSMD = BSMID
RECCHK,
	INXCTL =
	XCALL OUTPT(8,10,2,'2. CHECK NUMBER',V)
	XCALL OUTPT(10,17,0,'CHECK DATE:',V)
	XCALL OUTPT(12,16,0,'VENDOR/EMPL:',V)
	XCALL OUTPT(14,15,0,'CHECK AMOUNT:',V)
	XCALL OUTPT(16,10,0,'3. DATE RECONCILED',V)
	UNLOCK 10
	CNGCTL =
	CTL = '08,30,06,00,NE'
	CALL INPUT
	GO TO (RECON,RECON), INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO NXTCHK
	RCHKNO = ENTRY (1,6)
	GO TO FNDCHK
DSPCHK,
	INXCTL =
	CTL = '08,30,06'
	DECMAL = RCHKNO
	CALL DSPNUM

	CTL = '10,30,06'
	DECMAL (1,8) = RCHKDT
	CALL DSPDTE

	XCALL OUTPT(12,30,0,RVENEM,V)
	XCALL OUTPT(12,41,0,RNAME,V)
	CTL = '14,30,08'
	DECMAL = RCHAMT
	CALL DSPDLR
	IF (RDTEPD.EQ.0) XCALL OUTPT (16,30,1,'\',V)
	IF (RDTEPD.EQ.0) GO TO RIGHT
	CTL = '16,30,06'
	DECMAL (1,8) = RDTEPD
	CALL DSPDTE
RIGHT,
	XCALL OUTPT(24,1,1,'RIGHT CHECK ?',V)
	CTL = '24,16,01,00,YN'
	CALL INPUT
	GO TO (NXTCHK), INXCTL - 1
	IF (RDTEPD.NE.0) GO TO UNPAYQ
RECDTE,
	CTL = '16,30,08,00,DT'
	CALL INPUT
	GO TO (RECCHK,RECCHK,RECCHK), INXCTL
	RDTEPD = ENTRY (1,8)
	IF (RDTEPD.EQ.0) RDTEPD = LSTDTE
	IF (RDTEPD.EQ.0) GO TO RECDTE
	DECMAL (1,8) = RDTEPD
	CALL DSPDTE
	LSTDTE = RDTEPD
	GO TO ANYCN2
UNPAYQ,
	XCALL OUTPT(24,1,1,'ALREADY RECONCILED - MARK AS UNPAID ?',V)
	CTL = '24,40,01,01,YN'
	CALL INPUT
	GO TO (RECCHK), INXCTL - 1
	RDTEPD =
WRITE,
	LOKCTL = 1
	XCALL IO (10,RECONC,BSMID,1,LOKCTL)
	LOKCTL = 1
	XCALL IO (10,DUMREC,MAX078,0,LOKCTL)
	LOKCTL = 1
	XCALL IO (10,DUMREC,1,0,LOKCTL)
	IF (RDTEPD.EQ.0) GO TO UNPAID
	XCALL MESAG('MARKED AS PAID',2)
	GO TO RECCHK
UNPAID,
	XCALL MESAG('MARKED AS UNPAID',2)
	GO TO RECCHK
NXTCHK,
	INCR BSMID
	LOKCTL = 1
	XCALL IO (10,RECONC,BSMID,0,LOKCTL)
	IF (RNAME.EQ.']]]]]]') GO TO NOMOR
	IF (INXCTL.EQ.2.AND.RECONC(1,13).NE.KEY2) GO TO NOTFND
	IF (RCSHAC.GT.LSTCSH) GO TO NOMOR
	IF (RSYSTM.EQ.2.AND.PROGNM.NE.'PR') GO TO NXTCHK
	SVBSMD = BSMID
	GO TO DSPCHK
NOMOR,
	XCALL MESAG('NO MORE CHECKS FOR THIS ACCT',2)
	GO TO RECON
FNDCHK,
	KEY2 = KEY
	KEY2 (8,13) = RCHKNO, KEYMSK
	BSEND = RBSEND
	XCALL SERCH (10,RECONC,KEY2,1,13,BSEND,BSMID,SRCCTL,4,1,6,0,0,0,0)
;	IF (PROGNM.EQ.'AP'.AND.RSYSTM.EQ.2) SRCCTL = 1		;AP22
;	IF (PROGNM.EQ.'PR'.AND.RSYSTM.EQ.1) SRCCTL = 1		;AP22
	GO TO (NOTFND), SRCCTL
BACKUP,
	BSMID = BSMID - 1
	LOKCTL = 1
	XCALL IO (10,RECONC,BSMID,0,LOKCTL)
	IF (RECONC(1,13).EQ.KEY2) GO TO BACKUP
FORUP,								;AP22
	INCR BSMID
	LOKCTL = 1
	XCALL IO (10,RECONC,BSMID,0,LOKCTL)
	IF (RECONC(1,13).NE.KEY2) GO TO NOTFND			;AP22
	IF (PROGNM.EQ.'AP'.AND.RSYSTM.EQ.2) GO TO FORUP		;AP22
	IF (PROGNM.EQ.'PR'.AND.RSYSTM.EQ.1) GO TO FORUP		;AP22
	SVBSMD = BSMID
	GO TO DSPCHK
NOTFND,
	XCALL MESAG('CHECK NOT FOUND',1)
	BSMID = SVBSMD
	GO TO RECCHK
END,
	CALL CLOSE2
EXIT,
	XCALL PGCHN(PROGNM,1)
CLOSE2,
	XCALL WATE(3,V)
	XCALL FILES(10,'U',78,4)
CLOSE1,
	IF (PROGNM.EQ.'AP') XCALL FILES (3,'I',13,4)
	IF (PROGNM.EQ.'PR') XCALL FILES (3,'I',98,4)
	RETURN
INPUT,
	XCALL INPUT(ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
ANYCNG,
	XCALL ANYCN(CNGCTL,WHATNO)
	GOTO (PROCES,CNGBR,DISPLA), CNGCTL+1
ANYCN2,
	CNGCTL = 2
	XCALL ANYCN(CNGCTL,WHATNO)
	GOTO (WRITE,RECDTE,RECON), CNGCTL+1
DSPNUM,
	OPTION = 1
	GO TO CALDSP
DSPDTE,
	XCALL DATE8(DECMAL(1,8), D_OUT, D_OUTR, D_FMT, D_SW)
	XCALL OUTPT (ROW, COL, 0, D_FMT, V)
	RETURN
;;;	OPTION = 2
;;;	GO TO CALDSP
DSPDLR,
	OPTION = 3
CALDSP,
	XCALL DSPLY(MAX,ROW,COL,DECMAL,OPTION,V)
	RETURN
END
