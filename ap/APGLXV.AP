;  APGLXV / AP 
;
;
;		PRINTS A/P DISTRIBUTION TO G/L REPORT BY VENDOR
;
RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR


RECORD APDIST	
		.INCLUDE 'DEF:RD016A.DEF'

RECORD APGLIX	
		.INCLUDE 'DEF:APGLIX.DEF'
;;;		.INCLUDE 'DEF:RD087A.DEF'

RECORD APGSTR	
		.INCLUDE 'DEF:RD087B.DEF'
RECORD APGEND	
		.INCLUDE 'DEF:RD087C.DEF'
RECORD EXPACT	
		.INCLUDE 'DEF:RD013A.DEF'
RECORD,X	
		.INCLUDE 'DEF:RD013B.DEF'
RECORD VENMAS	
		.INCLUDE 'DEF:RD011B.DEF'
RECORD	,X	
		.INCLUDE 'DEF:RD011A.DEF'

;;;RECORD VENIDX	
;;;		.INCLUDE 'DEF:RD012A.DEF'

RECORD APOPEN	
		.INCLUDE 'DEF:RD017A.DEF'
RECORD,X	
		.INCLUDE 'DEF:RD017B.DEF'
RECORD TITLE
                         		,A36,'A/P TO G/L CROSS-REFERENCE BY VENDOR'
RECORD HDR1
		,A15,'---------------'
		,A6,'VENDOR'
		,A15,'---------------'
		,A2
		,A16,'----------------'
		,A7,'ACCOUNT'
		,A17,'-----------------'
		,A4
		,A4,'DATE'
		,A11
		,A6,'AMOUNT'
	HDR11	,A19
RECORD HEAD1
		,A4
		,A7,'VOUCH-#'
		,A3
		,A5,'INV-#'
RECORD HDR2
		,A1
		,A2,'NO'
		,A3
		,A4,'NAME'
		,A31
		,A2,'NO'
		,A5
		,A11,'DESCRIPTION'
	HDR22	,A65
RECORD HEAD2
		,A21
		,A9,'REFERENCE'
		,A18
		,A7,'CHECK-#'
		,A2
		,A8,'INV-DATE'
RECORD LEGND
		,A11	,'FROM VENDOR'
		,A2
	ASTRVN	,A4
		,A6	,'  TO  '
	AENDVN	,A4
		,A7	,'  ---  '
		,A12	,'FROM ACCOUNT'
		,A2
	ASTRAC	,A8
		,A6	,'  TO  '
	AENDAC	,A8
		,A7	,'  ---  '
		,A13	,'FROM TRX DATE'
		,A2
	ASTRDT	,A10
		,A6	,'  TO  '
	AENDDT	,A10
RECORD	,X
	VNDLIT	,A27
		,A7
	ACTLIT	,A36
		,A7
	DATLIT	,A37
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2


RECORD	DIS
	II	,D6

RECORD	VARS
	REDFIL	,A14,	'SPL:APGLIX.DDF'
	ACTTOT	,D10
	APOEND	,D5
	APOREC	,D5
	BLANKS	,A10
	BREAK	,D1
	BSEND	,D5
	BSMID	,D5
	CNGCTL	,D1
	CUTDT2	,D8
	DASHES	,A24,'------------------------'
	DATTOT	,D10
	DETAIL	,D1
	DTCNT	,D5
	ENTRY	,A2
	EXPEND	,D5
	INXCTL	,D1
	KEY	,A7
	KEY2	,A4
	LINCNT	,D2,60
	LNFEED	,D1
	LPSW	,D1
	LSTACN	,D7
	LSTDAT	,D8
	LSTVEN	,A4
	MASK	,A14,'ZZ,ZZZ,ZZZ.XX-'
	MASK1	,A8,'XX/XX/XX'
	MASK2	,A8,'XXXX-XXX'
	MASK3	,A6,'ZZZZZZ'
	PGCNT	,D3
	PLINE	,A132
	PRTCTL	,D3
	PRTTYP	,A1
	RPTNUM	,D3
	SPLFIL	,A14
	SRCCTL	,D1
	SWITCH	,D1,1
	LOKCTL	,D1
	READ	,D1,	0
	WRITE	,D1,	1
	V	,D1,1
	VENEND	,D5
	VENTOT	,D10
	WHATNO	,D2
	WTARG	,D1,2
PROC
	XCALL TERID (V)
	V = 1
OPEN,
	XCALL FILES(7,'I',17,SWITCH)		;FILE # 17 -- APOPEN FILE
	IF (SWITCH .EQ. 9)  GOTO EXIT

;;;	XCALL FILES(2,'I',12,SWITCH)		;FILE # 12 -- VENIDX FILE
;;;	IF (SWITCH.NE.9) GO TO OPEN3
;;;	CALL CLOSE1
;;;	GO TO EXIT

OPEN3,
	XCALL FILES(3,'I',13,SWITCH)		;FILE # 13 -- EXPACT FILE
	IF (SWITCH.NE.9) GO TO OPEN6
	CALL CLOSE2
	GO TO EXIT
OPEN6,
	XCALL FILES(6,'I',16,SWITCH)		;FILE # 16 -- APDIST FILE
	IF (SWITCH.NE.9) GO TO OPEN1
	CALL CLOSE3
	GO TO EXIT
OPEN1,
	XCALL FILES(1,'SI',11,SWITCH)		;FILE # 11 -- VENMAS FILE
	IF (SWITCH.NE.9) GO TO OPEN8
	CALL CLOSE4
	GO TO EXIT
OPEN8,
	OPEN (8, I, REDFIL)	;SPL:APGLIX.DDF

;;;	XCALL FILES(8,'I',87,5)			;FILE # 87 -- APGLIX FILE

	LOKCTL = 1
	XCALL IO (7, APOPEN,1,READ,LOKCTL)
	APOEND = ORG017
	LOKCTL = 1
	XCALL IO (3,EXPACT,1,READ,LOKCTL)
	EXPEND = ORG013

;;;	LOKCTL = 1
;;;	XCALL IO (1,VENMAS,1,READ,LOKCTL)
;;;	VENEND = ORG011

	LOKCTL = 1
	XCALL IO (8,APGSTR,1,READ,LOKCTL)
	LOKCTL = 1
	XCALL IO (8,APGEND,2,READ,LOKCTL)
	ASTRVN = STRVEN
	AENDVN = ENDVEN
	ASTRAC = STRACT, MASK2
	AENDAC = ENDACT, MASK2

	XCALL DATE8(STRDAT, D_OUT, D_OUTR, ASTRDT, D_SW)
	XCALL DATE8(ENDDAT, D_OUT, D_OUTR, AENDDT, D_SW)
;;;	ASTRDT = STRDAT, MASK1
;;;	AENDDT = ENDDAT, MASK1
	IF (STRVEN.EQ.BLANKS) VNDLIT = 'FOR ALL VENDORS'
	IF (STRACT.EQ.0) ACTLIT = 'FOR ALL G/L ACCTS'
	IF (STRDAT.EQ.0) DATLIT = 'FOR ALL TRX DATES'
BEGIN,
	LINCNT = 60
	PGCNT =
	VENTOT = 0
	ACTTOT =
	DATTOT =
	LSTACN = -1
	LSTDAT = -1
	LSTVEN =
	XCALL OUTPT(1,1,2,'PRINT ',V)
	XCALL OUTPT(0,0,0,TITLE,V)
	LPSW = 1
	SPLFIL (5,6) = 'FQ'
	XCALL LPON (LPSW,SPLFIL)
	GO TO (END), LPSW + 1
DISPLA,
	XCALL OUTPT(10,23,2,'PRINT TRANSACTION DETAIL ?',V)
	XCALL OUTPT(12,23,0,'PAGE BREAK ON EACH VENDOR ?',V)
DETAIL,
	XCALL OUTPT(22,1,0,'"1"=NONE  "2"=PARTIAL  "3"=FULL',V)
	XCALL INPUT (10,52,1,1,'#E',ENTRY,INXCTL,V)
	GO TO (DETAIL,END), INXCTL
	DETAIL = ENTRY (1,1)
	IF (DETAIL.LT.1.OR.DETAIL.GT.3) GO TO DETAIL
	XCALL OUTPT(22,1,1,'\',V)
BREAK,
	XCALL INPUT (12,52,1,0,'YY',ENTRY,INXCTL,V)
	BREAK = INXCTL
ANYCNG,
	CNGCTL = 2
	XCALL ANYCN (CNGCTL,WHATNO)
	GOTO (PROCES,DISPLA), CNGCTL + 1
	GOTO ANYCNG
PROCES,
	IF (DETAIL.GT.1) GO TO DET2
	HDR11 =
	HDR22 =
	GO TO PROCS2
DET2,
	IF (DETAIL.EQ.3) GO TO DET3
	HDR11 (1,11) = HEAD1
	HDR22 =
	GO TO PROCS2
DET3,
	HDR11 = HEAD1
	HDR22 = HEAD2
PROCS2,
	IF (LPSW.EQ.2) WTARG = 4
	XCALL WATE(WTARG,V)
	II = 1
READ,
	INCR II
	IF (II/500*500 .EQ. II) XCALL OUTPT (1,70,1,DIS,1)

	LOKCTL = 1
	XCALL IOS (8,APGLIX,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO EOF
	LOKCTL = 1
	XCALL IO (6,APDIST,IRC087,READ,LOKCTL)
	IF (GVENNO.NE.LSTVEN) CALL NEWVEN
	IF (GACCT.NE.LSTACN) CALL NEWACT
	IF (GDATE.NE.LSTDAT) CALL NEWDAT
	IF (GTYPE.LT.4) GTRXAM = (-1)*GTRXAM
	DATTOT = DATTOT + GTRXAM
	ACTTOT = ACTTOT + GTRXAM
	VENTOT = VENTOT + GTRXAM
	IF (DETAIL.EQ.1) GOTO READ

	XCALL DATE8(GDATE, D_OUT, D_OUTR, D_FMT, D_SW)
	PLINE (79,88) = D_FMT
	PLINE (91,104) = GTRXAM, MASK
	PLINE (108,113) = GVCHNO, MASK3
	INCR DTCNT
	IF (DETAIL.EQ.3) GO TO FULLDT
	CALL PRINT
	GO TO READ
FULLDT,
	CALL FNDVCH
	GO TO (NOVCH1), SRCCTL
	PLINE (117,124) = AINVNO
NOVCH1,
	CALL PRINT
	PLINE (81,105) = ADESC
	GO TO (NOVCH2), SRCCTL
	PLINE (108,113) = ACHKNO, MASK3

	XCALL DATE8(AINVDT, D_OUT, D_OUTR, D_FMT, D_SW)
	PLINE (117,126) = D_FMT
NOVCH2,
	LINCNT = LINCNT - 1
	CALL PRINT
	LINCNT = LINCNT + 1
	LNFEED = 1
	CALL LINFD
	GO TO READ
NEWVEN,
	IF (LSTVEN.EQ.BLANKS) GO TO FSTVEN
	CALL DATTOT
	CALL ACTTOT
	CALL VENTOT
FSTVEN,
	CALL FNDVEN
	CALL NEWACT
	LSTVEN = GVENNO
	PLINE (1,4) = GVENNO
	XCALL LEFTJ (PLINE(1,4),4)
	PLINE (7,36) = NAME
	RETURN
NEWACT,
	IF (LSTVEN.NE.GVENNO) GO TO FSTACT
	CALL DATTOT
	CALL ACTTOT
FSTACT,
	KEY = GACCT,'XXXXXXX'
	BSEND = EXPEND
	XCALL SERCH(3,EXPACT,KEY,1,7,BSEND,BSMID,SRCCTL,4,32,37,0,0,0,0)
	IF (SRCCTL) ACDESC = '** DESCRIPTION NOT ON FILE **'
	PLINE (39,46) = GACCT, MASK2
	PLINE (48,77) = ACDESC
;;;	PLINE (49,78) = ACDESC
	CALL NEWDAT
	LSTACN = GACCT
	RETURN
NEWDAT,
	IF (GACCT.NE.LSTACN) GO TO FSTDAT
	CALL DATTOT
FSTDAT,
	LSTDAT = GDATE
	RETURN
DATTOT,
	IF (DETAIL.EQ.1) GO TO DATTO2
	IF (DTCNT.LE.1) GO TO DATTO4
	IF (DETAIL.EQ.3) GO TO DATTO1
	LNFEED = 1
	CALL LINFD
DATTO1,
	PLINE (79,89) = 'DATE TOTAL:'
DATTO2,
	PLINE (91,104) = DATTOT, MASK
	IF (DETAIL.GT.1) GO TO DATTO3

	XCALL DATE8(LSTDAT, D_OUT, D_OUTR, D_FMT, D_SW)
	PLINE (79,88) = D_FMT
DATTO3,
	CALL PRINT
DATTO4,
	DATTOT =
	IF (DETAIL.EQ.1) RETURN
	IF (DTCNT.LE.1.AND.DETAIL.EQ.3) GO TO DATTO5
	LNFEED = 1
	CALL LINFD
DATTO5,
	IF (DETAIL.EQ.2) GO TO DATRET
	PLINE (81,103) = DASHES
	CALL PRINT
	GO TO DATRET
DATRET,
	DTCNT =
	RETURN
ACTTOT,
	IF (DETAIL.EQ.2) GO TO ACTTO2
	LNFEED = 1
	CALL LINFD
ACTTO2,
	PLINE (76,89) = 'ACCOUNT TOTAL:'
	PLINE (91,104) = ACTTOT, MASK
	CALL PRINT
	LNFEED = 1
	CALL LINFD
	ACTTOT =
	RETURN
VENTOT,
	LNFEED = 1
	CALL LINFD
	PLINE (72,77) = 'VENDOR'
	PLINE (79,82) = LSTVEN
	XCALL LEFTJ (PLINE(79,82),4)
	PLINE (84,89) = 'TOTAL:'
	PLINE (91,104) = VENTOT, MASK
	CALL PRINT
	VENTOT = 0
	IF (BREAK.EQ.1) LINCNT = 60
	IF (LINCNT.GE.57) LINCNT = 60
	RETURN
EOF,
	IF (LSTVEN.EQ.BLANKS) GO TO END
	CALL DATTOT
	CALL ACTTOT
	CALL VENTOT
EOF2,
	XCALL LPOFF (LPSW,SPLFIL,PGCNT)
END,
	CALL CLOSES
EXIT,
	XCALL PGCHN('AP:APMENU',1)
FNDVEN,
	LOKCTL = 1
	XCALL ISIO (1, VENMAS, GVENNO, READ, LOKCTL)
	IF (LOKCTL .EQ. 0)
	THEN	SRCCTL = 0
	ELSE	BEGIN
		CLEAR VENMAS
		NAME = '** VENDOR NOT ON FILE **'
		SRCCTL = 1
		END

;;;	KEY2 = GVENNO
;;;	BSEND = VENEND
;;;	XCALL SERCH (2,VENIDX,KEY2,1,4,BSEND,BSMID,SRCCTL,4,6,10,0,0,0,0)
;;;	LOKCTL = 1
;;;	IF (SRCCTL.EQ.0) XCALL IO (1,VENMAS,IRC011,READ,LOKCTL)
;;;	IF (SRCCTL.EQ.1) NAME = '** VENDOR NOT ON FILE **'

	RETURN
FNDVCH,
	KEY2 = GVENNO
	BSEND = APOEND
	SRCCTL = 2
	XCALL SERCH (7,APOPEN,KEY2,1,4,BSEND,BSMID,SRCCTL,4,32,37,0,0,0,0)
	GOTO (NOTFND), SRCCTL
BACKUP,
	BSMID = BSMID -1
	LOKCTL = 1
	XCALL IO (7,APOPEN,BSMID,READ,LOKCTL)
	IF (AVENNO.EQ.GVENNO) GO TO BACKUP
NXTVCH,
	INCR BSMID
	LOKCTL = 1
	XCALL IO (7,APOPEN,BSMID,READ,LOKCTL)
	IF (AVENNO .NE.GVENNO)  GOTO NOTFND
	IF (AVCHNO .NE. GVCHNO)  GOTO NXTVCH
	RETURN
NOTFND,
	SRCCTL = 1
	ADESC = '** VOUCHER NOT ON FILE **'
	RETURN
PRINT,
	XCALL LPOUT(LINCNT,PGCNT,PLINE,TITLE,HDR1,HDR2,'NO HDR',
&		LEGND,'NO LEGEND',' ',0,132,PRTCTL,1,LPSW,RPTNUM,PRTTYP)
	RETURN
CLOSES,
	XCALL WATE(3,V)
	XCALL FILES(8,'I',87,7)
	XCALL FILES(1,'I',11,4)
CLOSE4,
	XCALL FILES(6,'I',16,4)
CLOSE3,
	XCALL FILES(3,'I',13,4)
CLOSE2,
	XCALL FILES(2,'I',12,4)
CLOSE1,
	XCALL FILES(7,'I',17,4)
	RETURN
INPUT,
	XCALL INPUT(ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
LINFD,
	XCALL LINFD (LNFEED)
	LINCNT = LINCNT + LNFEED
	RETURN
END
