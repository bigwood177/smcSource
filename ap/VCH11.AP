SUBROUTINE VCH11; (NEWAP1,WORK1)
;
; VCH11 / AP 
;
;
;
	NEWAP1	,A
	WORK1	,A
;
RECORD	PORNXF
	.INCLUDE 'DEF:RD192A.DEF'

RECORD NEWAP	
		.INCLUDE 'DEF:RD014G.DEF'
RECORD NEWAP2
		,A894
RECORD DUMNAP, X	
		.INCLUDE 'DEF:RD014C.DEF'
RECORD DUMVEN, X
		.INCLUDE 'DEF:RD011B.DEF'
RECORD APOPEN, X	
		.INCLUDE 'DEF:RD017A.DEF'
RECORD VENMAS	
		.INCLUDE 'DEF:RD011A.DEF'
RECORD EXPACT, X
		.INCLUDE 'DEF:RD013A.DEF'
RECORD DUMEXP, X	
		.INCLUDE 'DEF:RD013B.DEF'

;;;RECORD VENIDX	
;;;		.INCLUDE 'DEF:RD012A.DEF'

RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD ACTWRK
	MLSAP	,A1
	DFSAP	,D7
	MLSCSH	,A1
	DFSCSH	,D7
	MLSDSC	,A1
	DFSDSC	,D7
	SVCHDT	,D6
RECORD CLNDAR
	CYCLE	,D1
	DATE	,D6
	DAY	,D2
	JULIAN	,12D3,	000,031,059,090,120,151,181,212,243,273,304,334
	JULDAY	,D3
	MONTH	,D2

RECORD WORK
	ACTITL	,A6
	ACTNUM	,D7
	ALPHA	,A8
	APOREC	,D5
	APOEND	,D5
	BLANKS	,A19
	BSEND	,D5
	BSMID	,D5
	CNGCTL	,D1
	CNT	,D2
	DECMAL	,D18
	DUPFLG	,D1
	DUEDT2	,D6
	ENTRY	,A38
	EXPEND	,D5
	IDX	,D2
	INXCTL	,D1
	INVDT2	,D6
	KEY	,A12
	MASK	,A7,	'XXXXXXX'
	MASK2	,A8,	'XXXX-XXX'
	MSGCTL	,D1
	NAPREC	,D5
	NEWCNT	,D3,	000
	NUM	,D10
	OPTION	,D1
	SAVVCH	,D6
	SELECT	,D1
	SRCCTL	,D1
	SWITCH	,D1,	1
	SYSTEM	,D1
	TCHAR	,D3
	TOTEXP	,D8
	V	,D1
	VENREC	,D5
	VENEND	,D5
	WHATNO	,D2

RECORD	VARS
	CHN192	,D2,	19
	LOKCTL	,D1
	READ	,D1,	0
	WRITE	,D1,	1
	STORE	,D1,	2
	RECALC	,A1
	DUEIT	,D1			;AP31
PROC
	NEWAP = NEWAP1
	WORK = WORK1
	CNT = 1

	XCALL IO (4,DUMNAP,1,READ,CNT)
	UNLOCK 4
	ACTWRK = DUMNAP (835,858)
	SVCHDT = DVCHDT
	IF (WHATNO.EQ.22) GO TO DUEDTE		; 22 = MAKING A MANUAL PYT
	DUEIT = 1				;AP31
	IF (SELECT.EQ.2) CALL VENDAL
	DUEIT =					;AP31
	GO TO (VCHDTE,VENDNO,INVNUM,INVDTE,AMOUNT,NONDSC,DISDTE,
&		DSCPCT,DSCAMT,DUEDTE,CHEKNO,APACC,CSHACC,DSCACC,INVDES), WHATNO
VCHDTE,
	CTL = '06,25,06,00,D '
	CALL INPUT
	GO TO (RETURN), INXCTL
	IF (CNGCTL.EQ.0)  WVCHDT = SVCHDT
	IF (ENTRY.NE.BLANKS) WVCHDT = ENTRY (1,6)
	DECMAL(1,6) = WVCHDT
	CALL DSPDTE
	GO TO (ANYCNG), CNGCTL
VENDNO,
	IF (DUPFLG.EQ.2) GO TO BADCNG
	ENTRY =
	CALL VENTAG
	CTL = '08,25,04,01,A '
	CALL INPUT
	GO TO (RETURN), INXCTL
	XCALL FRMAT (ENTRY(1,4),4)
	WVENNO = ENTRY
VENDAL,
	LOKCTL = 1
	XCALL ISIO (1, VENMAS, WVENNO, READ, LOKCTL)
	USING LOKCTL SELECT
	(0),	SRCCTL = 0
	(1),	GOTO VENDAL
	(),	SRCCTL = 1
	ENDUSING


;;;	BSEND = VENEND
;;;	KEY = WVENNO
;;;	XCALL SERCH(2,VENIDX,KEY(1,4),1,4,BSEND,BSMID,SRCCTL,4,6,10,0,0,0,0)
;;;	GO TO (BADVND), SRCCTL
;;;	LOKCTL = 0
;;;	XCALL IO (1,VENMAS,IRC011,READ,LOKCTL)
;;;	IF (LOKCTL.EQ.1) GO TO VENDAL

	UNLOCK 1
	UNLOCK 2
	DUEDAY = -DUEDAY
	DISDAY = -DISDAY
	IF (SELECT.EQ.2.AND.DUEIT) RETURN	;AP31
VENNAM,
	WNAME = NAME
	XCALL OUTPT (8,31,1,NAME,1)
;------ AP31 ------------------------------------------------------------
	IF (CNGCTL.AND.WDUEDT.NE.0)
	 BEGIN
	 XCALL OUTPT (24,1,0,
&	 'RECALCULATE DISCOUNT/DUE DATES AND AMTS FOR THIS VENDOR ?',V)
	 CTL = '24,60,01,01,YN'
	 CALL INPUT
	 RECALC = 'Y'
	 IF (INXCTL.EQ.2) RECALC = 'N'
	 INXCTL =
	 IF (RECALC.EQ.'Y')
		 BEGIN
		 CTL = '18,25,06,00,D '
		 GOTO NEGDIS
		 END
	 END
;-------------------------------------------------------------------------
	GO TO (ANYCNG), CNGCTL
	GO TO INVNUM
BADVND,
	XCALL OUTPT (7,0,-1,'CNTRL',0)
	XCALL MESAG ('VENDOR NOT FOUND IN FILE -',4)
	IF(SELECT.NE.1) GO TO VENDNO
	XCALL OUTPT (24,52,0,' ADD AS TEMPORARY VENDOR ?   ',1)
	CTL = '24,79,01,00,YN'
	CALL INPUT
	XCALL OUTPT (24,1,1,'\',1)
	GO TO (VENDNO), INXCTL - 1
ADDVEN,
;;;	LOKCTL = 1
;;;	XCALL IO (1,DUMVEN,1,READ,LOKCTL)
;;;	UNLOCK 1
;;;	INCR REC011
;;;	IF (REC011.GE.MAX011) GO TO NOROOM

	VENMAS =
	VENNO = WVENNO
	VTYPE = 1
ASKNAM,
	CTL = '08,38,30,00,A '
	ENTRY = 'NAME ?'
	CALL VENTAG
	CALL INPUT
	GO TO (VENDNO), INXCTL
	NAME = ENTRY
	ENTRY = 'ADDR1?'
	CALL VENTAG
	MAX = 25
	CALL INPUT
	GO TO (VENDNO), INXCTL
	ADD1 = ENTRY
	ENTRY = 'ADDR2?'
	CALL VENTAG
	CALL INPUT
	GO TO (VENDNO), INXCTL
	ADD2 = ENTRY
	ENTRY = 'CITY ?'
	CALL VENTAG
	MAX = 15
	CALL INPUT
	GO TO (VENDNO), INXCTL
	CITY = ENTRY
	ENTRY = 'STATE?'
	CALL VENTAG
	MAX = 10
	CALL INPUT
	GO TO (VENDNO), INXCTL
	STATE = ENTRY
	ENTRY = 'ZIP  ?'
	CALL VENTAG
	CALL INPUT
	GO TO (VENDNO), INXCTL
	ZIP = ENTRY
	XCALL OUTPT (24,51,1,'\',1)
	NOVMTD =				;AP31
	NOVYTD =				;AP31
UPDVEN,
;;;	LOKCTL = 1
;;;	XCALL IO (1,DUMVEN,1,READ,LOKCTL)
;;;	INCR REC011
;;;	IF (REC011.GE.MAX011) GO TO NOROOM
;;;	LOKCTL = 1
;;;	XCALL IO (1,DUMVEN,1,WRITE,LOKCTL)
;;;	VENREC = REC011
WRTVEN,
	LOKCTL = 1
	XCALL ISIO (1, VENMAS, VENNO, STORE, LOKCTL)

;;;	XCALL IO (1,VENMAS,VENREC,WRITE,LOKCTL)
;;;	VENIDX =
;;;	IVENNO = VENNO
;;;	IRC011 = VENREC
;;;	LOKCTL = 1
;;;	XCALL IO (2,VENIDX,VENREC,WRITE,LOKCTL)

	ENTRY =
	CALL VENTAG
	GO TO VENNAM
VENTAG,
	XCALL OUTPT (8,31,1,ENTRY,1)
	RETURN
NOROOM,
	UNLOCK 1
	XCALL MESAG('NO ROOM FOR NEW VENDOR',1)
	GO TO VENDNO
INVNUM,
	IF (DUPFLG.EQ.2) GO TO BADCNG
	CTL = '10,25,08,00,A '
	CALL INPUT
	GO TO (RETURN), INXCTL
	WINVNO = ENTRY(1,8)
	GO TO (ANYCNG), CNGCTL
CHKDUP,
	IF (WINVNO.EQ.BLANKS) GO TO INVDTE
	XCALL WATE(3,1)
	KEY = WVENNO
	KEY(5,12) = WINVNO
	BSMID = 1
	BSEND = NAPREC
	XCALL SERCH (4,NEWAP2,KEY(1,12),34,37,BSEND,BSMID,SRCCTL,5,38,43,68,75,0,0)
	GO TO (CHKAPO), SRCCTL
	DUPFLG = 1
	XCALL OUTPT (24,1,1,'INVOICE ALREADY ENTERED',1)
	GO TO DUPINV
	
; 1-27-16 ssq: check pornxf for duplicate invoice...
	READ (CHN192, PORNXF, WINVNO, KRF:2) [ERR=INVDTE]
	WHILE (WINVNO .EQ. PXINV)
		BEGIN
		XCALL IOS (CHN192, PORNXF, READ, LOKCTL)
		IF (WVENNO .EQ. PXVEN)
			BEGIN
			MSGCTL = 7	;Y/N
			XCALL MESAG ('SAME AS EXISING INVOICE - OK?',MSGCTL)
			GOTO (INVNUM),MSGCTL			
			END
		END

	GOTO INVDTE

CHKAPO,
	BSEND = APOEND
	XCALL SERCH (7,APOPEN,KEY(1,4),1,4,BSEND,BSMID,SRCCTL,1,5,10,0,0,0,0)
	IF (SRCCTL.EQ.1) GO TO INVDTE
BACKUP,
	BSMID = BSMID - 1
	LOKCTL = 1
	XCALL IO (7,APOPEN,BSMID,READ,LOKCTL)
	IF (AVENNO.EQ.WVENNO) GO TO BACKUP
CHKINV,
	INCR BSMID
	LOKCTL = 1
	XCALL IO (7,APOPEN,BSMID,READ,LOKCTL)
	IF (AVENNO.NE.WVENNO) GO TO INVDTE
	IF (AINVNO.NE.WINVNO) GO TO CHKINV
	IF (AINVAM-APAID.LE.0) GO TO CHKINV
	IF (AFLAG.LT.0.OR.AFLAG.GT.5.OR.AFLAG.EQ.2) GO TO CHKINV
	DUPFLG = 2
	XCALL OUTPT (24,1,1,'INVOICE ON FILE',1)
DUPINV,
	DISPLAY (15,7,7)
	IF (DUPFLG.EQ.1) XCALL OUTPT (24,52,0,'CHANGE IT ?',1)
	IF (DUPFLG.EQ.2) XCALL OUTPT (24,52,0,'MANUAL PYT ?',1)
	CTL = '24,65,01,00,YN'
	IF (DUPFLG.EQ.2) COL = 66
	CALL INPUT
	IF (INXCTL.EQ.1) GO TO (FNDVC2,DUPAPO), DUPFLG
	DUPFLG = 0
	XCALL OUTPT (24,1,1,'\',1)
INVDTE,
	CTL = '12,25,06,05,D '
	CALL INPUT
	GO TO (RETURN), INXCTL
	WINVDT = ENTRY(1,6)
	IF (CNGCTL.EQ.1) RECALC = 'Y'
	INVDT2(1,2) = WINVDT(5,6)
	INVDT2(3,6) = WINVDT(1,4)
	DUEDT2(1,2) = WVCHDT(5,6)
	DUEDT2(3,6) = WVCHDT(1,4)
	IF (INVDT2.GT.DUEDT2)
&		  XCALL MESAG ('INVOICE DATE AFTER VOUCHER DATE',2)
AMOUNT,
	CTL = '14,25,08,00,$-'
	CALL INPUT
	GO TO (RETURN), INXCTL
	WINVAM = ENTRY(1,9)
	IF (WNDISC.EQ.-1.AND.WINVAM.GT.WDAMTS) GO TO AMOUNT
	IF (WNDISC.EQ.-1) GO TO ENDAMT
	IF (CNGCTL.AND.WINVAM*WDAMT.LT.0) GO TO DSCAMT
	IF (CNGCTL.AND.WINVAM.GT.0.AND.WDAMT.GT.WINVAM) GO TO DSCAMT
	IF (CNGCTL.AND.WINVAM.LT.0.AND.WDAMT.LT.WINVAM) GO TO DSCAMT
	IF (CNGCTL.EQ.1.AND.RECALC.NE.'Y') GO TO ANYCNG
NONDSC,
	IF (WNDISC.EQ.-1) GO TO BADCNG
	CTL = '16,25,07,00,$ '
	CALL INPUT
	GO TO (RETURN), INXCTL
	WNDISC = ENTRY (1,7)
	IF (WNDISC*WINVAM.LT.0) GO TO NONDSC
	IF (WNDISC.GT.WINVAM.AND.WINVAM.GT.0) GO TO NONDSC
	IF (WNDISC.LT.WINVAM.AND.WINVAM.LT.0) GO TO NONDSC
ENDAMT,
	IF (WNDISC.EQ.-1) GO TO DSCAMT		;MANUAL PYT
	IF (WINVAM.EQ.0) WDAMT =
	IF (CNGCTL.EQ.1.AND.RECALC.NE.'Y') GO TO ANYCNG
	IF (WINVAM.EQ.0) GO TO DUEDTE
DISDTE,
	CTL = '18,25,06,00,D '
	IF (CNGCTL.EQ.1) GO TO DISDT2
	IF (WINVAM.LT.0) GO TO CRMDIS			;AP31
	IF (DISDAY.LT.0) GO TO NEGDIS
;	IF (DISDAY.NE.0.OR.DUEDAY.NE.0) GO TO POSDIS
DISDT2,
	CALL INPUT
	GO TO (RETURN), INXCTL
	WDISDT = ENTRY (1,6)
CRMDIS,							;AP31
	IF (WDISDT.EQ.0) WDISDT = WINVDT
	GO TO DSPDIS
NEGDIS,
	DATE = WINVDT
	DAY = DISDAY
	CALL CLCNEG
	WDISDT = DATE
	GO TO DSPDIS
;POSDIS,
;	DATE = WINVDT
;	DAY = DUEDAY
;	IF (DUEDAY.LT.0) CALL CLCNEG
;	IF (DUEDAY.GT.0) CALL CLCDUE
;	WDUEDT = DATE
;	WDISDT = DATE
;	IF (DISDAY.EQ.0) GO TO DSPDIS
;	CYCLE = 0
;	IF (DISDAY.GT.WDUEDT(3,4)) CYCLE = -1
;	DATE = WDUEDT
;	DAY = DISDAY
;	CALL CLCDTE
;	WDISDT = DATE
DSPDIS,
	IF (WDISDT(5,6).EQ.WINVDT(5,6) .AND. WDISDT(1,4).LT.WINVDT(1,4)) WDISDT = WINVDT
	DECMAL (1,6) = WDISDT
	CALL DSPDTE
ENDDIS,
	IF (CNGCTL.EQ.1.AND.RECALC.NE.'Y') GO TO ANYCNG
DISCNT,
	IF (WINVAM.EQ.0) GO TO ENDDSC
;------ AP31 ---------------------------------------------------------------
;	IF (CNGCTL.EQ.1.OR.DISPCT.EQ.0) GO TO DSCPCT
	IF ((CNGCTL.EQ.1.OR.DISPCT.EQ.0).AND.RECALC.NE.'Y') GO TO DSCPCT
;---------------------------------------------------------------------------
	WDPCT = DISPCT
	CALL DSPAMT
	CALL DSPDPC
	GO TO ENDDSC
DSCPCT,
	IF (WNDISC.EQ.-1) GO TO DSCAMT		;MANUAL PYT
	CTL = '20,25,03,00,# '
	CALL INPUT
	GO TO (RETURN), INXCTL
	WDPCT = ENTRY(1,3)
	CALL DSPDPC
	IF (WDPCT.NE.0) CALL DSPAMT
	IF (CNGCTL.EQ.1.AND.RECALC.NE.'Y') GO TO ANYCNG
	IF (WDPCT.NE.0) GO TO DUEDTE
DSCAMT,
	XCALL OUTPT (20,25,0,'    ',1)
	CTL = '22,25,06,00,$-'
	CALL INPUT
	GO TO (RETURN), INXCTL
	WDAMT = ENTRY(1,7)
	IF (WNDISC.EQ.-1.AND.WDAMT.GT.WDAMTS) GO TO DSCAMT
	IF (WDAMT*WINVAM.LT.0) GO TO DSCAMT
	IF (WDAMT.GT.WINVAM.AND.WINVAM.GT.0) GO TO DSCAMT
	IF (WDAMT.LT.WINVAM.AND.WINVAM.LT.0) GO TO DSCAMT
	WDPCT = 0
	GO TO ENDDSC
DSPDPC,
	CTL = '20,25,03'
	DECMAL = WDPCT
	CALL DSPPCT
	RETURN
DSPAMT,
	DECMAL = (WDPCT * (WINVAM - WNDISC)) #3
	CTL = '22,25,06'
	CALL DSPDLR
	WDAMT = DECMAL
	RETURN
ENDDSC,
	IF (CNGCTL.EQ.1.AND.RECALC.NE.'Y') GO TO ANYCNG
DUEDTE,
	CTL = '12,53,06,00,D '
	IF ((CNGCTL.EQ.1.OR.DUPFLG.EQ.2).AND.RECALC.NE.'Y') GO TO DUEDT2
	IF (WINVAM.LT.0) GOTO CRMDUE			;AP31
	IF (DUEDAY.LT.0) GO TO NEGDUE
;	IF (DUEDAY.GT.0) GO TO POSDUE
DUEDT2,
	CALL INPUT
	GO TO (RETURN), INXCTL
	WDUEDT = ENTRY(1,6)
	IF (WDUEDT.EQ.0.AND.WNDISC.EQ.-1) GO TO DUEDT2
CRMDUE,								;AP31
	IF (WDUEDT.EQ.0.AND.WINVAM.LT.0) WDUEDT = WINVDT	;AP31
	IF (WDUEDT.EQ.0) GO TO NEGDUE
	GO TO DSPDUE
NEGDUE,
;	IF (DUEDAY.GE.0) GO TO POSDUE
	DATE = WINVDT
	DAY = DUEDAY
	CALL CLCNEG
	WDUEDT = DATE
	GO TO DSPDUE
CLCNEG,
	MONTH = 0
	JULDAY = JULIAN(DATE(1,2)) + DATE(3,4) - DAY
	IF (JULDAY .LE. 365) GO TO NEGLP
	JULDAY = JULDAY - 365
	DATE(5,6) = DATE(5,6) + 1
NEGLP,
	INCR MONTH
	IF (JULDAY.GT.JULIAN(MONTH)) GO TO NEGLP
	DATE(1,2) = MONTH - 1
	DATE(3,4) = JULDAY - JULIAN(MONTH-1)
	RETURN
;POSDUE,
;	CALL CLCDUE
;	GO TO DSPDUE
;CLCDUE,
;	DATE = WINVDT
;	DAY = DUEDAY		;HERE 'DUEDAY' IS DAY-OF-MONTH AND NOT
;				;NUMBER OF DAYS
;	CYCLE = 0
;	CUTDAY = 0		;OPTIONAL SPECIAL HANDLING FOR VENDOR CUTOFFS
;				; IF 'CUTDAY' IS > 0 IT IS THE DAY OF THE
;				; MONTH THIS VENDOR CUTS HIS STATEMENTS.
;				; DUE DATE IS NOT THEN CALCULATED ON THE
;				; INVOICE DATE.
;	IF (CUTDAY.LE.0) CUTDAY = DUEDAY
;	IF (WINVDT(3,4).GT.CUTDAY) CYCLE = 1
;	IF (DUEDAY .LE. CUTDAY+5) INCR CYCLE
;	CALL CLCDTE
;	WDUEDT = DATE
;	RETURN
;CLCDTE,
;	DATE(3,4) = DAY
;	IF (DATE(3,4) .LE. 30) DATE(1,2) = DATE(1,2) + CYCLE
;	IF (DATE(3,4).GT.30) DATE(1,2) = DATE(1,2) + 1
;	IF (DATE(3,4).GT.30) DATE(3,4) = DATE(3,4) - 30
;	IF (DATE(1,2).GT.12) DATE(5,6) = DATE(5,6) + 1
;	IF (DATE(1,2).GT.12) DATE(1,2) = DATE(1,2) - 12
;	IF (DATE(1,2).EQ.02 .AND. DATE(3,4).GT.28) DATE(3,4) = 28
;	RETURN
DSPDUE,
	DECMAL (1,6) = WDUEDT
	CALL DSPDTE
	IF (WHATNO.EQ.22) GO TO CHEKNO		; 22 = 1ST ENTRY OF MANUAL PYT
	DUEDT2(1,2) = WDUEDT(5,6)
	DUEDT2(3,6) = WDUEDT(1,4)
	IF (DUEDT2.LT.INVDT2.AND.DUPFLG.NE.2)
&		XCALL MESAG('DUE DATE BEFORE INV DATE',2)
	RECALC = 'N'
	GO TO (ANYCNG), CNGCTL
CHEKNO,
	CTL = '14,53,06,00,N '
	ACTITL = WCHKNO
	CALL INPUT
	GO TO (RETURN), INXCTL
	WCHKNO = ENTRY(1,6)
	IF (WHATNO.EQ.22) GO TO CSHACC		; 22 = 1ST ENTRY OF MANUAL PYT
	GO TO (ANYCNG), CNGCTL
APACC,
	ROW = 16
	IF (WINVAM.EQ.0.AND.CNGCTL.EQ.0) GO TO ENDACC
	IF (WNDISC.EQ.-1) GO TO BADCNG
	IF (WCHKNO.NE.0.AND.CNGCTL.EQ.0) GO TO CSHACC
	ACTNUM = WAPACT
	ACTITL = MLSAP
	CALL GETACC
	GO TO (RETURN), INXCTL
	WAPACT = ACTNUM
	GO TO (ANYCNG), CNGCTL
	IF (WCHKNO.EQ.0) GO TO ENDACC
CSHACC,
	ROW = 18
	ACTNUM = WCSACT
	ACTITL = MLSCSH
	CALL GETACC
	GO TO (RETURN), INXCTL
	WCSACT = ACTNUM
	GO TO (ANYCNG), CNGCTL
DSCACC,
	ROW = 20
	ACTNUM = WDSACT
	ACTITL = MLSDSC
	CALL GETACC
	GO TO (RETURN), INXCTL
	WDSACT = ACTNUM
ENDACC,
	IF (WHATNO.EQ.22) GO TO ANYCNG		; 22 = 1ST ENTRY OF MANUAL PYT
	GO TO (ANYCNG), CNGCTL
	GO TO INVDES
GETACC,
	ALPHA = ACTNUM,MASK2
	XCALL OUTPT (ROW,53,0,ALPHA,1)
	IF (ACTITL.EQ.'N'.AND.CNGCTL.EQ.0) RETURN
GETAC1,
	IF (WHATNO.EQ.12.OR.WHATNO.EQ.13.OR.WHATNO.EQ.14) GO TO GETAC2
	XCALL OUTPT (ROW,52,0,'\',1)
	XCALL FLAGS (00010000)
	ACCEPT (15,TCHAR)
	XCALL FLAGS (00000000)
	IF (TCHAR.EQ.21.OR.TCHAR.EQ.9) GO TO GETAC2	;^U OR TAB
	IF (TCHAR.NE.13) GO TO GETAC1			;RETURN
	IF (SYSTEM.NE.1) ACCEPT (15,TCHAR)
	RETURN
GETAC2,
	XCALL OUTPT (ROW,53,1,'\',1)
	CTL (4,14) = '53,04,03,# '
	CALL INPUT
	IF (INXCTL.EQ.1) RETURN
	IF (ENTRY(1,3).EQ.'000') GO TO GETAC2
	ACTNUM(1,4) = ENTRY(1,4)
	XCALL OUTPT (ROW,57,0,'-',1)
	CTL (4,14) = '58,03,00,# '
	CALL INPUT
	GO TO (GETAC2), INXCTL
	ACTNUM(5,7) = ENTRY(1,3)
	CALL SERCH
	RETURN
SERCH,
	ALPHA = ACTNUM,MASK2
	XCALL OUTPT (ROW,53,0,ALPHA,1)
	KEY(1,7) = ACTNUM,MASK
	BSEND = EXPEND

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL ACCT(KEY(1,7), ACDESC, SRCCTL)

;;;	XCALL SERCH (3,EXPACT,KEY(1,7),1,7,BSEND,BSMID,SRCCTL,4,32,37,0,0,0,0)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (SRCCTL)  ACDESC = '** ACCT NOT ON FILE **'
DSPACC,
	XCALL OUTPT (ROW+1,58,1,ACDESC,1)
	RETURN
INVDES,
	CTL= '22,53,25,00,A '
	CALL INPUT
	GO TO (RETURN), INXCTL
	WDESC = ENTRY(1,25)
	GO TO (ANYCNG), CNGCTL
	IF (DUPFLG.EQ.2) GO TO ANYCNG
DEFACC,
	WHATNO = 0
RETURN,
	NEWAP1 = NEWAP
	WORK1 = WORK
	RETURN
BADCNG,
	XCALL MESAG (' ',6)
ANYCNG,
	WHATNO = 0
	GO TO RETURN
DUPAPO,
	WHATNO = 19
	INXCTL =
	GO TO RETURN
FNDVC2,
	WHATNO = 21
	IDX = 0
	INXCTL =
	XCALL IO (4,NEWAP,BSMID,0,IDX)
	IF (IDX.EQ.1) INXCTL = 1
	TOTEXP = WINVAM
	NAPREC = BSMID
	GO TO RETURN
INPUT,
	XCALL INPUT(ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	RETURN
DSPDLR,
	OPTION = 3
	GO TO CALDSP
DSPDTE,
	OPTION = 2
	GO TO CALDSP
DSPPCT,
	OPTION = 5
CALDSP,
	XCALL DSPLY(MAX,ROW,COL,DECMAL,OPTION,1)
	RETURN
END
