;  INTPOR / AP 
;
;
;		::PCPYAP.DEF::
;******************************************************************************
;		ACCOUNTS PAYABLE
;
;		RELEASED: AUGUST 1, 1984 (d70s10)
;******************************************************************************
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984
;		MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;		UPDATE FIELDS IN P/O AND INVENTORY FILES AS A RESULT
;			OF POSTING A NEW PAYABLE IN THE AP PACKAGE
;
RECORD
	,A64,'THIS MATERIAL CONTAINS THE VALUABLE PROPERTIES AND TRADE SECRETS'
	,A62,'OF MCBA, EMBODYING CONFIDENTIAL INFORMATION AND IDEAS, NO PART'
	,A56,'OF WHICH MAY BE USED AND/OR DISCLOSED WITHOUT MCBAs DULY'
	,A55,'AUTHORIZED LICENSE AGREEMENT AND/OR WRITTEN PERMISSION.'
	,A61,'COPYRIGHT (C) MCBA, AN UNPUBLISHED WORK. ALL RIGHTS RESERVED.'

RECORD POLINE		
		.INCLUDE 'DEF:RD152A.DEF'
RECORD DUMLIN		
		.INCLUDE 'DEF:RD152B.DEF'
RECORD APINTR		
		.INCLUDE 'DEF:RD127A.DEF'
RECORD DUMAPI		
		.INCLUDE 'DEF:RD127B.DEF'
RECORD  RD043A		
		.INCLUDE 'DEF:RD043A.DEF'
RECORD RD043B		
		.INCLUDE 'DEF:RD043B.DEF'
RECORD RD151A		
		.INCLUDE 'DEF:RD151A.DEF'
RECORD RD151B,X		
		.INCLUDE 'DEF:RD151B.DEF'
RECORD RD154A		
		.INCLUDE 'DEF:RD154A.DEF'
;**********************************************************************
RECORD RD154B		
		.INCLUDE 'DEF:RD154B.DEF'
RECORD RD041A		
		.INCLUDE 'DEF:RD041A.DEF'
RECORD RD041B,X			
		.INCLUDE 'DEF:RD041B.DEF'
RECORD RD042A			
		.INCLUDE 'DEF:RD042A.DEF'
RECORD BRACKS
		,A30,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A30,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A30,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A8,	']]]]]]]]'
RECORD CLEAR
	ABRQTY	,D6
	COST	,D10
	CSTCOD	,D1
	CSTFMT	,A12
	KCOST	,D10
	OLDCST	,D10
	RCVQTY	,D6
	RCVUM	,A2
	REJQTY	,D6
	TAVCST	,D9
	TDTERC	,D6
	TNWCST	,D10
	TPONUM	,A6
	TQTYDU	,D6
	TQTYRC	,D7
	TQTYRJ	,D6
	TRCVER	,A3
	TREJCD	,A2
	TRLNUM	,A2
RECORD
	ABOH	,D8
	ACTDYS	,D4
	APITOT	,D10
	AVCST1	,D10
	AVCST2	,D10
	BLANKS	,A10
	BSEND	,D5
	BSMID	,D5
	CTR	,D2
	EOF	,D1
	FIRST	,D1
	KDATE	,D6
	KRECNO	,D5
	LINKEY	,D11
	LOCTOT	,D2
	LOKCTL	,D1
	LRECNO	,D5
	LSTDAT	,D6
	NOABRT	,D1,	1
	NOFLAG	,D1,	0
	ORGCNT	,D5
	QTYBAK	,D6
	QUANTY	,D6
	READ	,D1,	0
	RECEIV	,D6
	RECNO	,D5
	RCOUNT	,D5
	SRCCTL	,D1
	SRCOPT	,D1
	SWITCH	,D1
	TMPONH	,D8
	TODAY	,D6
	TOTONH	,D8
	TOTQTY	,D8
	V	,D1
	WCOUNT	,D5
	WRITE	,D1,	1
PROC
	XCALL TERID (V)
	XCALL OUTPT (2,1,1,'UPDATE FIELDS IN PURCHASE ORDER FILES',1)
	XCALL RDATE (TODAY)
	SWITCH = 1
	XCALL FILES (1,'I',151,SWITCH)		; FILE 151, PORHDR.
	IF (SWITCH.EQ.9) GO TO INUSE1
	LOKCTL = NOABRT
	XCALL IO (1,RD151B,1,READ,LOKCTL)
	UNLOCK 1
	ORGCNT = ORG151
	SWITCH = 1
	XCALL FILES (2,'U',152,SWITCH)		; FILE 152, PORLIN.
	IF (SWITCH.EQ.9) GO TO INUSE2
	LOKCTL = NOABRT
	XCALL IO (2,DUMLIN,1,READ,LOKCTL)
	UNLOCK 2
	SWITCH = 5
	XCALL FILES (3,'U',127,SWITCH)		; FILE 127, APINTR
	IF (SWITCH.EQ.9) GO TO INUSE3
	SWITCH = 1
	XCALL FILES (4,'U',154,SWITCH)	;FILE #154 -- RCVHST FILE
	IF (SWITCH.EQ.9) GO TO INUSE4
	LOKCTL = NOABRT
	XCALL IO (4,RD154B,1,READ,LOKCTL)	;CONTROL RECORD
	UNLOCK 4
	SWITCH = 1
	XCALL FILES (5,'U',43,SWITCH)	;FILE #43 -- INVTRX FILE
	IF (SWITCH.EQ.9) GO TO INUSE5
	LOKCTL = NOABRT
	XCALL IO (5,RD043B,1,READ,LOKCTL)
	UNLOCK 5
	SWITCH = 1
	XCALL FILES (6,'I',42,SWITCH)	;FILE # 42 -- ITMIDX FILE
	IF (SWITCH.EQ.9) GO TO INUSE6
	SWITCH = 1
	XCALL FILES (7,'I',41,SWITCH)	;FILE# 41 -- ITMMAS FILE
	IF (SWITCH.EQ.9) GO TO INUSE7
	KRECNO = 1
	CALL READ			; READ FIRST APPLICABLE APINTR RECORD
	IF (EOF) GO TO DONE
PORUN,
	SRCOPT = 4
	BSMID = 1
	SRCCTL = 2
	RD151A =
	XCALL SERCH (1,RD151A,APIPON,1,8,ORGCNT,BSMID,SRCCTL,SRCOPT,9,14,
&			0,0,0,0)
	IF (SRCCTL.EQ.1) GO TO READIT
	LINKEY(1,8) = APIPON
	LINKEY(9,11) = APIPOL
	SRCOPT = 4
	BSMID = 1
	SRCCTL = 2
	POLINE =
	XCALL SERCH (2,POLINE,LINKEY,1,11,ORG152,LRECNO,SRCCTL,SRCOPT,12,17,
&			0,0,0,0)
	IF (SRCCTL.EQ.1) GO TO READIT
	APITOT = APIDAM + APIVAM
	TOTQTY = LQTYIV + APIQTY
	OLDCST = LACCST
	IF (TOTQTY.GT.0) GO TO CALCUL
	LDINVC = 0
	LQTYIV = 0
	GO TO UPDSTS
CALCUL,
	IF (TOTQTY.LT.LQTYRC) GO TO COMPLX
	TNWCST = (((LDINVC+APITOT)*10000)/TOTQTY)#2
	GO TO UPDATE
COMPLX,
	TNWCST = (((LACCST*(LQTYRC-TOTQTY) + (LDINVC+APITOT)*100)
&			*100)/LQTYRC)#2
UPDATE,
	LACCST = TNWCST
	LDINVC = LDINVC + APITOT
	LQTYIV = TOTQTY
UPDSTS,
	IF (LINSTS.EQ.'N'.OR.LINSTS.EQ.'X') GO TO RITE
	LINSTS = 'P'
	IF (LQTYRC.GT.0) LINSTS = 'R'
	IF (LQTYIV.GT.0) LINSTS = 'I'
	IF (LQTYRC.LT.LQTYOR) GO TO RITE
	IF (LQTYIV.LT.LQTYOR) GO TO RITE
	LINSTS = 'C'
RITE,
	IF (TNWCST.NE.OLDCST) CALL NEWAVG
	APIPOI = 1
	LOKCTL = NOABRT
	XCALL IO (2,POLINE,LRECNO,WRITE,LOKCTL)
	LOKCTL = NOABRT
	XCALL IO (3,APINTR,KRECNO,WRITE,LOKCTL)
READIT,
	NOFLAG = 0
	CALL READ
	IF (EOF) GO TO PURGE
	GO TO PORUN
;**********************************************************************
;	CALCULATE NEW AVERAGE COST AND CREATE INVENTORY TRX RECORD
;**********************************************************************
NEWAVG,
	IF (NOFLAG.EQ.1) RETURN
	QTYBAK = LQTYRC
	IF (LQTYIV.LT.LQTYRC) QTYBAK = LQTYIV
	IF (PUOFM.EQ.LITMUM) QTYBAK = QTYBAK * PSRAT(1,4)
	LOKCTL = NOABRT
	XCALL IO (5,RD043B,1,READ,LOKCTL)
	IF ((REC043+1).GE.MAX043) GO TO FULLTX
	LOKCTL = NOABRT
	XCALL IO (4,RD154B,1,READ,LOKCTL)
	IF ((REC154+1).GE.MAX154) GO TO FULL
	TOTONH =
	CTR =
GETTOT,
	INCR CTR
	IF (CTR.GT.LOCTOT) GO TO BAKOUT
	IF (LOC(CTR).EQ.BLANKS(1,2)) GO TO GETTOT
	TOTONH = TOTONH + QTYONH(CTR)
	GO TO GETTOT
BAKOUT,
	IF ((TOTONH-QTYBAK).GT.0.AND.TOTONH.GT.0) GOTO AVGES
	AVCST1 = (TNWCST)#1
	AVCST2 = (TNWCST)#1
	QTYBAK = TOTONH
	GO TO UPDAVG
AVGES,
	TMPONH = TOTONH - QTYBAK
	AVCST1 = ( ( AVGCST*TOTONH - ((OLDCST*QTYBAK)#1) )*100
&			/TMPONH )#2
	IF (SUOFM.NE.LITMUM) AVCST1 = ( ( AVGCST*TOTONH - ((OLDCST*PSRAT(1,4)
&	*QTYBAK)#1) )*100/TMPONH )#2
	AVCST2 = ( ( AVCST1*TMPONH + ((TNWCST*QTYBAK)#1) )*100
&			/TOTONH )#2
UPDAVG,
	QUANTY = -QTYBAK
	COST = OLDCST
	ROLDAV = AVGCST
	RNWAVG = AVCST1
	CALL WRITER
NWDATA,
	QUANTY = QTYBAK
	COST = TNWCST
	ROLDAV = AVCST1
	RNWAVG = AVCST2
	CALL WRITER
FREBUF,
	LOKCTL = NOABRT
	XCALL IO (4,RD154B,MAX154,READ,LOKCTL)
	LOKCTL = NOABRT
	XCALL IO (4,RD154B,1,READ,LOKCTL)
	UNLOCK 4
	LOKCTL = NOABRT
	XCALL IO (5,RD043B,MAX043,READ,LOKCTL)
	LOKCTL = NOABRT
	XCALL IO (5,RD043B,1,READ,LOKCTL)
	UNLOCK 5
	RETURN
;**********************************************************************
;	WRITE OUT ONE RCVHST RECORD AND ONE INVTRX RECORD
;**********************************************************************
WRITER,
	RDTERC(1,2) = APIVDT(5,6)
	RDTERC(3,6) = APIVDT(1,4)
	RPONUM = LPONUM
	RRLNUM = LRLNUM
	RLINNO = LLINNO
	REXCST = LEXCST
	RREJCD = LREJCD
	RCVINO = LITMNO
	RCVDSC = LITMDS
	RSHPTO = HSHPTO
	RQTYOR = LQTYOR
	RQTYRC = LQTYRC
	RQTYRJ = LQTYRJ
	REJNOW = 0
	RCVNOW = QUANTY
	RINVUM = LITMUM
	RITMCC = LITMCC
	RDTEPM = LDTEPM
	RNWCST = COST
	RNOTIF = LNOTIF
	RMOVET = LMOVET
	RRCVER = LRCVER
	RVENDR = HVENDR
	INCR REC154
	LOKCTL = NOABRT
	XCALL IO (4,RD154B,1,WRITE,LOKCTL)
	LOKCTL = NOABRT
	XCALL IO (4,RD154A,REC154,WRITE,LOKCTL)
	UNLOCK 1
UPDINV,
	RD043A =
	RITMNO = LITMNO
	RDESCR = LITMDS
	LOCTO  = HSHPTO
	QTYRCD = QUANTY
	OLDAVG = ROLDAV
	NEWCST = (COST)#2
	NEWAVG = RNWAVG
	PONUM(1,6) = LPONUM,'ZZZZXX'
	PONUM(7,9) = LRLNUM,'-XX'
	CALL FNDLOC
	IF (LQTYOR.LE.TQTYRC) ORDCMP = 'Y'
	TRXTYP =
	INCR REC043
	LOKCTL = 1
	XCALL IO (5,RD043B,1,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IO (5,RD043A,REC043,WRITE,LOKCTL)
	UNLOCK 4
	RETURN
;**********************************************************************
;SUBROUTINE TO IDENTIFY FIELDS IN THE ITMMAS
;**********************************************************************
FNDLOC,
	CTR =
FNDLO2,
	INCR CTR
	IF (HSHPTO.EQ.'  ') GO TO FOUNDT
	IF (CTR.GT.LOCTOT) RETURN
	IF (LOC(CTR).EQ.HSHPTO) GO TO FOUNDT
	IF (LOC(CTR).EQ.'  ') GO TO NEW
	GO TO FNDLO2
FOUNDT,
	NEWLOC =
	TOOONH = QTYONH(CTR)
	TOOONO = QTYONO(CTR)
	RETURN
NEW,
	NEWLOC = 1
	RETURN
;**********************************************************************
;	FILE FULL CONDITION
;**********************************************************************
FULL,
	XCALL OUTPT (2,0,2,' ',V)
	XCALL OUTPT (6,15,0,'The RCVHST file is now full.  Use the EXPAND',V)
	XCALL OUTPT (7,15,0,'option from the SYSTEMS FUNCTIONS menu to',V)
	XCALL OUTPT (8,15,0,'increase the size of the RCVHST file before',V)
	GO TO BOTTOM
FULLTX,
	XCALL OUTPT (2,0,2,' ',V)
	XCALL OUTPT (6,15,0,'The INVTRX file is now full.  Use the EXPAND',V)
	XCALL OUTPT (7,15,0,'option from the SYSTEM FUNCTIONS menu to',V)
	XCALL OUTPT (8,15,0,'increase the size of the INVTRX file before',V)
BOTTOM,
	XCALL OUTPT (9,15,0,'re-entering the NEW PAYABLES application.',V)
	XCALL MESAG (' ',2)
	GO TO DONE
;**********************************************************************
;	READ ONE IN-RANGE APINTR RECORD
;**********************************************************************
READ,
	EOF =
REREAD,
	INCR KRECNO
	LOKCTL = NOABRT
	XCALL IO (3,APINTR,KRECNO,READ,LOKCTL)
	IF (APINTR.EQ.BRACKS) GO TO ENDFIL
	IF (APIPOI.NE.0) GO TO REREAD
	LOKCTL = NOABRT
	XCALL IO (7,RD041B,1,READ,LOKCTL)
	LOCTOT = NUMLOC
	BSEND = ORG041
	SRCCTL =
	XCALL SERCH (6,RD042A,APIITM,1,15,BSEND,BSMID,SRCCTL,4,16,20,0,0,0,0)
	IF (SRCCTL.EQ.1) NOFLAG = 1
	IF (SRCCTL.EQ.1) RETURN
	LOKCTL = 1
	XCALL IO (7,RD041A,IRC041,READ,LOKCTL)
	RETURN
ENDFIL,
	EOF = 1
	RETURN
;**********************************************************************
;	PURGE FULLY HANDLED RECORDS FROM APINTR
;**********************************************************************
PURGE,
	LOKCTL = NOABRT
	XCALL IO (3,DUMAPI,1,READ,LOKCTL)
	RCOUNT = 1
	WCOUNT = 1
LOOP,
	INCR RCOUNT
	IF (RCOUNT.GT.REC127) GO TO PAD
	LOKCTL = NOABRT
	XCALL IO (3,APINTR,RCOUNT,READ,LOKCTL)
	IF (APINTR.EQ.BRACKS) GO TO PAD
	IF (APIJBI.AND.APIPCI.AND.APIPOI) GO TO LOOP
	INCR WCOUNT
	LOKCTL = NOABRT
	XCALL IO (3,APINTR,WCOUNT,WRITE,LOKCTL)
	GO TO LOOP
PAD,
	RECNO = WCOUNT
PADDER,
	INCR WCOUNT
	LOKCTL = NOABRT
	XCALL IO (3,BRACKS,WCOUNT,WRITE,LOKCTL)
	IF (WCOUNT.LT.REC127) GO TO PADDER
	REC127 = RECNO
	ORG127 = 1
	LOKCTL = NOABRT
	XCALL IO (3,DUMAPI,1,WRITE,LOKCTL)
	IF (RECNO.GT.1) GO TO DONE
	XCALL FILES (1,'I',151,4)	; CLOSE PORHDR
	XCALL FILES (2,'U',152,4)	; CLOSE PORLIN
	XCALL FILES (3,'U',127,4)       ; CLOSE AND UNPROTECT APINTR
	XCALL FILES (4,'U',154,4)	; CLOSE RCVHST
	XCALL FILES (5,'U',043,4)	; CLOSE INVTRX
	XCALL FILES (6,'I',042,4)	; CLOSE ITMIDX
	XCALL FILES (7,'I',041,4)	; CLOSE ITMMAS
	XCALL PGCHN ('AP:CLRVC2',0)
;**********************************************************************
DONE,
	XCALL FILES (7,'I',41,4)	;CLOSE ITMMSA FILE
INUSE7,
	XCALL FILES (6,'I',42,4)	;CLOSE ITMIDX FILE
INUSE6,
	XCALL FILES (5,'I',43,4)	;CLOSE INVTRX FILE
INUSE5,
	XCALL FILES (4,'U',154,4)	;CLOSE RCVHST FILE
INUSE4,
	CLOSE 3				; CLOSE APINTR.
INUSE3,
	XCALL FILES (2,'U',152,4)	; CLOSE PORLIN.
INUSE2,
	XCALL FILES (1,'I',151,4)	; CLOSE PORHDR.
INUSE1,
	XCALL PGCHN ('AP:STAPIN',0)
END
