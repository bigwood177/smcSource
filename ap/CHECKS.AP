; CHECKS / AP (new) Laser
;
;
;		CHECK WRITING PROGRAM
;
;28-JUN-05 SSQ: laser checks
;19-NOV-15 SSQ: multi-stub checks: print voucher report instead of
;		voiding checks.
;11-Jan-17 ssq: create apopen work file that can be sorted alphbetically instead of printing checks
;		sort and print checks from this file
;
;29-MAR-17 SSQ: allow user to re-start check run at a specific check number

EXTERNAL FUNCTION
	GU_NAME	,A

RECORD TRAY_4
	T_CHAR	,A1		;<ESC>
		,A2,	"&l"
	PAR	,A2,	"4H"	;select multi-purpose tray


RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR


	.include 'def:hpsub.def'

RECORD	HDR1
	,A*,	'TRANS.DATE  REFERENCE             GROSS AMOUNT    DISCOUNT  NET AMOUNT'

RECORD	LEG1
		,A*,	'VENDOR ID'
		,A2
	L1_VNO	,A4
		,A2
	L1_NAME	,A25

RECORD	PRINT
	TITLE	,A*,	'REMITTANCE ADVICE LOG'
	HD	,A6,	'NO HDR'
	LG	,A9,	'NO LEGEND'
	LPONSW	,D1

RECORD	APWORK		;1-11-17 PRINT CHECKS FROM THIS WORK FILE...
	ASORT	,A30	;VENMAS.VSORT
	APDATA	,A124	;APOPEN RECORD
	APREC	,D6	;APOPEN RECORD #


RECORD APOPEN	
		.INCLUDE 'DEF:RD017A.DEF'
RECORD DUMAPO	
		.INCLUDE 'DEF:RD017B.DEF'
RECORD	,X
	.INCLUDE 'DEF:RD017E.DEF'	;1-27-99 Created to replace below ...
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;		,A10
;;;	DAPACT	,D7
;;;	DCSACT	,D7
;;;	DDSACT	,D7
;;;		,A22
;;;	CHEKNO	,D6
;;;	STRVEN	,A4
;;;	ENDVEN	,A4
;;;	CUTDTE	,D6
;;;	CHKDTE	,D6
;;;		,A39
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;RECORD VENIDX	
;;;		.INCLUDE 'DEF:RD012A.DEF'

RECORD VENMAS	
		.INCLUDE 'DEF:RD011A.DEF'
RECORD ,X	
		.INCLUDE 'DEF:RD011B.DEF'

RECORD	RA_WORK
	RA_VENNO	,A4
	RA_CHKNO	,D6
	RA_CHKDTE	,D8
	RA_INVDT	,D8
	RA_INVNO	,A8
	RA_INVREM	,D8
	RA_DSCREM	,D8
	RA_DESC		,A25

RECORD	TOTL
	LSTCHK	,D6
	LSTDTE	,D8
	TOT_INV	,D10
	TOT_DSC	,D10

RECORD	VARS
	GOOD_CHK	,D6
	NEW_CHK		,D6
	ENTRY	,A30
	WHATNO	,D2

	WRKFIL	,A14,	'SPL:APWORK.DDF'
	IS_RA	,D1		;Don't print bar-code on remittance stub
	ln	,d6
	B_DATA	,A20
	B_STRNG	,A20
	UNAME	,A20
	RA_EOF	,D1
	V_CNT	,D6	
	NUM_V	,D6	;number of lines printed on next stub
	FIRST_RA,D1	;1 = FIRST RA
;;;	MAX_STUB,D2	,18
	MAX_STUB,D2	,17	;12-15-15 for barcode
	CHNRA	,D2	;FOR SPL:RAWORK.DDF
	CHNWRK	,D2	;FOR SPL:APWORK.DDF
	L_CNT	,D4
	APCNT	,D6
	BEGCNT	,D5
	BLANKS	,A25
	BSEND	,D5
	BSMID	,D5
	CHKDT2	,D8
	CHKMSK	,A6,'ZZZXXX'
	CHKTOT	,D9
	CKNOSW	,D1,1
	CNGCTL	,D1
	DECMAL	,D18
	DEFER1	,11D1,-1,5,1,2,5,5,5,-1,-1,9,9
	DEFER2	,11D1,6,5,1,2,5,5,5,6,6,9,9
	DEFER3	,11D1,6,4,1,2,4,4,4,6,6,9,9
	DSCREM	,D7
	DUEDT2	,D8
;;;	ENTRY	,A2
	ENDSW	,D1
	ERRRET	,D1
	FSTFLG	,D1,1
	INVREM	,D8
	INXCTL	,D1
	KEY	,A4
	LEN	,D3
	LINCNT	,D2
	LNFEED 	,D2
	LNCNT	,D2
	LNCT	,D2
	LPSW	,D1
	LSTVND	,A4
	MASK1	,A8,'XX/XX/XX'
	MASK2	,A13,'Z,ZZZ,ZZZ.XX-'
	MASK3	,A12,'ZZZ,ZZZ.XXCR'
	MASK4	,A13,'$$,$$$,$$$.XX'
	NAME2	,A25
	OVRFLW	,D1
	PGCNT	,D3
	PLINE	,A84
	PLINE2	,A84
	PRTCTL	,D3
	PRTTOT	,D9
	PRTTYP	,A1
	RPTNUM	,D3
	SPLFIL	,A14
	SPELLD	,A108
	SRCCTL	,D1
;;;	TITLE	,A1
	LOKCTL	,D1
	READ	,D1,	0
	WRITE	,D1,	1
	V	,D1,1
	LINECT	,D3
	SETPPR	,A4,' [!p'
PROC
	XCALL TERID (V)
	XCALL ASCII (27,SETPPR(1,1))

	UNAME = %GU_NAME	;4-26-07 ssq

	UPCASE UNAME
	if (uname.eq.'KRISTINAS')
		begin
		xcall ascii(27,t_char)
		end

	XCALL HP (14,hpDOTS, 0)

	V = 1
	XCALL FILES(7,'U',17,5)		;APOPEN FILE
	XCALL FILES(1,'SI',11,5)	;VENMAS FILE
	OPEN (22,O,'SPL:RAWORK.DDF')	;RA WORK FILE
	CHNRA = 22

	OPEN (23,O,WRKFIL)	;ALPHA CHECK PRINTING WORK FILE
	CHNWRK = 23

	LOKCTL = 1
	XCALL IO (7,DUMAPO,1,READ,LOKCTL)
	LPSW = 8		;3-2-16 ssq: don't ask

	XCALL LPON (LPSW,SPLFIL)
	GO TO (ABORT), LPSW + 1
	if (uname.eq.'KRISTINAS')writes (14,tray_4)

	XCALL WATE(2,V)
	APCNT = 2
	GOOD_CHK = -1					;3-29-17
READ1,							;FIRST PASS TO CHECK
	LOKCTL = 1
	XCALL IO (7,APOPEN,APCNT,READ,LOKCTL)		;FOR 0 AND CR TOTAL
	INCR APCNT					;VENDORS TO BE FLAGGED
	IF (AINVNO.EQ.']]]]]]') GOTO PRTCHK
	IF (AVENNO.LT.STRVEN) GOTO READ1
	IF (AVENNO.GT.ENDVEN) GO TO PRTCHK
	IF (AINVNO.EQ.']]]DEL') GOTO READ1
	IF (AFLAG.EQ.1.OR.AFLAG.EQ.2.OR.AFLAG.EQ.8.OR.AFLAG.EQ.9) GO TO READ1
	IF (AFLAG.LT.-1) GOTO READ1
	IF (DAPACT.GT.0.AND.AAPACT.NE.DAPACT) GO TO READ1
	IF (AVENNO.NE.LSTVND) CALL SUBTOT
	INVREM = AINVAM - APAID
	DSCREM = ADSCAM - ADSTKN
	IF (AFLAG.EQ.-1.OR.AFLAG.EQ.6.OR.AFLAG.EQ.7) PRTTOT = PRTTOT+(AINVAM-ADSCAM)
	IF (AFLAG.EQ.-1.OR.AFLAG.EQ.6.OR.AFLAG.EQ.7) GOTO TAKDSC

	IF (CHKDTE .GT. ADISDT) DSCREM =

TAKDSC,
	CHKTOT = CHKTOT + (INVREM - DSCREM)
	GO TO READ1
SUBTOT,
	IF (LSTVND.EQ.BLANKS) GO TO ENDSUB
	IF (CHKTOT.LE.0) CALL DEFER
	CHKTOT =
	PRTTOT =
ENDSUB,
	LSTVND = AVENNO
	BEGCNT = APCNT-1
;;;	L_CNT = 21		;SSQ 6-28-05 first line of stub
	L_CNT = 20		;SSQ 6-28-05 first line of stub
	RETURN
DEFER,
	LOKCTL = 1
	XCALL IO (7,APOPEN,BEGCNT,READ,LOKCTL)
	INCR BEGCNT
	IF (BEGCNT.EQ.APCNT) RETURN
	IF (AFLAG.LT.-1) GOTO DEFER
	IF (DAPACT.GT.0.AND.AAPACT.NE.DAPACT) GO TO DEFER
	IF (CHKTOT.LE.0.AND.PRTTOT.GT.0) AFLAG = DEFER1(AFLAG+2) ;PARTIALS > 0
								 ;CHECK <= 0
								 ;
	IF (CHKTOT.LT.0.AND.PRTTOT.EQ.0) AFLAG = DEFER2(AFLAG+2) ;PARTIALS = 0
								 ;CHECK < 0
								 ;
	IF (CHKTOT.EQ.0.AND.PRTTOT.EQ.0) AFLAG = DEFER3(AFLAG+2) ;PARTIALS = 0
								 ;CHECK = 0
								 ;
	LOKCTL = 1
	BEGCNT = BEGCNT - 1
	XCALL IO (7,APOPEN,BEGCNT,WRITE,LOKCTL)
	INCR BEGCNT
	GO TO DEFER

;;; 1-11-17 SSQ: don't print here, instead write records to spl:apwork.ddf

PRTCHK,
	CALL SUBTOT
	LSTVND =
	XCALL FLAGS (00000000)		; ENABLE CTRL/C
	APCNT = 2
NXTREC,
	LOKCTL = 1
	XCALL IO (7,APOPEN,APCNT,READ,LOKCTL)

	APREC = APCNT	;SAVE APOPEN RECORD # (ALPHA SORT)

	IF (AINVNO.EQ.']]]]]]') GOTO EOFAP1
	IF (AVENNO.GT.ENDVEN) GO TO EOFAP1
	INCR APCNT
	IF (AINVNO.EQ.']]]DEL') GOTO NXTREC
	IF (AVENNO.LT.STRVEN) GO TO NXTREC
	IF (AFLAG.LT.0) GO TO NXTREC
	IF (DAPACT.GT.0.AND.AAPACT.NE.DAPACT) GO TO NXTREC
	GOTO (NXTREC,NXTREC,CONT,NXTREC,NXTREC,CONT,CONT,NXTREC,NXTREC), AFLAG
CONT,
	IF (AVENNO .NE. LSTVND)
		BEGIN
		XCALL ISIO (1, VENMAS, AVENNO, READ, LOKCTL)
		IF (LOKCTL .NE. 0) VSORT = AVENNO
		LSTVND = AVENNO
		END
	ASORT = VSORT	;VENMAS.VSORT
	APDATA = APOPEN	;APOPEN RECORD
	WRITES (CHNWRK, APWORK)
	CALL FLGREC
	GOTO NXTREC
EOFAP1,
	APWORK = APOPEN
	WRITES (CHNWRK, APWORK)

	CLOSE CHNWRK
	SORT (IN=WRKFIL, RECORD=APWORK, KEY=(ASORT,AVENNO,AVCHNO) )

	OPEN (CHNWRK, U, WRKFIL)
;;;	CALL SUBTOT

RE_PRINT,					;3-29-17
	LSTVND =
	APCNT = 0
PC_LOOP,
	INCR APCNT
	READ (CHNWRK, APWORK, APCNT)
	IF (APWORK .EQ. ']]]]]]') GOTO PC_EOF

	APOPEN = APDATA				;THIS MAKES THE FIELDS IN APOPEN AVAILABLE

	IF (ACHKNO .LE. GOOD_CHK) GOTO PC_LOOP	;3-29-17: if reprinting, skip good checks

	IF (AVENNO.NE.LSTVND) CALL TOTAL
	IF (L_CNT .GE. 38) CALL OVRFLW		;SSQ 9-15-05
	IF (CKNOSW)CALL WRCKNO
	INVREM = AINVAM - APAID
	DSCREM = ADSCAM - ADSTKN
	PLINE(6,13) = AINVNO
	IF (AFLAG.EQ.6.OR.AFLAG.EQ.7) PLINE (6,13) = ADESC (18,25)

	XCALL DATE8(AINVDT, D_OUT, D_OUTR, D_FMT, D_SW)
	PLINE(17,24) = D_OUT,MASK1

	IF (AFLAG.GE.6) PLINE(15,26) = 'PARTIAL PMNT'
	PLINE(29,39) = INVREM,MASK2
	PLINE(43,52) = DSCREM,MASK2
	PLINE(57,67) = INVREM - DSCREM,MASK2
	CHKTOT = CHKTOT + INVREM - DSCREM
	IF (INVREM.LT.0) CALL CREDIT
	GOTO (ENDBUF,ENDBUF), AFLAG-5
	IF (CHKDTE .GT. ADISDT) CALL DSCLST
ENDBUF,
	IF (NUM_V .GT. MAX_STUB)
	THEN	CALL WRITE_RALOG	;WRITE TO LOG FILE
	ELSE	BEGIN			;NORMAL CHECK STUB
		CALL STUB
		INCR L_CNT
		END

	CALL FLGCHK
	GOTO PC_LOOP
;;;	CALL FLGREC
;;;	GO TO NXTREC
;-------------------------------------------------------------------------------------------

CREDIT,
	PLINE(29,40) = INVREM,MASK3
	PLINE(43,53) = DSCREM,MASK3
	IF (DSCREM.GE.0) PLINE (52,53) =
	PLINE(57,68) = INVREM-DSCREM,MASK3
	RETURN
DSCLST,
	PLINE(43,53) =
	PLINE(57,67) = INVREM,MASK2
	IF (INVREM.LT.0) PLINE (57,68) = INVREM,MASK3
	CHKTOT = CHKTOT+DSCREM
	RETURN
STUB,
	XCALL HP (14,hpPOS,L_CNT+21,0,0, PLINE)		;STUB-2
	IF (L_CNT .EQ. 38) PLINE(2,66) = 		;SSQ 9-15-05
	IF (IS_RA) PLINE(35,55) = 		;SSQ 12-23-15
	XCALL HP (14,hpPOS,L_CNT,0,0, PLINE)		;STUB-1

PRINT,
	PLINE =
	RETURN
WRCKNO,
	CKNOSW =
	RETURN
FLGCHK,	;JUST UPDATES THE CHECK NUMBER
	XCALL IO (7, APOPEN, APREC, READ, LOKCTL)	;READ THE ORG APOPEN REC
	ACHKNO = CHEKNO
	XCALL IO (7, APOPEN, APREC, WRITE, LOKCTL)

	apdata = apopen
	write (chnwrk, apwork, apcnt)			;in case of re-print
	RETURN

FLGREC,
	IF (AFLAG.EQ.6) AFLAG = 7
	IF (AFLAG.EQ.0) AFLAG = 3
;;;	ACHKNO = CHEKNO		;1-30-17 DONE IN FLGCHK
	ACSACT = DCSACT
	ADSACT = DDSACT
	LOKCTL = 1
	APCNT = APCNT -1
	XCALL IO (7,APOPEN,APCNT,WRITE,LOKCTL)
	INCR APCNT
	RETURN
OVRFLW,
;;;	OVRFLW = 1

TOTAL,
	IF (LSTVND.EQ.BLANKS) GO TO ENDTOT
	L_CNT = 38					;SSQ 9-15-05

	clear pline
	pline (59,65) = chekno,'ZZZZZX'
	XCALL HP (14,hpPOS,L_CNT+20,0,0, PLINE)		;STUB-2
	
	PLINE (68,78) = CHKTOT,MASK2
	IF (OVRFLW.EQ.1) PLINE (68,78) =

	XCALL DATE8(CHKDTE, D_OUT, D_OUTR, D_FMT, D_SW)	;SSQ 9-15-05
	PLINE (59,66) = D_OUT, 'ZX/XX/XX'		;SSQ 9-15-05
	PLINE (2,32) = NAME				;SSQ 9-15-05
;-
	B_DATA(1,2) = 'C~'
	B_DATA(3,8) = CHEKNO,	'XXXXXX'
	XCALL B128 (B_DATA, B_STRNG, 70)

	ln = %trim(b_strng)		
	PLINE (39,58)= B_STRNG(1,ln)
;-

	IF (NUM_V .GT. MAX_STUB) CLEAR PLINE		;SSQ 10-20-15
	
	IS_RA = 0					;12-23-15
	CALL STUB
;;;	XCALL OF128

	XCALL DATE8(CHKDTE, D_OUT, D_OUTR, D_FMT, D_SW)
	PLINE (71,78) = D_OUT,MASK1
	XCALL HP (14,hpPOS,2,70,0, PLINE(71,78) )		
	CLEAR PLINE

	IF (CHKTOT.GT.0) XCALL WORDS (CHKTOT,SPELLD,LEN)
	IF (OVRFLW.EQ.1) SPELLD =
	IF (LEN.EQ.0) LEN = 62
	PLINE (3,64) = SPELLD (1,LEN)
	XCALL HP (14,hpPOS,7,1,0, PLINE )		
	CLEAR PLINE

	PLINE (3,64) = SPELLD (LEN+1,108)
	XCALL HP (14,hpPOS,8,1,0, PLINE )		
	CLEAR PLINE

	PLINE(66,78) = CHKTOT,MASK4
	IF (OVRFLW.EQ.1.OR.CHKTOT.LE.0) PLINE (66,79) = '**** VOID ****'

	IF (OVRFLW.EQ.1) GO TO ADDRES
	CHKTOT =
ADDRES,
	PLINE(12,41) = NAME
	XCALL HP (14,hpPOS,5,1,0, PLINE )		
	CLEAR PLINE(66,79)
	XCALL HP (14,hpPOS,09,1,0, PLINE )		
	CLEAR PLINE

	PLINE (12,36) = ADD1
	IF (ADD1.NE.BLANKS) XCALL HP (14,hpPOS,10,1,0, PLINE )		
	CLEAR PLINE

	PLINE (12,36) = ADD2
	IF (ADD2.NE.BLANKS) XCALL HP (14,hpPOS,11,1,0, PLINE )		
	CLEAR PLINE
	PLINE(12,26) = CITY
	PLINE(28,29) = STATE
	PLINE(32,41) = ZIP
	XCALL HP (14,hpPOS,12,1,0, PLINE )		
	CLEAR PLINE
	XCALL HP (14,hpFLUSH)

	if (uname.eq.'KRISTINAS')writes (14,tray_4)
	;>EJECT

	CKNOSW	= 1
	INCR CHEKNO
	VENMAS =
ENDTOT,
	CALL MCHVND
;;;	IF(OVRFLW.NE.1) LSTVND = AVENNO
	OVRFLW =
	IF (FSTFLG) GO TO ENDFST
ENDFST,
	FSTFLG =
	LINCNT =
	L_CNT = 20		;SSQ 7-21-05 first line of stub
	RETURN


MCHVND,
	IF (AVENNO .EQ. ']]]]') RETURN	;DONE

	LOKCTL = 1
	XCALL ISIO (1, VENMAS, AVENNO, READ, LOKCTL)
	IF (LOKCTL .NE. 0) VENMAS =

	LSTVND = AVENNO		;SSQ 10-20-15
	NUM_V = 0
	V_CNT = APCNT

V_LOOP,
	LOKCTL = 1
	XCALL IO (CHNWRK, APWORK, V_CNT, READ, LOKCTL)
	APOPEN = APDATA				;THIS MAKES THE FIELDS IN APOPEN AVAILABLE

	IF (AINVNO.EQ.']]]]]]') GOTO EOF_V
	IF (AVENNO.NE.LSTVND) GOTO EOF_V
	IF (AVENNO.GT.ENDVEN) GO TO EOF_V
	INCR V_CNT
	IF (AINVNO.EQ.']]]DEL') GOTO V_LOOP
	IF (AVENNO.LT.STRVEN) GO TO V_LOOP
	IF (AFLAG.LT.0) GO TO V_LOOP
	IF (DAPACT.GT.0.AND.AAPACT.NE.DAPACT) GO TO V_LOOP
	GOTO (V_LOOP,V_LOOP,VC,V_LOOP,V_LOOP,VC,VC,V_LOOP,V_LOOP), AFLAG
VC,
	INCR NUM_V
	GO TO V_LOOP
EOF_V,
	FIRST_RA = 1		;SET 

;;;	V_CNT = APCNT - 1	;RESET CURRENT RECORD...
	XCALL IO (CHNWRK, APWORK, APCNT, READ, LOKCTL)
	APOPEN = APDATA
	RETURN

PC_EOF,
;;;EOFAP1,
	ENDSW = 1
	CALL TOTAL

	XCALL LPOFF (LPSW,SPLFIL,PGCNT)
	CLOSE CHNRA
PC_EOF2,
	XCALL OUTPT(12,1,2,' ',1)
	XCALL OUTPT(12,20,2,'ARE ALL CHECKS OK ?',V)
	XCALL INPUT(12,41,1,1,'YN',ENTRY,INXCTL,V)
	GO TO (YESAN2), INXCTL
	XCALL OUTPT (12,20,2,'REPRINT CHECKS ?',V)
	XCALL INPUT (12,41,1,1,'YN',ENTRY,INXCTL,V)
	GOTO (ABORT),INXCTL-1
RPR,
	CLEAR INXCTL
	XCALL OUTPT (12,4,2,'1. LAST GOOD CHECK #',1)
	XCALL OUTPT (14,4,0,'2. NEW STARTING CHECK #',1)

LAST_C,
	XCALL INPUT (12,28,06,00,'#E',ENTRY,INXCTL,1)
	GOTO (RPR, PC_EOF2),INXCTL
	GOOD_CHK = ENTRY(1,6)
	GOTO (RPR_ANY,PC_EOF2),CNGCTL
NEW_C,
	XCALL INPUT (14,28,06,00,'#E',ENTRY,INXCTL,1)
	GOTO (RPR, PC_EOF2),INXCTL
	NEW_CHK = ENTRY(1,6)
RPR_ANY,
	XCALL ANYCN (CNGCTL, WHATNO)
	GOTO (RPR_PROC,RPR_CNGBR),CNGCTL+1
RPR_CNGBR,
	GOTO (LAST_C, NEW_C), WHATNO
	GOTO RPR_ANY
RPR_PROC,
	XCALL LPON (LPSW,SPLFIL)
	GO TO (ABORT), LPSW + 1
	if (uname.eq.'KRISTINAS')writes (14,tray_4)

	CHEKNO = NEW_CHK
	GOTO RE_PRINT
;==============================================================

ABORT,
	CALL CLOSE3
	XCALL MOUNT ('REGULAR PAPER','PRINTER')
	XCALL PGCHN('AP:APMENU',1)
YESAN2,
	XCALL MOUNT ('REGULAR PAPER','PRINTER')
	CALL PRINT_RALOG

	CLOSE 7
	XCALL PGCHN('AP:CHKPRP',1)
CLOSE3,
	XCALL WATE(3,V)
	XCALL FILES(7,'U',17,4)
	XCALL FILES(5,'O',15,4)
	XCALL FILES(6,'U',16,4)
	XCALL FILES(9,'U',20,4)
	XCALL FILES(10,'U',78,4)
	RETURN
LINFD,
	XCALL LINFD (LNFEED)
	LINCNT = LINCNT + LNFEED
	RETURN

WRITE_RALOG,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (FIRST_RA)
		BEGIN
		PLINE = 'SEE ATTACHED VOUCHER'
		;-
		B_DATA(1,2) = 'C~'
		B_DATA(3,8) = CHEKNO,	'XXXXXX'
		XCALL B128 (B_DATA, B_STRNG, 70)

		
		PLINE (35,55)= B_STRNG
		;-
		;;;IS_RA = 1			;12-23-15
		; stub code 1-18-16 ssq
		XCALL HP (14,hpPOS,38+21,0,0, PLINE)		;STUB-2
		;;;XCALL HP (14,hpPOS,L_CNT+21,0,0, PLINE)		;STUB-2
		IF (L_CNT .EQ. 38) PLINE(2,66) = 		;SSQ 9-15-05
		PLINE(35,55) = 		
		XCALL HP (14,hpPOS,L_CNT,0,0, PLINE)		;STUB-1

		PLINE =
	;;;	CALL STUB
	;;;	XCALL OF128
		FIRST_RA = 0
		END

	CLEAR RA_WORK

	RA_VENNO = AVENNO
	RA_CHKNO = CHEKNO
	RA_CHKDTE = CHKDTE
	RA_INVDT = AINVDT
	RA_INVNO = AINVNO
	RA_INVREM = INVREM
	RA_DSCREM = DSCREM
	RA_DESC = ADESC

	XCALL IOS (CHNRA, RA_WORK, WRITE, LOKCTL)

	RETURN
;----------------------------------------------------------

PRINT_RALOG,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	RA_EOF = 0
	LSTVND = '-1'

	ONERROR NO_WORK
	OPEN (CHNRA, I, 'SPL:RAWORK.DDF')
	OFFERROR

PR_LOOP,
	XCALL IOS (CHNRA, RA_WORK, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO PR_EOF
	IF (RA_VENNO .NE. LSTVND) CALL NEW_VEND

	D_OUTR(1,4) = RA_CHKDTE(5,8)
	D_OUTR (5,8) = RA_CHKDTE(1,4)
	IF (RA_DESC .EQ. BLANKS) RA_DESC = RA_INVNO

	CLEAR PLINE
	PLINE (1,10) = D_OUTR,	'ZX/XX/XXXX'
	PLINE (13,32) = RA_DESC
	PLINE (37,46) = RA_INVREM,	'ZZZ,ZZX.XX'
	PLINE (49,58) = RA_DSCREM,	'ZZZ,ZZX.XX'
	PLINE (61,70) = (RA_INVREM-RA_DSCREM), 'ZZZ,ZZX.XX'
	CALL PRINT2

	TOT_INV = TOT_INV + RA_INVREM
	TOT_DSC = TOT_DSC + RA_DSCREM

	GOTO PR_LOOP

;TRANS.DATE  REFERENCE             GROSS AMOUNT    DISCOUNT  NET AMOUNT
;XX/XX/XXXX  AAAAAAAAAAAAAAAAAAAA    ZZZ,ZZX.XX  ZZZ,ZZX.XX  ZZZ,ZZX.ZZ 
;12345678901234567890123456789012345678901234567890123456789012345678901234567890
;         1         2         3         4         5         6         7

PR_EOF,
	RA_EOF = 1
	CALL NEW_VEND
	XCALL LPOFF (LPSW,SPLFIL,PGCNT)

NO_WORK,
	RETURN
;----------------------------------------------------------


NEW_VEND,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (LSTVND .EQ. '-1') GOTO OUT_VEND

	CLEAR PLINE
	CALL PRINT2

	PLINE (1,9) = 
	PLINE (11,16) = 
	PLINE (23,32) = 
	PLINE (37,46) = '----------'
	PLINE (49,58) = '----------'
	PLINE (61,70) = '----------'
	CALL PRINT2


	PLINE (1,9) = 'CHECK NO.'
	PLINE (11,16) = LSTCHK,	'ZZZZZX'
	PLINE (23,32) = D_OUTR,	'ZX/XX/XXXX'
	PLINE (37,46) = TOT_INV,	'ZZZ,ZZX.XX'
	PLINE (49,58) = TOT_DSC,	'ZZZ,ZZX.XX'
	PLINE (61,70) = (TOT_INV-TOT_DSC), 'ZZZ,ZZX.XX'
	CALL PRINT2


	IF (RA_EOF) RETURN

;XX/XX/XXXX  AAAAAAAAAAAAAAAAAAAA    ZZZ,ZZX.XX  ZZZ,ZZX.XX  ZZZ,ZZX.ZZ 
;CHECK NO. XXXXXX DATE XX/XX/XXXX
;12345678901234567890123456789012345678901234567890123456789012345678901234567890
;         1         2         3         4         5         6         7
OUT_VEND,
	LOKCTL = 1
	XCALL ISIO (1, VENMAS, RA_VENNO, READ, LOKCTL)
	IF (LOKCTL .NE. 0) VENMAS =

	LSTVND = RA_VENNO
	LSTCHK = RA_CHKNO
	LSTDTE = RA_CHKDTE

	LINCNT = 66
	PGCNT = 0
	L1_VNO = RA_VENNO
	L1_NAME= NAME

	CLEAR TOT_INV
	CLEAR TOT_DSC

	RETURN
;----------------------------------------------------------

PRINT2,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (LPONSW.EQ.0) CALL PRNTON
	XCALL LPOUT (LINCNT,PGCNT,PLINE,TITLE,HDR1,HD,HD,
&			LEG1,LG,LG,0,80,PRTCTL,0,LPSW,RPTNUM,PRTTYP)
	RETURN
PRNTON,
	SPLFIL (5,6) = 'EL'
	LPSW = 1	; PRINT, SPOOL OR DISPLAY
	XCALL LPON (LPSW,SPLFIL)
;;;	IF (LPSW.EQ.0) CALL CLOSE
;;;	IF (LPSW.EQ.0) XCALL PGCHN ('CP:CPMENU',1)
	LPONSW = 1

	RETURN
;----------------------------------------------------------



END
