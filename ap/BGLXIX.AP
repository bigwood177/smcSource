; BGLXIX / AP 
;
;
;		BUILD TEMP INDEX FOR A/P TO G/L CROSS REFERENCE BY VENDOR
;

RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR


RECORD APDIST	
		.INCLUDE 'DEF:RD016A.DEF'
RECORD APDCTL	
		.INCLUDE 'DEF:RD016B.DEF'

RECORD APGLIX	
		.INCLUDE 'DEF:APGLIX.DEF'
;;;		.INCLUDE 'DEF:RD087A.DEF'

RECORD APGSTR	
		.INCLUDE 'DEF:RD087B.DEF'
RECORD APGEND	
		.INCLUDE 'DEF:RD087C.DEF'
RECORD
		.INCLUDE 'DEF:RD087S.DEF'

RECORD	CHANNEL
	CHN007	,D2
	CHN016	,D2
	CHNWRK	,D2

RECORD SNDMSG
	PRGNAM	,A9	,'AP:APGLXV'
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD	VARS
	OPNOK	,D1
	REDFIL	,A14
	BLANKS	,A4
	BRACKS	,A6	,']]]]]]'
	CNGCTL	,D1
	DECMAL	,D4
	ENTRY	,A10
	INXCTL	,D1
	MASK1	,A4,'XXXX'
	MSGCTL	,D1
	RECNO	,D5
	SWITCH	,D1,3
	SYSTEM	,D1
	LOKCTL	,D1
	READ	,D1,	0
	WRITE	,D1,	1
	V	,D1
	WENDDT	,D8
	WHATNO	,D1
	WRKDAT	,D8
	WSTRDT	,D8
	SIZE    ,D5
PROC
	XCALL TERID (V)
	V = 1


;;;	XCALL ENVRN(SYSTEM)
	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF


GOON,
	STRTYP = 1
	ENDTYP = 2
BEGIN,
	CNGCTL =
	XCALL OUTPT(6,15,2,'PLEASE ENTER THE FOLLOWING:',V)
	XCALL OUTPT(8,20,0,'1. STARTING VENDOR',V)
	XCALL OUTPT(10,20,0,'2. ENDING VENDOR',V)
	XCALL OUTPT(12,20,0,'3. STARTING ACCOUNT',V)
	XCALL OUTPT(14,20,0,'4. ENDING ACCOUNT',V)
	XCALL OUTPT(16,20,0,'5. STARTING TRX DATE',V)
	XCALL OUTPT(18,20,0,'6. ENDING TRX DATE',V)
STRVEN,
	CTL = '08,42,04,00,AE'
	CALL INPUT
	GOTO (BEGIN,ENDOFF), INXCTL
	XCALL FRMAT (ENTRY(1,4),4)
	STRVEN = ENTRY(1,4)
	IF (STRVEN.EQ.BLANKS) GOTO ALLVEN
STRTAL,
	XCALL OUTPT(8,42,0,STRVEN,V)
	IF (ENDVEN.EQ.'ZZZZ'.AND.STRVEN.NE.BLANKS) GO TO ENDVEN
	GOTO (ANYCNG), CNGCTL
ENDVEN,
	IF (CNGCTL.AND.STRVEN.EQ.BLANKS) GO TO ANYCNG
	CTL = '10,42,04,00,A '
	CALL INPUT
	GOTO (BEGIN), INXCTL
	XCALL FRMAT (ENTRY(1,4),4)
	ENDVEN = ENTRY(1,4)
	IF (ENDVEN.EQ.BLANKS) ENDVEN = STRVEN
ENDAL,
	XCALL OUTPT(10,42,0,ENDVEN,V)
	IF (ENDVEN.LT.STRVEN) GOTO ENDVEN
	GOTO (ANYCNG), CNGCTL
	GOTO STRACT
ALLVEN,
	STRVEN =
	ENDVEN = 'ZZZZ'
	XCALL OUTPT(8,42,0,'ALL',V)
	XCALL OUTPT(10,42,1,'\',V)
	GOTO (ANYCNG), CNGCTL
STRACT,
	XCALL OUTPT(12,42,1,'\',V)
	CTL = '12,42,04,00,N '
	CALL INPUT
	GOTO (BEGIN), INXCTL
	STRACT(1,4) = ENTRY(1,4)
	IF (STRACT(1,4).EQ.0) GOTO ALLACT
	XCALL OUTPT(12,46,0,'-',V)
	CTL = '12,47,03,00,# '
	CALL INPUT
	GOTO (STRACT), INXCTL
	STRACT(5,7) = ENTRY(1,3)
	IF (STRACT(5,7).EQ.0) XCALL OUTPT(12,46,1,'\',V)
	IF (ENDACT.EQ.9999999.AND.STRACT.NE.0) GO TO ENDACT
	GOTO (ANYCNG), CNGCTL
ENDACT,
	IF (CNGCTL.AND.STRACT.EQ.0) GO TO ANYCNG
	CTL = '14,42,04,00,# '
	CALL INPUT
	GOTO (BEGIN), INXCTL
	ENDACT(1,4) = ENTRY(1,4)
	IF (ENDACT(1,4).EQ.0) GOTO SAMACT
	XCALL OUTPT(14,46,0,'-',V)
	CTL = '14,47,03,00,# '
	CALL INPUT
	GOTO (ENDACT), INXCTL
	ENDACT(5,7) = ENTRY(1,3)
	IF (ENDACT(5,7).EQ.0) XCALL OUTPT(14,46,1,'\',V)
	IF (ENDACT.LT.STRACT) GOTO ENDACT
	GOTO (ANYCNG), CNGCTL
	GOTO STRDAT
ALLACT,
	STRACT =
	ENDACT = 9999999
	XCALL OUTPT(12,42,1,'ALL',V)
	XCALL OUTPT(14,42,1,'\',V)
	GOTO (ANYCNG), CNGCTL
	GOTO STRDAT
SAMACT,
	ENDACT = STRACT
	ENTRY(1,8) = STRACT,'XXXX-XXX'
	XCALL OUTPT(14,42,0,ENTRY(1,8),V)
	GOTO (ANYCNG), CNGCTL
STRDAT,
	CTL = '16,42,08,00,D '
	CALL INPUT
	GOTO (BEGIN), INXCTL
	STRDAT = ENTRY(1,8)
	IF (STRDAT.EQ.0) GOTO ALLDAT
	IF (ENDDAT.EQ.99999999) GO TO ENDDAT
	GOTO (ANYCNG), CNGCTL
ENDDAT,
	IF (CNGCTL.AND.STRDAT.EQ.0) GO TO ANYCNG
	CTL = '18,42,08,00,D '
	CALL INPUT
	GOTO (BEGIN), INXCTL
	ENDDAT = ENTRY(1,8)
	IF (ENDDAT.EQ.0) ENDDAT = STRDAT

	XCALL DATE8(ENDDAT, D_OUT, D_OUTR, D_FMT, D_SW)
;;;	ENTRY (1,8) = ENDDAT, 'XX/XX/XX'
	XCALL OUTPT(18,42,0,D_FMT,V)
	IF (ENDDAT.LT.STRDAT) GOTO ENDDAT
	GOTO ANYCNG
ALLDAT,
	STRDAT =
	ENDDAT = 99999999
	XCALL OUTPT(16,42,0,'ALL',V)
	XCALL OUTPT(18,42,1,'\',V)
ANYCNG,
	XCALL ANYCN (CNGCTL,WHATNO)
	GOTO (PROCES,CNGNBR), CNGCTL + 1
BADCNG,
	CNGCTL = 3
	GOTO ANYCNG
CNGNBR,
	GOTO (STRVEN,ENDVEN,STRACT,ENDACT,STRDAT,ENDDAT), WHATNO
	GOTO BADCNG
PROCES,
	XCALL WATE (4,V)
	WRITES (chnwrk,APGSTR)
	WRITES (chnwrk,APGEND)

	RECNO = 1
READ,
	INCR RECNO
	IF (RECNO.GT.REC016) GOTO EOF
	LOKCTL = 1
	XCALL IO (2,APDIST,RECNO,READ,LOKCTL)
	IF (APDIST.EQ.BRACKS) GOTO EOF
	IF (GVENNO.LT.STRVEN.OR.GVENNO.GT.ENDVEN) GOTO READ
	IF (GACCT.LT.STRACT.OR.GACCT.GT.ENDACT) GOTO READ
	IF (GDATE.LT.STRDAT .OR. GDATE.GT.ENDDAT) GOTO READ
	APGLIX =
	IAVENO = GVENNO
	IACTNO = GACCT
	ITDATE = GDATE
	ITYPE = GTYPE
	IRC087 = RECNO
	LOKCTL = 1
	XCALL IOS (chnwrk,APGLIX,WRITE,LOKCTL)
	GOTO READ
EOF,
	CALL CLOSE 

	SORT (IN=REDFIL,
&		RECORD=APGLIX,
&		KEY = (IAVENO,IACTNO,ITDATE)
&		)
	XCALL PGCHN('AP:APGLXV',0)

INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
EXIT,
ENDOFF,
	CALL CLOSE
	XCALL WATE(3,V)
	XCALL PGCHN('AP:APMENU',1)


;===========================================================
OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	OPNOK = 0

	SWITCH = 1
	XCALL FILES (2,'I',16,SWITCH)		;FILE # 16 -- APDIST FILE
	IF (SWITCH.EQ.9) RETURN
	CHN016 = 2

	LOKCTL = 1
	XCALL IO (2,APDCTL,1,READ,LOKCTL)

	REDFIL = 'SPL:APGLIX.DDF'
	OPEN (3, O, REDFIL)
	CHNWRK = 3

	OPNOK = 1

	RETURN
;---------------------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	SWITCH = 4
	IF (CHN016) XCALL FILES (2, 'I', 16, SWITCH)
	IF (CHNWRK) CLOSE CHNWRK
	RETURN
;----------------------------------------------------


END
