; PRTIAL / AP 
;
;
;
;
;		ENTRY OF PARTIAL PAYMENTS
;
;
RECORD APOPEN	
		.INCLUDE 'DEF:RD017A.DEF'
RECORD TSTAPO
		,A6	;DAF FILLER (12/31/03 SSQ)
		,A31
	TINVNO	,A8
		,A31
	TINVAM	,D8
	TDSCAM	,D6
		,A16
		,D5
		,A12
	TFLAG	,D1
RECORD	,X	
		.INCLUDE 'DEF:RD017B.DEF'
RECORD PTLPAY	
		.INCLUDE 'DEF:RD019A.DEF'
RECORD DUMPRT	
		.INCLUDE 'DEF:RD019B.DEF'
RECORD SNDMSG
		,A9,'AP:PTLREG'
	RCNT	,D5
	OCNT	,D5
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD
	AMTREM	,D8
	BLANKS	,A4
	BSEND	,D5
	BSMID	,D5
	CNGCTL	,D1
	DECMAL	,D18
	DSCTKN	,D6
	ENTRY	,A30
	INXCTL	,D1
	KEY	,A10
	KVCHNO	,D6
	KVENNO	,A4
	MODEID	,4A9, 'ADD      ','CHANGE   ','DELETE   ','EDIT LIST'
	MSGCTL	,D1
	OPTION	,D1
	SELECT	,D1
	SRCCTL	,D1
	STRTNO	,D5
	SVBSMD	,D5
	SWITCH	,D1,1
	SYSTEM	,D1
	LOKCTL	,D1
	READ	,D1,	0
	WRITE	,D1,	1
	V	,D1,1
	WHATNO	,D2
PROC
	XCALL TERID (V)
	V = 1
	XCALL ENVRN(SYSTEM)
	SWITCH = 5
	XCALL FILES (1,'I',11,SWITCH)
	IF (SWITCH.EQ.9) GO TO EXIT
	CLOSE 1
	SWITCH = 1
	XCALL FILES (7,'I',17,SWITCH)		;FILE # 17 -- APOPEN FILE
	IF (SWITCH.EQ.9) GO TO EXIT
	XCALL FILES (9,'U',19,SWITCH)		;FILE # 19 -- PTLPAY FILE
	IF (SWITCH.EQ.9) GOTO END1
	LOKCTL = 1
	XCALL IO (7,TSTAPO,1,READ,LOKCTL)
	BSEND = ORG017
RDCTL,
	LOKCTL = 1
	XCALL IO (9,DUMPRT,1,READ,LOKCTL)
	UNLOCK 9
BEGIN,
	XCALL OUTPT(1,1,2,'SPECIFY PARTIAL PAYMENTS',V)
	CALL TMENU
	GOTO (CLRDTA,CLRDTA,CLRDTA,LIST,POST,REMOVE), SELECT
	XCALL WATE (3,V)
ENDOFF,
	CALL CLOSE5
EXIT,
	XCALL WATE(3,V)
	XCALL PGCHN('AP:APMENU',1)
END1,
	CALL CLOSE1
	GO TO EXIT
POST,
	XCALL OUTPT(10,20,2,'\',V)
	XCALL OUTPT(12,20,0,'ARE TRANSACTIONS OK TO POST ?',V)
	CTL = '12,51,01,01,YN'
	CALL INPUT
	GO TO (BEGIN), INXCTL - 1
	CALL CLOSE5
	XCALL OUTPT(2,1,1,'POSTING PARTIAL PAYMENTS',V)
	SWITCH = 3
	XCALL FILES(9,'U',19,SWITCH)
	IF (SWITCH.EQ.9) GO TO EXIT
	XCALL FILES (9,'U',19,5)
	LOKCTL = 1
	XCALL IO (9,DUMPRT,1,READ,LOKCTL)
	REGFLG = 'R'
	LOKCTL = 1
	XCALL IO (9,DUMPRT,1,WRITE,LOKCTL)
	CLOSE 9
	RCNT = REC019
	OCNT = ORG019
	XCALL WATE(4,V)
	MSGCTL = 5
	XCALL SNMSG (SNDMSG,MSGCTL)
	XCALL PGCHN('AP:SRTPTL',0)
REMOVE,
	CALL CLOSE5
	XCALL PGCHN('AP:DELPTL',1)
CLOSE5,
	XCALL WATE(3,V)
	XCALL FILES (9,'U',19,4)
CLOSE1,
	XCALL FILES (7,'I',17,4)
	RETURN
LIST,
	LOKCTL = 1
	XCALL IO (9,DUMPRT,1,READ,LOKCTL)
	REGFLG = 'E'
	LOKCTL = 1
	XCALL IO (9,DUMPRT,1,WRITE,LOKCTL)
	CALL CLOSE5
	XCALL PGCHN('AP:PTLREG',1)
CLRDTA,
	UNLOCK 9
	XCALL OUTPT(6,19,2,'*PLEASE ENTER VENDOR #',V)
	XCALL OUTPT(8,19,0,'*PLEASE ENTER VOUCHER #',V)
	CALL SCRN1
VENDNO,
	IF (REC019.GE.MAX019.AND.SELECT.EQ.1) GO TO FULL
	CTL = '06,47,04,01,AE'
	CALL INPUT
	GO TO (CLRDTA,BEGIN), INXCTL
	XCALL FRMAT (ENTRY(1,4),4)
	KVENNO = ENTRY(1,4)
CONT,
	CTL = '08,47,06,01,# '
	CALL INPUT
	GO TO (CLRDTA), INXCTL
	KVCHNO = ENTRY(1,6)
	KEY(1,4) = KVENNO
	KEY(5,10) = KVCHNO,'XXXXXX'
	GOTO (DSPREC,DSPREC), SELECT - 1
	SRCCTL = 2
	XCALL SERCH (7,APOPEN,KEY,1,10,BSEND,BSMID,SRCCTL,1,32,37,0,0,0,0)
	GOTO (FRTREC), SRCCTL+1
NOTFND,
	XCALL MESAG('VOUCHER NOT FOUND',1)
	GO TO CLRDTA
FRTREC,
	BSMID = BSMID-1
	LOKCTL = 1
	XCALL IO (7,APOPEN,BSMID,READ,LOKCTL)
	IF (APOPEN(1,10).EQ.KEY) GOTO FRTREC
	STRTNO = BSMID
CONTIN,
	INCR BSMID
	LOKCTL = 1
	XCALL IO (7,APOPEN,BSMID,READ,LOKCTL)
	IF (APOPEN(1,10).NE.KEY) GOTO NOTFND
	IF (AINVNO.EQ.']]]DEL') GOTO CONTIN
	IF (AFLAG.LT.0.OR.AFLAG.EQ.2.OR.AFLAG.GE.6) GO TO CONTIN
	SVBSMD = BSMID
	CALL SCRN1
	XCALL OUTPT(10,47,0,AINVNO,V)
	CTL = '12,47'
	DECMAL(1,6) = AINVDT
	CALL DSPDTE
	CTL = '14,47,08'
	DECMAL = AINVAM
	CALL DSPDLR
	CTL = '16,47,06'
	DECMAL = ADSCAM
	CALL DSPDLR
	CTL = '18,47'
	DECMAL(1,6) = ADUEDT
	CALL DSPDTE
	AMTREM = AINVAM - APAID
	DSCTKN = ADSTKN
	XCALL OUTPT(24,1,0,'RIGHT VOUCHER ?',V)
	CTL = '24,18,01,00,YN'
	CALL INPUT
	GOTO (CONTIN), INXCTL-1
	BSMID = STRTNO
ADDPRT,
	INCR BSMID
	LOKCTL = 1
	XCALL IO (7,APOPEN,BSMID,READ,LOKCTL)
	IF (APOPEN(1,10).NE.KEY) GO TO ENDADD
	IF (AINVNO.EQ.']]]DEL') GO TO ADDPRT
	IF (AFLAG.NE.-1.AND.AFLAG.NE.6.AND.AFLAG.NE.7) GO TO ADDPRT
	AMTREM = AMTREM - AINVAM
	DSCTKN = DSCTKN + ADSCAM
	GO TO ADDPRT
ENDADD,
	LOKCTL = 1
	XCALL IO (7,APOPEN,SVBSMD,READ,LOKCTL)
	DECMAL = AMTREM
	CTL = '14,69,08'
	CALL DSPDLR
	DECMAL = DSCTKN
	CTL = '16,69,06'
	CALL DSPDLR
DISPLA,
	IF (AMTREM.LE.0) GO TO BADPRT
	CALL REQST
	CTL = '20,47,08,01,$ '
	CALL INPUT
	GO TO (CLRDTA), INXCTL
	PPYAMT = ENTRY
	IF (PPYAMT.EQ.0) GO TO DISPLA
	IF (PPYAMT.GE.AMTREM) GO TO NOTFUL
DISPL2,
	CTL = '22,47,06,00,$ '
	CALL INPUT
	GOTO (CLRDTA), INXCTL
	PPYDSC = ENTRY
	IF (PPYDSC.GT.PPYAMT) GO TO DISPL2
	CNGCTL = 2
	GO TO ANYCNG
BADPRT,
	XCALL MESAG('AMOUNT <= 0 -- NO PARTIAL ALLOWED',1)
	GO TO CLRDTA
NOTFUL,
	XCALL MESAG('CANNOT BE FULL PAYMENT',1)
	GO TO DISPLA
REQST,
	XCALL OUTPT(20,20,2,'PLEASE ENTER PART PAY AMT',V)
	XCALL OUTPT(22,20,0,'PLEASE ENTER DISCOUNT AMT',V)
	RETURN
FULL,
	CALL CLOSE5
	XCALL OUTPT(3,1,2,'\',1)
	XCALL OUTPT(6,20,0,'THE PARTIAL PAYMENT FILE IS NOW FULL.',V)
	XCALL OUTPT(7,20,0,'PLEASE RUN "XPAND" TO EXPAND "PTLPAY"',V)
	XCALL OUTPT(8,20,0,'AND THEN PROCEED AS USUAL.',V)
	XCALL MESAG (' ',2)
	XCALL PGCHN ('AP:APMENU',1)
DSPREC,
	XCALL WATE (3,V)
	BSMID = 2
NXTREC,
	LOKCTL = 1
	XCALL IO (9,PTLPAY,BSMID,READ,LOKCTL)
	IF (PTLPAY.EQ.']]]]]]') GOTO NOFIND
	INCR BSMID
	IF (PTLPAY(1,10).NE.KEY) GOTO NXTREC
	IF (PINVDT.EQ.0) GOTO NXTREC
	CALL SCRN1
	XCALL OUTPT(10,47,0,PINVNO,V)
	CTL = '12,47'
	DECMAL(1,6) = PINVDT
	CALL DSPDTE
	CTL = '14,47,08'
	DECMAL = PINVAM
	CALL DSPDLR
	CTL = '16,47,06'
	DECMAL = PDSCAM
	CALL DSPDLR
	CTL = '18,47'
	DECMAL(1,6) = PDUDTE
	CALL DSPDTE
	CALL REQST
	CTL = '20,47'
	DECMAL = PPYAMT
	CALL DSPDLR
	CTL = '22,47'
	DECMAL = PPYDSC
	CALL DSPDLR
	CTL = '14,69,08'
	DECMAL = PPYREM
	AMTREM = PPYREM
	CALL DSPDLR
	CTL = '16,69,06'
	DECMAL = PPYDTK
	CALL DSPDLR
	XCALL OUTPT(24,1,0,'RIGHT PARTIAL PAYMENT ?',V)
	CTL = '24,26,01,01,YN'
	CALL INPUT
	GOTO (NXTREC), INXCTL - 1
	CNGCTL = 2
	IF (SELECT.EQ.2) GOTO ANYCNG
	XCALL OUTPT(24,1,1,'OK TO DELETE ?',V)
	CTL = '24,17,01,01,YN'
	CALL INPUT
	GO TO (CLRDTA), INXCTL - 1
	PINVDT =
	GOTO CHANGE
NOFIND,
	XCALL MESAG ('PARTIAL PAYMENT NOT FOUND',1)
	GOTO CLRDTA
PROCES,
	XCALL WATE (3,V)
	GOTO (CHANGE), SELECT -1
	PVENNO = AVENNO
	PVCHNO = AVCHNO
	PINVNO = AINVNO
	PINVDT = AINVDT
	PINVAM = AINVAM
	PDSCAM = ADSCAM
	PDUDTE = ADUEDT
	PAPACT = AAPACT
	PPYREM = AMTREM
	PPYDTK = DSCTKN
RDERR,
	LOKCTL = 1
	XCALL IO (9,DUMPRT,1,READ,LOKCTL)
	INCR REC019
	IF (REC019.GE.MAX019) GO TO FULL
WRTERR,
	LOKCTL = 1
	XCALL IO (9,PTLPAY,REC019,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IO (9,DUMPRT,1,WRITE,LOKCTL)
FREBUF,
	LOKCTL = 1
	XCALL IO (9,DUMPRT,MAX019,READ,LOKCTL)
	LOKCTL = 1
	XCALL IO (9,DUMPRT,1,READ,LOKCTL)
	GO TO CLRDTA
CHANGE,
	LOKCTL = 1
	BSMID = BSMID - 1
	XCALL IO (9,PTLPAY,BSMID,WRITE,LOKCTL)
	INCR BSMID
	IF (SELECT.EQ.3) XCALL MESAG ('PARTIAL PAYMENT DELETED',1)
	GOTO FREBUF
SCRN1,
	XCALL OUTPT(10,27,2,'INVOICE #',V)
	XCALL OUTPT(12,27,0,'INVOICE DATE',V)
	XCALL OUTPT(14,27,0,'INVOICE AMT',V)
	XCALL OUTPT(14,58,0,'REMAINING:',V)
	XCALL OUTPT(16,27,0,'DISC AMOUNT',V)
	XCALL OUTPT(16,62,0,'TAKEN:',V)
	XCALL OUTPT(18,27,0,'DUE DATE',V)
	RETURN
INPUT,
	XCALL INPUT(ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
ANYCNG,
	XCALL ANYCN(CNGCTL,WHATNO)
	GOTO (PROCES,DISPLA,DISPLA), CNGCTL+1
DSPDTE,
	OPTION = 2
	GOTO CALDSP
DSPDLR,
	OPTION = 3
CALDSP,
	XCALL DSPLY(MAX,ROW,COL,DECMAL,OPTION,V)
	RETURN
TMENU,
	XCALL OUTPT(10,20,0,'PLEASE SELECT APPLICATION',V)
	XCALL OUTPT(12,25,0,'1. ENTER NEW TRANSACTIONS',V)
	XCALL OUTPT(14,25,0,'2. CHANGE EXISTING TRANSACTIONS',V)
	XCALL OUTPT(16,25,0,'3. DELETE EXISTING TRANSACTIONS',V)
	XCALL OUTPT(18,25,0,'4. PRINT TRANSACTION EDIT LIST',V)
	XCALL OUTPT(20,25,0,'5. POST TRANSACTIONS TO MAIN FILE',V)
	XCALL OUTPT(22,25,0,'6. REMOVE POSTED PARTIALS',V)
MNUSEL,
	CTL = '10,47,01,01,#E'
	CALL INPUT
	GOTO (MNUSEL,SELEND), INXCTL
	SELECT = ENTRY
	IF(SELECT.GE.1.AND.SELECT.LE.6) GOTO DSPMOD
	GOTO MNUSEL
DSPMOD,							; DISPLAY UPDATE MODE
	IF (SELECT.LT.5) XCALL OUTPT(2,1,0,MODEID(SELECT),V)
	RETURN
SELEND,
	SELECT =					; PASS BACK SELECT = 0 FOR END OF MENU
	RETURN
END
