;NOT USED FOR SMC
SUBROUTINE APSC2; (NEWAP1,WORK1,WORKA,INTRJC,INTRSP,INTRPO,INTRIM)
;		NEW VOUCHER ENTRY & EDITING (JOB COST - STD PROD COSTING VERSION)
;
	NEWAP1	,A
	WORK1	,A
	WORKB	,A
	INTRJC	,D
	INTRSP	,D
	INTRPO	,D
	INTRIM	,D

RECORD NEWAP	
		.INCLUDE 'DEF:RD014G.DEF'
;;;RECORD INVMAS	
;;;		.INCLUDE 'DEF:RD041A.DEF'
;;;RECORD ITMCTL,X	
;;;		.INCLUDE 'DEF:RD041B.DEF'
;;;RECORD CSTMAS
;;;		.INCLUDE 'DEF:RD121A.DEF'
;;;RECORD CSTCTL,X
;;;		.INCLUDE 'DEF:RD121B.DEF'
;;;RECORD JOBTBL
;;;		.INCLUDE 'DEF:RD077A.DEF'
;;;RECORD EXPACT,X
;;;		.INCLUDE 'DEF:RD013E.DEF'
;;;RECORD INVIDX,X
;;;		.INCLUDE 'DEF:RD042A.DEF'
;;;RECORD CSTIDX,X
;;;		.INCLUDE 'DEF:RD122A.DEF'
;;;RECORD JOBIDX,X
;;;		.INCLUDE 'DEF:RD072A.DEF'
RECORD PORLIN
		.INCLUDE 'DEF:RD152A.DEF'
;;;RECORD DUMPOL
;;;		.INCLUDE 'DEF:RD152B.DEF'
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD WORKA
	CSSEND	,D5
	ITMEND	,D5
	LOKCTL	,D1
	NAPEND	,D5
	NUMBER	,D2
	PRECSN	,D1
	SCREEN	,D1
	TBLEND	,D5
RECORD WORK
	ACTITL	,A6
	ACTNUM	,D7
	ALPHA	,A8
	APOREC	,D5
	APOEND	,D5
	BLANKS	,A19
	BSEND	,D5
	BSMID	,D5
	CNGCTL	,D1
	CNTR	,D2
	DECMAL	,D18
	DUPFLG	,D1
	DUEDT2	,D6
	ENTRY	,A38
	EXPEND	,D5
	IDX	,D2
	INXCTL	,D1
	INVDT2	,D6
	KEY	,A12
	MASK	,A7,	'XXXXXXX'
	MASK2	,A8,	'XXXX-XXX'
	MSGCTL	,D1
	NAPREC	,D5
	NEWCNT	,D3,	000
	N	,D10
	OPTION	,D1
	SAVVCH	,D6
	SELECT	,D1
	SRCCTL	,D1
	SWITCH	,D1,	1
	SYSTEM	,D1
	TCHAR	,D3
	TOTEXP	,D8
	V	,D1
	VENREC	,D5
	VENEND	,D5
	WHATNO	,D2
RECORD SAVLIN
	WEACNO	,D7
	WEDAMT	,D8
	WVACNO	,D7
	WVDAMT	,D8
	WSJOBN	,A6
	WSPRTN	,A15
	WSCTYP	,A2
	WSQTY	,D6
	WSMCOD	,A4
	WSUOM	,A2
	WSPONM	,D8
	WSPOLN	,D3
RECORD
	KEY2	,A15
	MASK3	,A11,	'ZZZ,ZZX.XX-'
	MASK4	,A7,	'ZZZZZX-'
	MASK5	,A9,	'ZZZZZX-XX'
	STDAMT	,D8
	VARAMT	,D8
	TCSFAC	,D1
	ALPHA2	,A12
	ALPHA3	,A11
	AMTREM	,D8
	DEFALT	,D1
	SAVROW	,D2
	WKACNO	,D7
	WKDAMT	,D8
	WKPART	,A15
	WKQTY	,D6
	WKUOM	,A2
	WKJOBN	,A6
	WKPONM	,D8
	WKPOLN	,D3
	WKCTYP	,A2
	WKMATC	,A2
	WKDPTC	,A2
	WKWRKC	,A2
	NOTSTK	,D1
	PORKEY	,D11
	READ	,D1,	0
	WRITE	,D1,	1
	JUSTIF	,D1
	CSTFAC	,D1
	CFACTR	,D1
	UOMFLG	,D1
PROC
	NEWAP = NEWAP1
	WORK = WORK1
	WORKA = WORKB
	CNTR =
	IF (CNGCTL) CNTR = WHATNO - 1

;;;	LOKCTL = 1
;;;	IF (INTRIM.EQ.1) XCALL IO (5,ITMCTL,1,READ,LOKCTL)
;;;	IF (JSTIFY) JUSTIF = 1
;;;	IF (INTRIM.EQ.1) UNLOCK 5
;;;	IF (INTRSP.NE.1) GO TO DISPL1
;;;	LOKCTL = 1
;;;	XCALL IO (9,CSTCTL,1,READ,LOKCTL)
;;;	CSTFAC = CCSFAC
;;;	PRECSN = CDECML
DISPL1,
;;;	IF (INTRPO.NE.1) GO TO DISPLA
;;;	LOKCTL = 1
;;;	XCALL IO (14,DUMPOL,1,READ,LOKCTL)
DISPLA,
	SAVLIN =
	INCR CNTR
	IF (CNTR.GT.9) GO TO ANYCNG
	IF (CNGCTL) CALL SAVDST
DSTACT,
	ROW = (CNTR * 2) + 4
	CALL CLRDST
	CALL DSPDIS
	ROW = (CNTR * 2) + 4
	CTL(4,14) = '05,04,03,#E'
	IF (CNGCTL.NE.1.OR.WEACNO.EQ.0) GO TO DSTAC2
	ALPHA = WEACNO, MASK2
	WDACTS (CNTR*2-1) = WEACNO
	XCALL OUTPT(ROW,5,0,ALPHA,1)
	CALL ACCEPT
	GO TO (DSTAMT), DEFALT
DSTAC2,
	XCALL OUTPT (ROW,5,1,'\',1)
	CALL INPUT
	GO TO (ABORT,ANYCNG), INXCTL
	IF (ENTRY(1,3) .EQ. '000') GO TO DSTAC2
	WKACNO(1,4) = ENTRY(1,4)
	XCALL OUTPT(ROW,9,0,'-',1)
	CTL(4,14) = '10,03,00,# '
	CALL INPUT
	GO TO (DSTACT), INXCTL
	WKACNO(5,7) = ENTRY(1,3)
	IF (ENTRY.EQ.BLANKS) XCALL OUTPT(ROW,9,1,'-000',1)
	KEY(1,7) = WKACNO,MASK
	CALL FNDACT
	WDACTS(CNTR*2-1) = WKACNO
DSTAMT,
	CTL(4,14) = '14,08,01,$-'
	IF (CNGCTL.NE.1.OR.WEDAMT.EQ.0) GO TO DSTAM2
	WDAMTS (CNTR*2-1) = WEDAMT
	DECMAL = WEDAMT
	CALL DSPDLR
	CALL ACCEPT
	GO TO (DSTAM3), DEFALT
DSTAM2,
	CALL INPUT
	GO TO (DSTACT), INXCTL
	WKDAMT = ENTRY(1,9)
	WDAMTS(CNTR*2-1) = WKDAMT
DSTAM3,
	CALL DSPDIS
PRTNUM,
	NOTSTK =
	CTL(4,14) = '26,15,00,A '
	IF (CNGCTL.NE.1.OR.WSPRTN.EQ.BLANKS) GO TO PRTNM2
	WKPART = WSPRTN
	COMCOD = WSMCOD
	XCALL OUTPT (ROW,26,0,WSPRTN,1)
	CALL ACCEPT
	GO TO (PRTNM3), DEFALT
PRTNM2,
	CALL INPUT
	GO TO (DSTACT), INXCTL
	IF (JUSTIF.EQ.1) XCALL FRMAT (ENTRY(1,15),15)
	WKPART = ENTRY(1,15)
	IF (WKPART.EQ.BLANKS.AND.INTRIM.EQ.1) GO TO PONUM
PRTNM3,
;;;	XCALL OUTPT (ROW,COL,0,WKPART,1)
;;;	IF (INTRIM.EQ.0) GO TO QUANTY
;;;	KEY2 = WKPART
;;;	XCALL SERCH (6,INVIDX,KEY2,1,15,ITMEND,BSMID,SRCCTL,4,16,20,0,0,0,0)
;;;	GO TO (INVNTF), SRCCTL
;;;	LOKCTL = 1
;;;	XCALL IO (5,INVMAS,IRC041,READ,LOKCTL)
;;;PRTNM4,
;;;	WDPRTN(CNTR) = WKPART
;;;	WCMCOD(CNTR) = COMCOD
;;;	XCALL OUTPT(1,51,8,DESCR,1)
QUANTY,
	CTL(4,14) = '42,06,01,#-'
	IF (CNGCTL.NE.1.OR.WSQTY.EQ.0) GO TO QUANT2
	WDQTY (CNTR) = WSQTY
	DECMAL = WSQTY
	CALL DSPNUM
	CALL ACCEPT
	GO TO (UOM), DEFALT
QUANT2,
	CALL INPUT
	GO TO (DSTACT), INXCTL
	WKQTY = ENTRY(1,7)
	IF (WKQTY.EQ.0) GO TO QTYZRO
	DECMAL = WKQTY
	CALL DSPNUM
	WDQTY(CNTR) = WKQTY
UOM,
	CTL(4,14) = '51,02,00,A '
	IF (CNGCTL.NE.1.OR.WSUOM.EQ.BLANKS) GO TO UOM2
	WKUOM = WSUOM
	XCALL OUTPT (ROW,51,0,WKUOM,1)
	CALL ACCEPT
	GO TO (UOM3), DEFALT
UOM2,
	CALL INPUT
	GO TO (DSTACT), INXCTL
	WKUOM = ENTRY(1,2)
	IF (WKUOM.EQ.BLANKS.AND.NOTSTK) WKUOM = 'EA'
	IF (WKUOM.EQ.BLANKS) WKUOM = PUOFM
UOM3,
	IF (NOTSTK) GO TO DSPUOM
	IF (WKUOM.NE.SUOFM.AND.WKUOM.NE.PUOFM) GO TO UOMNOM
	IF (WKUOM.EQ.SUOFM) GO TO DSPUOM
	CTL(4,8) = '42,06'
	DECMAL = WDQTY(CNTR)
	CALL DSPNUM
	WKUOM = PUOFM
DSPUOM,
	XCALL OUTPT(ROW,51,0,WKUOM,1)
	WCUOM(CNTR) = WKUOM
	IF (UOMFLG) GO TO TSTUOM
JOBNUM,
	IF (INTRJC.NE.1.OR.STOKED.EQ.'S') GO TO PONUM
	CTL(4,14) = '55,06,00,A '
	IF (CNGCTL.NE.1.OR.WSJOBN.EQ.BLANKS) GO TO JOBNM2
	WDJOBN(CNTR) = WSJOBN
	XCALL OUTPT (ROW,55,0,WDJOBN(CNTR),1)
	CALL ACCEPT
	GO TO (PONUM), DEFALT
JOBNM2,
	CALL INPUT
	GO TO (DSTACT), INXCTL
	WKJOBN = ENTRY(1,6)
	IF (WKJOBN.EQ.BLANKS) GO TO PONUM
	XCALL FRMAT (WKJOBN,6)
	XCALL OUTPT (ROW,55,0,WKJOBN,1)
	BSMID = 1
	BSEND = 1
	KEY(1,6) = WKJOBN
	XCALL SERCH (8,JOBIDX,KEY(1,6),1,6,BSEND,BSMID,SRCCTL,5,7,11,0,0,0,0)
	GO TO (JOBNTF), SRCCTL
	WDJOBN(CNTR) = WKJOBN
PONUM,
	CTL (4,14) = '63,06,00,#T'
	IF (CNGCTL.NE.1.OR.WSPONM.EQ.0) GO TO PONUM2
	WPONUM (CNTR) = WSPONM
	ALPHA2 (1,9) = WSPONM, MASK5
	XCALL OUTPT (ROW,63,0,ALPHA2(1,9),1)
	CALL ACCEPT
	GO TO (POLIN), DEFALT
PONUM2,
	CALL INPUT
	GO TO (DSTACT,DSTACT,SAMPON), INXCTL
	IF (ENTRY(1,6).EQ.BLANKS) GO TO VARACT
	WKPONM (1,6) = ENTRY (1,6)
	XCALL OUTPT (ROW,69,0,'-',1)
	CTL (4,14) = '70,02,00,# '
	CALL INPUT
	GO TO (PONUM), INXCTL
	WKPONM (7,8) = ENTRY (1,2)
	GO TO PONUM3
SAMPON,
	IF (CNTR.LT.2) GO TO PONUM
	WKPONM = WPONUM (CNTR-1)
PONUM3,
	WPONUM (CNTR) = WKPONM
	ALPHA2 (1,9) = WKPONM, MASK5
	IF (WKPONM.EQ.0) ALPHA2 =
	XCALL OUTPT (ROW,63,0,ALPHA2(1,9),1)
POLIN,
	IF (INTRPO.NE.1) GO TO VARACT
	CTL (4,14) = '74,03,00,# '
	IF (CNGCTL.NE.1.OR.WSPOLN.EQ.0) GO TO POLIN2
	WPOLIN (CNTR) = WSPOLN
	DECMAL = WSPOLN
	CALL DSPNUM
	CALL ACCEPT
	GO TO (VARACT), DEFALT
POLIN2,
	CALL INPUT
	GO TO (DSTACT), INXCTL
	WPOLIN (CNTR) = ENTRY (1,3)
	PORKEY(1,8) = WKPONM
	PORKEY(9,11) = WPOLIN (CNTR)
	BSEND = ORG152
	SRCCTL = 2
	XCALL SERCH (14,PORLIN,PORKEY,1,11,BSEND,BSMID,SRCCTL,4,12,17,0,0,0,0)
	GO TO (POLNTF), SRCCTL
	IF (WKPART.NE.LITMNO) GO TO ITMNFD
TSTUOM,
	IF (WKUOM.NE.LITMUM) GO TO UOMNFD
	UOMFLG = 0
VARACT,
	IF (INTRSP.NE.1) GO TO DSTLND
	ROW = (CNTR * 2) + 5
	CTL(4,14) = '05,04,00,# '
	XCALL OUTPT (ROW,5,1,'\',1)
	IF (CNGCTL.NE.1.OR.WVACNO.EQ.0) GO TO VARAC2
	ALPHA = WVACNO, MASK2
	WDACTS (CNTR*2) = WVACNO
	WKACNO = WVACNO
	XCALL OUTPT (ROW,5,0,ALPHA,1)
	CALL ACCEPT
	GO TO (VARAC3), DEFALT
VARAC2,
	XCALL OUTPT (ROW,5,1,'\',1)
	CALL INPUT
	IF (ENTRY.EQ.' ') XCALL OUTPT (ROW,5,1,' ',1)   ;PRINT BLANKS
						        ;INSTEAD OF '0'.
	GO TO (DSTACT), INXCTL
	IF (ENTRY(1,3) .EQ. '000') GO TO VARAC2
	WKACNO(1,4) = ENTRY(1,4)
	IF (ENTRY.EQ.BLANKS) WDACTS(CNTR*2) = 0      ;ZERO OUT VAR-ACCT FIELD.
	IF (ENTRY.EQ.BLANKS) GO TO DSTLND
	XCALL OUTPT(ROW,9,0,'-',1)
	CTL(4,14) = '10,03,00,# '
	CALL INPUT
	GO TO (VARACT), INXCTL
	WKACNO(5,7) = ENTRY(1,3)
	IF (ENTRY.EQ.BLANKS) XCALL OUTPT(ROW,9,1,'-000',1)
	KEY(1,7) = WKACNO,MASK
	CALL FNDACT
VARAC3,
;;;	KEY2 = WKPART
;;;	IF (KEY2.EQ.'               ') GO TO CSTNTF 	;NO COST RECORD FOR A
;;;							;BLANK ITEM NUMBER
;;;	XCALL SERCH (10,CSTIDX,KEY2,1,15,CSSEND,BSMID,SRCCTL,4,18,22,0,0,0,0)
;;;	GO TO (CSTNTF), SRCCTL
;;;	WDACTS(CNTR*2) = WKACNO
;;;	IF (IRC121.EQ.0) GO TO CSTNTF
;;;	LOKCTL = 1
;;;	XCALL IO (9,CSTMAS,IRC121,READ,LOKCTL)
;;;	STDAMT = (CSVMCS+CSVLCS+CSVVBD+CSVFBD+CSAMCS+CSALCS+CSAVBD+CSAFBD) * WDQTY(CNTR)
;;;CONVRT,
;;;	TCSFAC = PRECSN     ;SET WORK FIELD EQUAL TO COSTS PRECISION
;;;	CFACTR = CSTFAC	    ;SET WORK FIELD EQUAL TO DECIMAL UNITS EXPONENTIAL.
;;;	IF (PRECSN.EQ.0) STDAMT = STDAMT * 100
;;;	IF (PRECSN.EQ.1) STDAMT = STDAMT * 10
;;;	IF (PRECSN.LE.2) GO TO CONDUN
;;;CONLOP,
;;;	TCSFAC = TCSFAC - 1
;;;	IF (TCSFAC.LE.1) GO TO CONDUN
;;;	STDAMT = STDAMT #1
;;;	GO TO CONLOP
;;;CONDUN,
;;;	IF (CFACTR.LE.0) GO TO ALLDON
;;;	STDAMT = STDAMT # 1
;;;	CFACTR = CFACTR - 1
;;;	GO TO CONDUN
ALLDON,
	VARAMT = WDAMTS(CNTR*2-1) - STDAMT
	WDAMTS(CNTR*2-1) = STDAMT
	WDAMTS(CNTR*2) = VARAMT
	ROW = (CNTR * 2) + 4
	CTL(4,8) = '14,08'
	DECMAL = STDAMT
	CALL DSPDLR
	ROW = (CNTR * 2) + 5
	CTL(4,8) = '14,08'
	DECMAL = VARAMT
	CALL DSPDLR
CSTTYP,
	CTL(4,14) = '29,02,01,A '
	IF (CNGCTL.NE.1.OR.WSCTYP.EQ.BLANKS) GO TO CSTTP2
	WKCTYP = WSCTYP
	XCALL OUTPT (ROW,29,0,WSCTYP,1)
	CALL ACCEPT
	GO TO (CSTTP3), DEFALT
CSTTP2,
	CALL INPUT
	GO TO (VARACT), INXCTL
	WKCTYP = ENTRY(1,2)
CSTTP3,
	SRCCTL = 2
	KEY(1,2) = ' 4'
	KEY(3,4) = WKCTYP
	KEY(5,6) =
	XCALL SERCH (12,JOBTBL,KEY(1,6),1,6,TBLEND,BSMID,SRCCTL,4,7,12,0,0,0,0)
	GO TO (CTPNTF), SRCCTL
	WDCTYP(CNTR) = WKCTYP
	XCALL OUTPT(1,51,8,TBLDES,1)
DSTLND,
	GO TO (ANYCNG), CNGCTL
	GO TO DISPLA
FNDACT,
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL ACCT(KEY(1,7), ACDESC, SRCCTL)

;;;	XCALL SERCH (3,EXPACT,KEY(1,7),1,7,EXPEND,BSMID,SRCCTL,4,32,37,0,0,0,0)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (SRCCTL) ACDESC = '** ACCT NOT ON FILE **'
	XCALL OUTPT (1,51,8,ACDESC,1)
	RETURN
ACCEPT,
	COL = COL - 1
AGAIN,
	XCALL OUTPT (ROW,COL,0,'\',1)
	DEFALT = 2
	XCALL FLAGS (00010000)
	ACCEPT (15,TCHAR)
	XCALL FLAGS (00000000)
	IF (TCHAR.EQ.13) DEFALT = 1			;RETURN
	IF (TCHAR.EQ.21.OR.TCHAR.EQ.09) DEFALT =	;^U OR TAB
	IF (SYSTEM.NE.1.AND.TCHAR.EQ.10) DEFALT = 1	;LINE FEED
	IF (DEFALT.EQ.2) GOTO AGAIN
	COL = COL + 1
	RETURN
ANYCNG,
	INXCTL =
RETURN,
	WORKB = WORKA
	WORK1 = WORK
	NEWAP1 = NEWAP
	RETURN
ABORT,
	IF (CNGCTL.EQ.0.AND.CNTR.GT.1) GO TO CLRALL
	IF (CNGCTL.EQ.0.AND.CNTR.EQ.1) GO TO ABORT2
	CALL CLRLIN
	CALL CLRDST
	CALL DSPDIS
	GO TO ANYCNG
ABORT2,
	INXCTL = 1
	GO TO RETURN
CLRALL,
	CNTR =
CLRAL2,
	INCR CNTR
	IF (CNTR.GT.9) GO TO ENDCLR
	CALL CLRLIN
	CALL CLRDST
	GO TO CLRAL2
ENDCLR,
	CNTR =
	GO TO DISPLA
CLRLIN,
	ROW = CNTR*2 + 4
	XCALL OUTPT(ROW,4,1,'\',1)
	ROW = ROW + 1
	XCALL OUTPT(ROW,1,1,'\',1)
	RETURN
SAVDST,
	WEACNO = WDACTS (CNTR*2-1)
	WEDAMT = WDAMTS (CNTR*2-1) + WDAMTS (CNTR*2)	;DISPLAY ORIGINAL
							;DST-AMT ENTERED.
	WVACNO = WDACTS (CNTR*2)
	WVDAMT = WDAMTS (CNTR*2)
	WSJOBN = WDJOBN (CNTR)
	WSPRTN = WDPRTN (CNTR)
	WSCTYP = WDCTYP (CNTR)
	WSQTY  = WDQTY  (CNTR)
	WSMCOD = WCMCOD (CNTR)
	WSUOM  = WCUOM  (CNTR)
	WSPONM = WPONUM (CNTR)
	WSPOLN = WPOLIN (CNTR)
	RETURN
CLRDST,
	WDACTS(CNTR*2-1) =
	WDACTS(CNTR*2) =
	WDAMTS(CNTR*2-1) =
	WDAMTS(CNTR*2) =
	WDJOBN(CNTR) =
	WDPRTN(CNTR) =
	WDCTYP(CNTR) =
	WDQTY(CNTR) =
	WCMCOD(CNTR) =
	WCUOM(CNTR) =
	WPONUM(CNTR) =
	WPOLIN(CNTR) =
	CALL CLRLIN
	RETURN
DSPDIS,
	N =
	TOTEXP =
CHKDST,
	INCR N
	IF (N.GT.18) GO TO DISDST
	TOTEXP = TOTEXP + WDAMTS(N)
	GO TO CHKDST
DISDST,
	SAVROW = ROW
	CTL = '02,42,08'
	DISPLAY (15,27,'[1m')
	DECMAL = TOTEXP
	CALL DSPDLR
	AMTREM = WINVAM - TOTEXP
	COL = 70
	DECMAL = AMTREM
	CALL DSPDLR
	ROW = SAVROW
	DISPLAY (15,27,'[0m')
	RETURN
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,1)
	RETURN
DSPNUM,
	OPTION = 1
	GO TO CALDSP
DSPDLR,
	OPTION = 3
CALDSP,
	XCALL DSPLY (MAX,ROW,COL,DECMAL,OPTION,1)
	RETURN
;;;INVNTF,
;;;	XCALL MESAG ('NON-STOCKED PART',2)
;;;	NOTSTK = 1
;;;	INVMAS =
;;;	GO TO PRTNM4
QTYZRO,
	XCALL MESAG ('QUANTITY CANNOT BE 0',2)
	GO TO QUANTY
UOMNOM,
	XCALL MESAG ('INVALID UNIT OF MEASURE',2)
	GO TO UOM
JOBNTF,
	XCALL MESAG ('INVALID JOB NUMBER',2)
	GO TO JOBNUM
POLNTF,
	XCALL MESAG ('INVALID PO/LINE NUMBER COMBINATION',2)
	GO TO PONUM
ITMNFD,
	XCALL MESAG ('ITEM NUMBER IS NOT SAME AS LINE ITEM NUMBER ON P/O',2)
	GO TO PRTNUM
UOMNFD,
	XCALL MESAG ('UOM IS NOT SAME AS PO LINE UOM',2)
	UOMFLG = 1
	GO TO UOM
CTPNTF,
	XCALL MESAG ('INVALID COST TYPE',2)
	GO TO CSTTYP
CSTNTF,
	XCALL MESAG ('COST RECORD NOT FOUND',2)
	XCALL OUTPT(ROW,1,1,'\',1)
	WDACTS (CNTR*2) = 0		;ZERO OUT VAR-ACCT FIELD
	GO TO VARACT
NOTBAL,
	XCALL MESAG ('AMT DISTRIBUTED NOT = INVOICE AMT',1)
	GO TO ANYCNG
END
