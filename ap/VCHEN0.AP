; VCHEN0 / AP 
;
;
;		VOUCHERING OF NEW PAYABLES TRANSACTIONS
;
;

	.DEFINE POOLSIZE	,25000
	.DEFINE WNDCHNL		,15
	.DEFINE MAXWINS		,10
	.INCLUDE 'WND:WINDOWS.DEF'

RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR


RECORD	POP
	.INCLUDE 'DEF:POP1.DEF'

RECORD	COPTBL
	.INCLUDE 'DEF:RD182A.DEF'

RECORD NEWAP	
		.INCLUDE 'DEF:RD014A.DEF'
RECORD DUMNAP	
		.INCLUDE 'DEF:RD014B.DEF'
RECORD APOPEN,X	
		.INCLUDE 'DEF:RD017A.DEF'
RECORD DUMAPO,X	
		.INCLUDE 'DEF:RD017B.DEF'
;;;RECORD DUMVEN	,X	
;;;		.INCLUDE 'DEF:RD011B.DEF'

RECORD DUMEXP,X	
		.INCLUDE 'DEF:RD013B.DEF'
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2


RECORD	WN_NAME
		,A5,	'VCEN0'
	WN_TNMBR,D4
RECORD	WARS
	WND_1	,D4
	W_ID	,D4


RECORD WORK		;don't change this record - used as a parameter
	WND_ON	,D1
	ACTITL	,A6
	ACTNUM	,D7
	ALPHA	,A8
	APOREC	,D5
	APOEND	,D5
	BLANKS	,A23
	BSEND	,D5
	BSMID	,D5
	CNGCTL	,D1
	CNT	,D2
	DECMAL	,D18
	DUPFLG	,D1		; 1 = DUPLICATE INVOICE ON NEWAP
				; 2 = DUPLICATE INVOICE ON APOPEN
	DUEDT2	,D8
	ENTRY	,A38
	EXPEND	,D5
	IDX	,D2
	INXCTL	,D1
	INVDT2	,D8
	KEY	,A12
	MASK	,A7,'XXXXXXX'
	MASK2	,A8,'XXXX-XXX'
	MSGCTL	,D1
	NAPREC	,D5
	NEWCNT	,D3,000
	NUM	,D10
	OPTION	,D1
	SAVVCH	,D6
	SELECT	,D1
	SRCCTL	,D1
	SWITCH	,D1,1
	SYSTEM	,D1
	TCHAR	,D3
	TOTEXP	,D8
	V	,D1,1
	VENREC	,D5
	VENEND	,D5
	WHATNO	,D2		;ALSO USED AS FUNCTIONAL RETURN
				;FROM VCHE0, VCHE1, VCHE2
RECORD	CHANNEL
	CHN011	,D2
	CHN012	,D2
	CHN013	,D2
	CHN014	,D2
	CHN017	,D2
	CHN182	,D2
	CHN151	,D2
	CHN192	,D2		;PORNXF

RECORD	VARS
	OPNOK	,D1
	SAVRFA	,A6
	I	,D6
	READ	,D1,	0
	WRITE	,D1,	1
	LOKCTL	,D1

PROC
	XCALL ENVRN (SYSTEM)
	XCALL TERID (V)

	V = 1
	MSGCTL = 1
	XCALL SNMSG (ENTRY,MSGCTL)
	SELECT = ENTRY (1,1)
;;;select=1	;dbg
	MSGCTL = 4
	XCALL SNMSG (ENTRY,MSGCTL)

	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF

	CALL INIT_WINDOW


BEGIN,
	GO TO (DEFALT,DISPLA,DISPLA), SELECT
END,
ENDOFF,
	CALL CLOSE
EXIT,
	XCALL PGCHN('AP:VCHENT',1)
FULL,
	CALL CLOSE
	XCALL W_DISP(WND_1,WD_POS,23,1,WD_CLR,WDC_LIN)
	XCALL W_DISP(WND_1,WD_POS,23,1,'THE TRANSACTION FILE IS FULL. RUN "XPAND" TO')
	XCALL WNMSG(WND_1,24,'EXPAND THE "NEWAP0" FILE.',1)
	XCALL W_DISP(WND_1,WD_POS,23,1,WD_CLR,WDC_LIN)
	GO TO EXIT

DEFALT,
	XCALL VCHE0 (WORK)
	IF (WHATNO.EQ.4)  GOTO END
DISPLA,
	UNLOCK 4
	CNGCTL =
;;;	NEWAP(7,291) =
	NEWAP(7,299) =
	TOTEXP =
	XCALL W_DISP(WND_1,WD_CLEAR)
	XCALL W_DISP(WND_1,WD_POS,1,1,'NEW PAYABLES ENTRY AND EDITING')
	USING SELECT SELECT
	(1),	XCALL W_DISP(WND_1,WD_POS,2,1,'ADD')
	(2),	XCALL W_DISP(WND_1,WD_POS,2,1,'CHANGE')
	(3),	XCALL W_DISP(WND_1,WD_POS,2,1,'DELETE')
	(),	XCALL W_DISP(WND_1,WD_POS,2,1,'BOY-HOWDY!!')
	ENDUSING

	XCALL W_DISP(WND_1,WD_POS,4,6,'VOUCH #')
	XCALL W_DISP(WND_1,WD_POS,4,27,'DATE')
	XCALL W_DISP(WND_1,WD_POS,4,48,'EXP ACCT   AMOUNT     TOTAL-DIST')
	XCALL W_DISP(WND_1,WD_POS,6,3,'1. VENDOR #')

	XCALL W_DISP(WND_1,WD_POS,10,3,'2. INV #')
	XCALL W_DISP(WND_1,WD_POS,10,26,'3. PO')
	XCALL W_DISP(WND_1,WD_POS,12,3,'4. REF')
	XCALL W_DISP(WND_1,WD_POS,14,3,'5. INV DATE')
	XCALL W_DISP(WND_1,WD_POS,16,3,'6. INV AMT')
	XCALL W_DISP(WND_1,WD_POS,18,3,'7. DISC DTE')
	XCALL W_DISP(WND_1,WD_POS,18,28,'8. PCT')
	XCALL W_DISP(WND_1,WD_POS,20,3,'9. DUE DTE')
	XCALL W_DISP(WND_1,WD_POS,22,2,'10. CHECK #')

	XCALL W_DISP(WND_1,WD_POS,6,44,'11.')
	XCALL W_DISP(WND_1,WD_POS,8,44,'12.')
	XCALL W_DISP(WND_1,WD_POS,10,44,'13.')
	XCALL W_DISP(WND_1,WD_POS,12,44,'14.')
	XCALL W_DISP(WND_1,WD_POS,14,44,'15.')
	XCALL W_DISP(WND_1,WD_POS,16,44,'16.')
	XCALL W_DISP(WND_1,WD_POS,18,44,'17.')
	XCALL W_DISP(WND_1,WD_POS,20,44,'18.')
	XCALL W_DISP(WND_1,WD_POS,22,44,'19.')
	XCALL W_DISP(WND_1,WD_POS,4,3,'0.')
	IF (SELECT.NE.1) XCALL W_DISP(WND_1,WD_POS,4,2,'*')
	XCALL W_UPDT
VCHNUM,
	CTL = '04,16,06,00,NE'
	IF (INXCTL .EQ. 1)  DUPFLG = -1
	CALL INPUT
	GOTO (DISPLA,END), INXCTL
	IF (SELECT.EQ.1.AND.CNGCTL.EQ.0.AND.ENTRY.NE.BLANKS) GO TO BADVCH
	GOTO (VCHADD), SELECT
	WVCHNO = ENTRY(1,6)
	IF (WVCHNO.EQ.0) GOTO VCHNUM
	GOTO FNDVCH
BADVCH,
	XCALL WNMSG(WND_1,24,'MUST ENTER ONLY (CR)',1)
	GO TO VCHNUM
VCHADD,
	LOKCTL = 1
	XCALL IO (4,DUMNAP,1,READ,LOKCTL)
	IF (REC014.GE.MAX014) GOTO FULL
	IF (DUPFLG.NE.0) GO TO DSPVCH
	IF (DVCHNO.EQ.0.OR.DVCHNO.EQ.999999) DVCHNO = 1
	WVCHNO = DVCHNO
	SAVVCH = WVCHNO
	DVCHNO = DVCHNO+1
VCHWRT,
	LOKCTL = 1
	XCALL IO (4,DUMNAP,1,WRITE,LOKCTL)
DSPVCH,
	LOKCTL = 1
	XCALL IO (4,DUMNAP,MAX014,READ,LOKCTL)
	LOKCTL = 1
	XCALL IO (4,DUMNAP,1,READ,LOKCTL)			;FREE BUFFER
	UNLOCK 4
	XCALL W_DISP(WND_1,WD_POS,24,1,WD_CLR,WDC_LIN)
	ENTRY(1,6) = SAVVCH,'ZZZZZX' [LEFT]
	XCALL W_DISP(WND_1,WD_POS,4,16,ENTRY(1,6))
	WVCHNO = SAVVCH
	DUPFLG = 0
	WAPACT = DFLAP
	WCSACT = DFLCSH
	WDSACT = DFLDSC
VCHDTE,
	CTL = '04,33,08,00,D '
	CALL INPUT
	GOTO (DISPLA), INXCTL
	IF (CNGCTL .EQ. 0)  WVCHDT = DVCHDT
	IF (ENTRY.NE.BLANKS) WVCHDT = ENTRY (1,8)
	DECMAL(1,8) = WVCHDT
	CALL DSPDTE
	GOTO (DEFACC), CNGCTL
	WHATNO = 0
LFSIDE,
	XCALL VCHE1 (NEWAP,WORK,W_ID)
	GOTO (DISPLA,PROCES,ANYCNG,END,FULL), WHATNO
	IF (WHATNO.EQ.20) GO TO DUPAPO	; 19 =MAKING A MANUAL PYT
	IF (WHATNO.EQ.22) GO TO RTSIDE	; 21 = DUPLICATE INVOICE ON NEWAP
	IF (WHATNO.EQ.24) GO TO RENTER	; 23 = TRYING TO CHANGE MANUAL PYT
DEFACC,
	WHATNO = 0
RTSIDE,
	CALL GET_EXP			;GET EXPENSE ACCOUNTS FROM TABLE
	IF (NUMARA.GT.0 .AND. WND_ON.EQ.1) 
		BEGIN
		DLINE = 'ACCT #   DESCRIPTION'
		XCALL POP2(POP)
		END

	XCALL VCHE2 (NEWAP,WORK,W_ID)
	IF (NUMARA.GT.0 .AND. WND_ON.EQ.1) 
		BEGIN
		XCALL W_PROC(WP_REMOVE,POP_WND)
		XCALL W_UPDT
		END

	GOTO (DISPLA,PROCES,ANYCNG), WHATNO
			;
			; 1 = ADD MODE: ENTERING ACCOUNTS, ABORT KEY PRESSED
			;     CHANGE MODE: RECORD NOT FOUND OR ABORT KEY PRESSED
			;	OR RECORD LOCKED AND USER WON'T WAIT
			;     DELETE MODE: DO NOT DELETE THE RECORD, OR
			;     RECORD NOT FOUND
			; 2 = USER WANTS TO DELETE THE VOUCHER
			; 3 = ASK FOR FIELD # TO CHANGE
			;
	IF (WHATNO.NE.23) GO TO ANYCNG
	WHATNO = 9
	GO TO LFSIDE
RENTER,
	XCALL WNMSG(WND_1,24,'MUST DELETE & RE-ENTER',1)
	GO TO DISPLA
FNDVCH,
	WHATNO = 21	; 20 = CHANGE MODE, SEARCH FOR REQUESTED VOUCHER
	GOTO RTSIDE
REDISP,
	WHATNO = 23		; 22 = ENTERING A MANUAL PYT
	GOTO RTSIDE
CNGBR,
	IF (WHATNO .EQ. 0)  GOTO VCHDTE
	IF (WHATNO .LE. 10)  GOTO LFSIDE
	IF (DUPFLG.EQ.2.AND.WHATNO.LE.19) GO TO BADCNG	;DON'T ALLOW CHANGE TO
							;EXPENSE DISTRIB IF
							;CHANGING APOPEN RECORD
	IF (WHATNO .LE. 19)  GOTO RTSIDE
BADCNG,
	XCALL WNMSG(WND_1,24,' ',6)
ANYCNG,
	CNGCTL = 5			; ALLOW CHANGE TO FIELD # '0'
	XCALL WANCN(W_ID,24,CNGCTL,WHATNO)
	GOTO (PROCES,CNGBR,DISPLA), CNGCTL+1
PROCES,
	IF (SELECT.EQ.3) GO TO DELETE
	IF (WNDISC.EQ.-1) GO TO UPDAPO
	IF (TOTEXP.NE.WINVAM) GOTO NOTEQL
	IF (((WINVAM-WNDISC)*WDPCT)#3.GT.999999) GOTO DISCEX
	IF (WINVAM.GT.0.AND.WDAMT.GT.WINVAM) GO TO DISCEX
	IF (WINVAM.LT.0.AND.WDAMT.LT.WINVAM) GO TO DISCEX
	XCALL WATE(3,V)
	IF (SELECT.EQ.2) GO TO CHANGE
ADDAP,
	IF (DUPFLG.EQ.1) GO TO CHANGE
	LOKCTL = 1
	XCALL IO (4,DUMNAP,1,READ,LOKCTL)
	INCR REC014
	IF (REC014.GT.MAX014) GOTO FULL
WRTERR,
	LOKCTL = 1
	XCALL IO (4,DUMNAP,1,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IO (4,NEWAP,REC014,WRITE,LOKCTL)
	NAPREC = REC014
	GO TO FREBUF
DELETE,
	WNAME = '000000'
CHANGE,
	LOKCTL = 1
	XCALL IO (4,NEWAP,NAPREC,WRITE,LOKCTL)
	IF (SELECT.EQ.3) XCALL WNMSG(WND_1,24,'VOUCHER DELETED',2)
FREBUF,
	LOKCTL = 1
	XCALL IO (4,DUMNAP,MAX014,READ,LOKCTL)
	LOKCTL = 1
	XCALL IO (4,DUMNAP,1,READ,LOKCTL)
	UNLOCK 4
	GO TO DISPLA
DUPAPO,
	APOREC = BSMID
	LOKCTL = 1
	XCALL IO (7,APOPEN,APOREC,READ,LOKCTL)
	WVCHNO = AVCHNO
	WDESC = ADESC
	WINVDT = AINVDT
	WINVNO = AINVNO
	WAPACT = AAPACT
	WINVAM = AINVAM - APAID
	WDAMT = ADSCAM - ADSTKN
	IF (WDAMT.LT.0) WDAMT = 0
	WDAMTS = WINVAM
	WNDISC = -1			;FLAG AS A MANUAL PYT
	GOTO REDISP
UPDAPO,
	IF (WCHKNO.NE.0.AND.WDUEDT.NE.0) GO TO ADDAP
	XCALL WNMSG(WND_1,24,'MISSING CHECK DATA',1)
	GO TO ANYCNG
NOTEQL,
	XCALL WNMSG(WND_1,24,'AMT DISTRIBUTED NOT = INVOICE AMT',1)
	GOTO ANYCNG
DISCEX,
	XCALL WNMSG(WND_1,24,'DISCOUNT TOO LARGE',1)
	GOTO ANYCNG
INPUT,
	XCALL WINPT(W_ID,ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL)
	RETURN
DSPDTE,
	XCALL DATE8(DECMAL(1,8), D_OUT, D_OUTR, D_FMT, D_SW)
	XCALL W_DISP(WND_1,WD_POS,ROW, COL,  D_FMT)
	RETURN

;========================================================
GET_EXP,	;;;;;;;;;;;;;;;;;;;;
	CLEAR NUMARA, I

	CLEAR COPTBL
	TBLCOD = 'VG'
	VG_VEN = WVENNO
	FIND(CHN182,COPTBL,TBL_KEY)[ERR=GE_LOOP]
GE_LOOP,
	READS(CHN182,COPTBL,GEL_EOF,GETRFA:SAVRFA)
	IF(VG_VEN .NE. WVENNO) GOTO GEL_EOF
	DLINE(1,8) = VG_ACCT,	MASK2
	DLINE(10,39) = VG_DESC
	INCR I
	PARRY(I) = DLINE
	PARRFA(I) = SAVRFA
	IF(I .LT. MAXARA)GOTO GE_LOOP

GEL_EOF,
	NUMARA = I
	RETURN
;-----------------------------------

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK

	SWITCH = 5
	XCALL FILES (10,'SI',182,SWITCH)	;COPTBL
	IF(SWITCH .EQ. 9) RETURN
	CHN182 = 10

	SWITCH = 1
	XCALL FILES(7,'I',17,SWITCH)		;FILE # 17 -- APOPEN FILE
	IF (SWITCH .EQ. 9)  RETURN
	CHN017 = 7

	XCALL FILES(4,'U',14,SWITCH)		;FILE # 14 -- NEWAP FILE
	IF (SWITCH .EQ. 9) RETURN
	CHN014 = 4

	XCALL FILES(3,'I',13,SWITCH)		;FILE # 13 -- EXPACT FILE
	IF (SWITCH .EQ. 9) RETURN
	CHN013 = 3

	SWITCH = 5
	XCALL FILES (5, 'SI', 151, SWITCH)	;FILE # 151 -- PORHDR
	IF (SWITCH .EQ. 9) RETURN
	CHN151 = 5

	SWITCH = 5
	XCALL FILES (19,'SI',192, SWITCH)	;FILE # 192 -- PORNXF
	IF (SWITCH .EQ. 9) RETURN
	CHN192 = 19

;;;	XCALL FILES(2,'U',12,SWITCH)		;FILE # 12 -- VENIDX FILE
;;;	IF (SWITCH .EQ. 9) RETURN
;;;	CHN012 = 2

	SWITCH = 1
	XCALL FILES(1,'SU',11,SWITCH)			;FILE # 11 -- VENMAS FILE
	IF (SWITCH .EQ. 9) RETURN
	CHN011 = 1

	LOKCTL = 1
	XCALL IO (7,DUMAPO,1,READ,LOKCTL)
	APOEND = ORG017
	UNLOCK 7
	LOKCTL = 1
	XCALL IO (3,DUMEXP,1,READ,LOKCTL)
	UNLOCK 3
	EXPEND = ORG013
RDCTL,
;;;	LOKCTL = 1
;;;	XCALL IO (1,DUMVEN,1,READ,LOKCTL)
;;;	UNLOCK 1
;;;	VENEND = ORG011

	LOKCTL = 1
	XCALL IO (4,DUMNAP,1,READ,LOKCTL)
	UNLOCK 4
	OPNOK = 1
	
	RETURN
;-------------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	SWITCH = 4

	IF(CHN017) XCALL FILES(7,'I',17,SWITCH)		;FILE # 17 -- APOPEN FILE
	IF(CHN014) XCALL FILES(4,'U',14,SWITCH)		;FILE # 14 -- NEWAP FILE
	IF(CHN013) XCALL FILES(3,'I',13,SWITCH)		;FILE # 13 -- EXPACT FILE
;;;	IF(CHN012) XCALL FILES(2,'U',12,SWITCH)		;FILE # 12 -- VENIDX FILE
	IF(CHN011) XCALL FILES(1,'U',11,SWITCH)		;FILE # 11 -- VENMAS FILE
	IF(CHN151) CLOSE CHN151
	IF(CHN192) CLOSE CHN192
	RETURN
;-------------------------------------------

INIT_WINDOW,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; SET UP SCREEN 1 WINDOW
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL W_INIT(POOLSIZE,WNDCHNL,MAXWINS)

	XCALL TNMBR (WN_TNMBR)
	XCALL W_PROC(WP_FIND,WND_1,WN_NAME)
	IF (.NOT. WND_1)
		BEGIN
		XCALL W_PROC(WP_CREATE,WND_1,WN_NAME,0,0)
		END
	XCALL W_PROC(WP_PLACE,WND_1,1,1)	
	XCALL W_DISP(WND_1,WD_CLEAR)

	W_ID = WND_1

;;;;; INIT_POP ;;;;;;;;;;;;;;;;;;;;

;; POP info...
	MAXARA = 10		;9-19-97 NOT MORE THAN 1 FULL WINDOW
	PLEN = 38
	NUMROW = 12
	WX = 12
	WY = 1
	POP_WID(1,5) = "VCPOP"
	POP_TITLE = "G/L ACCOUNTS"
	RETURN
;--------------------------------------------



END

;ACCT #   DESCRIPTION	
;ZXXX-XXX AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
;12345678901234567890123456789012345678901234567890
;         1         2         3         4         5
