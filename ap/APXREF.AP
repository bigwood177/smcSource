; APXREF / AP 
;
;
;	PRINTS A/P DISTRIBUTION TO G/L REPORT

RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR



RECORD APDIST	
		.INCLUDE 'DEF:RD016A.DEF'
RECORD	,X	
		.INCLUDE 'DEF:RD016B.DEF'
RECORD EXPACT	
		.INCLUDE 'DEF:RD013A.DEF'
RECORD,X	
		.INCLUDE 'DEF:RD013B.DEF'
RECORD VENMAS	
		.INCLUDE 'DEF:RD011B.DEF'
RECORD	,X	
		.INCLUDE 'DEF:RD011A.DEF'

;;;RECORD VENIDX	
;;;		.INCLUDE 'DEF:RD012A.DEF'

RECORD APOPEN	
		.INCLUDE 'DEF:RD017A.DEF'
RECORD,X	
		.INCLUDE 'DEF:RD017B.DEF'
RECORD TITLE
		,A31,'A/P DISTRIBUTION TO G/L REPORT '
RECORD HDR1
		,A7,' ACCT-#'
		,A3
		,A16,'ACCT DESCRIPTION'
		,A18
		,A4,'DATE'
		,A11
		,A6,'AMOUNT'
		,A53
RECORD HEAD1
		,A4
		,A5,'VEND#'
		,A3
		,A7,'VOUCHER'
RECORD HDR2
		,A120
RECORD HEAD2
		,A75
		,A9,'REFERENCE'
		,A19
		,A6,'CHECK#'
		,A3
		,A8,'INV-DATE'
RECORD HEAD3
		,A4,'NAME'
		,A24
		,A6,'VOUCH#'
		,A5
		,A4,'INV#'
RECORD LEGEND
		,A21,'FOR THE PERIOD ENDING'
		,A1
	ENDATE	,A10

RECORD LEGND2
		,A1
RECORD LEGND3
	SECTYP	,A21

RECORD PARAMS
	CUTDTE	,D8
	PFC	,D3
	DETAIL	,D1
	PRNTSW	,D1
	PURGSW	,D1
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD
	RECARR	,50A37

RECORD	VARS
	TDATE	,D6
	TODAY	,D8
	ACTTOT	,D10
	ALLPFC	,D1
	APOEND	,D5
	APOREC	,D5
	ARCNT	,D3
	BLANKS	,A10
	BRACKS	,A37,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
	BSEND	,D5
	BSMID	,D5
	CNGCTL	,D1
	CRDTOT	,D10
	CUTDT2	,D8
	DASHES	,A24,'------------------------'
	DATTOT	,D10
	DEBTOT	,D10
	DECMAL	,D18
	DTCNT	,D5
	ENTRY	,A7
	EXPCNT	,D5
	EXPEND	,D5
	GDATE2	,D8
	INTRSW	,D1
	INXCTL	,D1
	KEY	,A7
	KEY2	,A4
	LINCNT	,D2,60
	LNFEED	,D1
	LPSW	,D1
	LSTACN	,D7
	LSTDAT	,D8
	LSTTYP	,D1
	MASK	,A14,'ZZ,ZZZ,ZZZ.XX-'
	MASK1	,A8,'XX/XX/XX'
	MASK2	,A8,'ZXXX-XXX'
	MASK3	,A6,'ZZZZZZ'
	N	,D2
	ORGCNT	,D5
	OPTION	,D1
	PGCNT	,D3
	PLINE	,A132
	PRTCTL	,D3
	PRTTYP	,A1
	RDCNT	,D5
	RECCNT	,D5
	RPTNUM	,D3
	SAVLPS	,D1
	SPLFIL	,A14
	SRCCTL	,D1
	SWITCH	,D1,	1
	TYPTOT	,D10
	LOKCTL	,D1
	READ	,D1,	0
	WRITE	,D1,	1
	V	,D1,	1
	VENEND	,D5
	WHATNO	,D2
	WRKAMT	,D8
	WRTCNT	,D5
	WTARG	,D1,2
PROC
	XCALL TERID (V)
	V = 1
	XCALL RDATE(TDATE)
	XCALL DATE8(TDATE, D_OUT, TODAY, D_FMT, D_SW)

OPEN,
	XCALL FILES(7,'I',17,SWITCH)		;FILE # 17 -- APOPEN FILE
	IF (SWITCH .EQ. 9)  GOTO EXIT

;;;	XCALL FILES(2,'I',12,SWITCH)		;FILE # 12 -- VENIDX FILE
;;;	IF (SWITCH.NE.9) GO TO OPEN3
;;;	CALL CLOSE1
;;;	GO TO EXIT

OPEN3,
	XCALL FILES(3,'I',13,SWITCH)		;FILE # 13 -- EXPACT FILE
	IF (SWITCH.NE.9) GO TO OPEN6
	CALL CLOSE2
	GO TO EXIT
OPEN6,
	XCALL FILES(6,'I',16,SWITCH)		;FILE # 16 -- APDIST FILE
	IF (SWITCH.NE.9) GO TO OPEN1
	CALL CLOSE3
	GO TO EXIT
OPEN1,
	SWITCH = 5
	XCALL FILES(1,'SI',11,SWITCH)			;FILE # 11 -- VENMAS FILE
	IF (SWITCH.NE.9) GO TO RDCTL
	CALL CLOSE4
	GO TO EXIT
RDCTL,
	LOKCTL = 1
	XCALL IO (7, APOPEN,1,READ,LOKCTL)
	APOEND = ORG017
	LOKCTL = 1
	XCALL IO (3,EXPACT,1,READ,LOKCTL)
	EXPEND = ORG013

;;;	LOKCTL = 1
;;;	XCALL IO (1,VENMAS,1,READ,LOKCTL)
;;;	VENEND = ORG011

	LOKCTL = 1
	XCALL IO (6,APDIST,1,READ,LOKCTL)
	INTRSW = INTFLG
BEGIN,
	LINCNT = 60
	PGCNT =
	ACTTOT =
	CRDTOT =
	DATTOT =
	DEBTOT =
	TYPTOT =
	LSTACN = -1
	LSTDAT = -1
	LSTTYP = -1
	XCALL OUTPT(1,1,2,'PRINT ',V)
	XCALL OUTPT(0,0,0,TITLE,V)
	LPSW = 1
	SPLFIL (5,6) = 'FH'
	XCALL LPON (LPSW,SPLFIL)
	GO TO (END), LPSW + 1
DISPLA,
	XCALL OUTPT(8,20,2,'PLEASE ENTER',1)
	XCALL OUTPT(10,25,0,'1. CUT-OFF DATE',1)
	XCALL OUTPT(12,25,0,'2. PROFIT CENTER',1)
	XCALL OUTPT(14,25,0,'3. SHOW DETAIL ?',V)
	XCALL OUTPT(16,25,0,'4. PRINT REPORT ?',1)
	XCALL OUTPT(18,25,0,'5. PURGE FILE ?',1)
CUTOFF,
	CTL = '10,44,08,00,DE'
	CALL INPUT
	GOTO (DISPLA,END), INXCTL
	CUTDTE = ENTRY(1,8)

	IF (CUTDTE .EQ. 0) CUTDTE = TODAY
	XCALL DATE8(CUTDTE, D_OUT, D_OUTR, ENDATE, D_SW)

;;;	IF (CUTDTE.EQ.0) XCALL RDATE(CUTDTE)
;;;	IF (CUTDTE.EQ.0) GOTO CUTOFF
;;;	ENDATE = CUTDTE, MASK1
	XCALL OUTPT(10,44,0,ENDATE,1)
;;;	CUTDT2(1,2) = CUTDTE(5,6)
;;;	CUTDT2(3,6) = CUTDTE(1,4)
	GO TO (ANYCNG), CNGCTL
PFC,
	ALLPFC =
	CTL = '12,44,03,00,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	IF (ENTRY.EQ.BLANKS) CALL ALLPFC
	ON ERROR PFC
	PFC = ENTRY(1,3)
	GO TO (ANYCNG), CNGCTL
SHWDET,
	XCALL OUTPT(22,1,1,'"1"=NONE  "2"=PARTIAL  "3"=FULL',V)
	CTL = '14,44,01,01,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	DETAIL = ENTRY (1,1)
	IF (DETAIL.LT.1.OR.DETAIL.GT.3) GO TO SHWDET
	XCALL OUTPT(22,1,1,'\',1)
	GO TO (ANYCNG), CNGCTL
PRINTQ,
	CTL = '16,44,01,00,YY'
	CALL INPUT
	PRNTSW = INXCTL
	GO TO (ANYCNG), CNGCTL
PURGEQ,
	CTL = '18,44,01,00,YN'
	CALL INPUT
	PURGSW = INXCTL
ANYCNG,
	XCALL ANYCN(CNGCTL,WHATNO)
	GO TO (PROCES,CNGBR), CNGCTL + 1
CNGBR,
	GO TO (CUTOFF,PFC,SHWDET,PRINTQ,PURGEQ), WHATNO
	CNGCTL = 3
	GO TO ANYCNG
ALLPFC,
	ENTRY =
	XCALL OUTPT (12,44,0,'ALL ',V)
	ALLPFC = 1
	RETURN
PROCES,
	IF (PRNTSW.NE.1) GO TO PURGE
	IF (DETAIL.EQ.1) TITLE (25,31) = 'SUMMARY'
	IF (DETAIL.NE.1) TITLE (25,31) = 'REPORT '
	IF (DETAIL.GT.1) GO TO DET2
	HDR1 (66,118) =
	HDR2 =
	GO TO PROCS2
DET2,
	IF (DETAIL.EQ.3) GO TO DET3
	HDR1 (66,118) = HEAD1
	HDR2 =
	GO TO PROCS2
DET3,
	HDR1 (66,118) = HEAD1
	HDR1 (76,120) = HEAD3
	HDR2 = HEAD2
PROCS2,
	LOKCTL = 1
	XCALL IO (6,APDIST,1,READ,LOKCTL)
	IF (LPSW.EQ.2) WTARG = 4
	XCALL WATE(WTARG,V)
READ,
	LOKCTL = 1
	XCALL IOS (6,APDIST,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO EOF
	IF (APDIST.EQ.BRACKS) GO TO EOF
	IF (ALLPFC.EQ.0 .AND. GACCT(5,7).NE.PFC) GOTO READ
;;;	GDATE2(1,2) = GDATE(5,6)
;;;	GDATE2(3,6) = GDATE(1,4)
;;;	IF (GDATE2.GT.CUTDT2) GO TO READ
	IF (GDATE .GT. CUTDTE) GO TO READ
	IF (GTYPE.NE.LSTTYP) CALL NEWTYP
	IF (GACCT.NE.LSTACN) CALL NEWACT
	IF (GDATE.NE.LSTDAT) CALL NEWDAT
	DATTOT = DATTOT + GTRXAM
	ACTTOT = ACTTOT + GTRXAM
	TYPTOT = TYPTOT + GTRXAM
	WRKAMT = GTRXAM
	IF (GTYPE.GE.4) DEBTOT = DEBTOT + WRKAMT
	IF (GTYPE.LE.3) CRDTOT = CRDTOT + WRKAMT
	IF (DETAIL.EQ.1) GOTO READ
	XCALL DATE8(GDATE, D_OUT, D_OUTR, D_FMT, D_SW)
	PLINE (43,52) = D_FMT
	PLINE (56,66) = GTRXAM, MASK
	PLINE (70,73) = GVENNO
	XCALL LEFTJ (PLINE(70,73),4)
	INCR DTCNT
	IF (DETAIL.EQ.3) GO TO FULLDT
	PLINE (79,84) = GVCHNO, MASK3
	CALL PRINT
	GO TO READ
FULLDT,
	IF (KEY2.NE.GVENNO) CALL FNDVEN
	PLINE (76,100) = NAME
	CALL FNDVCH
	PLINE (104,109) = GVCHNO, MASK3
	GO TO (NOVCH1), SRCCTL
	PLINE (113,120) = AINVNO
NOVCH1,
	CALL PRINT
	PLINE (76,100) = ADESC
	GO TO (NOVCH2), SRCCTL
	PLINE (104,109) = ACHKNO, MASK3
	XCALL DATE8(AINVDT, D_OUT, D_OUTR, D_FMT, D_SW)
	PLINE (113,122) = D_FMT
NOVCH2,
	CALL PRINT
	LNFEED = 1
	CALL LINFD
	GO TO READ
NEWTYP,
	IF (LSTTYP.EQ.-1) GO TO FSTTYP
	CALL DATTOT
	CALL ACTTOT
	CALL TYPTOT
FSTTYP,
	IF (GTYPE.EQ.1) SECTYP = '** A/P ADDED **'
	IF (GTYPE.EQ.2) SECTYP = '** CASH DISBURSED **'
	IF (GTYPE.EQ.3) SECTYP = '** DISCOUNTS TAKEN **'
	IF (GTYPE.EQ.4) SECTYP = '** A/P PAID **'
	IF (GTYPE.EQ.6) SECTYP = '** EXPENSES **'
	CALL NEWACT
	LSTTYP = GTYPE
	RETURN
NEWACT,
	IF (LSTTYP.NE.GTYPE) GO TO FSTACT
	CALL DATTOT
	CALL ACTTOT
FSTACT,
	KEY = GACCT,'XXXXXXX'
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL ACCT(GACCT, ACDESC, SRCCTL)

;;;	BSEND = EXPEND
;;;	XCALL SERCH(3,EXPACT,KEY,1,7,BSEND,BSMID,SRCCTL,4,32,37,0,0,0,0)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	IF (SRCCTL) ACDESC = '** DESCRIPTION NOT ON FILE **'
	PLINE (1,8) = GACCT, MASK2
	PLINE (11,40) = ACDESC
	CALL NEWDAT
	LSTACN = GACCT
	RETURN
NEWDAT,
	IF (GACCT.NE.LSTACN) GO TO FSTDAT
	CALL DATTOT
FSTDAT,
	LSTDAT = GDATE
	RETURN
DATTOT,
	IF (DETAIL.EQ.1) GO TO DATTO2
	IF (DTCNT.LE.1) GO TO DATTO4
	IF (DETAIL.EQ.3) GO TO DATTO1
	LNFEED = 1
	CALL LINFD
DATTO1,
	PLINE (41,51) = 'DATE TOTAL:'
DATTO2,
	PLINE (53,66) = DATTOT, MASK
	IF (DETAIL.GT.1) GO TO DATTO3
	XCALL DATE8(LSTDAT, D_OUT, D_OUTR, D_FMT, D_SW)
	PLINE (43,52) = D_FMT
DATTO3,
	CALL PRINT
DATTO4,
	DATTOT =
	IF (DETAIL.EQ.1) RETURN
	IF (DTCNT.LE.1.AND.DETAIL.EQ.3) GO TO DATTO5
	LNFEED = 1
	CALL LINFD
DATTO5,
	IF (DETAIL.EQ.2) GO TO DATRET
	PLINE (43,65) = DASHES
	CALL PRINT
	GO TO DATRET
DATRET,
	DTCNT =
	RETURN
ACTTOT,
	IF (DETAIL.GT.1) GO TO ACTTO2
	LNFEED = 1
	CALL LINFD
ACTTO2,
	PLINE (38,51) = 'ACCOUNT TOTAL:'
	PLINE (53,66) = ACTTOT, MASK
	CALL PRINT
	LNFEED = 1
	CALL LINFD
	ACTTOT =
	RETURN
TYPTOT,
	PLINE (38,51) = 'SECTION TOTAL:'
	PLINE (53,66) = TYPTOT, MASK
	CALL PRINT
	TYPTOT =
	LINCNT = 60
	RETURN
EOF,
	IF (LSTTYP.EQ.-1) GO TO EOF2
	CALL DATTOT
	CALL ACTTOT
	CALL TYPTOT
EOF2,
	SECTYP =
	LNFEED = 2
	CALL LINFD
	PLINE (38,51) = 'TOTAL CREDITS:'
	PLINE (53,66) = CRDTOT, MASK
	CALL PRINT
	LNFEED = 1
	CALL LINFD
	PLINE (39,51) = 'TOTAL DEBITS:'
	PLINE (53,66) = DEBTOT, MASK
	CALL PRINT
	LNFEED = 1
	CALL LINFD
	PLINE (38,51) = 'CONTROL TOTAL:'
	PLINE (53,66) = DEBTOT - CRDTOT, MASK
	CALL PRINT
	SAVLPS = LPSW
	XCALL LPOFF (LPSW,SPLFIL,PGCNT)
ENDPRT,
	IF (SAVLPS.NE.2.AND.PURGSW.NE.1) GO TO BEGIN
PURGE,
	IF (PURGSW.EQ.2) GO TO END
	XCALL WATE (4,V)
	XCALL OUTPT(2,1,0,'PURGING FILE',1)
	SWITCH = 3
	CLOSE 6
	XCALL FILES(6,'I',16,4)
	XCALL FILES(6,'U',16,SWITCH)
	IF (SWITCH.EQ.9) GO TO END
	XCALL FILES(6,'U',16,5)
	XCALL FLAGS(10000000)
	LOKCTL = 1
	XCALL IO (6,APDIST,1,READ,LOKCTL)
	RECCNT = REC016
	ORGCNT = ORG016
	RDCNT = 2
	WRTCNT = 1
	N = 1
RDNEXT,
	LOKCTL = 1
	XCALL IO (6,APDIST,RDCNT,READ,LOKCTL)
	IF (APDIST.EQ.BRACKS) GO TO ENDPRG
	INCR RDCNT
	IF (INTRSW.AND.GFLAG.EQ.0) GO TO SKPDEL
	IF (ALLPFC.EQ.0 .AND. GACCT(5,7).NE.PFC) GO TO SKPDEL
;;;	GDATE2(1,2) = GDATE(5,6)
;;;	GDATE2(3,6) = GDATE(1,4)
;;;	IF (GDATE2.LE.CUTDT2) GO TO CONTIN
	IF (GDATE .LE. CUTDTE) GO TO CONTIN
SKPDEL,
	INCR ARCNT
	RECARR (ARCNT) = APDIST
	IF (ARCNT.EQ.50) CALL WRTARR
CONTIN,
	IF (RDCNT.GT.RECCNT) GO TO ENDPRG
	GO TO RDNEXT
WRTARR,
	INCR WRTCNT
	LOKCTL = 1
	XCALL IO (6,RECARR(N),WRTCNT,WRITE,LOKCTL)
	IF (N.EQ.ARCNT) GO TO ENDWRT
	INCR N
	GO TO WRTARR
ENDWRT,
	ARCNT = 0
	N = 1
	RETURN
ENDPRG,
	IF (ARCNT.NE.0) CALL WRTARR
	LOKCTL = 1
	XCALL IO (6,APDIST,1,READ,LOKCTL)
	REC016 = WRTCNT
	ORG016 = REC016
	LOKCTL = 1
	XCALL IO (6,APDIST,1,WRITE,LOKCTL)
	APDIST = BRACKS
WRTBRK,
	IF (WRTCNT.EQ.RECCNT) GO TO END
	INCR WRTCNT
	LOKCTL = 1
	XCALL IO (6,APDIST,WRTCNT,WRITE,LOKCTL)
	GO TO WRTBRK
END,
	CALL CLOSES
EXIT,
	XCALL PGCHN('AP:APMENU',1)
FNDVEN,
	LOKCTL = 1
	XCALL ISIO (1, VENMAS, GVENNO, READ, LOKCTL)
	IF (LOKCTL .EQ. 0)
	THEN	SRCCTL = 0
	ELSE	BEGIN
		CLEAR VENMAS
		NAME = '** VENDOR NOT ON FILE **'
		SRCCTL = 1
		END

;;;	KEY2 = GVENNO
;;;	BSEND = VENEND
;;;	XCALL SERCH (2,VENIDX,KEY2,1,4,BSEND,BSMID,SRCCTL,4,6,10,0,0,0,0)
;;;	LOKCTL = 1
;;;	IF (SRCCTL.EQ.0) XCALL IO (1,VENMAS,IRC011,READ,LOKCTL)
;;;	IF (SRCCTL.EQ.1) NAME = '** VENDOR NOT ON FILE **'
	RETURN
FNDVCH,
	KEY2 = GVENNO
	BSEND = APOEND
	SRCCTL = 2
	XCALL SERCH (7,APOPEN,KEY2,1,4,BSEND,BSMID,SRCCTL,4,32,37,0,0,0,0)
	GOTO (NOTFND), SRCCTL
BACKUP,
	BSMID = BSMID -1
	LOKCTL = 1
	XCALL IO (7,APOPEN,BSMID,READ,LOKCTL)
	IF (AVENNO.EQ.GVENNO) GO TO BACKUP
NXTVCH,
	INCR BSMID
	LOKCTL = 1
	XCALL IO (7,APOPEN,BSMID,READ,LOKCTL)
	IF (AVENNO .NE. GVENNO)  GOTO NOTFND
	IF (AVCHNO .NE. GVCHNO)  GOTO NXTVCH
	RETURN
NOTFND,
	SRCCTL = 1
	ADESC = '** VOUCHER NOT ON FILE **'
	RETURN
PRINT,
	IF (LINCNT.GE.60.AND.LPSW.EQ.-4) SLEEP 2
	IF (LINCNT.GE.60.AND.LPSW.EQ.-4) LPSW = 4
	XCALL LPOUT(LINCNT,PGCNT,PLINE,TITLE,HDR1,HDR2,'NO HDR',
&		LEGEND,LEGND2,LEGND3,0,132,PRTCTL,1,LPSW,RPTNUM,PRTTYP)
	RETURN
CLOSES,
	XCALL WATE(3,V)
	IF (SWITCH.EQ.9) GO TO CLOSE3
CLOSE4,
	CLOSE 6
	XCALL FILES(6,'I',16,4)
CLOSE3,
	CLOSE 3
	XCALL FILES(3,'I',13,4)
CLOSE2,
	XCALL FILES(2,'I',12,4)
CLOSE1,
	XCALL FILES(7,'I',17,4)
	RETURN
INPUT,
	XCALL INPUT(ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
LINFD,
	XCALL LINFD (LNFEED)
	LINCNT = LINCNT + LNFEED
	RETURN
END
