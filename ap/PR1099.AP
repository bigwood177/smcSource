; PR1099 / AP 

RECORD VENMAS	
		.INCLUDE 'DEF:RD011A.DEF'
RECORD VENCTL	
		.INCLUDE 'DEF:RD011B.DEF'
;;;RECORD VENIDX	
;;;		.INCLUDE 'DEF:RD012A.DEF'

RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD
	BLANKS	,A6
	CNGCTL	,D1
	DECMAL	,D4
	ENDVEN	,A4
	ENTRY	,A31
	INXCTL	,D1
	LNFEED	,D1
	LPSW	,D1
	MASK	,A4,'XXXX'
	PLINE	,A80
	RECNO	,D5
	RETCOD	,D1
	SPLFIL	,A14
	STRVEN	,A4
	SWITCH	,D1
	WHATNO	,D2
	WTYPE	,A1
	LOKCTL	,D1
	READ	,D1,	0
	WRITE	,D1,	1
	V	,D1
	PGCNT	,D3
	LINCNT	,D3
	PRTTYP	,A1
	RPTNUM	,D3
	COMPNM	,A28			;COMPANY NAME
	CSZ	,A28			;COMPANY CITY,STATE ZIP
	VCSZ	,A28			;VENDOR CITY,STATE ZIP
	VENAME	,A28			;VENDOR NAME
	ADDV1	,A28			;VENDOR ADDRESS
	ADDR1	,A28			;COMPANY ADDRESS
	SAVCSZ	,A28			;SAVED CITY,STATE ZIP
	CLINE	,A29			;CHECKING SIZE OF LINE TO BE PRINTED
	FDEMID	,A10			;COMPANY FEDERAL ID NUMBER
	CSIZE	,D2			;CITY SIZE
	SSIZE	,D2			;STATE SIZE
	ZSIZE	,D2			;ZIP CODE SIZE
	ERRSW	,D1,	0		;ERROR SWITCH
	ANYSW	,D1,	0		;SWITCH USED FOR Y-N ANSWER AFTER
					;RUNNING 1099 FORMS ONCE. WITHOUT
					;SWITCH -- FALLS THROUGH AND PROMPTS
					;FOR COMPANY NAME.
	PRNTSW	,D1,	1		;AP21
PROC
	XCALL TERID (V)
	XCALL FLAGS (00000000)		; ENABLE CTRL/C
	V = 1

;;;	SWITCH = 1
;;;	XCALL FILES (2,'I',12,SWITCH)	;FILE # 012 -- VENIDX FILE
;;;	IF (SWITCH.EQ.9) GOTO EXIT

	SWITCH = 5
	XCALL FILES (1,'SI',11,SWITCH)	;FILE # 011 -- VENMAS FILE
	IF (SWITCH.EQ.9) GOTO ENDOFF

	LOKCTL = 1
	CLEAR VENMAS
	VENNO = '   #'
	XCALL ISIO (1, VENMAS, VENNO, READ, LOKCTL)
	VENCTL = VENMAS

;;;	XCALL IO (1,VENCTL,1,READ,LOKCTL)

BEGIN,
	CNGCTL = 0
	RECNO = 1
	XCALL OUTPT(4,10,2,'PLEASE ENTER THE FOLLOWING PAYERS INFORMATION',V)
	XCALL OUTPT(6,15,0,'1. Payers Name',V)
	XCALL OUTPT(6,38,0,COMPNM,V)
	XCALL OUTPT(7,15,0,'2. Street Address',V)
	XCALL OUTPT(7,38,0,ADDR1,V)
	XCALL OUTPT(8,15,0,'3. City,State Zip',V)
	XCALL OUTPT(8,38,0,CSZ,V)
	XCALL OUTPT(9,15,0,'4. Federal Id #',V)
	XCALL OUTPT(9,38,0,FDEMID,V)
	XCALL OUTPT(11,10,0,'PLEASE ENTER THE FOLLOWING RECIPIENTS INFORMATION',V)
	XCALL OUTPT(13,15,0,'5. Type Of 1099',V)
	XCALL OUTPT(14,15,0,'6. Starting Vendor',V)
	XCALL OUTPT(15,15,0,'7. Ending Vendor',V)
	IF (ANYSW.EQ.1) GOTO ANYCN1	;LOGIC BRANCH ON ANYSW
CONAME,					;INPUT OF COMPANY NAME
	CTL = '06,38,28,01,AE'
	CALL INPUT
	GOTO (CLEARV,END), INXCTL
	COMPNM = ENTRY
	IF (COMPNM.EQ.' ') GOTO CONAME
	GOTO (ANYCNG), CNGCTL
ADDRS1,					;INPUT COMPANY ADDRESS
	CTL = '07,38,28,00,A '
	CALL INPUT
	GOTO (CLEARV), INXCTL
	ADDR1 = ENTRY
	IF (ADDR1.EQ.' ') GOTO ADDRS1
	GOTO (ANYCNG), CNGCTL
CSZ,					;INPUT CITY,STATE ZIP
	CTL = '08,38,28,01,A '
	CALL INPUT
	GOTO (CLEARV), INXCTL
	CSZ = ENTRY
	IF (CSZ.EQ.' ') GOTO CSZ
	GOTO (ANYCNG), CNGCTL
FEDID,					;INPUT FEDERAL ID #
	CTL = '09,38,10,01,A '
	CALL INPUT
	GOTO (CLEARV), INXCTL
	FDEMID = ENTRY
	IF (FDEMID.EQ.' ') GOTO FEDID
TP1099,					;INPUT TYPE OF 1099
	CTL = '13,38,01,01,AE'
	CALL INPUT
	GOTO (CLEARV,CLEARV), INXCTL
	WTYPE = ENTRY
	GOTO (ANYCNG), CNGCTL
STRVEN,
	CTL = '14,38,04,00,A '
	CALL INPUT
	GOTO (CLEARV), INXCTL
	XCALL FRMAT (ENTRY(1,4),4)
	STRVEN = ENTRY(1,4)
	IF (STRVEN.EQ.BLANKS) GOTO ALLVEN
	XCALL OUTPT(24,1,1,'\',V)	;CLEARS PROMPT FROM SCREEN
STRTAL,
	XCALL OUTPT(14,38,0,STRVEN,V)
ENDVEN,
	CTL = '15,38,04,00,A '
	CALL INPUT
	GOTO (CLEARV), INXCTL
	XCALL FRMAT (ENTRY(1,4),4)
	ENDVEN = ENTRY(1,4)
	IF (ENDVEN.EQ.BLANKS) ENDVEN = STRVEN
ENDAL,
	XCALL OUTPT(15,38,0,ENDVEN,V)
	IF (ENDVEN.LT.STRVEN) GOTO ENDVEN 
	IF (STRVEN.EQ.ENDVEN) GOTO REDVEN
	XCALL OUTPT (16,15,1,'\',V)	;CLEARS VENDOR INFO IF CHANGE
	XCALL OUTPT (17,15,1,'\',V)	;WAS MADE FROM SINGLE VENDOR
	XCALL OUTPT (18,14,1,'\',V)	;TO MULT VENDORS.
	WHATNO = 07			;WHATNO USED IN TEST FOR
					;DISALLOWING ANY CHANGES
					;MADE TO VENDOR INFORMATION
					;IF STARTING AND ENDING
					;VENDOR ARE NOT =.
	GOTO ANYCNG
ALLVEN,					;CLEARS VENDOR INFO IF CHANGE
	XCALL OUTPT(14,38,0,'ALL',V)	;WAS MADE FROM SINGLE VENDOR
	XCALL OUTPT(15,38,1,'\',V)	;TO MULT VENDORS.
	XCALL OUTPT(16,15,1,'\',V)
	XCALL OUTPT(17,15,1,'\',V)
	XCALL OUTPT(18,14,1,'\',V)
	STRVEN =
	ENDVEN = ']]]]'
ANYCNG,
	XCALL ANYCN (CNGCTL,WHATNO)
	GOTO (PROCES,CNGBR,BEGIN), CNGCTL + 1
CNGBR,					;WHATNO AND VENDOR # ARE USED
					;IN TEST FOR DISALLOWING ANY
					;CHANGES TO BE MADE FOR VENDOR
					;INFORMATION IF STARTING AND
					;ENDING VENDOR NUMBER ARE
					;NOT THE SAME.
	IF (STRVEN.NE.ENDVEN.AND.WHATNO.GT.7) WHATNO = 99
	IF (STRVEN.EQ.BLANKS.AND.WHATNO.EQ.7) WHATNO = 99
	GOTO (CONAME,ADDRS1,CSZ,FEDID,TP1099,STRVEN,ENDVEN,VENAM,
&		ADDRS2,VCSZ), WHATNO
	CNGCTL = 3
	GOTO ANYCNG
ANYCN1,					;THIS ANYCNG IS USED IF
					;ADDITIONAL PRINTING OF
					;1099 FORMS WITH THE SAME
					;PAYERS NAME, ADDRESS, CITY
					;STATE AND ZIP ARE TO BE
					;PRINTED
	CNGCTL = 2
	XCALL ANYCN (CNGCTL,WHATNO)
	GOTO (TP1099), CNGCTL + 1
	COMPNM =
	ADDR1 =
	CSZ =
	FDEMID =
	ANYSW = 0
	GOTO BEGIN
CLEARV,					;CLEARS THE TERMINAL
	COMPNM =
	ADDR1 =
	CSZ =
	FDEMID =
	ANYSW = 0
	GOTO BEGIN
REDVEN,					;REDVEN READS VENDOR MASTER 
					;FILE IF THE STARTING VENDOR
					;AND ENDING VENDOR NUMBER ARE
					;THE SAME.
;;;	INCR RECNO
	LOKCTL = 1
	XCALL IOS (1, VENMAS, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO MSG3
	IF (VENNO .EQ. '   #') GOTO REDVEN
	IF (VENNO.LT.STRVEN) GOTO REDVEN
	IF (VENNO.GT.ENDVEN) GOTO MSG3

;;;	XCALL IO (2,VENIDX,RECNO,READ,LOKCTL)
;;;	IF (IVENNO.LT.STRVEN) GOTO REDVEN
;;;	IF (IRC011.LE.0) GOTO REDVEN
;;;	IF (IVENNO.GT.ENDVEN) GOTO MSG3
;;;	LOKCTL = 1
;;;	XCALL IO (1,VENMAS,IRC011,READ,LOKCTL)

	IF (TP1099.NE.WTYPE) GOTO REDVEN
	VENAME = NAME
	ADDV1 = ADD1
	CSIZE = 15
DISLIN,					;DISLIN AND DSHINK FORMATS THE
					;SINGLE VENDOR CITY,STATE ZIP
					;READ FROM THE VENDOR FILE
					;BEFORE DISPLAYING THE VENDOR
					;INFORMATION TO THE SCREEN.
	IF (CITY(CSIZE,CSIZE).EQ.' ') CSIZE = CSIZE - 1	;CHECKING FOR NONBLANKS
	IF (CITY(CSIZE,CSIZE).EQ.' ') GOTO DISLIN	;FOR INSERTING OF COMMA
DSHINK,
	SAVCSZ(1,CSIZE) = CITY		;LOADING CITY FROM VENMAS
	CSIZE = CSIZE + 1		;SETTING PRINT POSITION FOR COMMA
	SAVCSZ(CSIZE,CSIZE) = ','	;LOADING COMMA
	CSIZE = CSIZE + 1		;SETTING PRINT POSITION FOR STATE
	SSIZE = CSIZE + 2		;SETTING PRINT POSITION FOR STATE
	SAVCSZ(CSIZE,SSIZE) = STATE	;LOADING STATE FROM VENMAS
	SSIZE = SSIZE + 1		;SETTING PRINT POSITION FOR ZIP
	ZSIZE = SSIZE + 9		;SETTING PRINT POSITION FOR ZIP
	SAVCSZ(SSIZE,ZSIZE) = ZIP	;LOADING ZIP FROM VENMAS
	CLINE(1,29) = SAVCSZ(1,ZSIZE)	;LOADING CLINE FOR TESTING LINE LENGTH
					;TESTING CLINE FOR LENGTH. IF CLINE
					;(29,29) IS NOT BLANK THEN THE
					;CITY,STATE ZIP LINE IS TO LONG.
	IF (CLINE(29,29).EQ.' ') GOTO BEGIN1
	CSIZE = 14			;CLINE TO LONG SHRINK THE CITY DOWN 1
	SAVCSZ =			;CLEAR  PRINT LINE BEFORE REENTRY
	GOTO DSHINK			;RESET CITY,STATE ZIP OVER AGAIN
BEGIN1,					;BEGIN1 DISPLAYS VENDOR INFORMATION
					;IF SINGLE VENDOR IS TO BE PRINTED
	RECNO = 1
	CNGCTL = 0
	XCALL OUTPT (24,1,1,'\',V)	;CLEAR LINE
	XCALL OUTPT (16,15,1,'\',V)	;CLEAR LINE
	XCALL OUTPT (17,15,1,'\',V)	;CLEAR LINE
	XCALL OUTPT (18,14,1,'\',V)	;CLEAR LINE
	XCALL OUTPT (16,15,0,'8. Vendor Name',V)	;DISPLAY LINE
	XCALL OUTPT (16,38,0,VENAME,V)	;DISPLAY VENDOR NAME
	XCALL OUTPT (17,15,0,'9. Address',V)		;DISPLAY LINE
	XCALL OUTPT (17,38,0,ADDV1,V)	;DISPLAY VENDOR ADDRESS LINE
	XCALL OUTPT (18,14,0,'10. City,State Zip',V)	;DISPLAY LINE
	XCALL OUTPT (18,38,0,SAVCSZ,V)	;DISPLAY VENDOR CITY,STATE ZIP
	GOTO ANYCNG
VENAM,					;INPUT OF VENDOR NAME
	CTL = '16,38,28,01,A '
	CALL INPUT
	GOTO (CLEARV), INXCTL
	VENAME = ENTRY
	IF (VENAME.EQ.' ') GOTO VENAM
	GOTO (ANYCNG), CNGCTL	;^
ADDRS2,					;INPUT OF VENDOR ADDRESS
	CTL = '17,38,28,00,A '
	CALL INPUT
	GOTO (CLEARV), INXCTL
	ADDV1 = ENTRY
	IF (ADDV1.EQ.' ') GOTO ADDRS2
	GOTO (ANYCNG), CNGCTL
VCSZ,					;INPUT OF VENDOR CITY,STATE ZIP
	CTL = '18,38,28,01,A '
	CALL INPUT
	GOTO (CLEARV), INXCTL
	VCSZ = ENTRY
	IF (VCSZ.EQ.' ') GOTO VCSZ
	SAVCSZ =			;CLEAR VARIABLE
	SAVCSZ = VCSZ			;SET VARIABLE FOR COMMA TEST
	CSIZE = 0			;SET CITY SIZE VARIABLE
	CALL INCOMA			;SEARCH FOR COMMA
	IF (ERRSW.EQ.1) GO TO VCSZ	;ERROR IN CITY,STATE ZIP FORMAT
	GOTO ANYCNG
PROCES,
	ANYSW = 1
	find (1, venmas, strven) [err=readvi]

READVI,					;READING VENDOR FILE FOR VENDOR
	
					;INFORMATION
;;;	INCR RECNO
;;;	IF (RECNO.GT.REC011) GO TO LPOFF		;AP21
	LOKCTL = 1
	XCALL IOS (1, VENMAS, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO LPOFF
	IF (VENNO .EQ. '   #') GOTO READVI	;HEADER

;;;	XCALL IO (2,VENIDX,RECNO,READ,LOKCTL)
	IF (VENNO.LT.STRVEN) GO TO READVI
	IF (VENNO.GT.ENDVEN) GO TO LPOFF		;AP21

	IF (TP1099.NE.WTYPE) GO TO READVI
	PLINE =						;AP21
	CALL PRINT					;AP21
	LNFEED = 2					;AP21
	CALL LINFD
	PLINE(1,28) = COMPNM		;PRINT COMPANY NAME
	CALL PRINT
	LNFEED = 1
	CALL LINFD
	PLINE(1,28) = ADDR1		;PRINT COMPANY ADDRESS
	CALL PRINT
	LNFEED = 1
	CALL LINFD
	PLINE(1,28) = CSZ		;PRINT CITY,STATE ZIP
	CALL PRINT
	LNFEED = 1
	CALL LINFD
	PLINE(1,10) = FDEMID		;PRINT FEDERAL ID #

	IF (VIDTYP.EQ.'S') PLINE (18,28) = VIDNO,'XXX-XX-XXXX'
	IF (VIDTYP.EQ.'F') PLINE (18,27) = VIDNO,'XX-XXXXXXX'
	CALL PRINT
	IF (STRVEN.EQ.ENDVEN) GOTO SINVEN	;TESTS FOR VENDOR NUMBER FOR A
						;CONDITIONAL BRANCH
	LNFEED = 1				;AP29
	CALL LINFD
	PLINE(1,28) = NAME		;PRINT VENDOR NAME AND VENDOR ID #
					;AND AMOUNT PAYED
	CALL PRINT
	IF (ADD1.EQ.BLANKS) GOTO INSLIN		;CHECK IF FIRST LINE OF VENDOR
						;ADDRESS IS BLANK.
	LNFEED = 2			;AP29
	CALL LINFD
	PLINE(1,28) = ADD1		;PRINT FIRST LINE OF VENDOR ADDRESS IF
					;NOT BLANK.
	PLINE (35,46) = PAYCAL, 'Z,ZZZ,ZZZ.XX-'		;AP29
	CALL PRINT
	CSIZE = 15			;SET CITY SIZE FOR EACH VENDOR
	GOTO NXTLIN
INSLIN,					;IF VENDOR ADDRESS 2 IS NOT BLANK THEN
					;PRINT THIS ADDRESS LINE INSTEAD OF
					;VENDOR ADDRESS 1(WAS BLANK).
	IF (ADD1.EQ.BLANKS.AND.ADD2.EQ.BLANKS) ADD2 = 'XXX---NO ADDRESS---XXX'
	CSIZE = 15			;SET CITY SIZE FOR EACH VENDOR
	LNFEED = 1
	CALL LINFD
	PLINE(1,28) = ADD2
	CALL PRINT
NXTLIN,					;FORMATING INPUT DATA FROM VENDOR
					;MASTER FILE IF MULT VENDORS.
					;CHECKING FOR NON-BLANKS FOR
					;INSERTING OF COMMA.
					;CHECKING IS CITY IS BLANK
	IF (CITY(CSIZE,CSIZE).EQ.' ') CSIZE = CSIZE - 1
	IF (CSIZE.EQ.0) CSIZE = 14 
	IF (CSIZE.EQ.0) GOTO CITYO
	IF (CITY(CSIZE,CSIZE).EQ.' ') GOTO NXTLIN
SHRINK,					;FORMATS INPUT DATA FROM VENDOR
					;MASTER FILE IF MULT VENDORS.
					;FORMATING CITY,STATE ZIP TO THE
					;PROPER LENGTH.
	PLINE(1,CSIZE) = CITY		;LOAD VENDOR CITY FROM VENMAS
CITYO,
	CSIZE = CSIZE + 1		;SETTING PRINT POSITION FOR COMMA
	PLINE(CSIZE,CSIZE) = ','	;LOADING COMMA
	CSIZE = CSIZE + 1		;SETTING PRINT POSITION FOR STATE
	SSIZE = CSIZE + 2		;SETTING PRINT POSITION FOR STATE
	PLINE(CSIZE,SSIZE) = STATE	;LOADING STATE FROM VENMAS AND BLANK
	SSIZE = SSIZE + 1		;SETTING PRINT POSITION FOR ZIP
	ZSIZE = SSIZE + 9		;SETTING PRINT POSITION FOR ZIP
	PLINE(SSIZE,ZSIZE) = ZIP	;LOADING ZIP FROM VENMAS
	CLINE(1,29) = PLINE(1,ZSIZE)	;LOADING CLINE FOR TESTING LENGTH
	IF (CLINE(29,29).EQ.' ') GOTO FORMS4	;LENGTH IS OK
	CSIZE = 14			;ZIP = 10 DIGITS AND CITY = 15 DIGITS
	GOTO SHRINK
		
FORMS4,					;CITY,STATE ZIP PRINTED HERE
	LNFEED = 1
	CALL LINFD
	CALL PRINT
	CLINE =
	LNFEED = 5			;GET NEXT 1099 FORM
	CALL LINFD
	GOTO READVI
SINVEN,					;IF SINGLE VENDOR, LOGIC PICKS UP
					;HERE FROM THE CONDITIONAL BRANCH
					;IN READVI.
	LNFEED = 1			;AP29
	CALL LINFD
	PLINE(1,28) = VENAME		;PRINT VENDORS NAME
	CALL PRINT
	LNFEED = 2					;AP29
	CALL LINFD
	PLINE(1,28) = ADDV1
	PLINE (35,46) = PAYCAL, 'Z,ZZZ,ZZZ.XX-'		;AP29
	CALL PRINT
	LNFEED = 1
	CALL LINFD
	PLINE(1,28) = SAVCSZ
	CALL PRINT
	CLINE =
	LNFEED = 5
	CALL LINFD
	GOTO READVI		
INCOMA,					;IF SINGLE VENDOR HAD A CHANGE MADE IN
					;CITY,STATE ZIP - CHECKS TO SEE IF
					;INPUT WAS CORRECTLY FORMATED.
	IF (CSIZE.GT.21) GOTO MSG
	INCR CSIZE
	IF (SAVCSZ(CSIZE,CSIZE).NE.',') GOTO INCOMA
	INCR CSIZE			;FOUND COMMA NOW INCREASE CSIZE
	IF (SAVCSZ(CSIZE,CSIZE).EQ.' ') GOTO MSG1	;TEST FOR SPACE AFTER
							;COMMA.
	INCR CSIZE
	IF (SAVCSZ(CSIZE,CSIZE).EQ.' ') GOTO MSG2	;TEST FOR SPACE INSTEAD
							;OF STATE
	ERRSW = 0
	RETURN
MSG,
	XCALL MESAG('No Comma Found. Please Reenter.',1)
	ERRSW = 1
	RETURN
MSG1,
	XCALL MESAG('No Space Allowed After The Comma. Please Reenter.',1)
	ERRSW = 1
	RETURN
MSG2,
	XCALL MESAG('State Must Be 2 Letters. Please Reenter.',1)
	ERRSW = 1
	RETURN	
MSG3,
	XCALL MESAG('Vendor Type Or Vendor # Not Found.',1)
	RECNO = 1
	XCALL OUTPT (13,38,1,'\',V)
	XCALL OUTPT (14,38,1,'\',V)
	XCALL OUTPT (15,38,1,'\',V)
	XCALL OUTPT (16,15,1,'\',V)
	XCALL OUTPT (17,15,1,'\',V)
	XCALL OUTPT (18,14,1,'\',V)
	GOTO TP1099
PRINT,
	IF (PRNTSW) CALL LPON				;AP21
	LINCNT = 
	XCALL LPOUT  (LINCNT,PGCNT,PLINE,'NO TITLE','NO HDR',' ',' ',
&	  	     'NO LEGEND',' ',' ',0,80,80,0,LPSW,RPTNUM,PRTTYP)
	RETURN

LPOFF,
	XCALL LPOFF (LPSW,SPLFIL,PGCNT)
	PRNTSW = 1
	GO TO BEGIN
LPON,
	LPSW = 5
	XCALL LPON (LPSW,SPLFIL)
	GOTO (ENDOFF), LPSW + 1
	XCALL WATE (2,V)
	PRNTSW = 0
	RETURN
;----------------------------------------------------------------------------
END,
	XCALL LPOFF (LPSW,SPLFIL,PGCNT)
ENDOFF,
;;;	XCALL FILES (2,'I',12,4)
EXIT,
	XCALL WATE(3,V)
	XCALL MOUNT ('REGULAR PAPER','PRINTER')
	XCALL PGCHN('AP:APMENU',1)
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
LINFD,
	XCALL LINFD (LNFEED)
	RETURN
END
