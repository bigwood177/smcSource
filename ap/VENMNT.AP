; VENMNT / AP 
;:
;		VENDOR MASTER FILE MAINTENANCE
;		STANDARD MASTER FILE MAINTENANCE MODULE
;
; 10-25-17 ssq: add v_rmv for raw material vendor sort (for raw material inventory)

RECORD VENMAS	
		.INCLUDE 'DEF:RD011A.DEF'
RECORD DUMVEN	
		.INCLUDE 'DEF:RD011B.DEF'
RECORD	,X
		,A10
	PRGNME	,A6
		,A267
;;;RECORD VENIDX	
;;;		.INCLUDE 'DEF:RD012A.DEF'

RECORD APOPEN	
		.INCLUDE 'DEF:RD017A.DEF'
RECORD APOCTL	
		.INCLUDE 'DEF:RD017B.DEF'
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD SNDMSG
		,A9,'AP:VENCNT'
	RCNT	,D5
	OCNT	,D5

RECORD	VARS
	A30	,A30
	XVEN	,A4
	AIDNUM	,A11
	ALPHA	,A5
	BSEND	,D5
	BSMID	,D5
	CNGCTL	,D1
	DECMAL	,D18
	ENTRY	,A31
	INXCTL	,D1
	KEY	,A4
	MSGCTL	,D1
	NODEL	,D1
	OPTION	,D1
	SELECT	,D1
	SRCCTL	,D1
	SWITCH	,D1,1
	SYSTEM	,D1
	LOKCTL	,D1
	READ	,D1,	0
	WRITE	,D1,	1
	STORE	,D1,	2
	DELETE	,D1,	3
	V	,D1,1
	WHATNO	,D2
	SAVMID	,D5
PROC
	XCALL TERID (V)
	XCALL ENVRN(SYSTEM)
	V = 1

;;;	XCALL FILES(2,'U',12,SWITCH)		;FILE # 12 -- VENIDX FILE
;;;	IF (SWITCH.EQ.9) GO TO END

	SWITCH = 5
	XCALL FILES(1,'SU',11,SWITCH)			;FILE # 11 -- VENMAS FILE
	IF (SWITCH.EQ.9) GO TO ENDOFF

BEGIN,
	IF (SELECT.EQ.3.AND.SWITCH.NE.9) XCALL FILES (3,'I',17,4)
		; CLOSE APOPEN WHEN RETURNING FROM DELETE MODE
	XCALL MMENU('VENDOR MASTER FILE MAINTENANCE','VENDOR',SELECT,V)
	GO TO (DISPLA,DISPLA,OPNAPO,LIST,LIST), SELECT
	XCALL WATE(3,V)
ENDMNU,
;;;	LOKCTL = 1
;;;	XCALL IO (1,DUMVEN,1,READ,LOKCTL)
;;;	IF (DFL011.NE.1.AND.DEL011.GE.50) GO TO ORGVEN

ENDOFF,
	CALL CLOSE3
END,
	XCALL PGCHN('AP:APMENU',1)
LIST,
	CALL CLOSE3
	IF (SELECT.EQ.4) XCALL PGCHN('AP:VENPRT',1)
	XCALL PGCHN('AP:VENPRT',0)		;6-29-15


OPNAPO,
	SWITCH = 1
	XCALL FILES (3,'I',17,SWITCH)
	IF (SWITCH.EQ.9) GO TO BEGIN
	LOKCTL =
	XCALL IO (3,APOCTL,1,READ,LOKCTL)
DISPLA,
	UNLOCK 1
	UNLOCK 2
	OFFERROR
	CNGCTL =
	NODEL =
	VENMAS =
	XCALL OUTPT(2,15,2,'\',V)
	IF (SELECT.GT.1) XCALL OUTPT(4,5,0,'*',V)
	XCALL OUTPT (4,6,0,'1. VENDOR ',V)
	XCALL OUTPT (6,6,0,'2. NAME',V)
	XCALL OUTPT (8,6,0,'3. ADDR-1',V)
	XCALL OUTPT (10,6,0,'4. ADDR-2',V)
	XCALL OUTPT (12,6,0,'5. CITY',V)
	XCALL OUTPT (14,6,0,'6. STATE',V)
	XCALL OUTPT (16,6,0,'7. ZIP',V)
	XCALL OUTPT (18,6,0,'8. PHONE',V)
	XCALL OUTPT (20,6,0,'9. FED ID',V)
	XCALL OUTPT (22,5,0,'10. TYPE 1099',V)

	XCALL OUTPT (4,51,0,'11. DUE DAYS',V)
	XCALL OUTPT (6,51,0,'12. DISC DAYS',V)
	XCALL OUTPT (8,51,0,'13. DISC PCT',V)
	XCALL OUTPT (10,51,0,'14. BILLED MTD',V)
	XCALL OUTPT (11,51,0,'15. #VOUCH MTD',V)
	XCALL OUTPT (13,51,0,'16. BILLED YTD',V)
	XCALL OUTPT (14,51,0,'17. #VOUCH YTD',V)
	XCALL OUTPT (16,51,0,'18. PAID MTD',V)
	XCALL OUTPT (17,51,0,'19. PAID YTD',V)
	XCALL OUTPT (18,51,0,'20. 1099 YTD',V)
	XCALL OUTPT (20,51,0,'21. RM SRT CD',V)
	XCALL OUTPT (22,51,0,'22. SORT NAME',V)
VENDNO,
	IF (SELECT.NE.1.AND.CNGCTL) GO TO BADCNG
;;;	IF (SELECT.EQ.1.AND.REC011.GE.MAX011) GO TO FULL
	CTL = '04,17,04,01,AE'
	CALL INPUT
	GO TO (DISPLA,BEGIN), INXCTL
	IF (ENTRY(1,4) .EQ. '   #') GOTO VENDNO		;HEADER
	XCALL FRMAT (ENTRY(1,4),4)
	VENNO = ENTRY(1,4)
	XVEN = VENNO

	XCALL OUTPT (04,17,0,VENNO,V)
	IF (VENNO.EQ.'    ') GO TO VENDNO

	LOKCTL = 1
	XCALL ISIO (1, VENMAS, VENNO, READ, LOKCTL)
	IF (LOKCTL .EQ. 0)
	THEN	SRCCTL = 0
	ELSE	BEGIN
		CLEAR VENMAS
		VENNO = XVEN
		SRCCTL = 1
		END

;;;	SRCCTL =
;;;	KEY(1,4) = VENNO
;;;	XCALL SERCH(2,VENIDX,KEY,1,4,ORG011,BSMID,SRCCTL,1,6,10,0,0,0,0)
	GO TO (FNDREC,FNDREC), SELECT-1
	GO TO (BADVEN), SRCCTL+1
	GO TO (ANYCNG), CNGCTL
	GO TO NAMER

BADVEN,
	XCALL MESAG('VENDOR # ALREADY USED',1)
	GO TO DISPLA

NAMER,
	CTL = '06,17,30,00,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	NAME = ENTRY
	GO TO (ANYCNG), CNGCTL
ADRS1,
	CTL = '08,17,25,00,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	ADD1 = ENTRY
	GO TO (ANYCNG), CNGCTL
ADRS2,
	CTL = '10,17,25,00,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	ADD2 = ENTRY
	GO TO (ANYCNG), CNGCTL
ADRS3,
	CTL = '12,17 15,00,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	CITY = ENTRY
	GO TO (ANYCNG), CNGCTL
ADRS4,
	CTL = '14,17,02,00,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	STATE = ENTRY
 	GO TO (ANYCNG),CNGCTL
ZCODE,
	CTL = '16,17,10,00,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	ZIP = ENTRY
	GO TO (ANYCNG), CNGCTL
TELE,
	CTL = '18,17,12,00,A '
	CALL INPUT
	GO TO (DISPLA),INXCTL
	TELNO = ENTRY
	GO TO (ANYCNG),CNGCTL
FEDNO,
	CTL = '20,17,09,00,N '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	VIDNO = ENTRY (1,9)
	VIDTYP =
	IF (VIDNO .EQ. 0) GO TO ENDFED
	XCALL OUTPT (20,30,0,'TYPE',V)
	CTL = '20,36,01,00,A '
	CALL INPUT
	GO TO (FEDNO), INXCTL
	VIDTYP = ENTRY
	IF (VIDTYP.EQ.' ') VIDTYP = 'S'
	XCALL OUTPT(20,36,0,VIDTYP,V)
	CALL DSPVID
ENDFED,
	GO TO (ANYCNG),CNGCTL
TY1099,
	CTL = '22,19,01,00,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	TP1099 = ENTRY
	GO TO (ANYCNG), CNGCTL
DUDAY,
	CTL = '04,67,02,00,# '
	CALL INPUT
	GO TO (DISPLA),INXCTL
	DUEDAY = ENTRY(1,3)
	GO TO (ANYCNG),CNGCTL
DIDAY,
	CTL = '06,67,02,00,# '
	CALL INPUT
	GO TO (DISPLA),INXCTL
	DISDAY = ENTRY(1,3)
	GO TO (ANYCNG),CNGCTL
DIPCT,
	CTL = '08,67,03,00,# '
	CALL INPUT
	GO TO (DISPLA),INXCTL
	DISPCT = ENTRY(1,3)
	DECMAL = DISPCT
	CALL DSPPCT
	GO TO (ANYCNG),CNGCTL
BILMTD,
	CTL = '10,67,08,00,$-'
	CALL INPUT
	GO TO (DISPLA),INXCTL
	BILMTD = ENTRY(1,09)
	GO TO (ANYCNG),CNGCTL
NUMMTD,
	CTL = '11,67,03,00,# '
	CALL INPUT
	GO TO (DISPLA),INXCTL
	NOVMTD = ENTRY(1,3)
	GO TO (ANYCNG),CNGCTL
BILLS,
	CTL = '13,67,09,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	BILYTD = ENTRY(1,10)
	GO TO (ANYCNG), CNGCTL
NUMBIL,
	CTL = '14,67,04,00,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	NOVYTD = ENTRY(1,4)
	GO TO (ANYCNG),CNGCTL
PAYMTD,
	CTL = '16,67,08,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	PAYMTD = ENTRY (1,9)
	GO TO (ANYCNG),CNGCTL
PAYYTD,
	CTL = '17,67,09,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	PAYYTD = ENTRY (1,10)
	GO TO (ANYCNG),CNGCTL			;AP23
PAYCAL,
	CTL = '18,67,09,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	PAYCAL = ENTRY (1,10)
	GOTO (ANYCNG), CNGCTL
V_RMV,
	CTL = '20,67,03,00,# '
	CALL INPUT
	GOTO (DISPLA), INXCTL
	V_RMV = ENTRY(1,3)
	GOTO (ANYCNG), CNGCTL
VSORT,
	CTL = '23,50,30,00,A '
	CALL INPUT
	GOTO (DISPLA),INXCTL
	VSORT = ENTRY(1,30)
	IF (VSORT .EQ. A30)
		BEGIN
		VSORT = NAME
		XCALL OUTPT (23,50,0,VSORT,V)
		END
	GO TO ANYCNG
DSPVID,
	AIDNUM = VIDNO
	IF (VIDTYP.EQ.'S') AIDNUM = VIDNO, 'XXX-XX-XXXX'
	IF (VIDTYP.EQ.'F') AIDNUM = VIDNO, 'XX-XXXXXXX'
	XCALL OUTPT(20,17,0,AIDNUM,V)
	RETURN
PROCES,
	XCALL WATE(3,V)
	GO TO (ADD,CHANGE), SELECT
FNDREC,
	GOTO (NOFIND), SRCCTL
	XCALL WATE(3,V)
LOKERR,
	LOKCTL = 0
	XCALL ISIO (1, VENMAS, VENNO, READ, LOKCTL)
	IF (LOKCTL.EQ.1) GO TO DISPLA
	XCALL OUTPT(24,1,1,'\',V)
	XCALL OUTPT (06,17,0,NAME,V)
	IF (SELECT.EQ.3) SAVMID = BSMID
	IF (SELECT.EQ.3) CALL CHKAPO		; CHECK APOPEN FOR OPEN ITEMS
	IF (NODEL.EQ.1) GO TO DISPLA		; NO DELETE IF OPEN ITEMS FOUND
	XCALL OUTPT (8,17,0,ADD1,V)
	XCALL OUTPT (10,17,0,ADD2,V)
	XCALL OUTPT (12,17,0,CITY,V)
	XCALL OUTPT (14,17,0,STATE,V)
	XCALL OUTPT (16,17,0,ZIP,V)
	XCALL OUTPT (18,17,0,TELNO,V)
	CTL = '20,17,09'
	DECMAL = VIDNO
	CALL DSPNUM
	IF (VIDNO.NE.0) XCALL OUTPT (20,30,0,'TYPE',V)
	IF (VIDNO.NE.0) CALL DSPVID
	XCALL OUTPT (20,36,0,VIDTYP,V)
	XCALL OUTPT(22,19,0,TP1099,V)
	XCALL OUTPT (23,50,0,VSORT,V)

	CTL = '04,67,02'
	DECMAL = DUEDAY
	CALL DSPNUM
	CTL = '06,67,02'
	DECMAL = DISDAY
	CALL DSPNUM
	CTL = '08,67,03'
	DECMAL = DISPCT
	CALL DSPPCT
	CTL = '10,67,08'
	DECMAL = BILMTD
	CALL DSPDLR
	CTL = '11,67,03'
	DECMAL = NOVMTD
	CALL DSPNUM
DSPYTD,
	CTL = '13,67,09'
	DECMAL = BILYTD
	CALL DSPDLR
 	CTL = '14,67,04'
	DECMAL = NOVYTD
	CALL DSPNUM
	CTL = '16,67,08'
	DECMAL = PAYMTD
	CALL DSPDLR
	CTL = '17,67,09'
	DECMAL = PAYYTD
	CALL DSPDLR
	CTL = '18,67,09'
	DECMAL = PAYCAL
	CALL DSPDLR

	CTL = '20,67,03'
	DECMAL = V_RMV
	CALL DSPNUM

	IF (SELECT.NE.3) GOTO ANYCNG
	XCALL OUTPT(24,1,0,'OK TO DELETE ?',V)
	CTL = '23,17,01,01,YN'
	CALL INPUT
	XCALL WATE(3,V)
	GOTO (CHANGE,DISPLA), INXCTL
;-----------------------------------------------------------
;	ROUTINE CHECKS FOR OPEN ITEMS FOR VENDOR IN APOPEN
;-----------------------------------------------------------
CHKAPO,
	NODEL =
	LOKCTL = 1
	XCALL IO (3,APOCTL,1,READ,LOKCTL)
	SRCCTL = 2
	XCALL SERCH (3,APOPEN,VENNO,1,4,ORG017,BSMID,SRCCTL,4,32,37,0,0,0,0)
	BSMID = BSMID - 1
LOOP,
	INCR BSMID
	LOKCTL = 0
	XCALL IO (3,APOPEN,BSMID,READ,LOKCTL)
	IF (AVENNO.NE.VENNO) RETURN
	IF (AFLAG.NE.-9) GO TO NODLET
	GO TO LOOP
;--------------------------------------------------------------------
;	DISPLAYS NO DELETE ALLOWED MESSAGE
;--------------------------------------------------------------------
NODLET,
	NODEL = 1
	XCALL MESAG ('VENDOR NOT DELETED - STILL HAS OPEN ITEMS',1)
	RETURN
;--------------------------------------------------------------------
CNGBR,
	GO TO (VENDNO,NAMER,ADRS1,ADRS2,ADRS3,ADRS4,ZCODE,TELE,FEDNO,TY1099,
&	      DUDAY,DIDAY,DIPCT,BILMTD,NUMMTD,BILLS,NUMBIL,PAYMTD,
&	     PAYYTD,PAYCAL,V_RMV,VSORT),WHATNO
BADCNG,
	CNGCTL = 3
	GO TO ANYCNG
ADD,
	LOKCTL = 0
	XCALL ISIO (1, VENMAS, VENNO, STORE, LOKCTL)
	IF (LOKCTL .NE. 0) XCALL MESAG('VENDOR # ALREADY USED',1)

	GO TO DISPLA

CHANGE,
	USING SELECT SELECT
	(2),	BEGIN
		LOKCTL = 1
		XCALL ISIO (1, VENMAS, VENNO, WRITE, LOKCTL)
		IF (LOKCTL .NE. 0)	XCALL MESAG('COULD NOT UPDATE VENDOR',1)

		END
	(3),	BEGIN
		LOKCTL = 1
		XCALL ISIO (1, VENMAS, VENNO, DELETE, LOKCTL)
		IF (LOKCTL .NE. 0) 
		THEN	XCALL MESAG('COULD NOT DELETE VENDOR',1)
		ELSE	XCALL MESAG('VENDOR DELETED',2)
		END
	ENDUSING

	GO TO DISPLA

NOFIND,
	XCALL MESAG('VENDOR NOT FOUND',1)
	GO TO DISPLA

INPUT,
	XCALL INPUT(ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
ANYCNG,
	IF (VTYPE.EQ.1.OR.VTYPE.EQ.2)
&		XCALL MESAG ('TEMPORARY VENDOR WILL BE MADE PERMANENT',2)
	IF (VTYPE.EQ.1.OR.VTYPE.EQ.2) VTYPE =
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (PROCES,CNGBR,DISPLA), CNGCTL+1
DSPNUM,
	OPTION = 1
	GO TO CALDSP
DSPPCT,
	OPTION = 5
	GO TO CALDSP
DSPDLR,
	OPTION = 3
CALDSP,
	XCALL DSPLY(MAX,ROW,COL,DECMAL,OPTION,V)
	RETURN

CLOSE3,
	CLOSE 1
	XCALL FILES(2,'U',12,4)
	RETURN

END
