; PRGAPO / AP 
;
;
;		PGM TO PURGE SELECTED ITEMS FROM AP OPEN ITEM FILE
;
;
RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR



RECORD APOPEN	
		.INCLUDE 'DEF:RD017A.DEF'
RECORD	,X	
		.INCLUDE 'DEF:RD017B.DEF'
RECORD PURGAP	
		.INCLUDE 'DEF:RD095A.DEF'
RECORD DUMPRG	
		.INCLUDE 'DEF:RD095B.DEF'
RECORD
		.INCLUDE 'DEF:RD095S.DEF'
RECORD VENMAS	
		.INCLUDE 'DEF:RD011A.DEF'
RECORD	,X	
		.INCLUDE 'DEF:RD011B.DEF'
;;;RECORD VENIDX	
;;;		.INCLUDE 'DEF:RD012A.DEF'

RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD
	ABSEND	,D5
	BALANC	,D8
	BLANKS	,A11
;;;	BRACKS	,A44,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
	BSEND	,D5
	BSMID	,D5
	CNGCTL	,D1
	DECMAL	,D18
	ENTRY	,A30
	INXCTL	,D1
	KEY	,A10
	KVCHNO	,D6
	KVENNO	,A4
	M	,D2
	MAXREC	,D5
	MASK	,A14,'ZZ,ZZZ,ZZZ.XX-'
	N	,D2
	OPTION	,D1
	PRTFLG	,D1
	RCRD	,10D5
	ROW2	,D2
	VBSEND	,D5
	SRCCTL	,D1
	SVBSMD	,D5
	SWITCH	,D1,3
	TOTAMT	,D11
	LOKCTL	,D1
	READ	,D1,	0
	WRITE	,D1,	1
	V	,D1,1
	WHATNO	,D2
	SIZE    ,D5
PROC
	XCALL TERID (V)
	V = 1
	XCALL FILES(7,'U',17,SWITCH)		;FILE # 17 --APOPEN FILE
	IF (SWITCH.EQ.9) GO TO EXIT

;;;	SWITCH = 1
;;;	XCALL FILES (2,'I',12,SWITCH)		;FILE # 12 -- VENIDX FILE
;;;	IF (SWITCH.NE.9) GO TO OPEN9

;;;	CALL CLOSE1
;;;	GO TO EXIT
OPEN9,
	SWITCH = 3
	XCALL FILES(9,'O',95,SWITCH)		;PURGAP FILE
	IF (SWITCH.NE.9) GO TO OPEN1
	CALL CLOSE2
	GO TO EXIT
OPEN1,
	SWITCH = 5
	XCALL FILES (1,'SI',11,SWITCH)		;FILE # 11 -- VENMAS FILE
	IF (SWITCH.NE.9) GO TO BEGIN
	XCALL FILES (9,'O',95,4)
	CALL CLOSE2
	GO TO EXIT
BEGIN,
;------ AP28 --------------------------------------------------------------
	XCALL FILES (7,'U',17,5)
	LOKCTL = 1
	XCALL IO (7,APOPEN,1,READ,LOKCTL)
	ABSEND = ORG017
	MAXREC = MAX017
	UNLOCK 7
;--------------------------------------------------------------------------
;	SIZE = (REC017 * (SIZ095+2))/512+1			;AP28
	SIZE = ((REC017+2) * (SIZ095+2))/512+1			;AP28
	XCALL OFILE (9,95,SIZE,SIZ095,SWITCH)	;FILE # 95 -- PURGAP FILE
;	XCALL FILES(7,'U',17,5)					;AP28
;------ AP28 ---------------------------------------------------------------
	IF (SWITCH)
		BEGIN
		XCALL FILES (9,'O',95,4)
		CALL CLOSE2
		GO TO EXIT
		END
;---------------------------------------------------------------------------
	LOKCTL = 1
	XCALL IOS (9,DUMPRG,WRITE,LOKCTL)
	REC095 = 1

;;;	LOKCTL = 1
;;;	XCALL IO (1,VENMAS,1,READ,LOKCTL)
;;;	VBSEND = ORG011

CLRDTA,
	TOTAMT =
	XCALL OUTPT(1,1,2,'PURGE ZERO TOTAL PAYABLES',V)
	XCALL OUTPT(4,1,0,'PLEASE ENTER VENDOR #',V)
	XCALL OUTPT(8,1,0,'PLEASE ENTER VOUCHER #',V)
	XCALL OUTPT(2,43,0,'VOUCHER     BALANCE        TOTAL',V)
	XCALL OUTPT(4,40,0,'1.',V)
	XCALL OUTPT(6,40,0,'2.',V)
	XCALL OUTPT(8,40,0,'3.',V)
	XCALL OUTPT(10,40,0,'4.',V)
	XCALL OUTPT(12,40,0,'5.',V)
	XCALL OUTPT(14,40,0,'6.',V)
	XCALL OUTPT(16,40,0,'7.',V)
	XCALL OUTPT(18,40,0,'8.',V)
	XCALL OUTPT(20,40,0,'9.',V)
	XCALL OUTPT(22,39,0,'10.',V)
	N =
	RCRD(1,50)=
VENDNO,
	CTL = '04,26,04,01,AE'
	CALL INPUT
	GO TO (CLRDTA,ENDOFF), INXCTL
	XCALL FRMAT (ENTRY(1,4),4)
	KVENNO = ENTRY(1,4)
	XCALL OUTPT (4,26,0,KVENNO,V)
CONT,
	LOKCTL = 1
	XCALL ISIO (1, VENMAS, KVENNO, READ, LOKCTL)
	IF (LOKCTL .EQ. 0)
	THEN	SRCCTL = 0
	ELSE	BEGIN
		SRCCTL = 1
		NAME = '** VENDOR NOT ON FILE **'
		END
	
	KEY(1,4) = KVENNO
;;;	BSEND = VBSEND
;;;	XCALL SERCH (2,VENIDX,KEY(1,4),1,4,BSEND,BSMID,SRCCTL,1,6,10,0,0,0,0)
;;;	GOTO (VENDOK), SRCCTL+1
;;;	NAME = '** VENDOR NOT ON FILE **'
;;;	GO TO DISPVN
;;;VENDOK,
;;;	LOKCTL = 1
;;;	XCALL IO (1,VENMAS,IRC011,READ,LOKCTL)

DISPVN,
	XCALL OUTPT(6,10,0,NAME,V)
VOUCHR,
	ROW = 4
DSPLOP,
	INCR ROW
	IF (ROW.GT.10) GOTO CONTIN
	ROW2=2*(ROW)
	XCALL OUTPT(ROW2,26,0,BLANKS,V)
	GOTO DSPLOP
CONTIN,
	XCALL OUTPT(24,1,1,'\',V)
	CTL = '08,26,06,01,#E'
	CALL INPUT
	GOTO (CLRDTA,PROCES), INXCTL
	KVCHNO = ENTRY(1,6)
	KEY(5,10) = KVCHNO,'XXXXXX'
	BSEND = ABSEND
	SRCCTL = 2
	XCALL SERCH(7,APOPEN,KEY,1,10,BSEND,BSMID,SRCCTL,1,32,37,0,0,0,0)
	GOTO (FRSTRC), SRCCTL+1
NOFIND,
	XCALL MESAG('VOUCHER NOT FOUND',1)
	GO TO VOUCHR
FRSTRC,
	BSMID = BSMID - 1
	LOKCTL = 1
	XCALL IO (7,APOPEN,BSMID,READ,LOKCTL)
	IF (APOPEN(1,10).EQ.KEY) GOTO FRSTRC
NXTREC,
	INCR BSMID
	LOKCTL = 1
	XCALL IO (7,APOPEN,BSMID,READ,LOKCTL)
	IF (APOPEN(1,10).NE.KEY) GOTO NOFIND
	IF (AINVNO.EQ.']]]DEL') GOTO NXTREC
	IF (AFLAG.LT.0.OR.AFLAG.EQ.2.OR.AFLAG.GT.5) GO TO NOTOPN
	XCALL OUTPT(10,8,0,'INVOICE #',V)
	XCALL OUTPT(12,8,0,'INVOICE DATE',V)
	XCALL OUTPT(14,8,0,'INVOICE AMT',V)
	XCALL OUTPT(16,8,0,'DISCOUNT AMOUNT',V)
	XCALL OUTPT(18,8,0,'DUE DATE',V)
	XCALL OUTPT(20,8,0,'BALANCE',V)
	XCALL OUTPT(10,26,0,AINVNO,V)
	CTL = '12,26'
	DECMAL(1,8) = AINVDT
	CALL DSPDTE
	CTL = '14,26,08'
	DECMAL = AINVAM
	CALL DSPDLR
	CTL = '16,26,06'
	DECMAL = ADSCAM
	CALL DSPDLR
	CTL = '18,26'
	DECMAL(1,8) = ADUEDT
	CALL DSPDTE
	CALL CLCREM
	IF (PRTFLG) GO TO UNPAID
	DECMAL = BALANC
	CTL = '20,26,08'
	CALL DSPDLR
	XCALL OUTPT(24,1,0,'RIGHT VOUCHER ?',V)
	CTL = '24,18,01,01,YN'
	CALL INPUT
	GOTO (VOUCHR), INXCTL-1
	M =
CHKYET,
	INCR M
	IF (M.GT.N) GO TO ENDCHK
	IF (BSMID.NE.RCRD(M)) GO TO CHKYET
	XCALL MESAG('VOUCHER ALREADY LISTED',1)
	GO TO VOUCHR
ENDCHK,
	INCR N
	RCRD(N) = BSMID
	TOTAMT = TOTAMT + BALANC
	ENTRY (1,6) = AVCHNO
	ROW2=2*(N+1)
	XCALL OUTPT(ROW2,43,0,ENTRY(1,6),V)
	ENTRY(1,11) = BALANC, MASK
	ROW2=2*(N+1)
	XCALL OUTPT(ROW2,51,0,ENTRY(1,11),V)
	ENTRY(1,14) = TOTAMT, MASK
	ROW2=2*(N+1)
	XCALL OUTPT(ROW2,64,0,ENTRY(1,14),V)
	IF (N.GE.10) GOTO PROCES
	GOTO VOUCHR
NOTOPN,
	XCALL MESAG('NOT AN OPEN VOUCHER',2)
	GO TO VOUCHR
UNPAID,
	XCALL MESAG('THIS VOUCHER HAS UNPAID PARTIALS',2)
	GO TO VOUCHR
CLCREM,
	BALANC = AINVAM
	SVBSMD = BSMID
	PRTFLG =
CLCLP,
	INCR BSMID
	LOKCTL = 1
	XCALL IO (7,APOPEN,BSMID,READ,LOKCTL)
	IF (APOPEN(1,10).NE.KEY) GO TO ENDCLC
	IF (AINVNO.EQ.']]]DEL') GO TO CLCLP
	IF (AFLAG.EQ.6.OR.AFLAG.EQ.7.OR.AFLAG.EQ.-1) PRTFLG = 1
	IF (AFLAG.EQ.8.OR.AFLAG.EQ.9) BALANC = BALANC + AINVAM
	GO TO CLCLP
ENDCLC,
	BSMID = SVBSMD
	LOKCTL = 1
	XCALL IO (7,APOPEN,BSMID,READ,LOKCTL)
	RETURN
INVALD,
	XCALL MESAG ('TOTAL NON-ZERO',1)
	IF (N.GE.10) GO TO CLRDTA
	GO TO VOUCHR
PROCES,
	IF (TOTAMT.NE.0) GOTO INVALD
	XCALL WATE (3,V)
	N = 1
ADD,
	IF (N.GE.11) GOTO DELAPO
	IF (RCRD(N).EQ.0) GOTO DELAPO
	BSMID = RCRD (N)
	LOKCTL = 1
	XCALL IO (7,APOPEN,BSMID,READ,LOKCTL)
	PVENNO = AVENNO
	PVCHNO = AVCHNO
	PINVNO = AINVNO
	PINVDT = AINVDT
	PINVAM = AINVAM
	PDSCAM = ADSCAM
	PDUDTE = ADUEDT
	INCR REC095
	LOKCTL = 1
	XCALL IOS (9,PURGAP,WRITE,LOKCTL)
	INCR N
	GOTO ADD
DELAPO,
	N = 1
FLGDEL,
	IF (N.GE.11) GOTO DONE
	IF(RCRD(N).EQ.0) GOTO DONE
	BSMID = RCRD (N)
	LOKCTL = 1
	XCALL IO (7,APOPEN,BSMID,READ,LOKCTL)
	AFLAG = -9
	LOKCTL = 1
	XCALL IO (7,APOPEN,BSMID,WRITE,LOKCTL)
	CALL FLGPRT
	INCR N
	GOTO FLGDEL
DONE,
	GO TO CLRDTA
FLGPRT,
	KEY = APOPEN (1,10)
	INCR BSMID
	LOKCTL = 1
	XCALL IO (7,APOPEN,BSMID,READ,LOKCTL)
	IF (APOPEN(1,10).NE.KEY) RETURN
	AFLAG = -9
	LOKCTL = 1
	XCALL IO (7,APOPEN,BSMID,WRITE,LOKCTL)
	GO TO FLGPRT
ENDOFF,
	XCALL WATE(3,V)
	IF (REC095.LE.1) GO TO END2
	LOKCTL = 1

	XCALL FILL (']', PURGAP)
	XCALL IOS (9,PURGAP,WRITE,LOKCTL)
;;;	XCALL IOS (9,BRACKS,WRITE,LOKCTL)

	CLOSE 9
	XCALL WATE(3,V)
	XCALL FILES(9,'U',95,5)
	LOKCTL = 1
	XCALL IO (9,DUMPRG,1,WRITE,LOKCTL)
	CALL CLOSE2				;AP28
	CLOSE 9
	XCALL PGCHN('AP:PRGRPT',1)
END2,
	XCALL MESAG('NOTHING PURGED',2)
	CALL CLOSE2
	XCALL FILES(9,'O',95,7)
EXIT,
	XCALL PGCHN('AP:APMENU',1)
CLOSES,
	CLOSE 9
	CLOSE 1					;AP28
CLOSE2,
	XCALL WATE(3,V)
	XCALL FILES (2,'I',12,4)
CLOSE1,
	XCALL FILES(7,'U',17,4)
	RETURN
INPUT,
	XCALL INPUT(ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
DSPDTE,
	XCALL DATE8(DECMAL(1,8), D_OUT, D_OUTR, D_FMT, D_SW)
	XCALL OUTPT (ROW, COL, 0, D_FMT, V)
	RETURN
;;;	OPTION = 2
;;;	GOTO CALDSP
DSPDLR,
	OPTION = 3
CALDSP,
	XCALL DSPLY(MAX,ROW,COL,DECMAL,OPTION,V)
	RETURN
END
