; DUEDIS / AP 
;
;		PGM TO PERMIT CHANGE OF DUE DATE OF AP OPEN ITEMS
;
;

RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR


RECORD APOPEN	
		.INCLUDE 'DEF:RD017A.DEF'
RECORD	,X	
		.INCLUDE 'DEF:RD017B.DEF'
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD
	AMTREM	,D8
	BLANKS	,A8
	OPTION	,D1
	ENTRY	,A30
	INXCTL  ,D1
	CNGCTL	,D1
	LOKCTL	,D1
	READ	,D1,	0
	WRITE	,D1,	1
	V	,D1,1
	WHATNO	,D2
	DECMAL	,D18
	KEY   	,A10
	BSEND	,D5
	BSMID	,D5
	SRCCTL	,D1
	KVCHNO	,D6
	KVENNO	,A4
	NEWDIS	,D8
	NEWDSC	,D8
	NEWDUE	,D8
	NEWIND	,D8
	NEWINV	,A8
	SWITCH	,D1,1
PROC
	XCALL TERID (V)
	V = 1
	XCALL FILES(7,'U',17,SWITCH)		;FILE # 17 --APOPEN FILE
	IF (SWITCH.EQ.9) GO TO EXIT
	XCALL FILES(10,'I',17,5)
	LOKCTL = 1
	XCALL IO (10,APOPEN,1,READ,LOKCTL)
	BSEND = ORG017
	XCALL OUTPT(1,1,2,'CHANGE A/P OPEN ITEM DATA',V)
	XCALL OUTPT(6,20,0,'PLEASE ENTER VENDOR #',V)
	XCALL OUTPT(8,20,0,'PLEASE ENTER VOUCHER #',V)
VENDNO,
	CTL = '06,47,04,01,AE'
	CALL INPUT
	GO TO (CLRDTA,ENDOFF), INXCTL
	XCALL FRMAT (ENTRY(1,4),4)
	KVENNO = ENTRY(1,4)
	XCALL OUTPT (6,47,0,ENTRY(1,4),V)
CONT,
	CTL = '08,47,06,01,# '
	CALL INPUT
	GO TO (CLRDTA), INXCTL
	KVCHNO = ENTRY(1,6)
	GO TO PROCES
CLRDTA,
	UNLOCK 7
	XCALL OUTPT(8,47,2,'\',V)
;	XCALL OUTPT (27,65,-1,'CNTRL',V)		;AP27
;	XCALL OUTPT(0,0,1,'\',V)			;AP27
	XCALL OUTPT (6,47,1,'\',V)			;AP27
	GO TO VENDNO
PROCES,
	KEY(1,4) = KVENNO
	KEY(5,10) = KVCHNO,'XXXXXX'
	SRCCTL = 2
	XCALL SERCH (10,APOPEN,KEY,1,10,BSEND,BSMID,SRCCTL,1,32,37,0,0,0,0)
	GO TO (BACKUP), SRCCTL+1
	XCALL MESAG('VOUCHER NOT FOUND',1)
	GO TO CLRDTA
BACKUP,
	BSMID = BSMID - 1
	LOKCTL = 1
	XCALL IO (10,APOPEN,BSMID,READ,LOKCTL)
	IF (APOPEN(1,10).EQ.KEY) GO TO BACKUP
NXTREC,
	INCR BSMID
	LOKCTL = 1
	XCALL IO (10,APOPEN,BSMID,READ,LOKCTL)
	IF (APOPEN(1,10).NE.KEY) GO TO NOFIND
	IF (AINVNO.EQ.']]]DEL') GO TO NXTREC
	IF (AFLAG.EQ.2.OR.AFLAG.GE.6.OR.AFLAG.LT.0) GO TO NXTREC
LOKERR,
	LOKCTL = 0
	XCALL IO (7,APOPEN,BSMID,READ,LOKCTL)
	IF (LOKCTL.EQ.1) GO TO CLRDTA
	XCALL OUTPT(10,24,0,'1. INVOICE #',V)
	XCALL OUTPT(12,24,0,'2. INVOICE DATE',V)
	XCALL OUTPT(14,24,0,'3. INVOICE AMT',V)
	XCALL OUTPT (16,24,0,'4. DUE DATE',V)
	XCALL OUTPT (18,24,0,'5. DISCOUNT DATE',V)
	XCALL OUTPT (20,24,0,'6. DISCOUNT AMOUNT',V)
	XCALL OUTPT(10,47,0,AINVNO,V)
	CTL = '12,47'
	DECMAL(1,8) = AINVDT
	CALL DSPDTE
	CTL = '14,47,08'
	DECMAL = AINVAM
	CALL DSPDLR
	CTL = '16,47'
	DECMAL(1,8) = ADUEDT
	CALL DSPDTE
	CTL = '18,47'
	DECMAL(1,8) = ADISDT
	CALL DSPDTE
	CTL = '20,47,06'
	DECMAL = ADSCAM
	CALL DSPDLR
	XCALL OUTPT(14,62,0,'REM:',V)
	XCALL OUTPT(20,60,0,'TAKEN:',V)
	AMTREM = AINVAM - APAID
	IF (AINVAM.LE.0) GO TO RIGHT
	DECMAL = AMTREM
	CTL = '14,67,08'
	CALL DSPDLR
	DECMAL = ADSTKN
	CTL = '20,67,07'
	CALL DSPDLR
RIGHT,
	XCALL OUTPT(24,1,0,'RIGHT VOUCHER ?',V)
	CTL = '24,18,01,00,YN'
	CALL INPUT
	GO TO (NXTREC), INXCTL-1
	NEWINV = AINVNO
	NEWIND = AINVDT
	NEWDUE = ADUEDT
	NEWDIS = ADISDT
	NEWDSC = ADSCAM
	GO TO ANYCNG
CNGINV,
	CTL = '10,47,08,00,A '
	CALL INPUT
	GO TO (CLRDTA), INXCTL
	NEWINV = ENTRY
	IF (NEWINV.EQ.BLANKS) NEWINV = AINVNO
	XCALL OUTPT(10,47,0,NEWINV,V)
	GO TO ANYCNG
CNGIND,
	CTL = '12,47,08,00,D '
	CALL INPUT
	GO TO (CLRDTA), INXCTL
	NEWIND = ENTRY (1,8)
	IF (NEWIND.EQ.0) NEWIND = AINVDT
	DECMAL (1,8) = NEWIND
	CALL DSPDTE
	GO TO ANYCNG
CNGDUE,
	CTL = '16,47,08,00,D '
	CALL INPUT
	GO TO (CLRDTA), INXCTL
	NEWDUE = ENTRY(1,8)
	IF (ENTRY.EQ.BLANKS) NEWDUE = ADUEDT
	DECMAL(1,8) = NEWDUE
	CALL DSPDTE
	GO TO ANYCNG
CNGDIS,
	CTL = '18,47,08,00,D '
	CALL INPUT
	GO TO (CLRDTA), INXCTL
	NEWDIS = ENTRY(1,8)
	IF (ENTRY.EQ.BLANKS) NEWDIS = ADISDT
	DECMAL(1,8) = NEWDIS
	CALL DSPDTE
	GO TO ANYCNG
CNGDSC,
	CTL = '20,47,06,00,$-'
	CALL INPUT
	GO TO (CLRDTA), INXCTL
	NEWDSC = ENTRY (1,6)
	IF (ENTRY.EQ.BLANKS) NEWDSC = ADSCAM
	DECMAL = NEWDSC
	CALL DSPDLR
	IF (NEWDSC.GT.AMTREM.AND.AINVAM.GT.0) GO TO CNGDSC
	IF (NEWDSC.LT.ADSTKN.AND.ADSTKN.GT.0) GO TO CNGDSC
	IF (NEWDSC.LT.0.AND.AINVAM.GT.0) GO TO CNGDSC
	IF (NEWDSC.GT.0.AND.AINVAM.LT.0) GO TO CNGDSC
	IF (NEWDSC.LT.AINVAM.AND.AINVAM.LT.0) GO TO CNGDSC
	GO TO ANYCNG
NOFIND,
	XCALL MESAG ('VOUCHER NOT FOUND',1)
	GO TO CLRDTA
DELNEW,
	XCALL OUTPT(14,63,1,'\',V)
	GO TO CNGDUE
WRTEAP,
	AINVNO = NEWINV
	AINVDT = NEWIND
	ADUEDT = NEWDUE
	ADISDT = NEWDIS
	ADSCAM = NEWDSC
	LOKCTL = 1
	XCALL IO (7,APOPEN,BSMID,WRITE,LOKCTL)
	GO TO CLRDTA
ENDOFF,
	XCALL FILES(7,'U',17,4)
EXIT,
	XCALL WATE(3,V)
	XCALL PGCHN('AP:APMENU',1)
INPUT,
	XCALL INPUT(ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
CNGBR,
	GO TO (CNGINV,CNGIND,BADCNG,CNGDUE,CNGDIS,CNGDSC), WHATNO
BADCNG,
	CNGCTL = 3
ANYCNG,
	XCALL ANYCN(CNGCTL,WHATNO)
	GO TO (WRTEAP,CNGBR,CNGBR), CNGCTL+1
DSPDTE,
	XCALL DATE8(DECMAL(1,8), D_OUT, D_OUTR, D_FMT, D_SW)
	XCALL OUTPT (ROW, COL, 0, D_FMT, V)
	RETURN
;;;	OPTION = 2
;;;	GO TO CALDSP
DSPDLR,
	OPTION = 3
CALDSP,
	XCALL DSPLY(MAX,ROW,COL,DECMAL,OPTION,V)
	RETURN
END
