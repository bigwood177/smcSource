; CHKPRP / AP 
;
;
;		PREPARATION PROGRAM FOR POSTING CHECKS
;
;

RECORD VENMAS	
		.INCLUDE 'DEF:RD011A.DEF'
RECORD,X	
		.INCLUDE 'DEF:RD011B.DEF'

;;;RECORD VENIDX	
;;;		.INCLUDE 'DEF:RD012A.DEF'

RECORD APOPEN	
		.INCLUDE 'DEF:RD017A.DEF'
RECORD NEWAPD	
		.INCLUDE 'DEF:RD015A.DEF'
RECORD	,X	
		.INCLUDE 'DEF:RD015B.DEF'
RECORD	,X
		,A5
	PRGNAM	,A6
RECORD APCHEK	
		.INCLUDE 'DEF:RD020A.DEF'
RECORD DUMCHK	
		.INCLUDE 'DEF:RD020B.DEF'
RECORD APDIST	
		.INCLUDE 'DEF:RD016B.DEF'
RECORD DUMAPO
		.INCLUDE 'DEF:RD017B.DEF'
RECORD,X
		.INCLUDE 'DEF:RD017E.DEF'
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;		,A10
;;;	DAPACT	,D7
;;;	DCSACT	,D7
;;;	DDSACT	,D7
;;;		,A22
;;;	CHEKNO	,D6
;;;	STRVEN	,A4
;;;	ENDVEN	,A4
;;;	CUTDTE	,D6
;;;	CHKDTE	,D6
;;;		,A26
;;;	REC017	,D5
;;;		,A8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
RECORD
		.INCLUDE 'DEF:RD015S.DEF'
RECORD SNDMSG
		,A9,'AP:CHKREG'
	RCNT	,D5

RECORD	VARS
	ALPHA	,A6
	APCNT	,D5
;;;	BRACKS	,A35,']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
	BSEND	,D5
	BSMID	,D5
	CHKCNT	,D5,00001
	CHKDT2	,D8
	DSCREM	,D7
	DUEDT2	,D8
	INVREM	,D8
	KEY	,A4
	LOCKSW	,D1
	MSGCTL	,D1
	NEWREC	,D5
	RECNO	,D5
	SAVVEN	,A4
	SRCCTL	,D1
	SYSTEM	,D1
	LOKCTL	,D1
	READ	,D1,	0
	WRITE	,D1,	1
	V	,D1,1
	SIZE    ,D5
	SWITCH  ,D1
PROC
	XCALL TERID (V)
	XCALL ENVRN(SYSTEM)
	XCALL OUTPT(1,1,1,'PRINT A/P CHECKS',V)
	V = 1
	XCALL MOUNT('REGULAR PAPER','PRINTER')
	XCALL WATE(4,V)
	XCALL OUTPT(2,1,0,'CHECK POSTING PREPARATION',1)
	XCALL FILES(7,'U',17,5)			;APOPEN FILE

;;;	XCALL FILES(2,'I',12,5)			;VENIDX FILE

	XCALL FILES(1,'SU',11,5)			;VENMAS FILE
	XCALL FILES(6,'I',16,5)			;APDIST FILE
	XCALL FILES(9,'U',20,5)			;APCHEK FILE
	LOKCTL = 1
	XCALL IO (7,DUMAPO,1,READ,LOKCTL)
	SWITCH = 5
	XCALL FILES (5,'O',15,SWITCH)		;SSQ 1-27-99
	IF (SWITCH .EQ. 9) GO TO NPDERR		;SSQ 1-27-99
;;;	IF (SWITCH) GO TO NPDERR

	LOKCTL = 1
	XCALL IOS (5,NEWAPD,WRITE,LOKCTL)
	LOCKSW = 1
RDERR1,
;;;	LOKCTL = 0
;;;	XCALL IO (1,VENMAS,1,READ,LOKCTL)
;;;	IF (LOKCTL.EQ.1) GO TO LOCKED
;;;	UNLOCK 1
;;;	BSEND = ORG011

;
; ***************** INSERT ACTUAL DISCOUNT TAKEN, AND CHECK DATE ****************
;
	APCNT = 2
READ,
	LOKCTL = 1
	XCALL IO (7,APOPEN,APCNT,READ,LOKCTL)
	INCR APCNT
	IF (AINVNO.EQ.']]]]]]') GOTO NEXT
	IF (AINVNO.EQ.']]]DEL') GOTO READ
	IF (DAPACT.GT.0.AND.AAPACT.NE.DAPACT) GO TO READ
	DSCREM = ADSCAM - ADSTKN
	GO TO (READ,READ,WRITE), AFLAG
	IF (AFLAG.NE.7) GOTO READ
WRITE,
	IF (AFLAG.EQ.7) GOTO PARTPY
;;;	DUEDT2(1,2) = ADISDT(5,6)
;;;	DUEDT2(3,6) = ADISDT(1,4)
;;;	IF (CHKDT2.GT.DUEDT2) DSCREM =		;DSCREM = ACTUAL DISCOUNT TAKEN
	IF (CHKDTE .GT. ADISDT) DSCREM =

PARTPY,
	ADUEDT = CHKDTE		;DON'T WRITE OVER DUE-DATE UNTIL CHECK IS OK
	ADSCAM = DSCREM
	LOKCTL = 1
	APCNT = APCNT - 1
	XCALL IO (7,APOPEN,APCNT,WRITE,LOKCTL)
	INCR APCNT
	GO TO READ
NEXT,
	LOKCTL = 1
	XCALL IO (9,DUMCHK,1,READ,LOKCTL)
;
; ***************** COUNT THE NUMBER OF APCHEK RECORDS TO CREATE *****************
; ************** AND CREATE THE NEW G/L DISTRIBUTIONS IN "NEWAPD" *************
;
	RECNO = 1
NEXT2,
	INCR RECNO
	LOKCTL = 1
	XCALL IO (7,APOPEN,RECNO,READ,LOKCTL)
	IF (APOPEN.EQ.']]]]]]') GO TO EOFAP1
	IF (AINVNO.EQ.']]]DEL') GOTO NEXT2
	CALL TSTCHK
	IF (AFLAG.EQ.-3.OR.AFLAG.EQ.-2.OR.AFLAG.EQ.2) GO TO NEXT2
	IF (DAPACT.GT.0.AND.AAPACT.NE.DAPACT) GO TO NEXT2
	IF (AFLAG.EQ.3.OR.AFLAG.EQ.7) CALL DISTRB
	GO TO NEXT2
TSTCHK,
	IF (AFLAG.EQ.-2.OR.AFLAG.EQ.-3.OR.AFLAG.EQ.-4) INCR CHKCNT
	IF (AFLAG.EQ.2.OR.AFLAG.EQ.3) INCR CHKCNT
	IF (AFLAG.EQ.7) INCR CHKCNT
	RETURN
DISTRB,
	NEWAPD =
	INVREM = AINVAM - APAID
	NVCHNO = AVCHNO
	NVENNO = AVENNO
	NTYPE = 2
	NDATE = ADUEDT
	NACCT = ACSACT
	NTRXAM = (INVREM-ADSCAM)
	CALL WRITED
	NTYPE = 3
	NACCT = ADSACT
	NTRXAM = ADSCAM
	CALL WRITED
	NTYPE = 4
	NTRXAM = INVREM
	NACCT = AAPACT
	CALL WRITED
	RETURN
WRITED,
	IF (NTRXAM.EQ.0) RETURN
	INCR NEWREC
	LOKCTL = 0
	XCALL IOS (5,NEWAPD,WRITE,LOKCTL)
	IF (LOKCTL.EQ.3) GO TO NPDERR
	RETURN
MESSGE,
	XCALL OUTPT(07,11,0,'This file must be immediately expanded to the requ
&ired minimum',V)
	XCALL OUTPT(08,11,0,'size or greater. The file expansion should be hand
&led by the',V)
	XCALL OUTPT(09,11,0,'system manager.',V)
	XCALL OUTPT(11,11,0,'Do not run any other application programs from thi
&s terminal until',V)
	XCALL OUTPT(12,11,0,'the above procedure has been completed!',V)
	RETURN
NPDERR,
	XCALL OUTPT(05,23,2,'NOT ENOUGH ROOM FOR "NEWAPD" FILE',1)
	XCALL OUTPT(07,11,0,'More contiguous disk space must be made available
& on the device.',V)
	XCALL OUTPT(08,11,0,'This disk space situation should be handled by the
& system manager.',V)
	XCALL OUTPT(10,11,0,'Do not run any other application programs from thi
&s terminal until',V)
	XCALL OUTPT(11,11,0,'the above procedure has been completed!',V)
IMMED,
	XCALL MESAG('SEE "CHECK POSTING" INSTRUCTIONS FOR COMPLETE INFORMATON',1)
	XCALL PGMND

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;APDERR,
;;;	CLOSE 7
;;;	XCALL OUTPT(04,18,2,'THE "APDIST" FILE MUST BE EXPANDED TO ',V)
;;;	ALPHA = REC016 + NEWREC, 'ZZ,ZZX'
;;;	XCALL OUTPT(0,0,0,ALPHA,V)
;;;	XCALL OUTPT(05,18,0,'RECORDS BEFORE POSTING CAN BEGIN.',V)
;;;	CALL MESSGE
;;;	GO TO IMMED
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

CHKERR,
	CLOSE 7
	XCALL OUTPT(04,18,2,'THE "APCHEK" FILE MUST BE EXPANDED TO ',V)
	ALPHA = CHKCNT + 1, 'ZZ,ZZX'
	XCALL OUTPT(0,0,0,ALPHA,V)
	XCALL OUTPT(05,18,0,'RECORDS BEFORE POSTING CAN BEGIN.',V)
	CALL MESSGE
	GO TO IMMED
LOCKED,
	XCALL MESAG('HAVE TERMINALS USING VENDOR MASTER FILE END OFF',2)
	GO TO (RDERR1,RDERR2), LOCKSW
EOFAP1,
	LOKCTL = 0
	XCALL FILL (']', NEWAPD)
	XCALL IOS (5,NEWAPD,WRITE,LOKCTL)
;;;	XCALL IOS (5,BRACKS,WRITE,LOKCTL)

	IF (LOKCTL.EQ.3) GO TO NPDERR
	CLOSE 5
;;;	IF (REC020+CHKCNT.GT.MAX020) GO TO CHKERR
	XCALL FILES (5,'U',15,5)
	LOKCTL = 1
	XCALL IO (5,NEWAPD,1,READ,LOKCTL)
	REC015 = NEWREC + 1
	PRGNAM = 'FLGPDS'
	LOKCTL = 1
	XCALL IO (5,NEWAPD,1,WRITE,LOKCTL)
	CLOSE 5
;;;	LOKCTL = 1
;;;	XCALL IO (6,APDIST,1,READ,LOKCTL)
;;;	IF (REC016+NEWREC.GT.MAX016) GO TO APDERR
;
; ********************* CREATE THE APCHEK RECORDS ***********************************
;
	REC020 = 1
	RECNO = 1
READ2,
	INCR RECNO
	LOKCTL = 1
	XCALL IO (7,APOPEN,RECNO,READ,LOKCTL)
	IF (APOPEN.EQ.']]]]]]') GO TO EOFAP2
	IF (AINVNO.EQ.']]]DEL') GOTO READ2
	IF (AFLAG.EQ.-9.OR.AFLAG.EQ.-1.OR.AFLAG.EQ.0) GO TO READ2
	IF (AFLAG.EQ.1.OR.AFLAG.EQ.4.OR.AFLAG.EQ.5) GO TO READ2
	IF (AFLAG.EQ.6.OR.AFLAG.EQ.8.OR.AFLAG.EQ.9) GO TO READ2
	IF (DAPACT.LE.0) GO TO SKPTST
	IF ((AFLAG.EQ.3.OR.AFLAG.EQ.7).AND.AAPACT.NE.DAPACT) GO TO READ2
SKPTST,
	INVREM = AINVAM - APAID
	CALL UPDVEN
	CALL MAKCHK
	GO TO READ2
EOFAP2,
	ACCHDT = CHKDTE
	ACAPAC = DAPACT
	ACCSAC = DCSACT
	ACDSAC = DDSACT

	IF (REC020 .GE. MAX020)
		BEGIN
		XCALL FILL (']', APCHEK)
		MAX020 = REC020 + 1
		XCALL IO (9, APCHEK, MAX020, WRITE, LOKCTL)
		END

	LOKCTL = 1
	XCALL IO (9,DUMCHK,1,WRITE,LOKCTL)
	CLOSE 1
	CLOSE 7
	CLOSE 9
	XCALL FILES(2,'I',12,4)
	RCNT = REC020
;;;	MSGCTL = 5
;;;	XCALL SNMSG (SNDMSG,MSGCTL)
	XCALL PGCHN('AP:STAPCH',0)
UPDVEN,
	IF (SAVVEN.EQ.AVENNO) GO TO SKIP
	SAVVEN = AVENNO

	SRCCTL = 1
	FIND (1, VENMAS, AVENNO) [ERR=SKIP]
	SRCCTL = 0

;;;	KEY = AVENNO
;;;	XCALL SERCH(2,VENIDX,KEY,1,4,BSEND,BSMID,SRCCTL,4,6,10,0,0,0,0)
SKIP,
	IF (SRCCTL.EQ.1) GO TO NOVEN
RDERR2,
	LOKCTL = 0
	XCALL ISIO (1,VENMAS,AVENNO,READ,LOKCTL)
	IF (LOKCTL.EQ.1) GO TO LOCKED
	IF (AFLAG.NE.3.AND.AFLAG.NE.7) GO TO NOWRT
	PAYMTD = PAYMTD + (INVREM-ADSCAM)
	PAYYTD = PAYYTD + (INVREM-ADSCAM)
	PAYCAL = PAYCAL + (INVREM-ADSCAM)
	LOKCTL = 1
	XCALL ISIO (1,VENMAS,AVENNO,WRITE,LOKCTL)
NOWRT,
	UNLOCK 1
	RETURN
NOVEN,
	NAME = '** VENDOR NOT ON FILE **'
	RETURN
MAKCHK,
	CCHKNO = ACHKNO
	CVCHNO = AVCHNO
	CCHKDT = ADUEDT
	CVENNO = AVENNO
	CNAME = NAME
	CINVNO = AINVNO
	CINVDT = AINVDT
	CINVAM = INVREM
	IF (AFLAG.EQ.-3) CINVAM = APAID
	CDSCAM = ADSCAM
	CCSHAC = ACSACT
	IF (AFLAG.EQ.3.OR.AFLAG.EQ.7) CCHKTP = 1
	IF (AFLAG.EQ.2) CCHKTP = 2
	IF (AFLAG.EQ.-2) CCHKTP = 3
	IF (AFLAG.EQ.-3.OR.AFLAG.EQ.-4) CCHKTP = 4
	CPRTFL =
	IF (AFLAG.EQ.7.OR.AFLAG.EQ.-4) CPRTFL = 1
	INCR REC020
	LOKCTL = 1
	XCALL IO (9,APCHEK,REC020,WRITE,LOKCTL)
	RETURN
END
