;  CSHPRP / AR 
;
; 10-01-09 ssq: remove calamt calact
; 8-22-18 ssq: make aropen isam


RECORD CASH		; 
		.INCLUDE 'DEF:RD006A.DEF'
RECORD CSHCTL		; 
		.INCLUDE 'DEF:RD006B.DEF'
RECORD SLSDST		; 
		.INCLUDE 'DEF:RD005A.DEF'
RECORD SDSCTL		; 
		.INCLUDE 'DEF:RD005B.DEF'
RECORD AROCTL		; 
		.INCLUDE 'DEF:RD003B.DEF'
RECORD ADSCTL		; 
		.INCLUDE 'DEF:RD008B.DEF'
RECORD BRACKS		; 
		.INCLUDE 'DEF:RD005C.DEF'
;;;RECORD CSECTL		;
;;;		.INCLUDE 'DEF:RD135B.DEF'
RECORD
	ADSFIL	,D1
	ADSOVF	,D5
	ALPHA	,A5
	AROFIL	,D1
	AROOVF	,D5
	DSTCNT	,D5
	DSTFLG	,D1
	SAVCUS	,D6
	SAVCHK	,D6
	SVCSHA	,D7
	SVARAC	,D7
	SAVAR	,A1
	CHKCSH	,D8
	ARCASH	,D8
	NO	,D1,	0
	REDFIL	,A14
	ROW	,D2
	ROW2	,D2
	SDSFIL	,D1
	SDSOVF	,D5
	SWITCH	,D1
	CSHCNT	,D5
	V	,D1
	YES	,D1,	1
	READ	,D1,	0
	WRITE	,D1,	1
	LOKCTL	,D1
;;;	CSEOVF	,D5
;;;	CSEFIL	,D1
PROC
	XCALL TERID (V)
	XCALL OUTPT (2,1,1,'POSTING PREPARATION',1)
	V = 1

;;;	SWITCH = 5
;;;	XCALL FILES (3,'I',03,SWITCH)		;FILE # 03 -- AROPEN FILE
;;;	IF (SWITCH.EQ.9) GO TO NOTFND

	SWITCH = 5
	XCALL FILES (6,'U',06,SWITCH)		;FILE # 06 -- CASH00 FILE
	IF (SWITCH.EQ.9) GO TO NOTFND
	SWITCH = 5
	XCALL FILES (5,'U',05,SWITCH)		;FILE # 05 -- SLSDST FILE
	IF (SWITCH.EQ.9) GO TO NOTFND
	SWITCH = 5
	XCALL FILES (8,'I',08,SWITCH)		;FILE # 08 -- ARDIST FILE
	IF (SWITCH.EQ.9) GO TO NOTFND
;;;	SWITCH = 5
;;;	XCALL FILES (4,'I',135,SWITCH)		;FILE # 04 -- CSEMAS FILE
;;;	IF (SWITCH.EQ.9) GO TO NOTFND
	LOKCTL = 1
	XCALL IO (6,CSHCTL,1,READ,LOKCTL)
	ORG006 = REC006
	LOKCTL = 1
	XCALL IO (6,CSHCTL,1,WRITE,LOKCTL)
	IF (CDETDS.EQ.'Y') DSTFLG = YES
	CSHCNT = 0
	DSTCNT = 0
	CLOSE 6
	XCALL FILES (6,'I',06,5)
	LOKCTL = 1
	XCALL IOS (6,CASH,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO CHKFIL
RDNEXT,
	LOKCTL = 1
	XCALL IOS (6,CASH,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO CHKFIL
	IF (CNAME.EQ.']]]]]]') GO TO CHKFIL
	IF (CNAME.EQ.'000000') GO TO RDNEXT
	IF (DSTFLG.EQ.NO) GO TO SKPDST
	IF (CCUSNO.NE.SAVCUS .OR. CCHKNO.NE.SAVCHK .OR.
&	    CSHACT.NE.SVCSHA .OR. CARACT.NE.SVARAC) CALL NXTCHK
	CHKCSH = CHKCSH + CAMRCD

	ARCASH = ARCASH + CAMRCD + CDISAL ;;;>+ CALAMT
	IF (CDISAL.NE.0) INCR DSTCNT
;;;	IF (CALAMT.NE.0) INCR DSTCNT
SKPDST,
	IF (CARCSH.EQ.'N') GO TO RDNEXT
	INCR CSHCNT
	GO TO RDNEXT
CHKFIL,
	AROFIL = NO
;;;	CSEFIL = NO
	SDSFIL = NO
	ADSFIL = NO

;;;	LOKCTL = 1
;;;	XCALL IO (3,AROCTL,1,READ,LOKCTL)
;;;	AROOVF = (REC003+CSHCNT) - MAX003
;;;	IF (AROOVF.GT.0) AROFIL = YES

;;;	LOKCTL = 1
;;;	XCALL IO (4,CSECTL,1,READ,LOKCTL)
;;;	CSEOVF = (REC135+CSHCNT) - MAX135
;;;	IF (CSEOVF.GT.0) CSEFIL = YES

CHKFL2,
	IF (DSTFLG) CALL CHKDST
;;;	IF (AROFIL.OR.SDSFIL.OR.ADSFIL.OR.CSEFIL) GO TO NOPOST
	IF (AROFIL.OR.SDSFIL.OR.ADSFIL) GO TO NOPOST		;;;
	IF (DSTFLG.EQ.NO) GO TO ENDPRP
	LOKCTL = 1
	XCALL IO (5,SDSCTL,1,READ,LOKCTL)
	REC005 = 1
	LOKCTL = 1
	XCALL IO (6,CSHCTL,1,READ,LOKCTL)
	SAVCUS =
MAKDST,
	LOKCTL = 1
	XCALL IOS (6,CASH,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO ENDPRP
	IF (CNAME.EQ.']]]]]]') GO TO ENDPRP
	IF (CNAME.EQ.'000000') GO TO MAKDST
	IF (CCUSNO.NE.SAVCUS .OR. CCHKNO.NE.SAVCHK .OR.
&	    CSHACT.NE.SVCSHA .OR. CARACT.NE.SVARAC) CALL NXTCH2
	CHKCSH = CHKCSH + CAMRCD
	ARCASH = ARCASH + CAMRCD + CDISAL ;;;>+ CALAMT
	SDSTYP = 7
MAKDS2,
	IF (CDISAL.EQ.0) GO TO MAKDS3
	SDSACT = CDSACT
	SDSAMT = CDISAL
	CALL WRTDST
MAKDS3,
;;;	IF (CALAMT.EQ.0) GO TO MAKDST
;;;	SDSACT = CALACT
;;;	SDSAMT = CALAMT
;;;	CALL WRTDST
	GO TO MAKDST
NXTCHK,
	IF (SAVCUS.EQ.0) GO TO FSTCHK
	IF (CHKCSH.NE.0) INCR DSTCNT
	IF (ARCASH.NE.0) INCR DSTCNT
FSTCHK,
	SAVCUS = CCUSNO
	SAVCHK = CCHKNO
	SAVAR = CARCSH
	SVCSHA = CSHACT
	SVARAC = CARACT
	CHKCSH =
	ARCASH =
	RETURN
NXTCH2,
	IF (SAVCUS.EQ.0) GO TO FSTCH2
	IF (CHKCSH.EQ.0) GO TO NXTCH3
	SDSTYP = 6
	SDSAMT = CHKCSH
	SDSACT = SVCSHA
	CALL WRTDST
NXTCH3,
	IF (ARCASH.EQ.0) GO TO FSTCH2
	SDSTYP = 8
	IF (SAVAR.EQ.'N') SDSTYP = 9
	SDSAMT = ARCASH
	SDSACT = SVARAC
	CALL WRTDST
FSTCH2,
	CALL MOVE
	SAVCUS = CCUSNO
	SAVCHK = CCHKNO
	SAVAR = CARCSH
	SVCSHA = CSHACT
	SVARAC = CARACT
	CHKCSH =
	ARCASH =
	RETURN
CHKDST,
	LOKCTL = 1
	XCALL IO (8,ADSCTL,1,READ,LOKCTL)
	ADSOVF = (REC008+DSTCNT) - MAX008
	IF (ADSOVF.GT.0) ADSFIL = YES
	LOKCTL = 1
	XCALL IO (5,SDSCTL,1,READ,LOKCTL)
	SDSOVF = DSTCNT - MAX005
	IF (SDSOVF.GT.0) SDSFIL = YES
	RETURN
MOVE,
	SDSDAT = CRCTDT
	SDSCUS = CCUSNO
	SDSDOC = CCHKNO
	RETURN
WRTDST,
	INCR REC005
	LOKCTL = 1
	XCALL IO (5,SLSDST,REC005,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IO (5,SDSCTL,1,WRITE,LOKCTL)
	RETURN
NOPOST,
	XCALL OUTPT (2,1,2,'\',V)
	XCALL OUTPT (6,21,0,'THE CASH TRX CANNOT BE POSTED BECAUSE THE',V)
	XCALL OUTPT (7,21,0,'FOLLOWING FILE(S) DO NOT HAVE ENOUGH ROOM:',V)
	XCALL OUTPT (11,30,0,'FILE      EXTRA ROOM NEEDED',V)
	XCALL OUTPT (12,30,0,'----      ---------- ------',V)
	ROW = 0
;;;	IF (CSEFIL) CALL DSPCSE
	IF (AROFIL) CALL DSPARO
	IF (SDSFIL) CALL DSPSDS
	IF (ADSFIL) CALL DSPADS
	XCALL OUTPT (18,6,0,'Please run "EXPAND" from the SYSTEM FUNCTIONS MENU to enlarge the files',V)
	XCALL MESAG (' ',2)
NOTFND,
	XCALL FILES (1,'U',01,4)
;;;	XCALL FILES (2,'I',02,4)
;;;	XCALL FILES (3,'I',03,4)
	XCALL FILES (5,'U',05,4)
	XCALL FILES (6,'I',06,4)
	XCALL FILES (7,'I',07,4)
	XCALL FILES (8,'I',08,4)
	XCALL PGCHN ('AR:CSHENT',1)
DSPARO,
	ROW2 = ROW + 14
	XCALL FFILE (3,REDFIL,NO)
	XCALL OUTPT (ROW2,16,0,'A/R Open Item',V)
	XCALL OUTPT (ROW2,35,0,REDFIL(5,14),V)
	ALPHA = AROOVF
	XCALL OUTPT (ROW2,45,0,ALPHA,V)
	XCALL OUTPT (0,0,0,' RECORDS',V)
	INCR ROW
	RETURN
;;;DSPCSE,
;;;	ROW2 = ROW + 14
;;;	XCALL FFILE (135,REDFIL,NO)
;;;	XCALL OUTPT (ROW2,16,0,'E-Cust files',V)
;;;	XCALL OUTPT (ROW2,35,0,REDFIL(5,14),V)
;;;	ALPHA = CSEOVF
;;;	XCALL OUTPT (ROW2,45,0,ALPHA,V)
;;;	XCALL OUTPT (0,0,0,' RECORDS',V)
;;;	INCR ROW
;;;	RETURN
DSPSDS,
	ROW2 = ROW + 14
	XCALL FFILE (5,REDFIL,NO)
	XCALL OUTPT (ROW2,16,0,'Sales Distribution',V)
	XCALL OUTPT (ROW2,35,0,REDFIL(5,14),V)
	ALPHA = SDSOVF
	XCALL OUTPT (ROW2,45,0,ALPHA,V)
	XCALL OUTPT (0,0,0,' RECORDS',V)
	INCR ROW
	RETURN
DSPADS,
	ROW2 = ROW + 14
	XCALL FFILE (8,REDFIL,NO)
	XCALL OUTPT (ROW2,16,0,'A/R Distribtion',V)
	XCALL OUTPT (ROW2,35,0,REDFIL(5,14),V)
	ALPHA = ADSOVF
	XCALL OUTPT (ROW2,45,0,ALPHA,V)
	XCALL OUTPT (0,0,0,' RECORDS',V)
	INCR ROW
	RETURN
ENDPRP,
	IF (DSTFLG.EQ.NO) GO TO END
	CALL NXTCH2
	INCR REC005
	LOKCTL = 1
	XCALL IO (5,BRACKS,REC005,WRITE,LOKCTL)
END,
	CLOSE 3
	CLOSE 6
	CLOSE 5
	CLOSE 8
	XCALL PGCHN ('AR:CSHFCM',1)	;FREIGHT CLAIMS HISTORY
;;;	XCALL PGCHN ('AR:CSHJNL',1)
END
