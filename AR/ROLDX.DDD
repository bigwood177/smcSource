;cp:roldx.dbl is the current 6.3 version...
SUBROUTINE ROLDX	;
	N_CUST	,D		;CUSTOMER #
	N_TYPE	,D		;TYPE OF NOTES
	N_UPDT	,A		;ALLOW UPDATES 
	N_X	,D		;ROW
	N_Y	,D		;COL
	N_ROWS	,D		;MAX ROWS
	N_CMAS	,A		;CUSTOMER MASTER RECORD (OPTIONAL)

	.INCLUDE 'DEF:WINDOWS.DEF'

RECORD	FUNKEY
	.INCLUDE 'DEF:FUNKEY.DEF'

RECORD	ROLLDX
	.INCLUDE 'DEF:RD190A.DEF'

RECORD	CUSMAS
	.INCLUDE 'DEF:RD001A.DEF'

RECORD	RKEY
	R_CUST	,D6
	R_TYPE	,D2
	R_SEQ	,D4

RECORD	POPARA
	PARRY	,20A60		;FORMATTED DATA
	PRFA	,20A6		;CORRESPONDING KEYS
	NUMARA	,D3		;NUMBER OF ARRAY ELEMENTS USED
	MAXARA	,D3,20		;MAX # OF ARRAY ELEMENTS
	NUMROW	,D2		;NUMBER OF POP WINDOW ROWS TO USE
	WX	,D2		;X COORD (CENTER WINDOW IF ZERO)
	WY	,D2		;Y COORD (CENTER WINDOW IF ZERO)
	PLEN	,D3,060		;LENGHT OF DATA LINE
	DLINE	,A60		;WORKING VARIABLE FOR SINGLE DATA LINE
	PI	,D2		;ELEMENT SELECTED, 0 = ABORT


RECORD	WRKLIN
	ARO	,A1
		,A1
	REST	,A80

RECORD
	VALTYP	,5A8,	'PERSONAL','SHIPPING','GENERAL ','CREDIT  ','ALL     '
	SELTYP	,D2		;TYPE OF NOTES SELECTED
	MAXTYP	,D1,	5	;MAX NUMBER OF TYPES OF NOTES

RECORD	VARS
	LINE	,A60
	BLANKS	,A22
	TPHONE	,D10
	TFAX	,D10
	X_TYPE	,D2		;CONVERTED TYPE
	SWITCH	,D1
	ITEM_ADDED	,D1
	SAVCUS	,D6
	SAVTYP	,D2
	IDX	,D3
	ENTRY	,A60
	INXCTL	,D1
	CHAN	,D3
	STAT	,D1
	STAT_KEY	,D3
	TNMBR	,D3
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	DELETE	,D1,3
	LOKCTL	,D1
	WND_1	,D4		;WINDOW #
	W1_ID	,A8		;WINDOW ID
	W1_TITLE	,A20	;WINDOW TITLE
	W2_TITLE	,A20	;WINDOW TITLE
	R_ADD	,A75
	WND_2	,D4
	W2_ID	,A8
	DEC	,D6
	W_DEC	,D6
	ALPHA	,A3
	WHDR	,A80
	F_KEY	,D3
	I	,D5
	VAL	,D1
	WROW	,D2
	WCOL	,D2
	FIRST_ROW	,D2
	LAST_ROW	,D2
	SAVE_ROW	,D2
	X	,D2
	Y	,D2
	HT	,D2
	LN	,D2
	MAXROW	,D2
	WLEN	,D2
	TITLEN	,D2

PROC
	IF (%PASSED(N_CMAS) )
	THEN	BEGIN
		CUSMAS = N_CMAS
		WHDR (4,9) = 'PHONE:'
		WHDR (11,22) = EAPPHO,	'ZZZ-XXX-XXXX'
		WHDR (27,30) = 'FAX:'
		WHDR (32,43) = EFAX,	'ZZZ-XXX-XXXX'
		END
	ELSE	BEGIN
		CLEAR WHDR
		CLEAR CUSMAS
		END

	IF (N_TYPE .EQ. MAXTYP)
	THEN	X_TYPE = 0
	ELSE	X_TYPE = N_TYPE

	CLEAR WND_1
	CALL OPENS

	CALL GET_FIRST_DATA

	CALL INIT_WINDOW

	IF (NUMARA .EQ. 0) 
	   BEGIN
	   IF (X_TYPE.EQ.0)
	   THEN	BEGIN
		CALL INIT_W2
		XCALL WINPT(WND_2,1,1,60,00,'C ',ENTRY,INXCTL)
		CALL END_ITEM
		CLEAR ITEM_ADDED
		END
	   ELSE	CALL ADD_ITEM
	   IF (.NOT. ITEM_ADDED) GOTO EXIT_ROL
	   END

;====== MAIN PROCESSING =======================

REFRESH,	;GET A FRESH COPY OF DATA...
	CALL GET_FIRST_DATA
	IF (NUMARA .EQ. 0) GOTO EXIT_ROL

	XCALL W_PROC(WP_DELETE,WND_1)

NEWARA,
	CALL INIT_WINDOW

	CLEAR VAL
	CLEAR SAVE_ROW
	FIRST_ROW = 2
	WROW = 2
	IDX = 1
	CALL DSPLIN

DSPLOP,
	IF (SAVE_ROW .NE. 0)	CALL CLEAR_LAST_LINE

	WROW = WROW + VAL
	IF (WROW .GT. LAST_ROW) CALL SCROLL_DN
	IF (WROW .LT. FIRST_ROW) CALL SCROLL_UP

	IDX = IDX + VAL
	IF (IDX .LE. 0) IDX = 1
	IF (IDX .GT. NUMARA) IDX = NUMARA

	CALL DSPLIN
	CALL INPUT
	USING F_KEY SELECT
	(EXIT_KEY, F_11, END_KEY),	GOTO EXIT_ROL
	(UP_ARO),	BEGIN
			VAL = - 1
			GOTO DSPLOP
			END
	(DN_ARO),	BEGIN
			VAL =  1
			GOTO DSPLOP
			END
	(RGHT_ARO),	BEGIN
			CALL ITEM_SELECTED
			GOTO DSPLOP
			END
	(LEFT_ARO),	BEGIN
			CALL ITEM_SELECTED
			GOTO DSPLOP
			END
	(CR_KEY),	BEGIN
		;;;	GOTO REFRESH
			XCALL IOS (CHAN,ROLLDX,READ,LOKCTL)
			CALL FILL_ARA
			XCALL W_DISP (WND_1,WD_ATTR,ATTR_CLR)
			IF (NUMARA .EQ. 0) 
			THEN	GOTO REFRESH
			ELSE	GOTO NEWARA
			END

	(INS_KEY),		BEGIN		;^A = ADD
			CALL ADD_ITEM
			GOTO REFRESH
			END
	(DEL_KEY),		BEGIN		;^D = DELETE
			CALL DELETE_ITEM
			GOTO REFRESH
			END
;;;	(),		BEGIN		;^I, <TAB> = INSERT
;;;			CALL INSERT_ITEM
;;;			GOTO DSPLOP
;;;			END

	ENDUSING
	VAL = 0
	GOTO DSPLOP
	

EXIT_ROL,
	IF (WND_1)
		BEGIN
		XCALL W_DISP (WND_1,WD_ATTR,ATTR_CLR)
		XCALL W_UPDT
		XCALL W_PROC(WP_DELETE,WND_1)
		END
	CLOSE CHAN
	RETURN

DSPLIN,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; move arrow, highlight selected line
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	ARO = '>'
	REST = PARRY(IDX)
	XCALL W_DISP (WND_1,WD_ATTR,ATTR_SET+ATTR_RVRS)
	XCALL W_DISP (WND_1,WD_POS,WROW,1,WRKLIN(1,WLEN))
	XCALL W_DISP (WND_1,WD_POS,WROW,1)

	SAVE_ROW = WROW
	RETURN
;----------------------------------------------------------------------

CLEAR_LAST_LINE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
			;;; CLEAR HI-LITE ON PREV LINE
			;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR ARO
;;;	IF (IDX.GT.0)
;;;		BEGIN
;;;		PARRY(IDX) = REST(1,WLEN)
;;;		END
	XCALL W_DISP (WND_1,WD_ATTR,ATTR_CLR+ATTR_RVRS)
	XCALL W_DISP (WND_1,WD_POS,SAVE_ROW,1,WRKLIN(1,WLEN))
	RETURN
;----------------------------------------------------------------------
INPUT,	;;;;;;;;;;;;;;;;;;;;;;;
	;;; FUNCTION KEY INPUT
	;;;;;;;;;;;;;;;;;;;;;;;

	XCALL W_DISP(WND_1,WD_ACCEPT,STAT_KEY)
	XCALL TTSTS(STAT)
	IF (STAT) 
	THEN	XCALL W_DISP(WND_1,WD_ACCEPT,F_KEY)
	ELSE	F_KEY = STAT_KEY

	CASE F_KEY OF
	BEGINCASE
	079:	F_KEY = 027
	133:	F_KEY = 027
	008:	F_KEY = 027		;<BS>
	010:	F_KEY = 013		;<CR>
	ENDCASE

	RETURN

;----------------------------------------------------------------------

;;; WINDOW SCROLLING ROUTINES
SCROLL_DN,
	WROW = LAST_ROW
	IF (IDX .EQ. NUMARA) RETURN
	XCALL W_AREA(WND_1,WA_SCROLL,WAS_UP,1)
	XCALL W_DISP(WND_1,WD_POS,1,1,WD_CLR,WDC_EOL )
	XCALL W_DISP(WND_1,WD_POS,1,1,WHDR(1,PLEN) )
	RETURN

SCROLL_UP,
	WROW = FIRST_ROW
	IF (IDX .EQ. 1) RETURN
	XCALL W_AREA(WND_1,WA_SCROLL,WAS_DOWN,1)
	XCALL W_DISP(WND_1,WD_POS,1,1,WD_CLR,WDC_EOL )
	XCALL W_DISP(WND_1,WD_POS,1,1,WHDR(1,PLEN) )
	RETURN
;--------------------------



GET_FIRST_DATA,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; FIND FIRST NOTE RECORDS FOR CUST
		;;; AND FILL "PARRY" ARRAY...
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR ROLLDX
	AR_CUST = N_CUST
	AR_TYPE = X_TYPE
	XCALL ISIO (CHAN,ROLLDX,AR_KEY,READ,LOKCTL)
	CLEAR LOKCTL

	IF (ECONT(1).NE.BLANKS .AND. (X_TYPE.EQ.0.OR.X_TYPE.EQ.2))
		BEGIN
		I = 1
		LINE(1,11) = 'AUTH NAMES:'
		LINE(13,34) = ECONT(1)
		LINE(37,58) = ECONT(2)
		PARRY(I) = LINE
		PRFA(I) = '******'
		IF (ECONT(3) .NE. BLANKS)
		   BEGIN
		   INCR I
		   LINE(13,34) = ECONT(3)
		   LINE(37,58) = ECONT(4)
		   PARRY(I) = LINE
		   PRFA(I) = '******'
		   END
		GOTO FCONT
		END

FILL_ARA,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; GET MORE CUSTOMER NOTES
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR I
FCONT,
	WHILE (LOKCTL.EQ.0 .AND. AR_CUST.EQ.N_CUST .AND. I.LT.MAXARA)
		BEGIN
		IF (X_TYPE.EQ.0 .OR. X_TYPE.EQ.AR_TYPE)
		   BEGIN
		   INCR I
		   XCALL GETRFA(CHAN,PRFA(I))
		   PARRY(I) = AR_NOTE
		   END
		XCALL IOS (CHAN,ROLLDX,READ,LOKCTL)
		END

	NUMARA = I
	RETURN
;----------------------------------------
;==================================================
;;; MAINTENANCE ROUTINES...
;==================================================

ITEM_SELECTED,	;;;;;;;;;;;;;
		;;; CHANGE
		;;;;;;;;;;;;;
	IF (N_UPDT .EQ. 'N') RETURN
	IF (PRFA(IDX) .EQ. '******') RETURN
	CALL INIT_W2
	XCALL W_DISP(WND_2,WD_POS,1,1,REST)

	XCALL POSRFA (CHAN,PRFA(IDX))
	XCALL IOS (CHAN,ROLLDX,READ,LOKCTL)
	ENTRY = AR_NOTE
	XCALL X_INPT (WND_2,1,1,60,0,'AE',ENTRY,INXCTL)
	GOTO (ITEM_SELECTED,END_ITEM),INXCTL

	AR_NOTE = ENTRY
	XCALL ISIO (CHAN,ROLLDX,AR_KEY,WRITE,LOKCTL)
	PARRY(IDX) = AR_NOTE

END_ITEM,
	XCALL W_DISP(WND_2,WD_CLEAR)
	XCALL W_PROC(WP_REMOVE,WND_2)
	XCALL W_UPDT
	VAL = 0
	RETURN
;----------------------------------------

ADD_ITEM,	;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR ITEM_ADDED
	IF (N_UPDT .EQ. 'N') RETURN
	CALL INIT_W2

	CLEAR ROLLDX
	AR_CUST = N_CUST
	AR_TYPE = N_TYPE
	AR_SEQ = 0
NEXT_ITEM,
	XCALL WINPT(WND_2,1,1,60,00,'AE',ENTRY,INXCTL,F_KEY)
	GOTO (ADD_ITEM,END_ITEM),INXCTL

	AR_NOTE = ENTRY

	XCALL ISIO (CHAN,ROLLDX,AR_KEY,STORE,LOKCTL)
	ITEM_ADDED = 1

	WROW = WROW + 1
	IF (WROW .GT. LAST_ROW)
		BEGIN
		XCALL W_AREA(WND_1,WA_SCROLL,WAS_UP,1)
		XCALL W_DISP(WND_1,WD_POS,1,1,WD_CLR,WDC_EOL )
		END
	REST = AR_NOTE
	XCALL W_DISP(WND_1,WD_POS,WROW,1,WRKLIN(1,WLEN))
	GOTO NEXT_ITEM

;----------------------------------------

DELETE_ITEM,	;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (N_UPDT .EQ. 'N') RETURN
	IF (PRFA(IDX) .EQ. '******') RETURN
	CALL INIT_W2

	XCALL W_DISP(WND_2,WD_POS,1,1,'DELETE, ARE YOU SURE ?')
	XCALL WINPT(WND_2,1,23,01,01,'YN',ENTRY,INXCTL)
	GOTO (END_ITEM),INXCTL-1

	XCALL POSRFA (CHAN,PRFA(IDX))
	XCALL IOS (CHAN,ROLLDX,READ,LOKCTL)
	XCALL ISIO (CHAN,ROLLDX,AR_KEY,DELETE,LOKCTL)

	GOTO END_ITEM
	RETURN
;----------------------------------------

INSERT_ITEM,	;;;;;;;;;;;;;;;;;;;;;;;;;;
	RETURN
;;; may add this option later...
	IF (N_UPDT .EQ. 'N') RETURN
	CALL INIT_W2
	XCALL MESAG ('INSERT_ITEM',1)
	XCALL W_PROC(WP_REMOVE,WND_2)

	RETURN
;----------------------------------------

;==================================================
;;; END MAINTENANCE ROUTINES...
;==================================================

INIT_WINDOW,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; DISPLAY WINDOW, FILL W/ DATA
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; determine height & length of window, x & y coordinates
;;; to center window on screen.
	NUMROW = N_ROWS

	LAST_ROW = NUMROW + 1
	IF (NUMROW .GT. NUMARA) LAST_ROW = NUMARA + 1
	HT = LAST_ROW		;HEIGHT OF WINDOW, LEAVE ROOM FOR HEADER
	LN = PLEN + 2		;LENGHT OF WINDOW
	

	X = N_X
	Y = N_Y

	XCALL TNMBR (TNMBR)
	W1_ID(1,5) = 'ROLDX'
	W1_ID(6,8) = TNMBR,	'XXX'

;;; place window...
	W1_TITLE = "ROLODEX" 
	W1_TITLE(9,9) = "-"
	W1_TITLE(11,18) = VALTYP(N_TYPE)
	XCALL W_PROC(WP_FIND,WND_1,W1_ID)
	IF (.NOT. WND_1) XCALL W_PROC(WP_CREATE,WND_1,W1_ID,HT,LN)
	TITLEN = %TRIM(W1_TITLE)
	IF (TITLEN .GT.0)
&	 XCALL W_BRDR(WND_1,WB_TITLE,W1_TITLE(1,TITLEN),WB_TPOS,WBT_TOP,WBT_CENTER)
	XCALL W_PROC(WP_PLACE,WND_1,X,Y)
	XCALL W_DISP(WND_1,WD_CLEAR)
	XCALL W_DISP (WND_1,WD_ATTR,ATTR_CLR+ATTR_RVRS)
	XCALL W_DISP(WND_1,WD_POS,1,1,WHDR(1,PLEN) )

;;; fill window w/ data...
	CLEAR ARO
	WLEN = LN
	WROW = 1
;;;	WROW = 0
	FOR I FROM 1 THRU LAST_ROW-1
		BEGIN
		INCR WROW
		DLINE = PARRY(I)
		REST = DLINE(1,PLEN)
		XCALL W_DISP(WND_1,WD_POS,WROW,1,WRKLIN(1,WLEN) )
		END

	RETURN
;---------------------------------------------------------------------

INIT_W2,
	XCALL W_PROC(WP_FIND,WND_2,W2_ID)
	IF (.NOT. WND_2) XCALL W_PROC(WP_CREATE,WND_2,W2_ID,1,62)
;-
	W2_TITLE = VALTYP(N_TYPE)
	TITLEN = %TRIM(W2_TITLE)
	IF (TITLEN .GT.0)
&	 XCALL W_BRDR(WND_2,WB_TITLE,W2_TITLE(1,TITLEN),WB_TPOS,WBT_TOP,WBT_CENTER)
;-
	XCALL W_PROC(WP_PLACE,WND_2,X+HT+2,Y)
	XCALL W_DISP(WND_2,WD_CLEAR)
	RETURN
;---------------------------------------------------------------------


OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CHAN = 15
	SWITCH = 5
OPNLOP,
	INCR CHAN
	XCALL CHNOPN(CHAN,STAT)
	GOTO (OPNLOP),STAT
	CASE N_UPDT OF
	BEGINCASE
	'Y':	XCALL FILES (CHAN,'SU',190,SWITCH)
	'N':	XCALL FILES (CHAN,'SI',190,SWITCH)
	ENDCASE
	RETURN
;-------------------------------------
