
;NOTE: "STM:" needs to be defined in synergy.ini...
;LSRFIL.AR
;  STMENT / AR 
;
;	Laser statements file copy
;	
;	01-06-1999 ssq: created from lststm.ar
;	08-18-1999 SSQ: internal version of lpon & ;
; 	5-21-18: ssq convert cusmas to isam
;	8-22-18: ssq convert aropen to isam
;
RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR


;LPON/LPOFF VARIABLES ----------------------------
record  s_filnam
		,a4,    'spl:'
	f_letr	,a1,    's'
	fter    ,d3             ;terminal #
	ftime   ,a4             ;hhmm of current time
		,a4,    '.spl'
record,x
		,a4
	s_name          ,a12

record  time
	hh      ,a2
	mm      ,a2
	ss      ,a2

RECORD	COMPRES
	C_CHAR	,A1		;<ESC>
		,A4,	"&k2S"	;pitch mode = 2 = 16.5-16.7 (compressed)

RECORD	L8100
	ESC_01	,A1
		,A4,	"&l8C"	;8 lines/inch

;---------------------------------------------------------

RECORD	S_COMPR		;SPECIAL COMPRESSION FOR STATEMENTS
	S_CHAR	,A1	;SUPPLIED BY LPON.AR
		,A4,	'&k4S'

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

RECORD AROPEN		; 
		.INCLUDE 'DEF:RD003A.DEF'
RECORD ,X		; 
		.INCLUDE 'DEF:RD003B.DEF'
RECORD AROPN2		; 
		.INCLUDE 'DEF:RD003F.DEF'
RECORD CUSMAS		; 
		.INCLUDE 'DEF:RD001A.DEF'
RECORD CUSCTL	,X	; 
		.INCLUDE 'DEF:RD001B.DEF'

RECORD	EJECT
;;;	E_CHAR	,A1		;<ESC>
;;;		,A4,	"&l0H"	;pitch mode = 2 = 16.5-16.7 (compressed)
		,a2,	''


RECORD	HEADINGS
	,A*,'   DATE  CODE   REF     CHARGES     CREDITS      BALANCE'
	,A*,'               REF CODE    AMOUNT'

RECORD PBUF
	PLINE	,A100
RECORD PBUF2
	PLINE2	,A100
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD FCHYMD
	FCHYY	,D2
	FCHMM	,D2
	FCHDD	,D2
RECORD AGEYMD
	AGEYY	,D2
	AGEMM	,D2
	AGEDD	,D2


RECORD	SPLFIL
;;;		,A4,	'SPL:'
		,A4,	'STM:'
		,A1,	'S'
	S_CUST,	A6
		,A4,	'.TXT'

RECORD	VARS
	debug	,d6
	SAVRFA	,A6
	CUSRFA	,A6
	RFA2	,A6
	CUSRF2	,A6
	ON_R2	,D1
	A6		,A6
	P_PORTRAIT	,D1,	0
	KEY	,A6
	BSEND	,D5
	BSMID	,D5
	SRCCTL	,D1
	ENTRY	,A8
	INXCTL  ,D1
	CNGCTL	,D1
	DMY	,D2
	DMY1	,D2
	WHATNO	,D2
	AROCNT	,D5
	ARCTL	,D5
	ARCTL2	,D5
	ARCTL3	,D5
	ARCTL4	,D5
	AGDAMT	,4D9
	LOC	,D2
	SAVAMT	,A13
	BAL	,D9
	CRMASK	,A14,	'ZZZZ,ZZZ.XX CR'
	DOCDT2	,D6
	BLANKS	,A25
	ALL	,A6,	'ALL   '
	DTMASK	,A8,	'XX/XX/XX'
	ENDNO	,D6
	ENDSW	,D1
	LNFEED	,D2
	LINCNT	,D2
	LPSW	,D1
	PGCNT	,D3
	RPTNUM	,D3
	PRTTYP	,A1
;;;	SPLFIL	,A14
	LSTCUS	,D6
	LSTAPL	,D6
	APLSTR	,D5
	SKPCUS	,D6
	MASK	,A12,	'ZZZZ,ZZZ.XX-'
	SAVLIN	,A88
	CRDTOT	,D8
	I	,D1
	TODAA	,A8
	TODAY	,D8
	TDATE	,D6
	NODAYS	,D6
	STMDTE	,D8
	STRTNO	,D6
	BRACKS	,A6,	']]]]]]'
	ORGREC	,D5
	RECNO	,D5,	00001
	CNTFLG	,D1
	SWITCH	,D1,	1
	PRLBAL	,D9
	PRLCTL	,D5
	LSTSW	,D1,	0
	PRLCUS	,D6
	V	,D1
	MASK10	,A10	,'[[,[[[.XX]'
	DASWIT	,D1
	ZROFLG	,A1
	READ	,D1,	0
	WRITE	,D1,	1
	LOKCTL	,D1
	OPTION	,D1
	OPT	,D1
	DECMAL	,D10
PROC
	XCALL TERID (V)
	XCALL RDATE(TDATE)
	XCALL DATE8(TDATE, D_OUT, TODAY, TODAA, D_SW)

OPEN,
	LSTSW =
	ENDSW =
	XCALL OUTPT (2,1,2,'\',1)
	SWITCH = 1
	XCALL FILES (3,'SI',03,SWITCH)		;FILE # 03 -- AROPEN FILE
	IF (SWITCH.EQ.9) GO TO INU003
	XCALL FILES (33,'SI',03,5)


OPEN1,
	SWITCH = 1
	XCALL FILES (1,'SI',01,SWITCH)		;FILE # 01 -- CUSMAS FILE
	IF (SWITCH.EQ.9) GO TO INU003
	
BEGIN,
;;;	LOKCTL = 1
;;;	XCALL IO (3,AROPEN,1,READ,LOKCTL)
;;;	AROCNT = REC003
;;;	ARCTL = 1
CLRDTA,
	STRTNO =
	ENDNO =
	XCALL OUTPT (2,15,2,'\',V)
SDATE,
	XCALL OUTPT (5,20,0,'PLEASE ENTER STATEMENT DATE',V)
	CTL = '05,49,08,00,DE'
	CALL INPUT
	GO TO (CLRDTA,ENDOFF), INXCTL
	STMDTE = ENTRY (1,8)
	IF (STMDTE.EQ.0) STMDTE = TODAY
	XCALL DATE8(STMDTE, D_OUT, D_OUTR, D_FMT, D_SW)
	XCALL OUTPT (5,49,0,D_FMT,V)
STRTNO,
	RECNO = 1
	LSTCUS =
	ENDSW =
	XCALL OUTPT (6,20,0,'PLEASE ENTER STARTING CUSTOMER #',V)
;;;	LOKCTL = 1
;;;	XCALL IO (3,AROPEN,1,READ,LOKCTL)
	CTL = '06,54,06,00,#E'
	CALL INPUT
	GO TO (STRTNO,CLRDTA), INXCTL
	IF (ENTRY.EQ.ALL.OR.ENTRY.EQ.BLANKS) GO TO PRTALL
	STRTNO = ENTRY (1,6)

;;;	KEY = STRTNO, 'XXXXXX'
;;;	BSEND = ORG003
;;;	XCALL SERCH (3,AROPEN,KEY,16,21,BSEND,BSMID,SRCCTL,1,8,13,0,0,0,0)
;;;	GO TO (NOFIND), SRCCTL

	GO TO ENDNO
NOFIND,
	XCALL MESAG ('STARTING CUST # NOT ON FILE',1)
	GO TO STRTNO
ENDNO,
	XCALL OUTPT (7,20,0,'PLEASE ENTER ENDING CUSTOMER #',V)
	CTL = '07,54,06,00,# '
	CALL INPUT
	GO TO (CLRDTA), INXCTL
	ENDNO = ENTRY (1,6)
	IF (ENDNO.EQ.0)
	BEGIN
	  ENDNO = STRTNO
	  DECMAL = ENDNO
	  CALL DSPNUM
	END
	IF (ENDNO.LT.STRTNO) GO TO ENDNO
	CNGCTL = 2
	GO TO ZEROQ
PRTALL,
	XCALL OUTPT (6,54,0,ALL,V)
	STRTNO =
	ENDNO = 999999
	CNGCTL = 2
ZEROQ,
;;;	XCALL OUTPT (8,20,0,'PRINT ZERO AND CR STATEMENTS ?',V)
;;;	CTL = '08,54,01,00,YN'
;;;	CALL INPUT
;;;	ZROFLG = ENTRY (1,1)
	ZROFLG = 'Y'			;7-1-20 - DON'T ASK
	GO TO ANYCNG
PROCES,
	call clear_dir

	XCALL WATE (2,V)
	IF (ENDNO.EQ.999999) 
	THEN	FIND (3, AROPEN, ^FIRST) [ERR=RDARO]
	ELSE	FIND (3, AROPEN, STRTNO) [ERR=RDARO]
	
	ON_R2 = 0
	
;;;	IF (STRTNO.EQ.0.AND.ENDNO.EQ.999999) GO TO RDARO
;;;	ARCTL = BSMID
;;;FNDFST,
;;;	ARCTL = ARCTL - 1
;;;	LOKCTL = 1
;;;	XCALL IO (3,AROPEN,ARCTL,READ,LOKCTL)
;;;	IF (ACUSNO.EQ.STRTNO) GO TO FNDFST

	debug = 0
RDARO,
	incr debug
	if (debug.eq.3200) call debug
;;;	INCR ARCTL
;;;	IF (ARCTL.GT.AROCNT) GO TO LSTREC
;;;	LOKCTL = 1
;;;	XCALL IO (3,AROPEN,ARCTL,READ,LOKCTL)

	READS (3, AROPEN, LSTREC, GETRFA:SAVRFA)

	IF (ADOCDT.EQ.0) GO TO RDARO
	IF (ACUSNO.LT.STRTNO) GO TO RDARO
	IF (ACUSNO.GT.ENDNO) GO TO LSTREC
	IF (ADOCDT .GT. STMDTE) GOTO RDARO

	IF (ACUSNO.NE.LSTCUS.AND.ZROFLG.EQ.'N') CALL CHKBAL
	IF (ACUSNO.GT.ENDNO.OR.LSTSW.EQ.1) GO TO LSTREC
	IF (ACUSNO.NE.LSTCUS) CALL NEWCUS
	IF (AAPLNO.NE.LSTAPL) CALL NEWAPL
	IF (STMFLG.EQ.2.AND.ACUSNO.EQ.SKPCUS) GO TO RDARO
	XCALL DATE8(ADOCDT, D_OUT, D_OUTR, D_FMT, D_SW)
	PLINE (2,9) = D_OUT, DTMASK
	IF (ADOCTP.EQ.1) PLINE (11,11) = 'I'
	IF (ADOCTP.EQ.2) PLINE (11,11) = 'P'
	IF (ADOCTP.EQ.3) PLINE (11,12) = 'CR'
	IF (ADOCTP.EQ.4) PLINE (11,12) = 'FC'
	IF (ADOCTP.EQ.5) PLINE (11,12) = 'DR'
	PLINE (14,19) = ADOCNO
	PLINE (69,74) = ADOCNO

	IF (ADOCTP.EQ.1) PLINE (77,77) = 'I'
	IF (ADOCTP.EQ.2) PLINE (77,77) = 'P'
	IF (ADOCTP.EQ.3) PLINE (77,78) = 'CR'
	IF (ADOCTP.EQ.4) PLINE (77,78) = 'FC'
	IF (ADOCTP.EQ.5) PLINE (77,78) = 'DR'
	GO TO (DEBIT,DOCTP2,CREDIT,DEBIT,DEBIT), ADOCTP
DEBIT,
	PLINE (21,31) = AAMT + AOTHER, MASK
	PLINE (80,91) = AAMT + AOTHER, MASK
	BAL = BAL + AAMT + AOTHER
	GO TO BALNCE
DOCTP2,
	RFA2 = 
	read (33, AROPN2, RFA:SAVRFA) [ERR=D2_LOOP]

;;;	ARCTL4 = ARCTL + 1
;;;	IF (ARCTL4.GT.AROCNT) GO TO PRTTP2
;;;	LOKCTL = 1
;;;	XCALL IO (3,AROPN2,ARCTL4,READ,LOKCTL)
D2_LOOP,
	XCALL IOS (33, AROPN2, READ, LOKCTL)
	if (lokctl .ne. 0) goto prttp2		;ssq 12-12-18: check for eof...

	IF (MDOCDT.EQ.0) GO TO DOCT22
	IF (MCUSNO.NE.ACUSNO) GO TO PRTTP2
	IF (MDOCNO.NE.ADOCNO) GO TO PRTTP2
	IF (MDOCTP.NE.2) GO TO PRTTP2
	AAMT = AAMT + MAMT
	AOTHER = AOTHER + MOTHER
DOCT22,
	INCR ARCTL
	GOTO D2_LOOP
;;;	GO TO DOCTP2
PRTTP2,
	PLINE (33,44) = AAMT, MASK
	PLINE (80,93) = AAMT, CRMASK
	PLINE (92,94) = ' CR'
	IF (AAMT.LT.0) PLINE (92,93) =
	BAL = BAL - AAMT
	CALL BUFBAL
	CALL PRINT1
	IF (AOTHER.EQ.0)
		BEGIN
		IF (RFA2.NE.A6) READ (3, AROPEN, RFA:RFA2)
		GO TO RDARO
		END
;;;	IF (AOTHER.EQ.0) GO TO RDARO
	XCALL DATE8(ADOCDT, D_OUT, D_OUTR, D_FMT, D_SW)
	PLINE (2,9) = D_OUT, DTMASK
	PLINE (11,12) = 'DA'
	PLINE (14,19) = ADOCNO
	PLINE (36,44) = AOTHER, MASK
	
	PLINE (69,74) = ADOCNO
	PLINE (77,78) = 'DA'
	PLINE (81,93) = AOTHER, CRMASK
	PLINE (92,94) = ' CR'
	BAL = BAL - AOTHER
	IF (RFA2.NE.A6) READ (3, AROPEN, RFA:RFA2)
	GO TO BALNCE
CREDIT,
	PLINE (33,44) = AAMT + AOTHER, MASK

	PLINE (80,93) = AAMT + AOTHER, CRMASK
	PLINE (92,94) = ' CR'
	BAL = BAL - AAMT - AOTHER
BALNCE,
	CALL BUFBAL
	CALL PRINT1
	GO TO RDARO
BUFBAL,
	IF (BAL.LT.0) GO TO CRBAL
	PLINE (46,57) = BAL, MASK
	RETURN
CRBAL,
	PLINE (46,59) = BAL, CRMASK
	RETURN
PRINT1,
	IF (LINCNT.GE.36) CALL CONTD
PRINT,
	PLINE2 = PLINE (2,60)
	XCALL LPOUT (LINCNT,PGCNT,PBUF2,'NO TITLE','NO HDR',' ',' ',
&	'NO LEGEND',' ',' ',0,80,80,0,LPSW,RPTNUM,PRTTYP)
	PBUF =
	PBUF2 =
	RETURN
PRINT2,
	PLINE2 = PLINE (2,98)
	XCALL LPOUT (LINCNT,PGCNT,PBUF2(1,38),'NO TITLE','NO HDR',' ',' ',
&	'NO LEGEND',' ',' ',0,38,38,0,LPSW,RPTNUM,PRTTYP)
	PBUF =
	PBUF2 =
	LINCNT = LINCNT - 1
	RETURN
NEWCUS,
	IF (LSTCUS.EQ.0.OR.STMFLG.EQ.2) GO TO FSTCUS

	IF (AGDAMT(3).GT.0.OR.AGDAMT(4).GT.0)
	BEGIN
	  IF (LINCNT+10.GE.36)
	  BEGIN
	    LNFEED = 36 - LINCNT
	    IF (LNFEED.GT.0) XCALL LINFD (LNFEED)
	    IF (LNFEED.GT.0) LINCNT = LINCNT + LNFEED
	    CALL CONTD
	  END
	  LNFEED = 1
	  XCALL LINFD (LNFEED)
	  INCR LINCNT
	  PLINE = '         ****************************************                     *********************'
	  CALL PRINT
	  PLINE = '         *              PAST DUE!               *                     *     PAST DUE      *'
	  CALL PRINT
	  PLINE = '         *       We would appreciate your       *                     *********************'
	  CALL PRINT
	  PLINE = '         *           payment TODAY!             *         '
	  CALL PRINT
	  PLINE = '         ****************************************         '
	  CALL PRINT
	END
	LNFEED = 37 - LINCNT
	XCALL LINFD (LNFEED)
	CALL BUFBAL
	IF (BAL.LT.0) GO TO CRTOT
	PLINE (80,91) = BAL, MASK
	GO TO PRTTOT
CRTOT,
	PLINE (80,93) = BAL, CRMASK
	PLINE (92,94) = ' CR'
PRTTOT,
	CALL PRINT
	XCALL LINFD (1)
	PLINE (6,12) = 'CURRENT'
	PLINE (19,28) = '30-60-DAYS'
	PLINE (33,42) = '60-90-DAYS'
	PLINE (47,58) = 'OVER-90-DAYS'
	CALL PRINT
	SAVAMT =
	I =
AGELP,
	INCR I
	IF (I.GT.4) GO TO AGEPRT
	SAVAMT = AGDAMT (I), MASK
	IF (AGDAMT(I).LT.0) CALL SETCR
	LOC = 2 + 15*(I-1)
	PLINE (LOC,LOC + 12) = SAVAMT
	GO TO AGELP
AGEPRT,
	CALL PRINT
;-------------------------------------------
; page eject...

	close 14
;;;	XCALL ASCII(27,E_CHAR)
;;;	WRITES (14,EJECT)	;PAGE EJECT			
;-------------------------------------------
	BAL =
FSTCUS,
	IF (ENDSW.EQ.1) RETURN
	
	XCALL ISIO (1, CUSMAS, ACUSNO, READ, LOKCTL)
	IF (LOKCTL .EQ. 0)
	THEN	GOTO MACHED
	ELSE	GOTO NOMACH
	
;;;	BSEND = ORGREC
;;;	KEY = ACUSNO, 'XXXXXX'
;;;	XCALL SERCH (2,CUSIDX,KEY,1,6,BSEND,BSMID,SRCCTL,4,7,11,0,0,0,0)
;;;	GO TO (MACHED,NOMACH), SRCCTL + 1
SETCR,
	SAVAMT = AGDAMT (I), CRMASK
	RETURN
MACHED,
;;;	LOKCTL = 1
;;;	XCALL IO (1,CUSMAS,IRC001,READ,LOKCTL)
;;;	IF (STMFLG.NE.2) GO TO PRTNAM
	IF (STMFLG.NE.2) GO TO MAK_SPOOL
	SKPCUS = ACUSNO
	RETURN
NOMACH,
	CUSMAS =
MAK_SPOOL,
	LPSW = 1
	S_CUST = CUSNO,	'XXXXXX'
	OPEN (14,O,SPLFIL)

PRTNAM,
	PLINE =
	PLINE(20,45) = 'Statement of Account'
	CALL PRINT
	LNFEED = 3
	XCALL LINFD(LNFEED)

	PLINE (70,94) = NAME
	IF (ADD2.NE.BLANKS) PLINE (11,35) = NAME
	PLINE (50,55) = ACUSNO
	IF (CNTFLG) PLINE (50,55) = LSTCUS
	CALL PRINT
	PLINE (11,35) = ADD1
	IF (ADD2.EQ.BLANKS) PLINE (11,35) = NAME
	CALL PRINT2
	PLINE (11,31) = ADD2
	IF (ADD2.EQ.BLANKS) PLINE (11,35) = ADD1
	CALL PRINT2
	PLINE (11,25) = CITY
	PLINE (27,28) = STATE
	PLINE (30,39) = ZIP
PRTAD4,
	XCALL DATE8(STMDTE, D_OUT, D_OUTR, D_FMT, D_SW)
	PLINE (50,59) = D_FMT
	PLINE (70,79) = D_FMT
	PLINE (87,92) = ACUSNO
	IF (CNTFLG) PLINE (87,92) = LSTCUS
	CALL PRINT
	XCALL LINFD (1)
	LINCNT =
	LSTCUS = ACUSNO
	IF (CNTFLG.EQ.0) CALL AGENXT
	PLINE = HEADINGS
	CALL PRINT
	CALL PRINT
	RETURN
CONTD,
	XCALL LINFD (1)
	SAVLIN = PLINE
	PLINE =
	PLINE (46,59) = 'CONTINUED'
	PLINE (81,90) = 'CONTINUED'
	CALL PRINT
;-------------------------------------------
; page eject...

;;;	XCALL ASCII(27,E_CHAR)
	WRITES (14,EJECT)	;PAGE EJECT			
;-------------------------------------------

	CNTFLG = 1
	CALL PRTNAM
	CNTFLG = 0
	PLINE = SAVLIN
	RETURN
AGENXT,
;	AGDAMT (1,36) =
	FOR I FROM 1 THRU 4 AGDAMT(I) =
	CRDTOT =
	LSTCUS = ACUSNO
	FIND (3, AROPEN, RFA:SAVRFA)
	ON_R2 = 1
;;;	ARCTL2 = ARCTL - 1
AGERD,
;;;	INCR ARCTL2
;;;	IF (ARCTL2.GT.AROCNT) GO TO ENDAGE
;;;	LOKCTL = 1
;;;	XCALL IO (3,AROPEN,ARCTL2,READ,LOKCTL)

	READS (3, AROPEN, ENDAGE, GETRFA:RFA2)
	IF (ADOCDT.EQ.0) GO TO AGERD
	IF (ACUSNO.NE.LSTCUS) GO TO ENDAGE
	IF (AAPLNO.NE.LSTAPL) CALL NEWAPL
	IF (ADOCDT .GT. STMDTE) GOTO AGERD

	GO TO (DAYS,AGECR,AGECR,DAYS,AGEDR), ADOCTP
	GO TO AGERD
NEWAPL,
	LSTAPL = AAPLNO
;;;	APLSTR = ARCTL2
	USING ON_R2 SELECT
	(0),	CUSRFA = SAVRFA
	(1),	CUSRFA = RFA2
	ENDUSING

	RETURN
DAYS,
	OFF ERROR
	XCALL BDAT8 (STMDTE,ADOCDT,DMY,DMY1,NODAYS)
	IF (STMDTE .LT. ADOCDT) NODAYS = NODAYS *(-1)
	IF (DASWIT) RETURN
	IF (NODAYS.GT.90) GO TO OVER90
	IF (NODAYS.GT.60) GO TO OVER60
	IF (NODAYS.GT.30) GO TO OVER30
CURRNT,
	AGDAMT(1) = AGDAMT(1) + AAMT + AOTHER
	GO TO AGERD
OVER30,
	AGDAMT(2) = AGDAMT(2) + AAMT + AOTHER
	GO TO AGERD
OVER60,
	AGDAMT(3) = AGDAMT(3) + AAMT + AOTHER
	GO TO AGERD
OVER90,
	AGDAMT(4) = AGDAMT(4) + AAMT + AOTHER
	GO TO AGERD
AGECR,
	IF (BALMTH.EQ.'B') GO TO ADDCR
	AAMT = AAMT * (-1)
	AOTHER = AOTHER * (-1)
AGEDR,
	IF (AAPLNO.EQ.0.OR.BALMTH.EQ.'B') GO TO DAYS
;;;	ARCTL3 = APLSTR - 1
	FIND (33, AROPN2, RFA:CUSRFA)

FNDINV,
;;;	INCR ARCTL3
;;;	ON ERROR DAYS
	LOKCTL = 1
	XCALL IOS (33, AROPN2, READ, LOKCTL)
;;;	XCALL IO (3,AROPN2,ARCTL3,READ,LOKCTL)
;;;	IF (ARCTL3.EQ.ARCTL2) GO TO FNDINV
	IF (MCUSNO.NE.ACUSNO) GO TO DAYS
	IF (MAPLNO.NE.AAPLNO) GO TO DAYS
	IF (MDOCNO.NE.AAPLNO) GO TO FNDINV
	IF (MDOCTP.NE.1.AND.MDOCTP.NE.4) GO TO FNDINV
	IF (MDOCDT.EQ.0) GO TO FNDINV
	ADOCDT = MDOCDT
	GO TO DAYS
ADDCR,
	CRDTOT = CRDTOT + AAMT + AOTHER
	GO TO AGERD
ENDAGE,
	IF (BALMTH.EQ.'B') CALL ADJUST
	READ (3, AROPEN, RFA:SAVRFA)
	ON_R2 = 0
;;;	LOKCTL = 1
;;;	XCALL IO (3,AROPEN,ARCTL,READ,LOKCTL)
	RETURN
ADJUST,
	I = 5
ADJ1,
	I = I - 1
	IF (I.EQ.0) GO TO TSTOCR
	IF (CRDTOT.GT.AGDAMT(I)) GO TO SET0
	AGDAMT (I) = AGDAMT (I) - CRDTOT
	RETURN
SET0,
	CRDTOT = CRDTOT - AGDAMT(I)
	AGDAMT (I) =
	GO TO ADJ1
TSTOCR,
	IF (CRDTOT.GT.0) AGDAMT (1) = (-1) * CRDTOT
	RETURN
;;;SKIPIT,
;;;	IF (ARCTL2.GT.AROCNT) GO TO END_P
;;;	ARCTL = ARCTL2
;;;	GO TO AGENXT
;*******************************************************************************
EXIT,
	XCALL FILES (1,'I',01,4)
INU003,
	XCALL FILES (2,'I',02,4)
INU001,
	XCALL FILES (3,'SI',03,4)
	close 33
	XCALL PGCHN ('AR:LSRMNU',1)
CLOSE3,
	XCALL FILES (1,'I',01,4)
	XCALL FILES (3,'SI',03,4)
	close 33
CLOSE1,
;;;	XCALL FILES (2,'I',02,4)
	RETURN
;*******************************************************************************
LSTREC,
	ENDSW = 1
	CALL NEWCUS

;;;	IF (LSTCUS.EQ.0) XCALL MESAG
;;;&		('NO CUSTOMERS FOUND MEETING GIVEN CRITERIA',2)


END_P,
	CLOSE 14

	CALL CLOSE3
	IF (STRTNO.NE.0) GO TO OPEN
END,
ENDOFF,
	XCALL PGCHN ('AR:LSRMNU',1)
;*******************************************************************************
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
ANYCNG,
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (PROCES,CLRDTA,CLRDTA), CNGCTL + 1
	GO TO PROCES
CHKBAL,
	PRLCTL = ARCTL
	PRLCUS = ACUSNO
	IF (ADOCTP.EQ.1.OR.ADOCTP.GE.4) PRLBAL = AAMT + AOTHER
	IF (ADOCTP.EQ.2.OR.ADOCTP.EQ.3) PRLBAL = - AAMT - AOTHER
CHKRTN,
;;;	INCR PRLCTL
;;;	IF (PRLCTL.GT.AROCNT) GO TO ENDCHK
	LOKCTL = 1
	XCALL IOS (3, AROPEN, READ, LOKCTL)
;;;	LOKCTL = 1
;;;	XCALL IO (3,AROPEN,PRLCTL,READ,LOKCTL)
	IF (ACUSNO.NE.PRLCUS) GO TO ENDCHK
	IF (ADOCDT .GT. STMDTE) GOTO CHKRTN

	IF (ADOCTP.EQ.1.OR.ADOCTP.GE.4) PRLBAL = PRLBAL + AAMT + AOTHER
	IF (ADOCTP.EQ.2.OR.ADOCTP.EQ.3) PRLBAL = PRLBAL - AAMT - AOTHER
	GO TO CHKRTN
ENDCHK,
	IF ((ACUSNO.GT.ENDNO).AND.PRLBAL.LE.0) LSTSW = 1
;;;	IF ((PRLCTL.GT.AROCNT.OR.ACUSNO.GT.ENDNO).AND.PRLBAL.LE.0) LSTSW = 1

;;;	IF (PRLBAL.LE.0.AND.ACUSNO.LE.ENDNO) GO TO NXTBAL
;;;	IF (PRLBAL.LE.0.AND.ACUSNO.LE.ENDNO.AND.PRLCTL.LE.AROCNT) GO TO NXTBAL

;;;	LOKCTL = 1
;;;	XCALL IO (3,AROPEN,ARCTL,READ,LOKCTL)
;;;	READS (3, AROPEN, RFA:SAVRFA)
	READS (3, AROPEN, CB_RETURN, RFA:SAVRFA)
CB_RETURN,
	RETURN
NXTBAL,
	ARCTL = PRLCTL
	GO TO CHKBAL
DSPNUM,
	OPTION = 1
	XCALL DSPLY (MAX,ROW,COL,DECMAL,OPTION,V)
	RETURN

;----------------------------------------------------
clear_dir,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; delete any existing text files...
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	xcall outpt (2,1,1,'Delete last files from last month...',1)
;;;	read (2, cusidx, 1)
	read (1, cusmas, ^first)		;header
cd_loop,
	reads (1, cusmas, cd_eof)
	s_cust = cusno,	'XXXXXX'
	onerror cd_none
	xcall delet (splfil)
cd_none,
	offerror
	goto cd_loop

cd_eof,
	xcall outpt (2,1,1,' ',1)
	return
;----------------------------------------------------
debug,
	a6 =
	a6 =
return

END

