;COMRPT.AR - NEW VERSION
;1/13/2020: should run this before setting up new history files,
;	did not do this in 2020 so getting data from slhh19 instead of slhhdr...

;COMRP2
;		INVOICES AND ESTIMATES
;
RECORD	ORDHDR
	.INCLUDE 'DEF:RD044A.DEF'
RECORD	ORDLIN
	.INCLUDE 'DEF:RD045A.DEF'

RECORD	DUCACC
	.INCLUDE 'DEF:RD175A.DEF'

RECORD SALMAN		;
		.INCLUDE 'DEF:RD054A.DEF'
;
RECORD	CEST
	CE_SLSMAN	,D2
	CE_NUMINV	,3D6
	CE_DLRINV	,3D10
	CE_NUMEST	,3D6
	CE_DLREST	,3D10

RECORD	T8_CEST
	T8_SLSMAN	,D2
	T8_NUMINV	,3D6
	T8_DLRINV	,3D10
	T8_NUMEST	,3D6
	T8_DLREST	,3D10

RECORD	T9_CEST
	T9_SLSMAN	,D2
	T9_NUMINV	,3D6
	T9_DLRINV	,3D10
	T9_NUMEST	,3D6
	T9_DLREST	,3D10

RECORD	GT_CEST
	GT_SLSMAN	,D2
	GT_NUMINV	,3D6
	GT_DLRINV	,3D11
	GT_NUMEST	,3D6
	GT_DLREST	,3D11

RECORD	ARRAYS
	A_MAN	,100D2			;SALESMEN
	A_NUM	,[100,3]D5		;COUNT
	A_DLR	,[100,3]D10		;DOLLARS
	MAXARA	,D4
	AI	,D4		;INDEX


RECORD	CHANNEL
	CHN044	,D2
	CHN045	,D2
	CHN175	,D2
	CHN184	,D2
	CHNWRK	,D2

RECORD	DIS
	II	,D6

RECORD	HDR1
	H1_TYPE	,A3
		,A*,	' THRU '
	H1_DATE	,A10
		,A23
		,A21,	'--------SMC-------   '
		,A21,	'--------ROC-------   '
		,A18,	'--------SMP-------'
RECORD	PRINT
	TITLE	,A*,	'SALES AND QUOTES BY SALESMEN'
	HDR2	,A*,	'-----------SALESMAN-----------            '
&			'NO        AMOUNT   '
&			'   NO        AMOUNT   '
&			'  NO        AMOUNT   '
	HDR	,A*,	'NO HDR'
	LEG	,A*,	'NO LEGEND'
	PLINE	,A132
	LINCNT	,D2,	60
	LPARG	,D1
	LPSW	,D1
	PGCNT	,D6
	PRTTYP	,A1
	PRGFIL	,A1
	PRNTSW	,D1
	PRTRPT	,A1
	RPTNUM	,D3
	SPLFIL	,A14

RECORD	VARS
	dsn	,d3
	TOTAMT	,D18
	CMPCOD	,A3
	CMPNO	,D3
	CMPNAM	,3A3,	'SMC','ROC','CAT'
	mmdd	,d4
	DUCT_AMT	,D10
	D1	,D10
	D2	,D10
	I	,D6
	OPNOK	,D1
	ENDAT	,D8
	TODAY	,D8
	XDATE	,D8
	AMT	,D10
	MTD	,A1	;M=MTD, Y=YTD
	WRKFIL	,A14,	'DEV:CESTXX.ISM'
	ENTRY	,A30
	INXCTL	,D1
	CNGCTL	,D1
	LOKCTL	,D1
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	WHATNO	,D2
	SWITCH	,D1
	V	,D1
;
PROC
	XCALL TERID(V)
	XCALL OUTPT (1,1,2,'COMMISSIONS REPORT WITH ESTIMATES',1)

;;;	CALL OPENS
;;;	IF (.NOT. OPNOK) GOTO ENDOFF
	SWITCH = 5
	XCALL FILEC ('SMC',1,'I',54,SWITCH)
	IF (SWITCH .EQ. 9) GOTO ENDOFF
	XCALL FFILE(44,WRKFIL,INXCTL)
	WRKFIL(5,14) = 'CESTXy.ISM'

	XCALL ISAMC (WRKFIL, 98, 1, 'START=1, LENGTH=2, DUPS, ASCEND')
	OPEN (33, SU, WRKFIL)
	CHNWRK = 33


	XCALL RDAT8(TODAY)
	mmdd = today(5,8)
	if (mmdd.gt.0101 .and. mmdd.le.0113)
		begin
		today(1,4) = today(1,4) - 1
		today(5,8) = 1231
		end
		
DISPLA,
	CLEAR CNGCTL
	CLEAR T9_CEST, GT_CEST

	XCALL OUTPT (1,1,2,'COMMISSIONS REPORT WITH ESTIMATES',1)
	XCALL OUTPT (4,4,0,'1. CUT-OFF DATE',1)
	XCALL OUTPT (6,4,0,'2. MTD or YTD <M>',1)
ENDAT,
	XCALL INPUT (4,22,08,00,'DE',ENTRY,INXCTL,1)
	GOTO (DISPLA,ENDOFF),INXCTL
	ENDAT = ENTRY(1,8)
	IF (ENDAT .EQ. 0) 
		BEGIN
		ENDAT = TODAY
		XDATE(1,4) = ENDAT(5,8)
		XDATE(5,8) = ENDAT(1,4)
		ENTRY(1,10) = XDATE,	'XX/XX/XXXX'
		XCALL OUTPT(4,22,0,ENTRY(1,10),1)
		END
	XDATE(1,4) = ENDAT(5,8)
	XDATE(5,8) = ENDAT(1,4)
	GOTO (ANYCNG),CNGCTL
MTD,
	XCALL INPUT (6,22,01,00,'A ',ENTRY,INXCTL,1)
	GOTO (DISPLA),INXCTL
	MTD = ENTRY(1,1)
	IF (MTD.NE.'M' .AND. MTD.NE.'Y') GOTO MTD
ANYCNG,
	XCALL ANYCN(CNGCTL,WHATNO)
	GOTO (PROCES,CNGBR),CNGCTL+1
CNGBR,
	GOTO (ENDAT,MTD),WHATNO
	GOTO ANYCNG
PROCES,
	USING MTD SELECT
	('M'),	H1_TYPE = 'MTD'
	('Y'),	H1_TYPE = 'YTD'
	ENDUSING
	H1_DATE = XDATE,	'ZX/XX/XXXX'

	FOR CMPNO FROM 1 THRU 3
		BEGIN
		CALL OPENS
		IF (.NOT. OPNOK) GOTO ENDOFF

		CALL GET_INV			;INVOICED ORDERS
		CALL GET_EST			;ESTIMATES
	
		CALL CLOSE

		END

	CALL PRT_REPORT

ENDOFF,
;;;	CALL CLOSE
	CLOSE 1

	XCALL FLAGS(7000000)
	STOP
;===========================================================
;===========================================================

GET_INV,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR II
	CALL CLRARA
	FIND (CHN184,ORDHDR,^FIRST) [ERR=GI_LOOP]
GI_LOOP,
	INCR II
	IF (II/500*500 .EQ. II) DISPLAY(15,$SCR_POS(1,70),DIS)
	XCALL IOS (CHN184,ORDHDR,READ,LOKCTL)
	IF (LOKCTL .NE. 0) GOTO GI_EOF
	IF (MTD.EQ.'M' .AND. OINVDT(1,6).NE.ENDAT(1,6) )GOTO GI_LOOP
	IF (MTD.EQ.'Y' .AND. OINVDT(1,6).GT.ENDAT(1,6) )GOTO GI_LOOP
;;;	if(ocusno.eq.63340) oslman = 19	;terry (rockford)

	IF (OSLMAN.LT.1 .OR. OSLMAN.GT.99) OSLMAN = MAXARA

;;;	INCR A_NUM(OSLMAN)
	INCR A_NUM[OSLMAN,CMPNO]


;;;	A_DLR(OSLMAN) = A_DLR(OSLMAN) + (OSALE-OFRGHT-OTAX)
	A_DLR [OSLMAN,CMPNO] = A_DLR [OSLMAN,CMPNO] + (OSALE-OFRGHT-OTAX)


	GOTO GI_LOOP	
GI_EOF,
	FOR I FROM 1 THRU MAXARA
		BEGIN
		CE_SLSMAN = I
		XCALL ISIO (CHNWRK, CEST, CE_SLSMAN, READ, LOKCTL) 
		IF (LOKCTL .NE. 0)
			BEGIN
			CLEAR CEST
			CE_SLSMAN = I
			END
		CE_NUMINV(CMPNO) = A_NUM [I,CMPNO]
		CE_DLRINV(CMPNO) = A_DLR [I,CMPNO]
		IF (LOKCTL .EQ. 0)
		THEN	WRITE (CHNWRK, CEST, CE_SLSMAN)
		ELSE	STORE (CHNWRK, CEST, CE_SLSMAN)
		END	

;;;	FOR I FROM 1 THRU MAXARA
;;;		BEGIN
;;;		CLEAR CEST
;;;		CE_SLSMAN = I
;;;		CE_NUMINV(CMPNO) = A_NUM(I)
;;;		CE_DLRINV(CMPNO) = A_DLR(I)
;;;		STORE(CHNWRK, CEST, CE_SLSMAN)
;;;		END	

	RETURN
;-------------------------------------------

GET_EST,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR II
	CALL CLRARA
	FIND (CHN044,ORDHDR,^FIRST) [ERR=GE_LOOP]
GE_LOOP,
	INCR II
	IF (II/500*500 .EQ. II) DISPLAY(15,$SCR_POS(2,70),DIS)
	XCALL IOS (CHN044,ORDHDR,READ,LOKCTL)
	IF (LOKCTL .NE. 0) GOTO GE_EOF
	IF (OLOC .NE. 'E') GOTO GE_LOOP
	IF (OORDDT(1,4) .NE. TODAY(1,4)) GOTO GE_LOOP	;CURRENT YEAR
	IF (MTD.EQ.'M' .AND. OORDDT(1,6).NE.ENDAT(1,6) )GOTO GE_LOOP
	IF (MTD.EQ.'Y' .AND. OORDDT(1,6).GT.ENDAT(1,6) )GOTO GE_LOOP
	if (oslman .eq. 55) goto ge_loop	;that would be me...

	IF (OSLMAN.LT.1 .OR. OSLMAN.GT.99) OSLMAN = MAXARA
;;;	IF (OSLMAN.LT.1 .OR. OSLMAN.GT.30) OSLMAN = MAXARA

	CALL GET_LINES
	CALL GET_DUCT
;;;	INCR A_NUM(OSLMAN)
	INCR A_NUM [OSLMAN,CMPNO]

;;;	A_DLR(OSLMAN) = A_DLR(OSLMAN) + (OSALE-OFRGHT-OTAX) + DUCT_AMT
	A_DLR[OSLMAN,CMPNO] = A_DLR[OSLMAN,CMPNO] + (OSALE-OFRGHT-OTAX) + DUCT_AMT

	GOTO GE_LOOP	
GE_EOF,
	FOR I FROM 1 THRU MAXARA
		BEGIN
		CE_SLSMAN = I
		XCALL ISIO (CHNWRK, CEST, CE_SLSMAN, READ, LOKCTL) 
		IF (LOKCTL .NE. 0)
			BEGIN
			CLEAR CEST
			CE_SLSMAN = I
			END
		CE_NUMEST(CMPNO) = A_NUM [I,CMPNO]
		CE_DLREST(CMPNO) = A_DLR [I,CMPNO]
		IF (LOKCTL .EQ. 0)
		THEN	WRITE (CHNWRK, CEST, CE_SLSMAN)
		ELSE	STORE (CHNWRK, CEST, CE_SLSMAN)
		END	
	RETURN
;-------------------------------------------
GET_LINES,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OSALE, OTAX, OFRGHT
	FIND (CHN045, ORDLIN, OORDNO) [ERR=GL_LOOP]
GL_LOOP,
	XCALL IOS (CHN045,ORDLIN,READ,LOKCTL)
	IF (LOKCTL .NE. 0) GOTO GL_EOF
	IF (LORDNO .NE. OORDNO) RETURN
	IF (LTYPE .EQ. 'M') GOTO GL_LOOP
	AMT = (LQTYOR * LPRICE)#1
	OSALE = OSALE + AMT
	GOTO GL_LOOP
GL_EOF,

	RETURN
;-------------------------------------------
GET_DUCT,
	CLEAR DUCT_AMT
	FIND (CHN175, DUCACC, OORDNO) [ERR=GD_LOOP]
GD_LOOP,
	XCALL IOS (CHN175, DUCACC, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO GD_EOF
	IF (DUCTOR .NE. OORDNO) RETURN
	D1 = (POUNDS*GPRICE)#1
	D2 = (SQFLIN*LINPRC)#1
	DUCT_AMT = DUCT_AMT + D1 + D2
	GOTO GD_LOOP
GD_EOF,
	RETURN
;-------------------------------------------

PRT_REPORT,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	FIND (CHNWRK, CEST, ^FIRST)
LOOP,
	READS (CHNWRK, CEST, EOF)
	TOTAMT = CE_NUMINV(1)+CE_NUMINV(2)+CE_NUMINV(3)
	TOTAMT = TOTAMT + CE_NUMEST(1)+CE_NUMEST(2)+CE_NUMEST(3)
	IF (TOTAMT .LE. 0) GOTO LOOP

;;;	IF (CE_NUMINV.LE.0 .AND. CE_NUMEST.LE.0) GOTO LOOP
	IF (CE_SLSMAN.GT.0) XCALL IO (1,SALMAN,CE_SLSMAN,READ,LOKCTL)
	PLINE (1,2) = CE_SLSMAN, 'ZX'
	PLINE (6,30) = SLSNM
	PLINE (33,38) = 'SALES'

	PLINE (41,45) = CE_NUMINV(1),	'ZZZX-'
	PLINE (47,59) = CE_DLRINV(1),	'Z,ZZZ,ZZX.XX-'
	PLINE (63,67) = CE_NUMINV(2),	'ZZZX-'
	PLINE (69,81) = CE_DLRINV(2),	'Z,ZZZ,ZZX.XX-'
	PLINE (84,88) = CE_NUMINV(3),	'ZZZX-'
	PLINE (90,102) = CE_DLRINV(3),	'Z,ZZZ,ZZX.XX-'

	CALL PRINT

	PLINE (33,38) = 'QUOTES'

	PLINE (41,45) = CE_NUMEST(1),	'ZZZX-'
	PLINE (47,59) = CE_DLREST(1),	'Z,ZZZ,ZZX.XX-'
	PLINE (63,67) = CE_NUMEST(2),	'ZZZX-'
	PLINE (69,81) = CE_DLREST(2),	'Z,ZZZ,ZZX.XX-'
	PLINE (84,88) = CE_NUMEST(3),	'ZZZX-'
	PLINE (90,102) = CE_DLREST(3),	'Z,ZZZ,ZZX.XX-'

	CALL PRINT

	CALL PRINT

	DSN = CE_SLSMAN/10
	USING DSN SELECT
	(8),	BEGIN
		T8_NUMINV(1) = T8_NUMINV(1) + CE_NUMINV(1)
		T8_DLRINV(1) = T8_DLRINV(1) + CE_DLRINV(1)
		T8_NUMINV(2) = T8_NUMINV(2) + CE_NUMINV(2)
		T8_DLRINV(2) = T8_DLRINV(2) + CE_DLRINV(2)
		T8_NUMINV(3) = T8_NUMINV(3) + CE_NUMINV(3)
		T8_DLRINV(3) = T8_DLRINV(3) + CE_DLRINV(3)

		T8_NUMEST(1) = T8_NUMEST(1) + CE_NUMEST(1) 
		T8_DLREST(1) = T8_DLREST(1) + CE_DLREST(1)
		T8_NUMEST(2) = T8_NUMEST(2) + CE_NUMEST(2)
		T8_DLREST(2) = T8_DLREST(2) + CE_DLREST(2)
		T8_NUMEST(3) = T8_NUMEST(3) + CE_NUMEST(3)
		T8_DLREST(3) = T8_DLREST(3) + CE_DLREST(3)
		END
	(9),	BEGIN
		T9_NUMINV(1) = T9_NUMINV(1) + CE_NUMINV(1)
		T9_DLRINV(1) = T9_DLRINV(1) + CE_DLRINV(1)
		T9_NUMINV(2) = T9_NUMINV(2) + CE_NUMINV(2)
		T9_DLRINV(2) = T9_DLRINV(2) + CE_DLRINV(2)
		T9_NUMINV(3) = T9_NUMINV(3) + CE_NUMINV(3)
		T9_DLRINV(3) = T9_DLRINV(3) + CE_DLRINV(3)

		T9_NUMEST(1) = T9_NUMEST(1) + CE_NUMEST(1) 
		T9_DLREST(1) = T9_DLREST(1) + CE_DLREST(1)
		T9_NUMEST(2) = T9_NUMEST(2) + CE_NUMEST(2)
		T9_DLREST(2) = T9_DLREST(2) + CE_DLREST(2)
		T9_NUMEST(3) = T9_NUMEST(3) + CE_NUMEST(3)
		T9_DLREST(3) = T9_DLREST(3) + CE_DLREST(3)
		END
	ENDUSING

	GT_NUMINV(1) = GT_NUMINV(1) + CE_NUMINV(1)
	GT_DLRINV(1) = GT_DLRINV(1) + CE_DLRINV(1)
	GT_NUMINV(2) = GT_NUMINV(2) + CE_NUMINV(2)
	GT_DLRINV(2) = GT_DLRINV(2) + CE_DLRINV(2)
	GT_NUMINV(3) = GT_NUMINV(3) + CE_NUMINV(3)
	GT_DLRINV(3) = GT_DLRINV(3) + CE_DLRINV(3)

	GT_NUMEST(1) = GT_NUMEST(1) + CE_NUMEST(1) 
	GT_DLREST(1) = GT_DLREST(1) + CE_DLREST(1)
	GT_NUMEST(2) = GT_NUMEST(2) + CE_NUMEST(2)
	GT_DLREST(2) = GT_DLREST(2) + CE_DLREST(2)
	GT_NUMEST(3) = GT_NUMEST(3) + CE_NUMEST(3)
	GT_DLREST(3) = GT_DLREST(3) + CE_DLREST(3)

	GOTO LOOP

;-----------SALESMAN-----------            NO        AMOUNT
;ZX   AAAAAAAAAAAAAAAAAAAAAAAAA  SALES   ZZZX  Z,ZZZ,ZZX.XX-
;1234567890123456789012345678901234567890123456789012345678901234567890
;         1         2         3         4         5         6         7
EOF,	
	CALL PRT_TOTALS

	IF (PRNTSW .GT. 0) CALL LPOFF
	RETURN
;-------------------------------------------
PRT_TOTALS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	PLINE = 
;;;	PLINE (6,30) = 'Xay Vue'
	PLINE (6,30) = 'Gee Lee'
	PLINE (33,38) = 'SALES'

	PLINE (41,45) = T9_NUMINV(1),	'ZZZX-'
	PLINE (47,59) = T9_DLRINV(1),	'Z,ZZZ,ZZX.XX-'
	PLINE (63,67) = T9_NUMINV(2),	'ZZZX-'
	PLINE (69,81) = T9_DLRINV(2),	'Z,ZZZ,ZZX.XX-'
	PLINE (84,88) = T9_NUMINV(3),	'ZZZX-'
	PLINE (90,102) = T9_DLRINV(3),	'Z,ZZZ,ZZX.XX-'

	CALL PRINT

	PLINE (33,38) = 'QUOTES'

	PLINE (41,45) = T9_NUMEST(1),	'ZZZX-'
	PLINE (46,59) = T9_DLREST(1),	'ZZ,ZZZ,ZZX.XX-'
	PLINE (63,67) = T9_NUMEST(2),	'ZZZX-'
	PLINE (68,81) = T9_DLREST(2),	'ZZ,ZZZ,ZZX.XX-'
	PLINE (84,88) = T9_NUMEST(3),	'ZZZX-'
	PLINE (89,102) = T9_DLREST(3),	'ZZ,ZZZ,ZZX.XX-'
	CALL PRINT
	CALL PRINT

	PLINE = 
	PLINE (6,30) = 'Sarah Anderson'
	PLINE (33,38) = 'SALES'

	PLINE (41,45) = T8_NUMINV(1),	'ZZZX-'
	PLINE (47,59) = T8_DLRINV(1),	'Z,ZZZ,ZZX.XX-'
	PLINE (63,67) = T8_NUMINV(2),	'ZZZX-'
	PLINE (69,81) = T8_DLRINV(2),	'Z,ZZZ,ZZX.XX-'
	PLINE (84,88) = T8_NUMINV(3),	'ZZZX-'
	PLINE (90,102) = T8_DLRINV(3),	'Z,ZZZ,ZZX.XX-'

	CALL PRINT

	PLINE (33,38) = 'QUOTES'

	PLINE (41,45) = T8_NUMEST(1),	'ZZZX-'
	PLINE (46,59) = T8_DLREST(1),	'ZZ,ZZZ,ZZX.XX-'
	PLINE (63,67) = T8_NUMEST(2),	'ZZZX-'
	PLINE (68,81) = T8_DLREST(2),	'ZZ,ZZZ,ZZX.XX-'
	PLINE (84,88) = T8_NUMEST(3),	'ZZZX-'
	PLINE (89,102) = T8_DLREST(3),	'ZZ,ZZZ,ZZX.XX-'
	CALL PRINT
	CALL PRINT

	PLINE = 
	PLINE (6,30) = 'TOTAL'
	PLINE (33,38) = 'SALES'

	PLINE (41,45) = GT_NUMINV(1),	'ZZZX-'
	PLINE (46,59) = GT_DLRINV(1),	'ZZ,ZZZ,ZZX.XX-'
	PLINE (63,67) = GT_NUMINV(2),	'ZZZX-'
	PLINE (68,81) = GT_DLRINV(2),	'ZZ,ZZZ,ZZX.XX-'
	PLINE (84,88) = GT_NUMINV(3),	'ZZZX-'
	PLINE (89,102) = GT_DLRINV(3),	'ZZ,ZZZ,ZZX.XX-'

	CALL PRINT

	PLINE (33,38) = 'QUOTES'

	PLINE (41,45) = GT_NUMEST(1),	'ZZZX-'
	PLINE (46,59) = GT_DLREST(1),	'ZZ,ZZZ,ZZX.XX-'
	PLINE (63,67) = GT_NUMEST(2),	'ZZZX-'
	PLINE (68,81) = GT_DLREST(2),	'ZZ,ZZZ,ZZX.XX-'
	PLINE (84,88) = GT_NUMEST(3),	'ZZZX-'
	PLINE (89,102) = GT_DLREST(3),	'ZZ,ZZZ,ZZX.XX-'
	CALL PRINT

	RETURN
;-------------------------------------------


CLRARA,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR ARRAYS
	MAXARA = 99

;;;	FOR I FROM 1 THRU MAXARA
;;;		BEGIN
;;;		CLEAR A_MAN(I)
;;;		CLEAR A_NUM(I)
;;;		CLEAR A_DLR(I)
;;;		END
	RETURN
;-------------------------------------------
PRINT,
	IF (PRNTSW.EQ.0) CALL LPON
	if (lincnt.ge.58) lincnt = 60

	XCALL LPOUT (LINCNT,PGCNT,PLINE,TITLE,HDR1,HDR2,HDR,LEG,
&		LEG,LEG,0,0,132,1,LPSW,RPTNUM,PRTTYP)
	RETURN
LPON,
	LPSW = 1
	SPLFIL (5,6) = 'AN'
	XCALL AR_LPON (LPSW,SPLFIL)
	IF (LPSW.EQ.0) GO TO ENDOFF
	LPARG = 2
	IF (LPSW.EQ.2) LPARG = 4
	XCALL WATE (LPARG,V)
	PRNTSW = 1
	RETURN
LPOFF,
	XCALL AR_LPOFF (LPSW,SPLFIL,PGCNT)
	PRNTSW =
	RETURN
;-------------------------------------------

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK
	CMPCOD = CMPNAM(CMPNO)

	SWITCH = 5
	XCALL FILEC (CMPCOD, 4,'SI',44,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN044 = 4

	SWITCH = 5
	XCALL FILEC (CMPCOD, 5,'SI',45,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN045 = 5

;2020 ONLY, THEN UNCOMMENT BELOW
	USING CMPCOD SELECT
	('SMC'),	OPEN (8,SI,'SMC:SLHH20.SMM')
	('ROC'),	OPEN (8,SI,'ROC:SLHH20.ROM')
	('CAT'),	OPEN (8,SI,'CAT:SLHH20.CAM')	
	ENDUSING

;;;	SWITCH = 5
;;;	XCALL FILEC (CMPCOD, 8,'SI',184,SWITCH)
;;;	IF (SWITCH .EQ. 9) RETURN
	CHN184 = 8

	SWITCH = 5
	XCALL FILEC (CMPCOD, 9,'SI',175,SWITCH)
	IF (SWITCH .EQ. 9) RETURN
	CHN175 = 9

	
	OPNOK = 1
	RETURN
;-------------------------------------------

CLOSE,
	IF (CHN044) CLOSE CHN044
	IF (CHN045) CLOSE CHN045
	IF (CHN175) CLOSE CHN175
	IF (CHN184) CLOSE CHN184

	RETURN
;-------------------------------------------
