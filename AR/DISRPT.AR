;  DISRPT / AR 
;
;		A/R TO G/L DISTRIBUTION REPORT
;
; 11-26-13 Converted to isam

RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR


RECORD ARDIST		; 
		.INCLUDE 'DEF:RD008A.DEF'
RECORD ADSCTL		; 
		.INCLUDE 'DEF:RD008B.DEF'
RECORD	BRACKS
		.INCLUDE 'DEF:RD008C.DEF'

RECORD ARACCT		; 
		.INCLUDE 'DEF:RD007A.DEF'
;RECORD	,X		; 
;		.INCLUDE 'DEF:RD007B.DEF'
RECORD HDR1
		,A10
	SECTYP	,A50
RECORD DTLHDR
		,A1
		,A6,	'ACCT-#'
		,A3
		,A11,	'DESCRIPTION'
		,A23
		,A4	,'DATE'
		,A4
		,A6,	'CUST-#'
		,A5
		,A5,	'DOC-#'
		,A10
		,A6,	'AMOUNT'
RECORD SUMHDR
		,A1
		,A6,	'ACCT-#'
		,A3
		,A11,	'DESCRIPTION'
		,A23
		,A4,	'DATE'
		,A9
		,A6,	'AMOUNT'
RECORD TITLE
		,A30,	'A/R DISTRIBUTION TO G/L REPORT'
RECORD DTLGND
		,A16,	'DETAIL REPORT - '
	DTL_CO	,A3

RECORD SMLGND
		,A17,	'SUMMARY REPORT - '
	SUM_CO	,A3

RECORD LEGND3
		,A8,	'THROUGH:'
		,A2
	THRUDT	,A10
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD
	RECARR	,50A40

RECORD	VARS
	CMPCOD	,A3
	STDAT	,D8
	TAXTOT	,D10	;SSQ 9-25-98
	NUM_SUB	,D7	;SSQ 9-25-98
	ACTTOT	,D10
	ADSDT2	,D8
	ARCNT	,D5,	00000
	BSEND	,D5
	BSMID	,D5
	CNGCTL	,D1
	CNT	,D5,	00000
	CTOTAL	,D10
	DATTOT	,D10
	DTLRPT	,A1
	DTMASK	,A8,	'XX/XX/XX'
	DTOTAL	,D10
	ENDFLG	,D1
	ENTRY	,A10
	INXCTL	,D1
	LINCNT	,D2,	60
	LPSW	,D1
	P_COPIES	,D4
	LPARG	,D1
	KEY	,A7
	MASK	,A14,	'ZZ,ZZZ,ZZZ.XX-'
	MASK2	,A8,	'XXXX-XXX'
	N	,D5,	00001
	ORGDEL	,D5,	00000
	ORGREC	,D5
	PGCNT	,D6,	000000
	PLINE	,A132
	RPTNUM	,D3
	PRTTYP	,A1
	PRNTSW	,D1
	PRGFIL	,A1
	PRTCTL	,D3
	RDCNT	,D5
	RECNT	,D5
	RPTDAT	,D8
	RPTDT2	,D8
	SAVACT	,D7
	SAVDAT	,D8
	SAVTYP	,D1,	-1
	SPLFIL	,A14
	SRCCTL	,D1
	SUBTOT	,D10
	SUMRPT	,A1
	SWITCH	,D1
	TODAY	,D8
	TODAA	,A10
	TDATE	,D6
	V	,D1
	WHATNO	,D2
	WRTCNT	,D5
	READ	,D1,	0
	WRITE	,D1,	1
	LOKCTL	,D1
PROC
	XCALL TERID (V)
	V = 1

	XCALL WHO(CMPCOD)
	DTL_CO = CMPCOD
	SUM_CO = CMPCOD

	XCALL RDATE (TDATE)
	XCALL DATE8(TDATE, D_OUT, TODAY, TODAA, D_SW)

	XCALL OUTPT (1,1,2,'PRINT A/R DISTRIBUTION REPORT',V)
	SWITCH = 1
	XCALL FILES (8,'I',08,SWITCH)		;FILE # 08 -- ARDIST FILE
	IF (SWITCH.EQ.9) GO TO END2
	SWITCH = 1
	XCALL FILES (7,'SI',07,SWITCH)
	IF (SWITCH.EQ.9) GO TO END1
	LOKCTL = 1
	XCALL IO (8,ADSCTL,1,READ,LOKCTL)
	IF (REC008.EQ.1) GO TO NODIST
;	LOKCTL = 1
;	XCALL IO (7,ARACCT,1,READ,LOKCTL)
;	BSEND = ORG007
DISPLA,
	XCALL OUTPT (2,1,2,'\',V)
	XCALL OUTPT (6,21,0,'PLEASE ENTER:',V)
	XCALL OUTPT (08,26,0,'1. START   DATE',V)
	XCALL OUTPT (10,26,0,'2. CUT-OFF DATE',V)
	XCALL OUTPT (12,26,0,'3. DETAIL REPORT ?',V)
	XCALL OUTPT (14,26,0,'4. SUMMARY REPORT ?',V)
	XCALL OUTPT (16,26,0,'5. PURGE FILE ?',V)

STDAT,
	CTL = '08,47,08,00,DE'
	CALL INPUT
	GO TO (DISPLA,ENDOFF), INXCTL
	STDAT = ENTRY (1,8)
	IF (STDAT.EQ.0) 
		BEGIN
		STDAT = TODAY
		XCALL OUTPT (ROW, COL, 0, TODAA, V)
		END
	IF (STDAT.EQ.0) GO TO STDAT
RPTDAT,
	CTL = '10,47,08,00,DE'
	CALL INPUT
	GO TO (DISPLA,ENDOFF), INXCTL
	RPTDAT = ENTRY (1,8)
	IF (RPTDAT.EQ.0) 
		BEGIN
		RPTDAT = TODAY
		XCALL OUTPT (ROW, COL, 0, TODAA, V)
		END
	IF (RPTDAT.EQ.0) GO TO RPTDAT

	THRUDT = TODAA
;;;	THRUDT = RPTDAT, DTMASK
;;;	RPTDT2 (1,2) = RPTDAT (5,6)
;;;	RPTDT2 (3,6) = RPTDAT (1,4)
	
	GO TO (ANYCNG), CNGCTL
	GO TO DTLRPT
DTLRPT,
	CTL = '12,47,01,00,YN'
	CALL INPUT
	DTLRPT = ENTRY (1,1)
	GO TO (ANYCNG), CNGCTL
SUMRPT,
	CTL = '14,47,01,00,YN'
	CALL INPUT
	SUMRPT = ENTRY (1,1)
	GO TO (ANYCNG), CNGCTL
PRGFIL,
	CTL = '16,47,01,00,YN'
	CALL INPUT
	PRGFIL = ENTRY (1,1)
	GO TO ANYCNG
CNGBR,
	GO TO (STDAT,RPTDAT,DTLRPT,SUMRPT,PRGFIL), WHATNO
	CNGCTL = 3
	GO TO ANYCNG
NODIST,
	XCALL OUTPT (12,1,1,'\',V)
	XCALL OUTPT (12,26,0,'NO DISTRIBUTIONS ON FILE',V)
	XCALL MESAG (' ',2)
	GO TO ENDOFF
PROCES,
	V = 2
	IF (DTLRPT.NE.'Y'.AND.SUMRPT.NE.'Y') GO TO PRGDST

	NUM_SUB = 0	;SSQ 9-25-98
READ,
	LOKCTL = 1
	XCALL IOS (8,ARDIST,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO ENDRPT
	IF (ARDIST.EQ.BRACKS) GO TO ENDRPT

	IF (ADSDAT .LT. STDAT) GOTO READ	;SSQ 3-4-04
	IF (ADSDAT .GT. RPTDAT) GOTO READ
;;;	ADSDT2 (1,2) = ADSDAT (5,6)
;;;	ADSDT2 (3,6) = ADSDAT (1,4)
;;;	IF (ADSDT2.GT.RPTDT2) GO TO READ

;added 7-6-20
	IF (ADSCUS .EQ. 63340) GOTO read			;skip rockford
	IF (ADSCUS .EQ. 68780) GOTO read			;skip smp 
	IF (ADSCUS .EQ. 68781) GOTO read			;skip phd
;7-6-20 ------------------------------------


	IF (ADSTYP.NE.SAVTYP) GO TO NEWTYP
	IF (ADSACT.NE.SAVACT) GO TO NEWACT
	IF (DTLRPT.NE.'Y'.AND.ADSDAT.NE.SAVDAT) GO TO NEWDAT
ADD,
	ACTTOT = ACTTOT + ADSAMT
	TAXTOT = TAXTOT + ADSAMT

	SUBTOT = SUBTOT + ADSAMT
	IF (DTLRPT.NE.'Y') GO TO DATTOT

	XCALL DATE8(ADSDAT, D_OUT, D_OUTR, D_FMT, D_SW)
	PLINE (41,50) = D_FMT
	PLINE (53,58) = ADSCUS
	PLINE (63,68) = ADSDOC
	PLINE (74,87) = ADSAMT, MASK
	CALL PRINT
	GO TO READ
DATTOT,
	DATTOT = DATTOT + ADSAMT
	GO TO READ
NEWDAT,
	IF (SAVTYP.EQ.-1) GO TO FSTDAT
	XCALL DATE8(SAVDAT, D_OUT, D_OUTR, D_FMT, D_SW)
	PLINE (41,50) = D_FMT

	PLINE (53,66) = DATTOT, MASK
	CALL PRINT2
FSTDAT,
	IF (ENDFLG.EQ.1) RETURN
	SAVDAT = ADSDAT
	DATTOT = 0
	IF (SAVTYP.NE.ADSTYP.OR.SAVACT.NE.ADSACT) RETURN
	GO TO ADD
NEWACT,
	IF (DTLRPT.NE.'Y') CALL NEWDAT
	IF (SAVTYP.EQ.-1) GO TO FSTACT
	IF (PRNTSW.EQ.1) XCALL LINFD (1)
	INCR LINCNT
	IF (DTLRPT.NE.'Y') GO TO ACTSUM
	PLINE (59,72) = 'ACCOUNT TOTAL:'
	PLINE (74,87) = ACTTOT, MASK
	CALL PRINT
	XCALL LINFD (2)
	LINCNT = LINCNT + 2
	IF (ADSACT(1,4) .EQ. SAVACT(1,4))
	THEN	INCR NUM_SUB
	ELSE	BEGIN
		IF (NUM_SUB .GT. 0)
		  BEGIN
		  PLINE (54,72) = 'MAIN ACCOUNT TOTAL:'
		  PLINE (74,87) = TAXTOT, MASK
		  CALL PRINT
		  XCALL LINFD (2)
		  LINCNT = LINCNT + 2
		  END
		NUM_SUB = 0
		TAXTOT = 0
		END

	GO TO FSTACT
ACTSUM,
	PLINE (38,51) = 'ACCOUNT TOTAL:'
	PLINE (53,66) = ACTTOT, MASK
	CALL PRINT2
	XCALL LINFD (2)
	LINCNT = LINCNT + 2
	IF (ADSACT(1,4) .EQ. SAVACT(1,4))
	THEN	INCR NUM_SUB
	ELSE	BEGIN
		IF (NUM_SUB .GT. 0)
		  BEGIN
		  PLINE (33,51) = 'MAIN ACCOUNT TOTAL:'
		  PLINE (53,66) = TAXTOT, MASK
		  CALL PRINT
		  XCALL LINFD (2)
		  LINCNT = LINCNT + 2
		  END
		NUM_SUB = 0
		TAXTOT = 0
		END
FSTACT,
	IF (ENDFLG.EQ.1) RETURN
	SAVACT = ADSACT
	ACTTOT = 0
	
	SRCCTL = 0
	LOKCTL = 0
	XCALL ISIO (7, ARACCT, SAVACT, READ, LOKCTL)
	IF (LOKCTL .NE. 0) SRCCTL = 1
	
;	KEY = SAVACT, 'XXXXXXX'
;	XCALL SERCH (7,ARACCT,KEY,1,7,BSEND,BSMID,SRCCTL,4,32,37,0,0,0,0)
	IF (SRCCTL.EQ.1) ARACDS = '** ACCOUNT NOT ON FILE **'
	IF (SAVTYP.NE.ADSTYP) RETURN
	PLINE (1,8) = SAVACT, MASK2
	PLINE (10,39) = ARACDS
	GO TO ADD
NEWTYP,
	CALL NEWACT
	IF (SAVTYP.EQ.-1) GO TO FSTTYP
	IF (SAVTYP.EQ.0.OR.SAVTYP.EQ.6.OR.SAVTYP.EQ.7) CTOTAL = CTOTAL + SUBTOT
	IF (SAVTYP.NE.0.AND.SAVTYP.NE.6.AND.SAVTYP.NE.7) DTOTAL = DTOTAL + SUBTOT
	IF (DTLRPT.NE.'Y') GO TO TYPSUM
	PLINE (59,72) = 'SECTION TOTAL:'
	PLINE (74,87) = SUBTOT, MASK
	CALL PRINT
	IF (ENDFLG.NE.1) LINCNT = 60
	GO TO FSTTYP
TYPSUM,
	PLINE (38,51) = 'SECTION TOTAL:'
	PLINE (53,66) = SUBTOT, MASK
	CALL PRINT2
	IF (ENDFLG.NE.1) LINCNT = 60
FSTTYP,
	IF (ENDFLG.EQ.1) RETURN
	IF (LPSW.EQ.-4) CALL SWITCH
	SAVTYP = ADSTYP
	SUBTOT = 0
	IF (SAVTYP.EQ.0) SECTYP = '*** DEBIT TO A/R SECTION ***'
	IF (SAVTYP.EQ.1) SECTYP = '*** INCOME SECTION ***'
	IF (SAVTYP.EQ.2) SECTYP = '*** OTHER CHARGES SECTION ***'
	IF (SAVTYP.EQ.3) SECTYP = '*** SALES TAX SECTION ***'
	IF (SAVTYP.EQ.4) SECTYP = '*** FREIGHT SECTION ***'
	IF (SAVTYP.EQ.5) SECTYP = '*** FINANCE CHARGES SECTION ***'
	IF (SAVTYP.EQ.6) SECTYP = '*** CASH RECEIVED SECTION ***'
	IF (SAVTYP.EQ.7) SECTYP = '*** DISCOUNTS/ALLOWANCES GIVEN SECTION ***'
	IF (SAVTYP.EQ.8) SECTYP = '*** CREDIT TO A/R SECTION ***'
	IF (SAVTYP.EQ.9) SECTYP = '*** NON A/R CASH SECTION ***'
	PLINE (1,8) = SAVACT, MASK2
	PLINE (10,39) = ARACDS
	GO TO ADD
SWITCH,
	LPSW = -LPSW
	SLEEP 2
	RETURN
ENDRPT,
	ENDFLG = 1
	CALL NEWTYP
	IF (PRNTSW.EQ.1) XCALL LINFD (2)
	LINCNT = LINCNT + 2
	IF (DTLRPT.NE.'Y') GO TO ENDSUM
	PLINE (59,71) = 'TOTAL DEBITS:'
	PLINE (74,87) = DTOTAL, MASK
	CALL PRINT
	PLINE (59,72) = 'TOTAL CREDITS:'
	PLINE (74,87) = CTOTAL * (-1), MASK
	CALL PRINT
	XCALL LINFD (1)
	PLINE (59,72) = 'CONTROL TOTAL:'
	PLINE (74,87) = DTOTAL - CTOTAL, MASK
	CALL PRINT
	DTLRPT = 'N'
	SAVTYP = -1
	SAVACT = 0
	ACTTOT = 0
	TAXTOT = 0
	SUBTOT = 0
	CTOTAL = 0
	DTOTAL = 0
	ENDFLG = 0
	LINCNT = 60
	GO TO GOBACK
ENDSUM,
	PLINE (38,50) = 'TOTAL DEBITS:'
	PLINE (53,66) = DTOTAL, MASK
	CALL PRINT2
	PLINE (38,51) = 'TOTAL CREDITS:'
	PLINE (53,66) = CTOTAL * (-1), MASK
	CALL PRINT2
	XCALL LINFD (1)
	PLINE (38,51) = 'CONTROL TOTAL:'
	PLINE (53,66) = DTOTAL - CTOTAL, MASK
	CALL PRINT2
	SUMRPT = 'N'
GOBACK,
	LOKCTL = 1
	XCALL IO (8,ARDIST,1,READ,LOKCTL)
	GO TO PROCES
PRGDST,
	IF (PRGFIL.NE.'Y') GO TO ENDOFF
	IF (PRNTSW.EQ.1) CALL LPOFF
	XCALL WATE (4,V)
	XCALL FILES (8,'I',08,4)
	SWITCH = 3
	XCALL FILES (8,'U',08,SWITCH)
	IF (SWITCH.EQ.9) GO TO END2
	XCALL FILES (8,'U',08,5)
	XCALL FLAGS (10000000)
	LOKCTL = 1
	XCALL IO (8,ADSCTL,1,READ,LOKCTL)
	RECNT = REC008
	ORGREC = ORG008
	RDCNT = 2
	WRTCNT = 1
RDNEXT,
	LOKCTL = 1
	XCALL IO (8,ARDIST,RDCNT,READ,LOKCTL)
	IF (ARDIST.EQ.BRACKS) GO TO ENDPRG
	INCR RDCNT
	IF (GLFLAG.EQ.'Y'.AND.ADSFLG.EQ.0) GO TO SKPDEL

	IF (ADSDAT .LE. RPTDAT) GOTO DELETE
;;;	ADSDT2 (1,2) = ADSDAT (5,6)
;;;	ADSDT2 (3,6) = ADSDAT (1,4)
;;;	IF (ADSDT2.LE.RPTDT2) GO TO DELETE

SKPDEL,
	INCR ARCNT
	RECARR (ARCNT) = ARDIST
	IF (ARCNT.EQ.50) CALL WRTARR
CONTIN,
	IF (RDCNT.GT.RECNT) GO TO ENDPRG
	GO TO RDNEXT
DELETE,
	IF ((RDCNT-1).LE.ORGREC) INCR ORGDEL
	GO TO CONTIN
WRTARR,
	INCR WRTCNT
	LOKCTL = 1
	XCALL IO (8,RECARR(N),WRTCNT,WRITE,LOKCTL)
	IF (N.EQ.ARCNT) GO TO ENDWRT
	INCR N
	GO TO WRTARR
ENDWRT,
	ARCNT = 0
	N = 1
	RETURN
ENDPRG,
	IF (ARCNT.NE.0) CALL WRTARR
	LOKCTL = 1
	XCALL IO (8,ADSCTL,1,READ,LOKCTL)
	ORG008 = ORG008 - ORGDEL
	REC008 = WRTCNT
	DEL008 = 0
	LOKCTL = 1
	XCALL IO (8,ADSCTL,1,WRITE,LOKCTL)
	ARDIST = BRACKS
WRTBRK,
	IF (WRTCNT.EQ.RECNT) GO TO ENDOFF
	INCR WRTCNT
	LOKCTL = 1
	XCALL IO (8,ARDIST,WRTCNT,WRITE,LOKCTL)
	GO TO WRTBRK
ENDOFF,
	IF (PRNTSW) CALL LPOFF
	XCALL FILES (7,'I',07,4)
END1,
	XCALL FILES (8,'I',08,4)
END2,
	XCALL PGCHN ('AR:ARMENU',1)
PRINT,
	IF (PRNTSW.EQ.0) CALL LPON
	XCALL LPOUT (LINCNT,PGCNT,PLINE,TITLE,HDR1,' ',DTLHDR,DTLGND,' ',
&		     LEGND3,0,132,PRTCTL,1,LPSW,RPTNUM,PRTTYP)
	RETURN
PRINT2,
	IF (PRNTSW.EQ.0) CALL LPON
	XCALL LPOUT (LINCNT,PGCNT,PLINE,TITLE,HDR1,' ',SUMHDR,SMLGND,' ',
&		     LEGND3,0,132,PRTCTL,1,LPSW,RPTNUM,PRTTYP)
	RETURN
LPON,
	LPSW = 1
	SPLFIL (5,6) = 'AL'

	XCALL AR_LPON (LPSW,SPLFIL,,,,P_COPIES)
;;;	XCALL AR_LPON (LPSW,SPLFIL)
	IF (LPSW.EQ.0) GO TO ENDOFF
	LPARG = 2
	IF (LPSW.EQ.2) LPARG = 4
	XCALL WATE (LPARG,V)
	PRNTSW = 1
	RETURN
LPOFF,
	XCALL AR_LPOFF (LPSW,SPLFIL,PGCNT,P_COPIES)
;;;	XCALL AR_LPOFF (LPSW,SPLFIL,PGCNT)
	PGCNT =
	LINCNT = 60
	PRNTSW =
	RETURN
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
ANYCNG,
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (PROCES,CNGBR,DISPLA), CNGCTL + 1
	GO TO ANYCNG
END
