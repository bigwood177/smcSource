;;;SUBROUTINE ROLDX	;
SUBROUTINE CUSNT	;
	N_CUST	,D		;CUSTOMER #
	N_TYPE	,D		;TYPE OF NOTES
	N_UPDT	,A		;ALLOW UPDATES 
	N_X	,D		;ROW
	N_Y	,D		;COL
	N_ROWS	,D		;MAX ROWS
	N_CMAS	,A		;CUSTOMER MASTER RECORD (OPTIONAL)

	.INCLUDE 'wnd:WINDOWS.DEF'

RECORD	CUSNOT
	.INCLUDE 'DEF:RD181A.DEF'

RECORD,X
	AR_KEY	,D10

RECORD	CUSMAS
	.INCLUDE 'DEF:RD001A.DEF'

RECORD	RKEY
	R_CUST	,D6
	R_TYPE	,D2
	R_SEQ	,D4

RECORD	POPARA
	PARRY	,40A60		;FORMATTED DATA
	PRFA	,40A6		;CORRESPONDING KEYS
	NUMARA	,D3		;NUMBER OF ARRAY ELEMENTS USED
	MAXARA	,D3,40		;MAX # OF ARRAY ELEMENTS
	NUMROW	,D2		;NUMBER OF POP WINDOW ROWS TO USE
	WX	,D2		;X COORD (CENTER WINDOW IF ZERO)
	WY	,D2		;Y COORD (CENTER WINDOW IF ZERO)
	PLEN	,D3,074		;LENGHT OF DATA LINE
	DLINE	,A74		;WORKING VARIABLE FOR SINGLE DATA LINE
	PI	,D2		;ELEMENT SELECTED, 0 = ABORT

RECORD	FUNKEY
	.INCLUDE 'DEF:FUNKEY.DEF'

RECORD	WRKLIN
	ARO	,A1
		,A1
	REST	,A80

RECORD
	VALTYP	,5A8,	'PERSONAL','SHIPPING','GENERAL ','CREDIT  ','ALL     '
	SELTYP	,D2		;TYPE OF NOTES SELECTED
	MAXTYP	,D1,	5	;MAX NUMBER OF TYPES OF NOTES

RECORD	REDFIL
	RDV	,A3
	RFL	,A8
	RXT	,A3
	
RECORD	VARS
	CMPCOD	,A3
	LINE	,A60
	BLANKS	,A22
	TPHONE	,D10
	TFAX	,D10
	X_TYPE	,D2		;CONVERTED TYPE
	SWITCH	,D1
	ITEM_ADDED	,D1
	SAVCUS	,D6
	SAVTYP	,D2
	IDX	,D3
	REV_RFA	,A6
	WRKRFA	,A6
	SAVIDX	,D3
	ENTRY	,A60
	INXCTL	,D1
	CHAN	,D3
	STAT	,D1
	TNMBR	,D3
	READ	,D1,0
	WRITE	,D1,1
	STORE	,D1,2
	DELETE	,D1,3
	LOKCTL	,D1
	WND_1	,D4		;WINDOW #
	WND_0	,D4		;WINDOW #
	W1_ID	,A8		;WINDOW ID
	W0_ID	,A8		;WINDOW ID
	W1_TITLE	,A20	;WINDOW TITLE
	W2_TITLE	,A20	;WINDOW TITLE
	R_ADD	,A75
	WND_2	,D4
	W2_ID	,A8
	DEC	,D6
	W_DEC	,D6
	ALPHA	,A3
	WHDR	,A80
	F_KEY	,D3
	I	,D5
	J	,D5
	VAL	,D1
	WROW	,D2
	WCOL	,D2
	FIRST_ROW	,D2
	LAST_ROW	,D2
	SAVE_ROW	,D2
	X	,D2
	Y	,D2
	HT	,D2
	LN	,D2
	MAXROW	,D2
	WLEN	,D2
	TITLEN	,D2

PROC
	XCALL WHO(CMPCOD)

	IF (%PASSED(N_CMAS) )
	THEN	BEGIN
		CUSMAS = N_CMAS
		WHDR (1,25) = NAME
		WHDR (32,37) = 'PHONE:'
		WHDR (39,50) = EAPPHO,	'ZZZ-XXX-XXXX'
		WHDR (52,55) = 'FAX:'
		WHDR (57,68) = EFAX,	'ZZZ-XXX-XXXX'
		END
	ELSE	BEGIN
		CLEAR WHDR
		CLEAR CUSMAS
		END

	FIRST_ROW = 2

	CLEAR WND_1
	CALL OPENS
	CALL BLANK_WINDOW
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; display most recent customer notes...
	CALL READ_REVERSE
	CALL INIT_WINDOW

	IF (NUMARA .EQ. 0) 
	   BEGIN
	   CALL ADD_ITEM
	   IF (.NOT. ITEM_ADDED) GOTO EXIT_ROL
	   END
	GOTO DSPLOP		;SSQ 6-6-97

;====== MAIN PROCESSING =======================

REFRESH,	;GET A FRESH COPY OF DATA...

	CALL READ_REVERSE
	IF (NUMARA .EQ. 0) GOTO EXIT_ROL

	CALL INIT_WINDOW

DSPLOP,
	IF (SAVE_ROW .NE. 0)	CALL CLEAR_LAST_LINE

	WROW = WROW + VAL
	IF (WROW .GT. LAST_ROW) CALL SCROLL_DN
	IF (WROW .LT. FIRST_ROW) CALL SCROLL_UP

	IDX = IDX + VAL
	IF (IDX .GT. NUMARA) IDX = NUMARA
	IF (IDX .LE. 0) IDX = 1

	CALL DSPLIN
	CALL INPUT
	USING F_KEY SELECT
	(EXIT_KEY),	GOTO EXIT_ROL
	(F_11),		GOTO EXIT_ROL
	(END_KEY),	GOTO EXIT_ROL
	(UP_ARO),	BEGIN
			VAL = - 1
			GOTO DSPLOP
			END
	(DN_ARO),	BEGIN
			VAL =  1
			GOTO DSPLOP
			END
	(RGHT_ARO),	BEGIN
			CALL ITEM_SELECTED
			GOTO DSPLOP
			END
	(LEFT_ARO),	BEGIN
			CALL ITEM_SELECTED
			GOTO DSPLOP
			END
	(CR_KEY),	BEGIN
			GOTO REFRESH
			END

	(INS_KEY),		BEGIN		;^A = ADD
			CALL READ_REVERSE
			CALL INIT_WINDOW
			CALL ADD_ITEM
			CALL READ_REVERSE
			CALL INIT_WINDOW
			END
	(DEL_KEY),		BEGIN		;^D = DELETE
			CALL DELETE_ITEM
			GOTO REFRESH
			END
	(009),		BEGIN		;^I, <TAB> = INSERT
			CALL INSERT_ITEM
			GOTO DSPLOP
			END

	ENDUSING
	VAL = 0
	GOTO DSPLOP
	

EXIT_ROL,
	IF (WND_1)
		BEGIN
		XCALL W_DISP (WND_1,WD_ATTR,ATTR_CLR)
		XCALL W_UPDT
		XCALL W_PROC(WP_DELETE,WND_1)
		XCALL W_PROC(WP_DELETE,WND_0)
		END
	CLOSE CHAN
	RETURN

DSPLIN,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; move arrow, highlight selected line
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	ARO = '>'
	REST = PARRY(IDX)
	XCALL W_DISP (WND_1,WD_ATTR,ATTR_SET+ATTR_RVRS)
	XCALL W_DISP (WND_1,WD_POS,WROW,1,WRKLIN(1,WLEN))
	XCALL W_DISP (WND_1,WD_POS,WROW,1)

	SAVE_ROW = WROW
	RETURN
;----------------------------------------------------------------------

CLEAR_LAST_LINE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
			;;; CLEAR HI-LITE ON PREV LINE
			;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR ARO
	XCALL W_DISP (WND_1,WD_ATTR,ATTR_CLR+ATTR_RVRS)
	XCALL W_DISP (WND_1,WD_POS,SAVE_ROW,1,WRKLIN(1,WLEN))
	RETURN
;----------------------------------------------------------------------
INPUT,	;;;;;;;;;;;;;;;;;;;;;;;
	;;; FUNCTION KEY INPUT
	;;;;;;;;;;;;;;;;;;;;;;;

	XCALL WINPT (WND_1,WROW,1,01,00,'AE',ENTRY,INXCTL,F_KEY)
	RETURN

;----------------------------------------------------------------------

;;; WINDOW SCROLLING ROUTINES
SCROLL_DN,
	WROW = LAST_ROW
	IF (IDX .EQ. NUMARA) RETURN
	XCALL W_AREA(WND_1,WA_SCROLL,WAS_UP,1)
	XCALL W_DISP(WND_1,WD_POS,1,1,WD_CLR,WDC_EOL )
	XCALL W_DISP(WND_1,WD_POS,1,1,WHDR(1,PLEN) )
	RETURN

SCROLL_UP,
	WROW = FIRST_ROW
	IF (IDX .EQ. 1) RETURN
	XCALL W_AREA(WND_1,WA_SCROLL,WAS_DOWN,1)
	XCALL W_DISP(WND_1,WD_POS,1,1,WD_CLR,WDC_EOL )
	XCALL W_DISP(WND_1,WD_POS,1,1,WHDR(1,PLEN) )
	RETURN
;--------------------------



GET_FIRST_DATA,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; FIND FIRST NOTE RECORDS FOR CUST
		;;; AND FILL "PARRY" ARRAY...
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR CUSNOT
	AR_CUST = N_CUST
	XCALL ISIO (CHAN,CUSNOT,AR_KEY,READ,LOKCTL)
	CLEAR LOKCTL


FILL_ARA,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; GET MORE CUSTOMER NOTES
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR I
FCONT,
	WHILE (LOKCTL.EQ.0 .AND. AR_CUST.EQ.N_CUST .AND. I.LT.MAXARA)
		BEGIN
		INCR I
		XCALL GETRFA(CHAN,PRFA(I))
		PARRY(I) = AR_NOTE
		XCALL IOS (CHAN,CUSNOT,READ,LOKCTL)
		END

	NUMARA = I
	RETURN
;----------------------------------------

READ_REVERSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; FILL ARRAY W/ LAST OF CUSTOMER'S
		;;; NOTES.
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	REV_RFA = "NO RFA"
	CLEAR CUSNOT
	AR_CUST = N_CUST
	AR_SEQ = 9999
	XCALL ISIO (CHAN,CUSNOT,AR_KEY,READ,LOKCTL)
	CLEAR LOKCTL
	FOR I FROM 1 THRU MAXARA
		BEGIN
		READS (CHAN,CUSNOT,EOF_REV,REVERSE)
		IF (AR_CUST .NE. N_CUST) EXITLOOP
		XCALL GETRFA (CHAN,REV_RFA)		;LAST GOOD RFA
		END
EOF_REV,
	IF (REV_RFA .EQ. "NO RFA")
		BEGIN
		CLEAR NUMARA
		RETURN
		END

	XCALL POSRFA (CHAN,REV_RFA)
	XCALL IOS (CHAN,CUSNOT,READ,LOKCTL)
	CALL FILL_ARA

	RETURN
;----------------------------------------

;==================================================
;;; MAINTENANCE ROUTINES...
;==================================================

ITEM_SELECTED,	;;;;;;;;;;;;;
		;;; CHANGE
		;;;;;;;;;;;;;
	IF (N_UPDT .EQ. 'N') RETURN
	IF (PRFA(IDX) .EQ. '******') RETURN
	CALL INIT_W2
	XCALL W_DISP(WND_2,WD_POS,1,1,REST)

	XCALL POSRFA (CHAN,PRFA(IDX))
	XCALL IOS (CHAN,CUSNOT,READ,LOKCTL)
	ENTRY = AR_NOTE
;;;	XCALL X_INPT (WND_2,1,1,60,0,'AE',ENTRY,INXCTL)
	XCALL WINPT (WND_2,1,1,60,0,'AE',ENTRY,INXCTL)
	GOTO (ITEM_SELECTED,END_ITEM),INXCTL

	AR_NOTE = ENTRY
	XCALL ISIO (CHAN,CUSNOT,AR_KEY,WRITE,LOKCTL)
	PARRY(IDX) = AR_NOTE

END_ITEM,
	XCALL W_DISP(WND_2,WD_CLEAR)
	XCALL W_PROC(WP_REMOVE,WND_2)
	XCALL W_UPDT
	VAL = 0
	RETURN
;----------------------------------------

ADD_ITEM,	;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR ITEM_ADDED
	IF (N_UPDT .EQ. 'N') RETURN
	CALL INIT_W2

	CLEAR CUSNOT
	AR_CUST = N_CUST
	AR_SEQ = 0
	WROW = LAST_ROW
NEXT_ITEM,
	XCALL WINPT(WND_2,1,3,60,00,'AE',ENTRY,INXCTL)
	GOTO (ADD_ITEM,END_ITEM),INXCTL

	AR_NOTE = ENTRY

	XCALL ISIO (CHAN,CUSNOT,AR_KEY,STORE,LOKCTL)
	XCALL GETRFA(CHAN,WRKRFA)
	XCALL POSRFA(CHAN,WRKRFA)
	XCALL IOS (CHAN,CUSNOT,READ,LOKCTL)

	ITEM_ADDED = 1

	WROW = WROW + 1
	IF (WROW .GT. LAST_ROW)
		BEGIN
		XCALL W_AREA(WND_1,WA_SCROLL,WAS_UP,1)
		XCALL W_DISP(WND_1,WD_POS,1,1,WD_CLR,WDC_EOL )
		XCALL W_DISP(WND_1,WD_POS,1,1,WHDR(1,PLEN) )
		WROW = LAST_ROW
		END
	REST = AR_NOTE
	XCALL W_DISP(WND_1,WD_POS,WROW,1,WRKLIN(1,WLEN))

	IF (NUMARA .GE. MAXARA)
	   BEGIN
	   FOR J FROM 1 THRU MAXARA-1
		BEGIN
		PARRY(J) = PARRY(J+1)
		PRFA(J)  = PRFA(J+1)
		END
	   IDX = MAXARA - 1
	   NUMARA = IDX
	   END
	INCR IDX
	INCR NUMARA
	PARRY(IDX) = AR_NOTE
	XCALL GETRFA (CHAN,PRFA(IDX) )

	GOTO NEXT_ITEM

;----------------------------------------

DELETE_ITEM,	;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (N_UPDT .EQ. 'N') RETURN
	IF (PRFA(IDX) .EQ. '******') RETURN
	CALL INIT_W2

	XCALL W_DISP(WND_2,WD_POS,1,1,'DELETE, ARE YOU SURE ?')
	XCALL WINPT(WND_2,1,23,01,01,'YN',ENTRY,INXCTL)
	GOTO (END_ITEM),INXCTL-1

	XCALL POSRFA (CHAN,PRFA(IDX))
	XCALL IOS (CHAN,CUSNOT,READ,LOKCTL)
	XCALL ISIO (CHAN,CUSNOT,AR_KEY,DELETE,LOKCTL)

	GOTO END_ITEM
	RETURN
;----------------------------------------

INSERT_ITEM,	;;;;;;;;;;;;;;;;;;;;;;;;;;
	RETURN
;;; may add this option later...
	IF (N_UPDT .EQ. 'N') RETURN
	CALL INIT_W2
	XCALL MESAG ('INSERT_ITEM',1)
	XCALL W_PROC(WP_REMOVE,WND_2)

	RETURN
;----------------------------------------

;==================================================
;;; END MAINTENANCE ROUTINES...
;==================================================
BLANK_WINDOW,
	XCALL TNMBR (TNMBR)
	W0_ID(1,5) = 'BLANK'
	W0_ID(6,8) = TNMBR,	'XXX'

	LAST_ROW = N_ROWS + 1
	HT = LAST_ROW		;HEIGHT OF WINDOW, LEAVE ROOM FOR HEADER
	LN = PLEN + 2		;LENGHT OF WINDOW

;;; place window...
	XCALL W_PROC(WP_FIND,WND_0,W0_ID)
	IF (WND_0)	XCALL W_PROC(WP_DELETE,WND_0)
	XCALL W_PROC(WP_CREATE,WND_0,W0_ID,HT,LN)

	XCALL W_PROC(WP_PLACE,WND_0,N_X,N_Y)
	XCALL W_DISP(WND_0,WD_CLEAR)
	RETURN


INIT_WINDOW,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; DISPLAY WINDOW, FILL W/ DATA
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; determine height & length of window, x & y coordinates
;;; to center window on screen.
	NUMROW = N_ROWS

	LAST_ROW = NUMROW + 1
	IF (NUMROW .GT. NUMARA) LAST_ROW = NUMARA + 1
	HT = LAST_ROW		;HEIGHT OF WINDOW, LEAVE ROOM FOR HEADER
	LN = PLEN + 2		;LENGHT OF WINDOW
	

	X = N_X
	Y = N_Y

	XCALL TNMBR (TNMBR)
	W1_ID(1,5) = 'CUSNT'
	W1_ID(6,8) = TNMBR,	'XXX'

;;; place window...
	W1_TITLE = "CREDIT NOTES" 
	XCALL W_PROC(WP_FIND,WND_1,W1_ID)
	IF (WND_1)	XCALL W_PROC(WP_DELETE,WND_1)
	XCALL W_PROC(WP_CREATE,WND_1,W1_ID,HT,LN)

	TITLEN = %TRIM(W1_TITLE)
	IF (TITLEN .GT.0)
&	 XCALL W_BRDR(WND_1,WB_TITLE,W1_TITLE(1,TITLEN),WB_TPOS,WBT_TOP,WBT_CENTER)
	XCALL W_PROC(WP_PLACE,WND_1,X,Y)
	XCALL W_DISP(WND_1,WD_CLEAR)
	XCALL W_DISP (WND_1,WD_ATTR,ATTR_CLR+ATTR_RVRS)
	XCALL W_DISP(WND_1,WD_POS,1,1,WHDR(1,PLEN) )

;;; fill window w/ data...
;;; display to end of array...

	CLEAR ARO
	WLEN = LN
	WROW = 1

	IDX = 0
	FOR I FROM 1 THRU NUMARA
	    BEGIN
	    INCR WROW
	    IF (WROW .GT. LAST_ROW) CALL SCROLL_DN
	    IDX = IDX + 1
	    DLINE = PARRY(IDX)
	    REST = DLINE(1,PLEN)
	    XCALL W_DISP(WND_1,WD_POS,WROW,1,WRKLIN(1,WLEN) )
	    END
	XCALL W_UPDT

	CLEAR VAL
	CLEAR SAVE_ROW
	RETURN
;---------------------------------------------------------------------

INIT_W2,
	XCALL W_PROC(WP_FIND,WND_2,W2_ID)
	IF (.NOT. WND_2) XCALL W_PROC(WP_CREATE,WND_2,W2_ID,1,72)
;-
	W2_TITLE = "NEW NOTES"
	TITLEN = %TRIM(W2_TITLE)
	IF (TITLEN .GT.0)
&	 XCALL W_BRDR(WND_2,WB_TITLE,W2_TITLE(1,TITLEN),WB_TPOS,WBT_TOP,WBT_CENTER)
;-
	XCALL W_PROC(WP_PLACE,WND_2,X+HT+2,Y)
	XCALL W_DISP(WND_2,WD_CLEAR)
	RETURN
;---------------------------------------------------------------------


OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CHAN = 15
	SWITCH = 5
	XCALL FFILE (181, REDFIL, STAT)
	RXT(3,3) = 'M'
	IF (CMPCOD .EQ. 'ROC')
		BEGIN
		RDV = 'SMC'
		RXT = 'SMM'
		END

OPNLOP,
	INCR CHAN
	XCALL CHNOPN(CHAN,STAT)
	GOTO (OPNLOP),STAT
	CASE N_UPDT OF
	BEGINCASE
	'Y':	OPEN (CHAN, SU, REDFIL)
	'N':	OPEN (CHAN, SI, REDFIL)
;;;	'Y':	XCALL FILES (CHAN,'SU',181,SWITCH)
;;;	'N':	XCALL FILES (CHAN,'SI',181,SWITCH)
	ENDCASE
	RETURN
;-------------------------------------
