;  APLYCR / AR 
;
;		PGM TO ALLOW CHANGES OF APPLY-TO CREDIT # OF
;		A/R OPEN RECORDS
;
;	19-aug-02 ssq: DOCTP 6 = Credit Card
; 	5-7-18: ssq convert cusmas to isam
;	8-14-18; ssq convert aropen to isam
;
RECORD AROPEN		; 
		.INCLUDE 'DEF:RD003A.DEF'
RECORD AROCTL		; 
		.INCLUDE 'DEF:RD003B.DEF'
RECORD CUSMAS		; 
		.INCLUDE 'DEF:RD001A.DEF'
RECORD CUSCTL	,X	; 
		.INCLUDE 'DEF:RD001B.DEF'

RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD SNDMSG
		,A9,	'AR:AROCNT'
	RCNT	,D5
	OCNT	,D5
RECORD NXTMSG
		,A9,	'AR:ARMENU'
RECORD
	CLRAR3	,A13,	'003,AR:APLYCR'
	OPTION	,D1
	ENTRY	,A7
	INXCTL  ,D1
	DECMAL	,D18
	KCUSNO	,D6
	KDOCNO	,D6
	LSTCUS	,D6
	TYPDOC	,A4
	RECNO	,D5
	MASK	,A6,	'XXXXXX'
	SAVDAT	,D8
	OLDAPL	,D6
	ORGCUS	,D5
	ORGARO	,D5
	KEY   	,A6
	BSEND	,D5
	BSMID	,D5
	SRCCTL	,D1
	MSGCTL	,D1
	MAXREC	,D5
	SWITCH	,D1,	1
	V	,D1
	READ	,D1,	0
	WRITE	,D1,	1
	STORE	,D1,	2
	DELETE	,D1,	3
	LOKCTL	,D1
PROC
	XCALL TERID (V)
	SWITCH = 1
	XCALL FILES (3,'SU',03,SWITCH)		;FILE # 03 -- AROPEN FILE
	IF (SWITCH.EQ.9) GO TO EXIT


	SWITCH = 1
	XCALL FILES (1,'SI',01,SWITCH)		;FILE # 01 -- CUSMAS FILE
	IF (SWITCH.EQ.9) GO TO INU001


	XCALL FILES (13,'SI',03,5)
;;;	LOKCTL = 1
;;;	XCALL IO (13,AROCTL,1,READ,LOKCTL)
;;;	ORGARO = ORG003
;;;	MAXREC = MAX003

	XCALL OUTPT (1,1,2,'APPLY OPEN CREDIT',V)
	XCALL OUTPT (3,20,0,'PLEASE ENTER BELOW FOR EACH CHANGE:',V)
	XCALL OUTPT (5,19,0,'*CUSTOMER #',V)
	XCALL OUTPT (6,19,0,'*DOCUMENT #',V)
CUSTNO,
	XCALL OUTPT (5,36,1,'\',V)
	CTL = '05,36,06,00,#E'
	CALL INPUT
	GO TO (CLRDTA,ENDOFF), INXCTL
	KCUSNO = ENTRY (1,6)
	IF (KCUSNO.EQ.0) CALL SAMCUS
	KEY = KCUSNO, MASK

	LOKCTL = 1
	XCALL ISIO (1, CUSMAS, KCUSNO, READ, LOKCTL)
	IF (LOKCTL .NE. 0) NAME = 'NOT ON FILE'
	XCALL OUTPT (5,44,0,NAME,V)
	LSTCUS = KCUSNO
GOON,
	CTL = '06,36,06,01,#-'
	CALL INPUT
	GO TO (CLRDTA), INXCTL
	KDOCNO = ENTRY (1,6)
	GO TO PROCES
SAMCUS,
	KCUSNO = LSTCUS
	DECMAL = KCUSNO
	CALL DSPNUM
	RETURN
NEWAPL,
	XCALL OUTPT (9,20,0,'NEW APPLY-TO #',V)
	CTL = '09,36,06,01,#-'
	CALL INPUT
	GO TO (CLRDTA), INXCTL
	AAPLNO = ENTRY (1,6)
VERIFY,
	IF (AAPLNO.LT.-1) GO TO BADAPL
	GO TO NEWOK
VERIF2,
	IF (AAPLNO.EQ.-1) GO TO NEWOK
	IF (AAPLNO.EQ.ADOCNO) GO TO NEWOK
BADAPL,
	XCALL MESAG('INVALID APPLY-TO #',1)
	GO TO NEWAPL
NEWOK,
	XCALL OUTPT (12,1,1,'IS NEW # OK ?',V)
	CTL = '12,16,01,00,YN'
	CALL INPUT
	GO TO (WRITE,NEWAPL), INXCTL
CLRDTA,
	UNLOCK 3
	XCALL OUTPT (5,36,1,'\',V)
	XCALL OUTPT( 6,36,2,'\',V)

	GO TO CUSTNO
PROCES,
;;;	BSEND = ORGARO
;;;	KEY = KCUSNO,MASK
;;;	LOKCTL = 1
;;;	XCALL IO (13,AROPEN,MAXREC,READ,LOKCTL)
;;;	XCALL SERCH (13,AROPEN,KEY,16,21,BSEND,BSMID,SRCCTL,4,8,13,0,0,0,0)
;;;	GO TO (NOFIND), SRCCTL
;;;	BSMID = BSMID - 1

	FIND (3, AROPEN, KCUSNO)[ERR=FORWRD]
FORWRD,
;;;	INCR BSMID
	LOKCTL = 0
	XCALL IOS (3, AROPEN, READ, LOKCTL)
;;;	XCALL IO (3,AROPEN,BSMID,READ,LOKCTL)
	IF (LOKCTL) GO TO CLRDTA
	IF (ACUSNO.NE.KCUSNO) GO TO NOFIND
	IF (ADOCNO.NE.KDOCNO) GO TO FORWRD
	IF (ADOCDT.EQ.0) GO TO FORWRD
	TYPDOC = 'INV'
	IF (ADOCTP.EQ.2) TYPDOC = 'PMNT'
	IF (ADOCTP.EQ.3) TYPDOC = 'CR M'
	IF (ADOCTP.EQ.4) TYPDOC = 'FCHG'
	IF (ADOCTP.EQ.5) TYPDOC = 'DR M'
	IF (ADOCTP.EQ.6) TYPDOC = 'CCRD'	;SSQ 8-19-02
	XCALL OUTPT (6,50,0,'TYPE: ',V)
	XCALL OUTPT (0,0,0,TYPDOC,V)
	XCALL OUTPT (7,20,0,'AMOUNT = $',V)
	XCALL OUTPT (7,50,0,'DATE:',V)
	DECMAL = AAMT + AOTHER
	IF (ADOCTP.EQ.2.OR.ADOCTP.EQ.3) DECMAL = DECMAL * (-1)
	CTL = '07,36,10'
	CALL DSPDLR
	DECMAL(1,6) = ADOCDT
	CTL = '07,56,06'
	CALL DSPDAT
	XCALL OUTPT (8,20,0,'OLD APPLY-TO #',V)
	DECMAL = AAPLNO
	CTL = '08,36,06'
	CALL DSPNUM
	OLDAPL = AAPLNO
	XCALL OUTPT (12,1,1,'RIGHT DOCUMENT ?',V)
	CTL = '12,19,01,00,YN'
	CALL INPUT
	GO TO (NEWAPL,FORWRD), INXCTL
NOFIND,
	XCALL MESAG ('DOCUMENT NOT FOUND',1)
	GO TO CLRDTA
WRITE,
	IF (AAPLNO.EQ.OLDAPL) GO TO CLRDTA

;;;	LOKCTL = 1
;;;	XCALL IO (13,AROCTL,MAX003,READ,LOKCTL)
;;;	LOKCTL = 1
;;;	XCALL IO (13,AROCTL,1,READ,LOKCTL)
;;;	IF (DEL003.EQ.999.OR.REC003+1.GE.MAX003) GO TO NOROOM

	SAVDAT = ADOCDT
;;;	ADOCDT =
;;;	LOKCTL = 1
	XCALL ISIO (3, AROPEN, CUSNO, DELETE, LOKCTL)
;;;	XCALL IO (3,AROPEN,BSMID,WRITE,LOKCTL)

;;;	LOKCTL = 1
;;;	XCALL IO (3,AROCTL,1,READ,LOKCTL)
;;;	INCR DEL003
;;;	INCR REC003
;;;	LOKCTL = 1
;;;	XCALL IO (3,AROCTL,1,WRITE,LOKCTL)

	ADOCDT = SAVDAT
	LOKCTL = 1
	XCALL ISIO (3, AROPEN, CUSNO, STORE, LOKCTL)
	
;;;	XCALL IO (3,AROPEN,REC003,WRITE,LOKCTL)
;;;	LOKCTL = 1
;;;	XCALL IO (3,AROCTL,MAXREC,READ,LOKCTL)
;;;	LOKCTL = 1
;;;	XCALL IO (3,AROCTL,1,READ,LOKCTL)
;;;	LOKCTL = 1
;;;	XCALL IO (13,AROCTL,MAXREC,READ,LOKCTL)
;;;	LOKCTL = 1
;;;	XCALL IO (13,AROCTL,1,READ,LOKCTL)

	GO TO CLRDTA
NOROOM,
	IF (DEL003.NE.999) GO TO NORM2
	XCALL MESAG ('FILE MUST BE REORGANIZED FIRST',1)
	GO TO CLRDTA
NORM2,
	XCALL MESAG('THE "AROPEN" FILE MUST BE EXPANDED FIRST',1)
	GO TO CLRDTA
ENDOFF,
	XCALL WATE (3,V)
	XCALL FILES (3,'SU',03,4)
;;;	XCALL FILES (2,'I',02,4)
	XCALL FILES (1,'SI',01,4)

;;;	LOKCTL = 1
;;;	XCALL IO (13,AROCTL,1,READ,LOKCTL)
;;;	IF (DEL003.GT.0.OR.REC003.GT.ORG003) GO TO ORGSRT
;;;	CLOSE 13
	XCALL PGCHN ('AR:ARMENU',1)
	
;;;ORGSRT,
;;;	RCNT = REC003
;;;	OCNT = ORG003
;;;	SWITCH = 3
;;;	XCALL FILES (3,'U',03,SWITCH)
;;;	IF (SWITCH.EQ.9) GO TO INUSE
;;;	XCALL WATE(4,V)
;;;	MSGCTL = 5
;;;	XCALL SNMSG (SNDMSG,MSGCTL)
;;;	MSGCTL = 2
;;;	XCALL SNMSG (NXTMSG,MSGCTL)
;;;	IF (DEL003.EQ.0) XCALL PGCHN('AR:SRTARO',0)
;;;	XCALL PGCHN('AR:ORGARO',1)
INU001,
;;;	XCALL FILES (2,'I',02,4)
INU002,
	XCALL FILES (3,'SU',03,4)
EXIT,
	XCALL PGCHN ('AR:ARMENU',1)
INUSE,
	MSGCTL = 5
	XCALL SNMSG (CLRAR3,MSGCTL)
	XCALL PGCHN ('UT:CLROF2',2)
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
DSPNUM,
	OPTION = 1
	GO TO CALDSP
DSPDAT,
	OPTION = 2
	GO TO CALDSP
DSPDLR,
	OPTION = 3
CALDSP,
	XCALL DSPLY (MAX,ROW,COL,DECMAL,OPTION,V)
	RETURN
END
