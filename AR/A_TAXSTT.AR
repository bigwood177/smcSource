subroutine a_taxstt
	row	,d
	medate	,d
	splfil	,a


; 11-18-13: converted to isam
; 5-15-18: ssq convert cusmas to isam
;

RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR

;=====================================================
;autost.ar
; automate taxstt.ar
;
;	autome -> autost
;
; TAXSTT.AR - TAX SHEETS BY STATE
;
;		AUTHOR: SHERWOOD S. QUIRING
;		DATE  : 13-NOV-1996

; 11-7-06 ssq: combine all 3 companies...

; 05-2-13 ssq: alpha sort city/county detail
record	ccdet
	cc_act	,d7
	cc_cde	,a1	;tax code
	cc_dsc	,a30
	cc_smc	,d8
	cc_roc	,d8
	cc_smp	,d8

RECORD	KEYSP
	KEY_SPEC1	,A*,	'START=1, LENGTH=7, NODUPS, ASCEND'
	KEY_SPEC2	,A*,	'START=8, LENGTH=31, DUPS, ASCEND'

record	
	wrkfil	,a14,	'SMC:TAXSTT.ISM'


RECORD ARACCT
		.INCLUDE 'DEF:RD007A.DEF'
;RECORD ARACTL	,X
;		.INCLUDE 'DEF:RD007B.DEF'
;
RECORD ARDIST
	.INCLUDE 'DEF:RD008A.DEF'
RECORD,X
	.INCLUDE 'DEF:RD008B.DEF'
RECORD,X
	.INCLUDE 'DEF:RD008X.DEF'

RECORD CUSMAS
	.INCLUDE 'DEF:RD001A.DEF'
RECORD CUSCTL	,X
	.INCLUDE 'DEF:RD001B.DEF'
;;;RECORD CUSIDX
;;;	.INCLUDE 'DEF:RD002A.DEF'


RECORD	COMP14
	ESC_11	,A1		;<ESC>
		,a4,	"&l1O"	;landscape mode
	ESC_12	,A1		;<ESC>
		,A4,	"&l8D"	;vertical spacing, 8 lines/inch
	ESC_13	,A1		;<ESC>
	C14V	,A8,	"(s13.00H"	;pitch 14 CPI



RECORD PLINE
		,A132


RECORD	DIS
	II	,D5
		,A3,	' / '
	IIREC	,D5

RECORD	TOTALS
	T_SLS	,3D10
	T_NON	,3D10
	T_TAX	,3D10
	X_TAX	,3D10
	T_DSC	,3D10
	T_NET	,3D12

RECORD	STATT
	S_SLS	,3D10
	S_NON	,3D10
	S_TAX	,3D10
	S_DSC	,3D10

RECORD	CHANNEL
	CHN001	,D2
	CHN002	,D2
	CHN007	,D2
	CHN008	,D2
	CHNWRK	,D2

RECORD	SNDMSG
	MSGPER	,D6
	M_ROCK	,D1		;SSQ 2-5-03	
;------------------------------
RECORD
	WDATE	,D8
RECORD,X
	WCC	,D2
	WYY	,D2
	WMM	,D2
	WDD	,D2
;------------------------------
RECORD	HDR
	HDRL	,A32
		,A13,	'          SMC'
		,A1
		,A13,	'     ROCKFORD'
		,A2
		,A13,	'          SMP'
		,A2
		,A13,	'        TOTAL'
;		,	,1234567890123

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;RECORD	RPTDIR
;;;		,a*,	'\\server01\smc\Reports\smc\'
;;;	RPTMON	,A3
;;;		,A1,	'\'
;;;	RPTRPT	,A60
;;;RECORD
;;;	MON,	12A3,	'JAN','FEB','MAR','APR','MAY','JUN',
;;;&			'JUL','AUG','SEP','OCT','NOV','DEC'
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


RECORD	VARS
	tl	,d6
	TOTAMT	,D11
	I	,D6
	IS_OK	,D1
	CMPCNT	,D1		;SMC, ROC, CAT
	ARFILE	,A14,	'XXX:ARDIST.XXX'
	TITCMP	,A3
	NUMCOP	,D1
	CMPCOD	,A3
	HPER	,D6		;MMCCYY
	MSGSW	,D1
	SAVREC	,D6
	SAVCUS	,D6
	RECCNT	,D6
	ST	,A1
	LPONSW	,D1
	TAXRAT	,3D4
	TAXSLS	,3D10
	NONTAX	,3D10
	SAVTYP	,D1
	SAVFLG	,D1	;10-15-07 FOR ADSFLG
	SAVACT	,D7
	SAVTFL	,A3	;5-8-13
	SAVAMT	,D8
	TT_TAX	,D8
	OPNOK	,D1
	CNGCTL	,D1
	WHATNO	,D2
	DIST_EOF	,D1
	DRUNSL	,D9
	LSTDAT	,D6
	LSTFLG	,A3
	LSTACT	,D7
	LSTDOC	,D6
	CLPER	,D6
	TDATE	,D4
	ORG01	,D5
	ORG07	,D5
	ORG17	,D5
	ORG27	,D5
	SRCCTL	,D1
	KEY	,A6
	KEY2	,A7
	BSMID	,D5
	V	,D1
	SWITCH	,D1
	HDR1	,A132
	HDR2	,A132
	LEG1	,A40
	TITLE	,A40
	LINCNT	,D2
	PGCNT	,D2
	PAGSIZ	,D3
	PRTCTL	,D3
	LPSW	,D1
	RPTNUM	,D3
	PRTTYP	,A1
;;;	SPLFIL	,A*,	'c:\smc\spool\automu.spl'
	INXCTL	,D1
	ENTRY	,A30
	BLANKS	,A10
	ALPHA	,A10
	LOKCTL	,D1
	READ	,D1,	0
	WRITE	,D1,	1
	SELECT	,D1
	TODAY	,D6
	DTMASK	,A8,	'XX/XX/XX'
	DLMASK	,A13,	'Z,ZZZ,ZZZ.XX-'	
	NUMASK	,A6,	'ZZZZZX'
	ACMASK	,A8,	'XXXX-XXX'
	DASH	,A13,	'-------------'
PROC
;;;	XCALL TERID (V)
;;;	XCALL RDATE (TODAY)
	XCALL WHO(CMPCOD)

	CALL OPENS
	IF (.NOT. OPNOK) goto endoff

	WDATE = medate
	CLPER = WDATE(1,6)	;SSQ 5-16-16
	

;;;	MSGSW = 1			;READ
;;;	XCALL SNMSG (SNDMSG,MSGSW)
;;;	IF (MSGSW .EQ. 9) GOTO DISPLA
;;;	CLPER = MSGPER

;;;	MSGSW = 3			;CLEAR
;;;	XCALL SNMSG (SNDMSG,MSGSW)
;;;	GOTO GOT_MSG

DISPLA,
	incr row
	XCALL OUTPT (row,1,1,'A/R TAX SHEETS BY STATE',1)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	XCALL OUTPT (4,50,0,'PERIOD',1)
;;;ASK,
;;;	XCALL INPUT (4,57,08,00,'DE',ENTRY,INXCTL,1)
;;;	GOTO (DISPLA,ENDOFF),INXCTL
;;;	WDATE = ENTRY
;;;	IF (WDATE .EQ. 0) CALL MAKE_CLPER
;;;	CLPER = WDATE(1,6)	;SSQ 6-1-04
;;;	MSGPER = CLPER 		;8-05-08
;;;
;;;GOT_MSG,
;;;	WDATE(1,6) = MSGPER
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	PGCNT =
	PAGSIZ = 132
	PRTCTL = 132
	PAGSIZ =132
	PRTCTL = 132
	LSTFLG = '-1'
	LSTDAT = -1
	LSTDOC = -1
	LSTACT = -1

	open (14, o, splfil)

	call opnlp
	DISPLAY (14, COMP14)	;LANDSCAPE

	LPSW = 4

STAXR2,
	TITLE = 'TAX SHEET'
	HDR2 = 'FOR PERIOD : '
	HPER(1,2) = CLPER(5,6)
	HPER(3,6) = CLPER(1,4)
	HDR2(14,20) = HPER,	'XX/XXXX'
;;;	XCALL OUTPT (2,1,1,TITLE(1,23),1)
;;;	XCALL OUTPT (2,24,0,':',1)
;;;	XCALL OUTPT (2,26,0,TITCMP,1)

;;;	XCALL OUTPT (2,31,0,HDR2(1,20),1)
;;;	XCALL WATE (4,V)


	OPEN (10,O,'TARDIST.DDF')

	CLEAR CMPCNT		;PROCESS ALL 3 COMPANIES...
NXT_CMP,
	CALL OPN008		;OPEN NEXT ARDIST FILE

	LOKCTL = 1
	XCALL IOS (8,ARDIST,READ,LOKCTL)
	CLEAR II
	IIREC = REC008
LOOP,
	INCR II
;;;	IF (II/200*200 .EQ. II) XCALL OUTPT (1,70,1,DIS,1)

	LOKCTL = 1
	XCALL IOS (8,ARDIST,READ,LOKCTL)
	IF (LOKCTL.NE.0 .OR. ARDIST.EQ.']]]]]]') GOTO EOF
	IF (ADSTYP.NE.1 .AND. ADSTYP.NE.3 .AND. ADSTYP.NE.7)  GOTO LOOP
;;;	IF (M_ROCK.EQ.1 .AND. ADSCUS.EQ.63340) GOTO LOOP
;;;	IF (M_ROCK.EQ.2 .AND. ADSCUS.NE.63340) GOTO LOOP
	IF (ADSCUS.EQ.63340) GOTO LOOP			;SKIP ROCKFORD
	IF (ADSCUS.EQ.68780) GOTO LOOP			;SKIP SMP
	IF (ADSTYP.EQ.7)
		BEGIN
		IF (ADSCUS .NE. SAVCUS) 
		   BEGIN
		   KEY = ADSCUS,	'XXXXXX'
		   CALL GETCUS
		   END
		SAVCUS = ADSCUS
		ADSTFL = TAXFLG
		END
	USING ADSTFL SELECT
	("IA" THRU "IAN"),	GOTO CHECKD
	("I01" THRU "I99"),	GOTO CHECKD

	("M"),			GOTO CHECKD	;7-14-14 all M now MN
;;;	("MN" THRU "MNZ"),	GOTO CHECKD
;;;	("MH" THRU "MHZ"),	GOTO CHECKD
;;;	("MR" THRU "MRZ"),	GOTO CHECKD
;;;	("MX1" THRU "MX9"),	GOTO CHECKD

	("NE" THRU "NEN"),	GOTO CHECKD
	("N00" THRU "N99"),	GOTO CHECKD
	("SD" THRU "SDN"),	GOTO CHECKD
	("S00" THRU "S99"),	GOTO CHECKD
	("WI" THRU "WIN"),	GOTO CHECKD
	("W00" THRU "W99"),	GOTO CHECKD
	("PA" THRU "PAN"),	GOTO CHECKD	;10/10/06 SSQ PENN
;;;	("IL" THRU "ILN"),	BEGIN
	("IL" THRU "ILR"),	BEGIN
				XDSTFL(1,1) = 'X'	;ILL KLUDGE
				GOTO CHECKD
				END
	ENDUSING

	GOTO LOOP

ENDOFF,
	CALL CLOSE
	xreturn

;------------------------------------

CHECKD,
	IF (ADSDAT(1,6) .NE. CLPER) GOTO LOOP

; MN1 has transit tax combined w/ henn county tax 
; henn county tax = .25
; transit tax = .15
; transit tax amount = .15/.40 = 3/8 of total tax amount
	IF (ADSTFL.EQ.'MN1' .AND. ADSACT.EQ.2200014)
		BEGIN
		TT_TAX = ((ADSAMT * 300)/8)#2
		SAVAMT = ADSAMT
		SAVACT = ADSACT

		ADSACT = 2200050		;TRANSIT TAX
		ADSAMT = TT_TAX
		ADSFLG = CMPCNT				;1=SMC, 2=ROC, 3=CAT
		LOKCTL = 1
		XCALL IOS (10,ARDIST,WRITE,LOKCTL)	;write transit record

		ADSAMT = SAVAMT - TT_TAX		;remaining amount
		ADSACT = SAVACT				;restore orig acct
		END

	ADSFLG = CMPCNT				;1=SMC, 2=ROC, 3=CAT
	LOKCTL = 1
	XCALL IOS (10,ARDIST,WRITE,LOKCTL)
	GOTO LOOP

EOF,
	CALL CLS008
	IF (CMPCNT .LE. 2) GOTO NXT_CMP

;;;	XCALL OUTPT (2,52,1,' ... SORTING',1)

	LOKCTL = 1
	XCALL IOS (10,ARDIST,WRITE,LOKCTL)
	CLOSE 10

	SORT (INPUT='TARDIST.DDF',RECORD=ARDIST,KEY=(XDSTFL,XDSTYP,XDSACT))

	CLOSE 10

;;;	XCALL OUTPT (2,52,1,' ... PRINTING',1)
;;;	XCALL WATE (2,V)

	OPEN (10,I,'TARDIST.DDF')
	LOKCTL = 1
	XCALL IOS (10,ARDIST,READ,LOKCTL)
	IF (ARDIST.EQ.']]]]]]]]]]') GOTO EOF2

	LSTFLG = '&&&'
	CLEAR SAVACT
	CLEAR RECCNT
LOOP2,
	INCR RECCNT
	LOKCTL = 1
	XCALL IO (10,ARDIST,RECCNT,READ,LOKCTL)
	IF (ARDIST.EQ.']]]]]]]]]]') GOTO EOF2
	IF (ADSTFL(1,1) .NE. LSTFLG(1,1) ) CALL NEW_STATE

	CASE ADSTYP OF
	BEGINCASE
	1:	T_SLS(adsflg) = T_SLS(adsflg) + ADSAMT
	3:	CALL CHK_TAX
	7:	T_DSC(adsflg) = T_DSC(adsflg) + ADSAMT
	ENDCASE
	GOTO LOOP2
CHK_TAX,

	IS_OK = 0
	USING ADSACT(5,7) SELECT
	(000,100,200), IS_OK = 1
	(300),		IS_OK = 1	;5-10-07 SSQ CAT
	ENDUSING
	
	IF (ADSTFL .EQ. 'X') IS_OK = 1

	IF (IS_OK)
	THEN	T_TAX(adsflg) = T_TAX(adsflg) + ADSAMT
	ELSE	X_TAX(adsflg) = X_TAX(adsflg) + ADSAMT


	RETURN
;==================================================
EOF2,
	CALL NEW_STATE
	CALL CLOSE

	xreturn

;;;	XCALL PGCHN ('AR:MONEND',1)
;;;	XCALL PGCHN ('AR:autoia',1)
;;;	XCALL PGCHN ('AR:arsfmn',1)
;==================================================
MAKE_CLPER,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; Set up CLPER variable, Previous month
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	WDATE = TODAY
	WMM = WMM - 1			;previous month
	IF (WMM .LE. 0)
	   BEGIN
	   WMM = 12
	   WYY = WYY - 1
	   IF (WYY .LE.0) WYY = 99
	   END

	RETURN
;--------------------------------------------------

NEW_STATE,
	IF (LSTFLG .EQ. '&&&') GOTO OUT_STATE

	for i from 1 thru 3
		begin
		IF (TAXRAT(i) .GT. 0)
		THEN	TAXSLS(i) = (T_TAX(i)*100000/TAXRAT(i))#1
		ELSE	TAXSLS(i) = 0
		NONTAX(i) = T_SLS(i) - TAXSLS(i)
		end


	FORMS (14,2)
	LINCNT = LINCNT + 2

	PLINE (7,30) = 'TAXABLE SALES:'
	PLINE (33,45) = TAXSLS(1),	'Z,ZZZ,ZZX.XX-'
	PLINE (48,60) = TAXSLS(2),	'Z,ZZZ,ZZX.XX-'
	PLINE (63,75) = TAXSLS(3),	'Z,ZZZ,ZZX.XX-'
	TOTAMT = TAXSLS(1)+TAXSLS(2)+TAXSLS(3)
	PLINE (78,90) = TOTAMT,	'Z,ZZZ,ZZX.XX-'
	CALL PRINT
	CALL PRINT

	PLINE (7,30) = 'NON-TAXABLE:'
	PLINE (33,45) = NONTAX(1),	'Z,ZZZ,ZZX.XX-'
	PLINE (48,60) = NONTAX(2),	'Z,ZZZ,ZZX.XX-'
	PLINE (63,75) = NONTAX(3),	'Z,ZZZ,ZZX.XX-'
	TOTAMT = NONTAX(1)+NONTAX(2)+NONTAX(3)
	PLINE (78,90) = TOTAMT,	'Z,ZZZ,ZZX.XX-'
	CALL PRINT

	PLINE (33,44) = '------------'
	PLINE (48,60) = '------------'
	PLINE (63,75) = '------------'
	PLINE (78,90) = '------------'
	CALL PRINT

	PLINE (33,45) = T_SLS(1),	'Z,ZZZ,ZZX.XX-'
	PLINE (48,60) = T_SLS(2),	'Z,ZZZ,ZZX.XX-'
	PLINE (63,75) = T_SLS(3),	'Z,ZZZ,ZZX.XX-'
	TOTAMT = T_SLS(1)+T_SLS(2)+T_SLS(3)
	PLINE (78,90) = TOTAMT,	'Z,ZZZ,ZZX.XX-'
	CALL PRINT
	CALL PRINT

	PLINE (7,30) = 'LESS DISCOUNT:'
	PLINE (33,45) = T_DSC(1),	'Z,ZZZ,ZZX.XX-'
	PLINE (48,60) = T_DSC(2),	'Z,ZZZ,ZZX.XX-'
	PLINE (63,75) = T_DSC(3),	'Z,ZZZ,ZZX.XX-'
	TOTAMT = T_DSC(1)+T_DSC(2)+T_DSC(3)
	PLINE (78,90) = TOTAMT,	'Z,ZZZ,ZZX.XX-'
	CALL PRINT

	PLINE (33,44) = '------------'
	PLINE (48,60) = '------------'
	PLINE (63,75) = '------------'
	PLINE (78,90) = '------------'

	CALL PRINT
	T_NET(1) = T_SLS(1) - T_DSC(1)
	T_NET(2) = T_SLS(2) - T_DSC(2)
	T_NET(3) = T_SLS(3) - T_DSC(3)
	PLINE (33,45) = T_NET(1),	'Z,ZZZ,ZZX.XX-'
	PLINE (48,60) = T_NET(2),	'Z,ZZZ,ZZX.XX-'
	PLINE (63,75) = T_SLS(3),	'Z,ZZZ,ZZX.XX-'
	TOTAMT = T_NET(1)+T_NET(2)+T_NET(3)
	PLINE (78,90) = TOTAMT,	'Z,ZZZ,ZZX.XX-'
	CALL PRINT
	CALL PRINT


	PLINE (7,30) = 'LESS NON-TAX:'
	PLINE (33,45) = NONTAX(1),	'Z,ZZZ,ZZX.XX-'
	PLINE (48,60) = NONTAX(2),	'Z,ZZZ,ZZX.XX-'
	PLINE (63,75) = NONTAX(3),	'Z,ZZZ,ZZX.XX-'
	TOTAMT = NONTAX(1)+NONTAX(2)+NONTAX(3)
	PLINE (78,90) = TOTAMT,	'Z,ZZZ,ZZX.XX-'
	CALL PRINT
	PLINE (33,44) = '------------'
	PLINE (48,60) = '------------'
	PLINE (63,75) = '------------'
	PLINE (78,90) = '------------'
	CALL PRINT

	T_NET(1) = T_SLS(1) - T_DSC(1) - NONTAX(1)
	T_NET(2) = T_SLS(2) - T_DSC(2) - NONTAX(2)
	T_NET(3) = T_SLS(3) - T_DSC(3) - NONTAX(3)

	PLINE (33,45) = T_NET(1),	'Z,ZZZ,ZZX.XX-'
	PLINE (48,60) = T_NET(2),	'Z,ZZZ,ZZX.XX-'
	PLINE (63,75) = T_NET(3),	'Z,ZZZ,ZZX.XX-'

	TOTAMT = T_NET(1)+T_NET(2)+T_NET(3)
	PLINE (78,90) = TOTAMT,	'Z,ZZZ,ZZX.XX-'
	CALL PRINT
	CALL PRINT
	CALL PRINT
	CALL PRINT

	T_NET(1) = (T_SLS(1) - T_DSC(1) - NONTAX(1))*TAXRAT(1)
	T_NET(2) = (T_SLS(2) - T_DSC(2) - NONTAX(2))*TAXRAT(2)
	T_NET(3) = (T_SLS(3) - T_DSC(3) - NONTAX(3))*TAXRAT(3)
	PLINE (2,4) = 'SMC'
	PLINE (7,13) = TAXRAT(1),	'ZX.XX %'
	PLINE (17,27) = T_NET(1)#4,'ZZZ,ZZX.XX-'

	PLINE (45,49) = 'COLL.'
	PLINE (50,60) = (T_TAX(1)),	'ZZZ,ZZX.XX-'
	CALL PRINT

	PLINE (2,4) = 'ROC'
	PLINE (7,13) = TAXRAT(2),	'ZX.XX %'
	PLINE (17,27) = T_NET(2)#4,'ZZZ,ZZX.XX-'

	PLINE (45,49) = 'COLL.'
	PLINE (50,60) = (T_TAX(2)),	'ZZZ,ZZX.XX-'
	CALL PRINT

	PLINE (2,4) = 'SMP'
	PLINE (7,13) = TAXRAT(3),	'ZX.XX %'
	PLINE (17,27) = T_NET(3)#4,'ZZZ,ZZX.XX-'

	PLINE (45,49) = 'COLL.'
	PLINE (50,60) = (T_TAX(3)),	'ZZZ,ZZX.XX-'
	CALL PRINT

	PLINE  = 'TOTAL'
	TOTAMT = T_NET(1)#4 + T_NET(2)#4 + T_NET(3)#4
	PLINE (17,27) = TOTAMT,		'ZZZ,ZZX.XX-'


	PLINE (45,49) = 'COLL.'
	TOTAMT = T_TAX(1) + T_TAX(2) + T_TAX(3)
	PLINE (50,60) = TOTAMT,	'ZZZ,ZZX.XX-'
	CALL PRINT

	CALL PRINT
	CALL PRINT

	if (savrec .le. 0) goto out_state
	LOKCTL = 1
	XCALL IO (10,ARDIST,SAVREC,READ,LOKCTL)
	PLINE(45,54) = '      SMC'
	PLINE(55,64) = '      ROC'
	PLINE(65,74) = '      SMP'
	PLINE(75,84) = '    TOTAL'
;                       5678901234
	CALL PRINT
	GOTO FST
STLOP,
	LOKCTL = 1
	XCALL IOS (10,ARDIST,READ,LOKCTL)
FST,
	IF (ARDIST .EQ. ']]]]]]') GOTO DONE_ST
	IF (ADSTYP .LT. 3) GOTO STLOP
	IF (ADSTYP .GT. 3) GOTO DONE_ST
	IF (ADSTFL(1,1) .NE. LSTFLG(1,1) ) GOTO DONE_ST
	IF (ADSACT .NE. SAVACT) CALL NEW_ACCT

	S_TAX(adsflg) = S_TAX(adsflg) + ADSAMT

	GOTO STLOP

DONE_ST,
	CALL NEW_ACCT
	CALL PRINT
;5-2-13 print from isam work file
	find (chnwrk, ccdet, ^first, krf:1) [err=out_state]
ds_loop,
	reads (chnwrk, ccdet, ds_tot)
	if (cc_cde .lt. lstflg(1,1)) goto ds_loop
	if (cc_cde .gt. lstflg(1,1)) goto ds_tot

	PLINE(1,30) = cc_dsc
	PLINE (45,54) = cc_smc,	'ZZZ,ZZX.XX-'
	PLINE (55,64) = cc_roc,	'ZZZ,ZZX.XX-'
	PLINE (65,74) = cc_smp,	'ZZZ,ZZX.XX-'
	TOTAMT = cc_smc + cc_roc + cc_smp
	PLINE (75,84) = TOTAMT,		'ZZZ,ZZX.XX-'
	CALL PRINT
	goto ds_loop
ds_tot,
	call print

	PLINE (1,30) = '  TOTAL CITY/COUNTY TAXES:'
	PLINE (45,54) = X_TAX(1),	'ZZZ,ZZX.XX-'
	PLINE (55,64) = X_TAX(2),	'ZZZ,ZZX.XX-'
	PLINE (65,74) = X_TAX(3),	'ZZZ,ZZX.XX-'
	TOTAMT = X_TAX(1) + X_TAX(2) + X_TAX(3)
	PLINE (75,84) = TOTAMT,		'ZZZ,ZZX.XX-'
	CALL PRINT
	XCALL IO (10,ARDIST,RECCNT,READ,LOKCTL)

OUT_STATE,
	LSTFLG = ADSTFL
	SAVREC = RECCNT

	SET TAXRAT(1), TAXRAT(2), TAXRAT(3) = 0500

	CASE LSTFLG(1,1) OF
	BEGINCASE
	'I':	BEGIN
		SET TAXRAT(1), TAXRAT(2), TAXRAT(3) = 0600
		HDRL = 'TAX SHEET FOR IA'
		END
	'P':	BEGIN
	;;;	TAXRAT = 0600
		SET TAXRAT(1), TAXRAT(2), TAXRAT(3) = 0600
		HDRL = 'TAX SHEET FOR PA'
		END
	'M':	BEGIN
	;;;	TAXRAT = 0650
	;;;	SET TAXRAT(1), TAXRAT(2), TAXRAT(3) = 0650
		SET TAXRAT(1), TAXRAT(2), TAXRAT(3) = 0688
		HDRL = 'TAX SHEET FOR MN'
		END
	'N':	BEGIN
	;;;	TAXRAT = 0550		;11/13/02
		SET TAXRAT(1), TAXRAT(2), TAXRAT(3) = 0550
		HDRL = 'TAX SHEET FOR NE'
		END
	'S':	BEGIN
	;;;	TAXRAT = 0400
		SET TAXRAT(1), TAXRAT(2), TAXRAT(3) = 0450
		HDRL = 'TAX SHEET FOR SD'
		END
	'W':	BEGIN
	;;;	TAXRAT = 0500
		SET TAXRAT(1), TAXRAT(2), TAXRAT(3) = 0500
		HDRL = 'TAX SHEET FOR WI'
		END
	'X':	BEGIN
	;;;	TAXRAT = 0625
		SET TAXRAT(1), TAXRAT(2), TAXRAT(3) = 0625
		TAXRAT(2) = 725
		TAXRAT(2) = 825
	;;;	IF (CMPCOD.EQ.'ROC') TAXRAT = 0725
		HDRL = 'TAX SHEET FOR IL'
		END
	ENDCASE

	for i from 1 thru 3
		begin
		CLEAR T_SLS(i), T_TAX(i), T_DSC(i), X_TAX(i)
		end

	LINCNT = 60
	RETURN
;------------------------------------------------


NEW_ACCT,
	IF (SAVACT.EQ.0 .OR. SAVTYP.NE.3) GOTO OUT_ACCT
	CALL GETACT
;;;	IF (SAVACT(5,7) .NE. 100)

	USING SAVACT(5,7) SELECT
	(000,100,200),	NOP
	(300), nop			;cat 9-11-07
	(),	BEGIN
		CLEAR CCDET
		cc_act = SAVACT
		cc_dsc = ARACDS
		cc_cde = SAVTFL(1,1)
		cc_smc = S_TAX(1)
		cc_roc = S_TAX(2) 
		cc_smp = S_TAX(3)
		store (chnwrk, ccdet, cc_act) [err=out_acct]
		end

;;;	(),	BEGIN
;;;		PLINE(1,30) = ARACDS
;;;		PLINE (45,54) = S_TAX(1),	'ZZZ,ZZX.XX-'
;;;		PLINE (55,64) = S_TAX(2),	'ZZZ,ZZX.XX-'
;;;		PLINE (65,74) = S_TAX(3),	'ZZZ,ZZX.XX-'
;;;		TOTAMT = S_TAX(1) + S_TAX(2) + S_TAX(3)
;;;		PLINE (75,84) = TOTAMT,		'ZZZ,ZZX.XX-'
;;;		CALL PRINT
;;;		END

	ENDUSING

OUT_ACCT,
	SAVTYP = ADSTYP
	SAVACT = ADSACT
	SAVTFL = ADSTFL
	SAVFLG = ADSFLG	;10-15-07
	FOR I FROM 1 THRU 3	CLEAR	S_SLS(I), S_NON(I), S_TAX(I), S_DSC(I)
	RETURN
;------------------------------------------------
;=================================================

PRINT,
	IF (LPONSW .EQ. 0) CALL OPNLP
	XCALL LPOUT (LINCNT,PGCNT,PLINE,TITLE,HDR,HDR2,'NO HDR',
&		LEG1,'NO LEGEND',' ',0,PAGSIZ,PRTCTL,0,LPSW,RPTNUM,PRTTYP)
	RETURN

;--------------------------------------------------------------------

OPNLP,
	LPSW = 1
;;;	SPLFIL =
;;;	XCALL LPON (LPSW,SPLFIL,,,,NUMCOP)
	LPONSW = 1

	XCALL ASCII(27, ESC_11)
	ESC_12 = ESC_11
	ESC_13 = ESC_11	
	RETURN

GETACT,
;;;	using adsflg select
	using SAVflg select
	(1),	XCALL ISIO ( 7,ARACCT,SAVACT,READ,LOKCTL)
	(2),	XCALL ISIO (17,ARACCT,SAVACT,READ,LOKCTL)
	(3),	XCALL ISIO (27,ARACCT,SAVACT,READ,LOKCTL)
	endusing
	IF (LOKCTL .NE. 0) ARACCT =
;	using SAVflg select
;	    (1),	XCALL SERCH (7,ARACCT,SAVACT,1,7,ORG07,BSMID,SRCCTL,4,32,37,0,0,0,0)
;	    (2),	XCALL SERCH (17,ARACCT,SAVACT,1,7,ORG17,BSMID,SRCCTL,4,32,37,0,0,0,0)
;	    (3),	XCALL SERCH (27,ARACCT,SAVACT,1,7,ORG27,BSMID,SRCCTL,4,32,37,0,0,0,0)
;	endusing
;
;	IF (SRCCTL) 
;		begin
;		ARACCT =
;		end
	RETURN
	
GETCUS,	;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; FIND STATE IN CUSMAS
	;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL ISIO (CHN001, CUSMAS, ADSCUS, READ, LOKCTL)
	IF (LOKCTL .NE. 0)
		BEGIN
		ALPHA(5,10) = ADSCUS,NUMASK
		DISPLAY (15,13,10,'ERROR LOCATING CUSTOMER: ',ALPHA(5,10),7)
		STATE = 'ZZ'
		END
	
;;;	XCALL SERCH (2,CUSIDX,KEY,1,6,ORG01,BSMID,SRCCTL,4,7,11,0,0,0,0)
;;;	IF (SRCCTL .OR. IRC001.LE.0) 
;;;	THEN	BEGIN
;;;		ALPHA(5,10) = ADSCUS,NUMASK
;;;		DISPLAY (15,13,10,'ERROR LOCATING CUSTOMER: ',ALPHA(5,10),7)
;;;		STATE = 'ZZ'
;;;		END
;;;	ELSE	BEGIN
;;;		LOKCTL = 1
;;;		XCALL IO (1,CUSMAS,IRC001,READ,LOKCTL)
;;;		END

	RETURN
;--------------------------------------------------------------------

OPN008,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; OPEN NEXT ARDIST FILE...
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	INCR CMPCNT
	USING CMPCNT SELECT
	(1),	TITCMP = 'SMC'
	(2),	TITCMP = 'ROC'
	(3),	TITCMP = 'CAT'
	ENDUSING

	ARFILE(1,3) = TITCMP
	ARFILE(12,14) = TITCMP

	OPEN (8, 'I', ARFILE)
	RETURN
CLS008,
	CLOSE 8
	RETURN
;----------------------------------------------------

OPENS,	;;;;;;;;;;;;;;;;;;;
	;;; OPEN FILES
	;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK

;;;	SWITCH = 1
;;;	XCALL FILES (8,'I',008,SWITCH)		;FILE 008 - ARDIST FILE
;;;	IF (SWITCH .EQ. 9) RETURN
	CHN008 = 8

	switch = 5
	XCALL FILES (7,'SI',007,SWITCH)		;FILE 007 - ARACCT
	IF (SWITCH .EQ. 9) RETURN
	CHN007 = 7

	open (17,'si','roc:aracct.rom')
	open (27,'si','cat:aracct.cam')

	switch = 1
	XCALL FILES (1,'SI',001,SWITCH)		;FILE 001 - CUSTMAS
	IF (SWITCH .EQ. 9) RETURN
	CHN001 = 1

;;;	XCALL FILES (2,'I',002,SWITCH)		;FILE 002 -CUSIDX
;;;	IF (SWITCH .EQ. 9) RETURN
;;;	CHN002 = 2


;;;	LOKCTL = 1
;;;	XCALL IO (1,CUSCTL,1,READ,LOKCTL)
;;;	ORG01 = ORG001
	
	XCALL ISAMC (WRKFIL, 62, 2, key_spec1, key_spec2)
	OPEN (28,SU,WRKFIL)
	CHNWRK = 28

	CALL OPNLP
	IF (LPSW .EQ. 0) RETURN
	OPNOK = 1
	RETURN
;------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;
	;;; CLOSE OPEN FILES
	;;;;;;;;;;;;;;;;;;;;;

	close 14

;;;	RPTRPT = 'Tax_Sheet.pdf'
;;;	TL = %TRIM(RPTDIR)
;;;	xcall mkpdf (splfil,rptdir(1,tl))

	IF (CHN007) CLOSE CHN007
	IF (CHN008) CLOSE CHN008
	IF (CHN001) XCALL FILES (CHN001,'SI',001,4)
;;;	IF (CHN002) XCALL FILES (CHN002,'I',002,4)
	close 10
	close 7
	close 17
	close 27

	close chnwrk
	xcall delet (wrkfil)

	RETURN
;------------------------------------
END



