;  PSTCOM / AR 
;
;
;
;
;		UPDATES COMDUE FILE FROM SALES TRX
;		POST AND SORT
;
;
RECORD SALES		; 
		.INCLUDE 'DEF:RD004A.DEF'
RECORD COMDUE		; 
		.INCLUDE 'DEF:RD050A.DEF'
RECORD DUMCOM		; 
		.INCLUDE 'DEF:RD050B.DEF'
RECORD ,X		; 
		.INCLUDE 'DEF:RD050D.DEF'

RECORD	FFILE
	FILNUM	,D3
	CLCTL	,D1
	REDFIL	,A14

 
RECORD	HEADER
		,A7,	'DBSORT '
	HFILE	,A14

RECORD	VARS
	V	,D1
	READ	,D1,	0
	WRITE	,D1,	1
	LOKCTL	,D1

PROC
	XCALL TERID (V)
	XCALL FLAGS(10000000)
	XCALL OUTPT (2,1,1,'UPDATE COMMISSIONS FILE',1)
	XCALL FILES (4,'I',4,5)			;FILE # 04 -- SALES0 FILE
	XCALL FILES (10,'U',50,5)		;FILE # 50 -- COMDUE FILE

	LOKCTL = 1
	XCALL IO (10,DUMCOM,1,READ,LOKCTL)

	LOKCTL = 1
	XCALL IOS (4,SALES,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO ENDSLS

LOOP,
	LOKCTL = 1
	XCALL IOS (4,SALES,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO ENDSLS
	IF (SNAME.EQ.']]]]]]') GO TO ENDSLS

	IF (SNAME.EQ.'000000') GO TO LOOP	;;;

	IF (SDOCTP.NE.3) GO TO WRSAL2
	SSLAMT = (-1) * SSLAMT
	SCOST = (-1) * SCOST
	SCOMM = (-1) * SCOMM
	SFRGHT = (-1) * SFRGHT
WRSAL2,
	KSLMAN = SSLMAN
	KCUSNO = SCUSNO
	KCUSNM = SNAME
	KINVNO = SDOCNO
	KINVDT = SDOCDT
	KINVAM = SSLAMT
	KINVCT = SCOST
	KCOMDU = SCOMM
	KFRGHT = SFRGHT

	INCR REC050
	LOKCTL = 1
	XCALL IO (10, COMDUE, REC050, WRITE, LOKCTL)

	GO TO LOOP

ENDSLS,
	ORG050 = REC050
	IF (REC050 .GE. MAX050)
		BEGIN
		MAX050 = REC050 + 1
		XCALL FILL (']', COMDUE)
		XCALL IO (10, COMDUE, MAX050, WRITE, LOKCTL)
		END

	LOKCTL = 1
	XCALL IO (10,DUMCOM,1,WRITE,LOKCTL)

END,
	CLOSE 10
	CLOSE 4

;SORT CODE...
	FILNUM = 50			;HARD CODE IF NO MESSAGE
	XCALL FFILE (FILNUM,REDFIL,CLCTL)	;GET FILE SPEC
	HFILE = REDFIL


	XCALL OUTPT (2,1,2,HEADER,1)
 
	SORT (IN=REDFIL, RECORD=COMDUE,
&		KEY = (KSLMAN,KCUSNO,KINVDT,KINVNO) )

;SORT CODE...

	XCALL PGCHN ('AR:CLRSLS',1)
END
