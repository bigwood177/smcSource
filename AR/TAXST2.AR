;TAXST2.AR
;		COMBINED SMC & ROCKFORD TAX SHEETS
;
;		AUTHOR: SHERWOOD S. QUIRING
;		DATE  : 13-NOV-1996
; 12-12-13: converted to isam


RECORD	EJECT
	E_CHAR	,A1		;<ESC>
		,A4,	"&l0H"	;pitch mode = 2 = 16.5-16.7 (compressed)

RECORD ARACCT
		.INCLUDE 'DEF:RD007A.DEF'
;RECORD ARACTL	,X
;		.INCLUDE 'DEF:RD007B.DEF'

RECORD ARDIST
	.INCLUDE 'DEF:RD008A.DEF'
RECORD,X
	.INCLUDE 'DEF:RD008B.DEF'
RECORD,X
	.INCLUDE 'DEF:RD008X.DEF'

RECORD CUSMAS
	.INCLUDE 'DEF:RD001A.DEF'
RECORD CUSCTL	,X
	.INCLUDE 'DEF:RD001B.DEF'
RECORD CUSIDX
	.INCLUDE 'DEF:RD002A.DEF'

RECORD PLINE
		,A80


RECORD	DIS
	II	,D5
		,A3,	' / '
	IIREC	,D5

RECORD	TOTALS		;SMC,ROC
	T_SLS	,2D10
	T_NON	,2D10
	T_TAX	,2D10
	X_TAX	,2D10
	T_DSC	,2D10

RECORD	STATT
	S_SLS	,2D10
	S_NON	,2D10
	S_TAX	,2D10
	S_DSC	,2D10

RECORD	CHANNEL
	CHN001	,D2
	CHN002	,D2
	CHN007	,D2
	CHN008	,D2

RECORD	SNDMSG
	MSGPER	,D6
	M_ROCK	,D1		;SSQ 2-5-03	
;------------------------------
RECORD
	WDATE	,D8
RECORD,X
	WCC	,D2
	WYY	,D2
	WMM	,D2
	WDD	,D2
;------------------------------

RECORD	VARS
	CMPCOD	,A3
	T1	,D18
	T2	,D18
	KEYACT	,D7
	IDX	,D1	;1=SMC, 2=ROC
	NUMCOP	,D1
	HPER	,D6		;MMCCYY
	MSGSW	,D1
	SAVREC	,D6
	SAVCUS	,D6
	RECCNT	,D6
	ST	,A1
	LPONSW	,D1
	TAXRAT	,2D4
	TAXSLS	,2D10
	NONTAX	,2D10
	SAVTYP	,D1
	SAVACT	,D7
	OPNOK	,D1
	CNGCTL	,D1
	WHATNO	,D2
	DIST_EOF	,D1
	DRUNSL	,D9
	LSTDAT	,D6
	LSTFLG	,A3
	LSTACT	,D7
	LSTDOC	,D6
	CLPER	,D6
	TDATE	,D4
	ORG01	,D5
	ORG07	,D5
	SRCCTL	,D1
	KEY	,A6
	KEY2	,A7
	BSMID	,D5
	V	,D1
	SWITCH	,D1
	HDR	,A132
	HDR1	,A132
	HDR2	,A132
	LEG1	,A40
	TITLE	,A40
	LINCNT	,D2
	PGCNT	,D2
	PAGSIZ	,D3
	PRTCTL	,D3
	LPSW	,D1
	RPTNUM	,D3
	PRTTYP	,A1
	SPLFIL	,A14
	INXCTL	,D1
	ENTRY	,A30
	BLANKS	,A10
	ALPHA	,A10
	LOKCTL	,D1
	READ	,D1,	0
	WRITE	,D1,	1
	SELECT	,D1
	TODAY	,D6
	DTMASK	,A8,	'XX/XX/XX'
	DLMASK	,A13,	'Z,ZZZ,ZZZ.XX-'	
	NUMASK	,A6,	'ZZZZZX'
	ACMASK	,A8,	'XXXX-XXX'
	DASH	,A13,	'-------------'
;
PROC
	XCALL TERID (V)
	XCALL RDATE (TODAY)

	CALL OPENS
	IF (.NOT. OPNOK) 
		BEGIN
		CALL CLOSE
		XCALL PGCHN ('AR:MONEND',1)
		END
		

DISPLA,

	XCALL OUTPT (1,1,2,'A/R TAX SHEETS BY STATE - COMBINED',1)
	XCALL OUTPT (4,50,0,'PERIOD',1)

ASK,
	XCALL INPUT (4,57,08,00,'DE',ENTRY,INXCTL,1)
	GOTO (DISPLA,ENDOFF),INXCTL
	WDATE = ENTRY
	IF (WDATE .EQ. 0) CALL MAKE_CLPER
	CLPER = WDATE(1,6)
	CNGCTL = 2
	XCALL ANYCN (CNGCTL,WHATNO)
	GOTO (ASK),CNGCTL

	PGCNT =
	PAGSIZ = 80
	PRTCTL = 80
	PAGSIZ = 80
	PRTCTL = 80
	LSTFLG = '-1'
	LSTDAT = -1
	LSTDOC = -1
	LSTACT = -1
	M_ROCK = 1

STAXR2,
	TITLE = 'TAX SHEET'
	HDR2 = 'FOR PERIOD : '
	HPER(1,2) = CLPER(5,6)
	HPER(3,6) = CLPER(1,4)
	HDR2(14,20) = HPER,	'XX/XXXX'

	XCALL OUTPT (2,1,1,TITLE(1,33),1)
	XCALL OUTPT (0,0,0,HDR2(1,20),1)
	XCALL OUTPT (2,62,0,' ... SELECTING',1)
	XCALL WATE (4,V)

	HDR2(42,44) = 'SMC'
	HDR2(50,57) = 'ROCKFORD'
	HDR2(66,70) = 'TOTAL'

	OPEN (10,O,'TARDIST.DDF')

	OPEN (1,I,'SMC:CUSMAS.SMC')
	OPEN (2,I,'SMC:CUSIDX.SMC')
	OPEN (8,I,'SMC:ARDIST.SMC')

	LOKCTL = 1
	XCALL IO (1,CUSCTL,1,READ,LOKCTL)
	ORG01 = ORG001

	LOKCTL = 1
	XCALL IOS (8,ARDIST,READ,LOKCTL)

	IDX = 1		;SMC
SMC_LOOP,
	LOKCTL = 1
	XCALL IOS (8,ARDIST,READ,LOKCTL)
	IF (LOKCTL.NE.0 .OR. ARDIST.EQ.']]]]]]') GOTO EOF_SMC
	IF (ADSDAT(1,6) .NE. CLPER) GOTO SMC_LOOP
	IF (ADSTYP.NE.1 .AND. ADSTYP.NE.3 .AND. ADSTYP.NE.7)  GOTO SMC_LOOP
	IF (M_ROCK.EQ.1 .AND. ADSCUS.EQ.63340) GOTO SMC_LOOP
	IF (M_ROCK.EQ.2 .AND. ADSCUS.NE.63340) GOTO SMC_LOOP
	IF (ADSTYP.EQ.7)
		BEGIN
		IF (ADSCUS .NE. SAVCUS) 
		   BEGIN
		   KEY = ADSCUS,	'XXXXXX'
		   CALL GETCUS
		   END
		SAVCUS = ADSCUS
		ADSTFL = TAXFLG
		END
	USING ADSTFL SELECT
	("IA" THRU "IAN"),	CALL CHECKD
	("I01" THRU "I99"),	CALL CHECKD
	("MN" THRU "MNN"),	CALL CHECKD
	("NE" THRU "NEN"),	CALL CHECKD
	("N00" THRU "N99"),	CALL CHECKD
	("SD" THRU "SDN"),	CALL CHECKD
	("S00" THRU "S99"),	CALL CHECKD
	("WI" THRU "WIN"),	CALL CHECKD
	("W00" THRU "W99"),	CALL CHECKD
;;;	("IL" THRU "ILN"),	BEGIN
	("IL" THRU "ILR"),	BEGIN
				XDSTFL(1,1) = 'X'	;ILL KLUDGE
				CALL CHECKD
				END
	ENDUSING

	GOTO SMC_LOOP

;--------
EOF_SMC,
	close 1
	close 2
	close 8

	OPEN (1,I,'ROC:CUSMAS.ROC')
	OPEN (2,I,'ROC:CUSIDX.ROC')
	OPEN (8,I,'ROC:ARDIST.ROC')

	LOKCTL = 1
	XCALL IO (1,CUSCTL,1,READ,LOKCTL)
	ORG01 = ORG001

	LOKCTL = 1
	XCALL IOS (8,ARDIST,READ,LOKCTL)

	IDX = 2		;ROC
ROC_LOOP,
	LOKCTL = 1
	XCALL IOS (8,ARDIST,READ,LOKCTL)
	IF (LOKCTL.NE.0 .OR. ARDIST.EQ.']]]]]]') GOTO EOF_ROC
	IF (ADSDAT(1,6) .NE. CLPER) GOTO ROC_LOOP
	IF (ADSTYP.NE.1 .AND. ADSTYP.NE.3 .AND. ADSTYP.NE.7)  GOTO ROC_LOOP
	IF (ADSTYP.EQ.7)
		BEGIN
		IF (ADSCUS .NE. SAVCUS) 
		   BEGIN
		   KEY = ADSCUS,	'XXXXXX'
		   CALL GETCUS
		   END
		SAVCUS = ADSCUS
		ADSTFL = TAXFLG
		END
	IF (ADSACT(5,7).EQ.000) ADSACT(5,7)=200
	USING ADSTFL SELECT
	("IA" THRU "IAN"),	CALL CHECKD
	("I01" THRU "I99"),	CALL CHECKD
	("MN" THRU "MNN"),	CALL CHECKD
	("NE" THRU "NEN"),	CALL CHECKD
	("N00" THRU "N99"),	CALL CHECKD
	("SD" THRU "SDN"),	CALL CHECKD
	("S00" THRU "S99"),	CALL CHECKD
	("WI" THRU "WIN"),	CALL CHECKD
	("W00" THRU "W99"),	CALL CHECKD
;;;	("IL" THRU "ILN"),	BEGIN
	("IL" THRU "ILR"),	BEGIN
				XDSTFL(1,1) = 'X'	;ILL KLUDGE
				CALL CHECKD
				END
	ENDUSING

	GOTO ROC_LOOP

;--------
ENDOFF,
	CALL CLOSE
	XCALL PGCHN ('AR:MONEND',1)
;------------------------------------

CHECKD,
	ADSFLG = IDX		;KEEP TRACK OF WHICH COMPANY
	LOKCTL = 1
	XCALL IOS (10,ARDIST,WRITE,LOKCTL)
	RETURN

EOF_ROC,
	XCALL OUTPT (2,52,1,' ... SORTING',1)

	LOKCTL = 1
	XCALL IOS (10,ARDIST,WRITE,LOKCTL)
	CLOSE 10

	SORT (INPUT='TARDIST.DDF',RECORD=ARDIST,KEY=(XDSTFL,XDSTYP,XDSACT))

	CLOSE 10

	XCALL OUTPT (2,52,1,' ... PRINTING',1)
	XCALL WATE (2,V)

	OPEN (10,I,'TARDIST.DDF')
	LOKCTL = 1
	XCALL IOS (10,ARDIST,READ,LOKCTL)
	IF (ARDIST.EQ.']]]]]]]]]]') GOTO EOF2

	LSTFLG = '&&&'
	CLEAR SAVACT
	CLEAR RECCNT
LOOP2,
	INCR RECCNT
	LOKCTL = 1
	XCALL IO (10,ARDIST,RECCNT,READ,LOKCTL)
	IF (ARDIST.EQ.']]]]]]]]]]') GOTO EOF2
	IF (ADSTFL(1,1) .NE. LSTFLG(1,1) ) CALL NEW_STATE
	
	IDX = ADSFLG		;WHICH COMPANY 1=SMC, 2=ROC

	CASE ADSTYP OF
	BEGINCASE
	1:	T_SLS(IDX) = T_SLS(IDX) + ADSAMT
;;;	3:	IF (ADSACT(5,7).EQ.0 .OR. ADSACT(5,7).EQ.200) 
;;;	3:	IF (ADSACT(5,7).EQ.100 .OR. ADSACT(5,7).EQ.200) 
	3:	IF(ADSACT(5,7).EQ.100.OR.ADSACT(5,7).EQ.200.OR.ADSTFL.EQ.'X') 
		THEN	T_TAX(IDX) = T_TAX(IDX) + ADSAMT
		ELSE	X_TAX(IDX) = X_TAX(IDX) + ADSAMT
	7:	T_DSC(IDX) = T_DSC(IDX) + ADSAMT
	ENDCASE
	GOTO LOOP2
;==================================================
EOF2,
	CALL NEW_STATE
	CALL CLOSE
	XCALL PGCHN ('AR:MONEND',1)
;==================================================
MAKE_CLPER,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; Set up CLPER variable, Previous month
		;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	WDATE = TODAY
	WMM = WMM - 1			;previous month
	IF (WMM .LE. 0)
	   BEGIN
	   WMM = 12
	   WYY = WYY - 1
	   IF (WYY .LE.0) WYY = 99
	   END

	RETURN
;--------------------------------------------------

NEW_STATE,
	IF (LSTFLG .EQ. '&&&') GOTO OUT_STATE

	IF (TAXRAT .GT. 0)
	THEN	BEGIN
		TAXSLS(1) = (T_TAX(1)*100000/TAXRAT(1))#1
		TAXSLS(2) = (T_TAX(2)*100000/TAXRAT(2))#1
		END
	ELSE	BEGIN
		TAXSLS(1) = 0
		TAXSLS(2) = 0
		END
	NONTAX(1) = T_SLS(1) - TAXSLS(1)
	NONTAX(2) = T_SLS(2) - TAXSLS(2)

	FORMS (14,2)
	LINCNT = LINCNT + 2

	PLINE (7,30) = 'TAXABLE SALES:'
	PLINE (33,45) = TAXSLS(1),	'Z,ZZZ,ZZX.XX-'
	PLINE (46,58) = TAXSLS(2),	'Z,ZZZ,ZZX.XX-'
	PLINE (59,71) = TAXSLS(1)+TAXSLS(2),	'Z,ZZZ,ZZX.XX-'
	CALL PRINT
	CALL PRINT

	PLINE (7,30) = 'NON-TAXABLE:'
	PLINE (33,45) = NONTAX(1),	'Z,ZZZ,ZZX.XX-'
	PLINE (46,58) = NONTAX(2),	'Z,ZZZ,ZZX.XX-'
	PLINE (59,71) = NONTAX(1)+NONTAX(2),	'Z,ZZZ,ZZX.XX-'
	CALL PRINT
	PLINE (33,44) = '------------'
	PLINE (46,57) = '------------'
	PLINE (59,70) = '------------'
	CALL PRINT
	PLINE (33,45) = T_SLS(1),	'Z,ZZZ,ZZX.XX-'
	PLINE (46,58) = T_SLS(2),	'Z,ZZZ,ZZX.XX-'
	PLINE (59,71) = T_SLS(1)+T_SLS(2),	'Z,ZZZ,ZZX.XX-'
	CALL PRINT
	CALL PRINT

	PLINE (7,30) = 'LESS DISCOUNT:'
	PLINE (33,45) = T_DSC(1),	'Z,ZZZ,ZZX.XX-'
	PLINE (46,58) = T_DSC(2),	'Z,ZZZ,ZZX.XX-'
	PLINE (59,71) = T_DSC(1)+T_DSC(2),	'Z,ZZZ,ZZX.XX-'
	CALL PRINT
	PLINE (33,44) = '------------'
	PLINE (46,57) = '------------'
	PLINE (59,70) = '------------'
	CALL PRINT
	PLINE (33,45) = (T_SLS(1) - T_DSC(1)),	'Z,ZZZ,ZZX.XX-'
	PLINE (46,58) = (T_SLS(2) - T_DSC(2)),	'Z,ZZZ,ZZX.XX-'
	T1 = T_SLS(1) - T_DSC(1)
	T2 = T_SLS(2) - T_DSC(2)
	PLINE (59,71) = T1 + T2 ,'Z,ZZZ,ZZX.XX-'
	CALL PRINT
	CALL PRINT


	PLINE (7,30) = 'LESS NON-TAX:'
	PLINE (33,45) = NONTAX(1),	'Z,ZZZ,ZZX.XX-'
	PLINE (46,58) = NONTAX(2),	'Z,ZZZ,ZZX.XX-'
	PLINE (59,71) = NONTAX(1)+NONTAX(2),	'Z,ZZZ,ZZX.XX-'
	CALL PRINT
	PLINE (33,44) = '------------'
	PLINE (46,57) = '------------'
	PLINE (59,70) = '------------'
	CALL PRINT
	PLINE (33,45) = (T_SLS(1)-T_DSC(1)-NONTAX(1)),	'Z,ZZZ,ZZX.XX-'
	PLINE (46,58) = (T_SLS(2)-T_DSC(2)-NONTAX(2)),	'Z,ZZZ,ZZX.XX-'

	T1 = T_SLS(1) - T_DSC(1) - NONTAX(1)
	T2 = T_SLS(2) - T_DSC(2) - NONTAX(2)
	PLINE (59,71) = (T1 + T2),	'Z,ZZZ,ZZX.XX-'
	CALL PRINT
	CALL PRINT
	CALL PRINT
	CALL PRINT

	PLINE (7,13) = TAXRAT(1),	'ZX.XX %'
	PLINE (17,27) = ((T_SLS(1)-T_DSC(1)-NONTAX(1))*TAXRAT(1))#4,'ZZZ,ZZX.XX-'
	PLINE (45,49) = 'COLL.'
	PLINE (50,60) = (T_TAX(1)),	'ZZZ,ZZX.XX-'
	PLINE (62,64) = 'SMC'
	CALL PRINT

	PLINE (7,13) = TAXRAT(2),	'ZX.XX %'
	PLINE (17,27) = ((T_SLS(2)-T_DSC(2)-NONTAX(2))*TAXRAT(2))#4,'ZZZ,ZZX.XX-'
	PLINE (45,49) = 'COLL.'
	PLINE (50,60) = (T_TAX(2)),	'ZZZ,ZZX.XX-'
	PLINE (62,64) = 'ROC'
	CALL PRINT

;;;	PLINE (7,13) = TAXRAT,	'ZX.XX %'
	T1 = (T_SLS(1) - T_DSC(1) - NONTAX(1))*TAXRAT(1)
	T2 = (T_SLS(2) - T_DSC(2) - NONTAX(2))*TAXRAT(2)
	PLINE (17,27) = (T1)#4 + (T2)#4 ,'ZZZ,ZZX.XX-'
	PLINE (45,49) = 'COLL.'
	PLINE (50,60) = (T_TAX(1)+T_TAX(2)),	'ZZZ,ZZX.XX-'
	PLINE (62,66) = 'TOTAL'
	CALL PRINT

	CALL PRINT
	CALL PRINT

	LOKCTL = 1
	XCALL IO (10,ARDIST,SAVREC,READ,LOKCTL)
	PLINE (51,53) = 'SMC'
	PLINE (57,64) = 'ROCKFORD'
	PLINE (71,75) = 'TOTAL'
	CALL PRINT

	GOTO FST
STLOP,
	LOKCTL = 1
	XCALL IOS (10,ARDIST,READ,LOKCTL)
FST,
	IDX = ADSFLG		;WHICH COMPANY 1=SMC, 2=ROC
	IF (ARDIST .EQ. ']]]]]]') GOTO DONE_ST
	IF (ADSTYP .LT. 3) GOTO STLOP
	IF (ADSTYP .GT. 3) GOTO DONE_ST
	IF (ADSTFL(1,1) .NE. LSTFLG(1,1) ) GOTO DONE_ST
	IF (ADSACT .NE. SAVACT) CALL NEW_ACCT

	S_TAX(IDX) = S_TAX(IDX) + ADSAMT

	GOTO STLOP

DONE_ST,
	CALL NEW_ACCT
	CALL PRINT
	PLINE (1,30) = '  TOTAL CITY/COUNTY TAXES:'
	PLINE (44,54) = X_TAX(1),	'ZZZ,ZZX.XX-'
	PLINE (55,65) = X_TAX(2),	'ZZZ,ZZX.XX-'
	PLINE (66,76) = X_TAX(1)+X_TAX(2),	'ZZZ,ZZX.XX-'
	CALL PRINT
	XCALL IO (10,ARDIST,RECCNT,READ,LOKCTL)

OUT_STATE,
	LSTFLG = ADSTFL
	SAVREC = RECCNT

	TAXRAT(1) = 0500
	TAXRAT(2) = 0500
	CASE LSTFLG(1,1) OF
	BEGINCASE
	'I':	BEGIN
		TAXRAT(1) = 0500
		TAXRAT(2) = 0500
		HDR = 'TAX SHEET FOR IA'
		END
	'M':	BEGIN
		TAXRAT(1) = 0650
		TAXRAT(2) = 0650
		HDR = 'TAX SHEET FOR MN'
		END
	'N':	BEGIN
		TAXRAT(1) = 0550		;11/13/02
		TAXRAT(2) = 0550		;11/13/02
		HDR = 'TAX SHEET FOR NE'
		END
	'S':	BEGIN
		TAXRAT(1) = 0400
		TAXRAT(2) = 0400
		HDR = 'TAX SHEET FOR SD'
		END
	'W':	BEGIN
		TAXRAT(1) = 0500
		TAXRAT(2) = 0500
		HDR = 'TAX SHEET FOR WI'
		END
	'X':	BEGIN
		TAXRAT(1) = 0625
		TAXRAT(2) = 0725
		HDR = 'TAX SHEET FOR IL'
		END
	ENDCASE

	CLEAR T_SLS(1), T_TAX(1), T_DSC(1), X_TAX(1)
	CLEAR T_SLS(2), T_TAX(2), T_DSC(2), X_TAX(2)
	LINCNT = 66
	RETURN
;------------------------------------------------


NEW_ACCT,
	IF (SAVACT.EQ.0 .OR. SAVTYP.NE.3) GOTO OUT_ACCT
	CALL GETACT
;;;	PLINE(1,30) = ARACDS
	IF (SAVACT(5,7).EQ.100 .OR. SAVACT(5,7).EQ.200)
	THEN	BEGIN
	;;;	PLINE(1,30) = ARACDS
	;;;	PLINE (35,44) = S_TAX(1),		'ZZZ,ZZX.XX-'
	;;;	PLINE (45,54) = S_TAX(2),		'ZZZ,ZZX.XX-'
	;;;	PLINE (65,74) = S_TAX(1)+S_TAX(2),	'ZZZ,ZZX.XX-'
		END
	ELSE	BEGIN
		PLINE(1,30) = ARACDS
		PLINE (45,54) = S_TAX(1),		'ZZZ,ZZX.XX-'
		PLINE (55,65) = S_TAX(2),		'ZZZ,ZZX.XX-'
		PLINE (66,76) = S_TAX(1)+S_TAX(2),	'ZZZ,ZZX.XX-'
		END
	CALL PRINT

OUT_ACCT,
	SAVTYP = ADSTYP
	SAVACT = ADSACT
	CLEAR	S_SLS(1), S_NON(1), S_TAX(1), S_DSC(1)
	CLEAR	S_SLS(2), S_NON(2), S_TAX(2), S_DSC(2)
	RETURN
;------------------------------------------------
;=================================================

PRINT,
	IF (LPONSW .EQ. 0) CALL OPNLP
	XCALL LPOUT (LINCNT,PGCNT,PLINE,TITLE,HDR,HDR2,'NO HDR',
&		LEG1,'NO LEGEND',' ',0,PAGSIZ,PRTCTL,0,LPSW,RPTNUM,PRTTYP)
	RETURN

;--------------------------------------------------------------------

OPNLP,
	LPSW = 1
	SPLFIL =
;;;	XCALL AR_LPON (LPSW,SPLFIL)
	XCALL AR_LPON (LPSW,SPLFIL,,,,NUMCOP)
	LPONSW = 1
	RETURN

GETACT,
	KEYACT = SAVACT
	SRCCTL = 1
	XCALL ISIO (7, ARACCT, SAVACT, READ, SRCCTL)
	IF (SRCCTL.GT.1) SRCCTL = 1
;	XCALL SERCH (7,ARACCT,SAVACT,1,7,ORG07,BSMID,SRCCTL,4,32,37,0,0,0,0)
	IF (SRCCTL) ARACCT =
	RETURN
	
GETCUS,	;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; FIND STATE IN CUSMAS
	;;;;;;;;;;;;;;;;;;;;;;;;;;

	XCALL SERCH (2,CUSIDX,KEY,1,6,ORG01,BSMID,SRCCTL,4,7,11,0,0,0,0)
	IF (SRCCTL .OR. IRC001.LE.0) 
	THEN	BEGIN
		ALPHA(5,10) = ADSCUS,NUMASK
		DISPLAY (15,13,10,'ERROR LOCATING CUSTOMER: ',ALPHA(5,10),7)
		STATE = 'ZZ'
		END
	ELSE	BEGIN
		LOKCTL = 1
		XCALL IO (1,CUSMAS,IRC001,READ,LOKCTL)
		END

	RETURN
;--------------------------------------------------------------------

OPENS,	;;;;;;;;;;;;;;;;;;;
	;;; OPEN FILES
	;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK

	CHN008 = 8

	XCALL FILES (7,'SI',007,SWITCH)		;FILE 007 - ARACCT
	IF (SWITCH .EQ. 9) RETURN
	CHN007 = 7

	CHN001 = 1
	CHN002 = 2

;	LOKCTL = 1
;	XCALL IO (7,ARACTL,1,READ,LOKCTL)
;	ORG07 = ORG007

	CALL OPNLP
	IF (LPSW .EQ. 0) RETURN
	OPNOK = 1
	RETURN
;------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;
	;;; CLOSE OPEN FILES
	;;;;;;;;;;;;;;;;;;;;;
;;;	IF (LPONSW) XCALL AR_LPOFF (LPSW,SPLFIL,PGCNT)
	IF (LPONSW) XCALL AR_LPOFF (LPSW,SPLFIL,PGCNT,NUMCOP)

	close chn008
	close chn001
	close chn002

;;;	IF (CHN008) XCALL FILES (CHN008,'I',008,4)
;;;	IF (CHN001) XCALL FILES (CHN001,'I',001,4)
;;;	IF (CHN002) XCALL FILES (CHN002,'I',002,4)

	RETURN
;------------------------------------
END


