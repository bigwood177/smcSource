;  INITAR / AR 
;
;
;:
;		PROGRAM TO INITIALIZE ALL FILES
;		IN THE ACCOUNTS RECEIVABLE SYSTEM.
;		DO NOT LEAVE ON USER'S DISK.
;
; 5-16-18: ssq convert cusmas to isam

RECORD FILES
	AR1	,A14,'   :CUSMAS.   '
	AR2	,A14,'   :CUSIDX.   '
	AR3	,A14,'   :AROPEN.   '
	AR4	,A14,'   :SALES0.   '
	AR5	,A14,'   :SLSDST.   '
	AR6	,A14,'   :CASH00.   '
	AR7	,A14,'   :ARACCT.   '
	AR8	,A14,'   :ARDIST.   '
	AR9	,A14,'   :COMDUE.   '
	AR10	,A14,'   :ARTERM.   '
	AR11	,A14,'   :ARTCDE.   '
	AR12	,A14,'   :FINCTL.   '
RECORD ,X
	AR	,12A14
RECORD FILBL
	FILNAM	,A14
RECORD
	PHYDEV	,A3
	CPYEXT	,A3
RECORD CTLVAR
		,D10,0000100001
	MAXREC	,D5
		,D3,000
RECORD BRACKS
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
RECORD
		.INCLUDE 'DEF:RD001S.DEF'
		.INCLUDE 'DEF:RD002S.DEF'
		.INCLUDE 'DEF:RD003S.DEF'
		.INCLUDE 'DEF:RD004S.DEF'
		.INCLUDE 'DEF:RD005S.DEF'
		.INCLUDE 'DEF:RD006S.DEF'
		.INCLUDE 'DEF:RD007S.DEF'
		.INCLUDE 'DEF:RD008S.DEF'
		.INCLUDE 'DEF:RD050S.DEF'
		.INCLUDE 'DEF:RD170S.DEF'
		.INCLUDE 'DEF:RD169S.DEF'
		.INCLUDE 'DEF:RD173S.DEF'
RECORD,X
	RECSIZ	,12D4
RECORD
	AERRNO	,A3
	WRTREC	,A800
	FILCNT	,D2,00
	FILSIZ	,D4
	MAXCNT	,12D5
	BLKSIZ	,12D4
	ENTRY	,A6
	INXCTL	,D1
	MAX	,D1
	ROW	,D2
	COL	,D2
	TYPE	,A2
	CNGCTL	,D1
	WHATNO	,D2
	NUMDSC	,D2
	RECCNT	,D5
	V	,D1
	COL2	,D2
	READ	,D1,	0
	WRITE	,D1,	1
	SWITCH	,D1
	SUB	,D1
	LOKCTL	,D1
;	PNTR	,D2		;AR5
	UPNDSC	,D1		;AR5
PROC 
	V = -1
	XCALL TERID (V)
BEGIN,
	V = 1
	XCALL OUTPT (1,1,2,'INITIALIZE A/R FILES',V)
	XCALL OUTPT (3,5,0,'ENTER LOGICAL DEVICE FILES WILL USE',V)
	XCALL OUTPT (3,50,0,'COMPANY CODE EXTENT',V)
INPTDV,
	XCALL INPUT (3,43,3,1,'AE',ENTRY,INXCTL,V)
	GO TO (BEGIN,END), INXCTL
	PHYDEV = ENTRY (1,3)
	SUB = 4
LOGLUP,
	IF (SUB.EQ.0) GO TO INPTDV
	SUB = SUB - 1
	IF (PHYDEV(SUB,SUB).EQ.' ') GO TO LOGLUP
	PHYDEV (4-SUB,3) = PHYDEV (1,SUB)
	IF (SUB.LT.3) PHYDEV (1,3-SUB) =
INPTCE,
	XCALL INPUT (3,71,3,3,'AE',ENTRY,INXCTL,V)
	GO TO (BEGIN,END), INXCTL
	CPYEXT = ENTRY (1,3)
	CNGCTL = 2
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (REDDEV,INPTDV), CNGCTL + 1
REDDEV,
	AR1 (1,3) = PHYDEV
	AR1 (12,14) = CPYEXT
	AR2 (1,3) = PHYDEV
	AR2 (12,14) = CPYEXT
	AR3 (1,3) = PHYDEV
	AR3 (12,14) = CPYEXT
	AR4 (1,3) = PHYDEV
	AR4 (12,14) = CPYEXT
	AR5 (1,3) = PHYDEV
	AR5 (12,14) = CPYEXT
	AR6 (1,3) = PHYDEV
	AR6 (12,14) = CPYEXT
	AR7 (1,3) = PHYDEV
	AR7 (12,14) = CPYEXT
	AR8 (1,3) = PHYDEV
	AR8 (12,14) = CPYEXT
	AR9 (1,3) = PHYDEV
	AR9 (12,14) = CPYEXT
	AR10 (1,3) = PHYDEV
	AR10 (12,14) = CPYEXT
	AR11 (1,3) = PHYDEV
	AR11 (12,14) = CPYEXT
	AR12 (1,3) = PHYDEV
	AR12 (12,14) = CPYEXT
	XCALL OUTPT (5,20,0,'1. INITIALIZE FINANCE CONTROL FILE ?',V)
	XCALL OUTPT (7,20,0,'PLEASE ENTER THE MAX # RECORDS',V)
	XCALL OUTPT (8,20,0,'TO ALLOW FOR EACH FILE BELOW:',V)
	XCALL OUTPT (10,20,0,'2. CUSTOMER MASTER -ISAM',V)
	XCALL OUTPT (11,20,0,'3. A/R OPEN',V)
	XCALL OUTPT (12,20,0,'4. SALES TRX',V)
	XCALL OUTPT (13,20,0,'5. SALES DISTRIBS',V)
	XCALL OUTPT (14,20,0,'6. CASH TRX',V)
	XCALL OUTPT (15,20,0,'7. G/L ACCOUNTS',V)
	XCALL OUTPT (16,20,0,'8. G/L DISTRIBUTIONS',V)
	XCALL OUTPT (17,20,0,'9. COMMISSIONS DUE',V)
	XCALL OUTPT (18,19,0,'10. TERMS CODES',V)
	XCALL OUTPT (19,19,0,'11. TAX CODES',V)
	XCALL OUTPT (21,20,0,'(LEAVING A FIELD BLANK WILL',V)
	XCALL OUTPT (22,21,0,'SKIP CREATING THAT FILE.)',V)
FINCTL,
	XCALL INPUT (5,58,1,0,'AE',ENTRY,INXCTL,V)
	GO TO (BEGIN,END), INXCTL
	IF (ENTRY.EQ.' ') XCALL OUTPT (5,58,0,'N',V)
	IF (ENTRY.EQ.' ') ENTRY = 'N'
	IF (ENTRY.NE.'N'.AND.ENTRY.NE.'Y') GO TO FINCTL
	MAXCNT (12) = 1
	IF (ENTRY.EQ.'N') MAXCNT(12) = 
	GO TO (ANYCNG), CNGCTL
INPUT1,
;;;	TYPE = '#E'
;;;	ROW = 10
;;;	MAX = 5
;;;	CALL INPUT
;;;	GO TO (BEGIN,END), INXCTL
;;;	MAXCNT (1) = ENTRY (1,5)
;;;	MAXCNT (2) = ENTRY (1,5)
	GO TO (ANYCNG), CNGCTL
INPUT2,
	TYPE = '# '
	ROW = 11
	MAX = 5
	CALL INPUT
	GO TO (BEGIN), INXCTL
	MAXCNT (3) = ENTRY (1,5)
	GO TO (ANYCNG), CNGCTL
INPUT3,
	ROW = 12
	MAX = 4
	CALL INPUT
	GO TO (BEGIN), INXCTL
	MAXCNT (4) = ENTRY (1,4)
	GO TO (ANYCNG), CNGCTL
INPUT4,
	ROW = 13
	MAX = 4
	CALL INPUT
	GO TO (BEGIN), INXCTL
	MAXCNT (5) = ENTRY (1,4)
	GO TO (ANYCNG), CNGCTL
INPUT5,
	ROW = 14
	MAX = 4
	CALL INPUT
	GO TO (BEGIN), INXCTL
	MAXCNT (6) = ENTRY (1,4)
	GO TO (ANYCNG), CNGCTL
INPUT6,
	ROW = 15
	MAX = 4
	CALL INPUT
	GO TO (BEGIN), INXCTL
	MAXCNT (7) = ENTRY (1,4)
	GO TO (ANYCNG), CNGCTL
INPUT7,
	ROW = 16
	MAX = 5
	CALL INPUT
	GO TO (BEGIN), INXCTL
	MAXCNT (8) = ENTRY (1,5)
	GO TO (ANYCNG), CNGCTL
INPUT8,
	ROW = 17
	MAX = 5
	CALL INPUT
	GO TO (BEGIN), INXCTL
	MAXCNT (9) = ENTRY (1,5)
	GO TO (ANYCNG), CNGCTL
INPUT9,
	ROW = 18
	MAX = 5
	CALL INPUT
	GO TO (BEGIN), INXCTL
	MAXCNT (10) = ENTRY (1,5)
	GO TO (ANYCNG), CNGCTL
INPT10,
	ROW = 19
	MAX = 5
	CALL INPUT
	GO TO (BEGIN), INXCTL
	MAXCNT (11) = ENTRY (1,5)
	GO TO ANYCNG

CNGBR,
	TYPE = '# '
	GO TO (FINCTL,INPUT1,INPUT2,INPUT3,INPUT4,INPUT5,INPUT6,INPUT7
&		,INPUT8,INPUT9,INPT10), WHATNO
	GO TO ANYCNG
PROCES,
	GO TO PROCS1	;;;			;AR5
	XCALL OUTPT (2,1,2,'\',V)
	XCALL OUTPT (6,5,0,'ENTER PARAMETER SELECTIONS FOR',V)
	XCALL OUTPT (6,36,0,'CUSTOMER MASTER FILE',V)
	XCALL OUTPT (8,10,0,'1. NUMBER OF DISCOUNTS (10-28)',V)
	XCALL OUTPT (11,16,0,'(IF YOU WISH OTHER THAN 10 DISCOUNTS, YOU MUST',V)
	XCALL OUTPT 
&	(12,17,0,'MAKE MINOR MODIFICATIONS TO THE RECORD DEFINITIONS',V)
	XCALL OUTPT (13,17,0,'BEFORE PROCEEDING TO USE THE SYSTEM. SEE THE',V)
	XCALL OUTPT (14,17,0,
&	'INSTALLATION INSTRUCTIONS IN YOUR DOCUMENTATION.)',V)
INPT7,
	ROW = 8
	COL = 43
	MAX = 2
	TYPE = '#E'
	CALL INPUT
	GO TO (BEGIN,END), INXCTL
	NUMDSC = ENTRY (1,2)
	IF (NUMDSC.EQ.0) CALL SET10
	IF (NUMDSC.LT.10.OR.NUMDSC.GT.28) GO TO INPT7
;	PNTR = (NUMDSC - 10) * 4			;AR5
	GO TO ANYCN1
SET10,
	NUMDSC = 10
	ENTRY (1,2) = NUMDSC
	XCALL OUTPT (8,43,0,ENTRY(1,2),V)
	RETURN
PROCS1,
	V = 2
	XCALL WATE (4,V)
	FILCNT =
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;BLOCKS,
;;;	INCR FILCNT
;;;	BLKSIZ(FILCNT) = ((RECSIZ(FILCNT) + 2)*(MAXCNT(FILCNT) + 2))/512 + 1
;;;	IF (FILCNT.LT.12) GO TO BLOCKS
;;;	ONERROR ERRMSG
;;;	FILCNT =
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	FILCNT = 2		;SKIP CUSMAS, CUSIDX	;5-16-18
WRLOOP,
	INCR FILCNT
	IF (FILCNT.EQ.12) GO TO INIFIN
	IF (FILCNT.GT.12) GO TO BEGIN
;;;	IF (MAXCNT(FILCNT).EQ.0.AND.FILCNT.EQ.1.AND.UPNDSC) CALL UPCUSM	;AR5
	IF (MAXCNT(FILCNT).EQ.0) GO TO WRLOOP
	MAXREC = MAXCNT (FILCNT) + 1
	IF (FILCNT.NE.2) WRTREC(RECSIZ(FILCNT)-17,RECSIZ(FILCNT)) = CTLVAR
;;;	IF (FILCNT.EQ.1) WRTREC(RECSIZ(FILCNT)-188,RECSIZ(FILCNT)-187)=NUMDSC
	FILNAM = AR(FILCNT)

	OPEN (1,O,FILNAM)

;;;	FILSIZ = BLKSIZ(FILCNT)
;;;	XCALL OPENF (1,'O',FILBL,FILSIZ,RECSIZ(FILCNT),SWITCH)
;;;	IF (SWITCH.NE.0) GO TO ERRMSG
	LOKCTL = 1
	XCALL IOS (1,WRTREC(1,RECSIZ(FILCNT)),WRITE,LOKCTL)
	RECCNT = 1
WRBRKS,
	INCR RECCNT
	LOKCTL = 1
	XCALL IOS (1,BRACKS(1,RECSIZ(FILCNT)),WRITE,LOKCTL)
	IF (RECCNT.LE.MAXREC) GO TO WRBRKS
	CLOSE 1
	WRTREC =
	GO TO WRLOOP
INIFIN,
	IF (MAXCNT(FILCNT).EQ.0) GO TO WRLOOP
	FILNAM = AR(FILCNT)

	OPEN (1,O,FILNAM)

;;;	FILSIZ = BLKSIZ(FILCNT)
;;;	XCALL OPENF (1,'O',FILBL,FILSIZ,RECSIZ(FILCNT),SWITCH)
;;;	IF (SWITCH.NE.0) GO TO ERRMSG

	XCALL IO (1,BRACKS(1,RECSIZ(FILCNT)),1,WRITE,LOKCTL)
	CLOSE 1
	WRTREC =
	GO TO WRLOOP
;------ AR5 --------------------------------------------------------------
;;;UPCUSM,
;;;	FILNAM	= AR(FILCNT)
;;;	FILSIZ	= BLKSIZ(FILCNT)
;;;	XCALL OPENF (1,'U',FILBL,BLKSIZ(FILCNT),RECSIZ(FILCNT),SWITCH)
;;;	IF (SWITCH.NE.0) GOTO ERRMSG
;;;	XCALL IO(1,WRTREC,1,READ,LOKCTL)
;;;	WRTREC(RECSIZ(FILCNT)-188,RECSIZ(FILCNT)-187) = NUMDSC
;;;	XCALL IO(1,WRTREC(1,RECSIZ(FILCNT)),1,WRITE,LOKCTL)
;;;	CLOSE 1
;;;	WRTREC= 
;;;	RETURN
;-------------------------------------------------------------------------

END,
	CLOSE 15
	XCALL PGMND
	STOP
INPUT,
	XCALL INPUT (ROW,43,MAX,0,TYPE,ENTRY,INXCTL,V)
	RETURN
ANYCNG,
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (PROCES,CNGBR), CNGCTL+1
ANYCN1,
	CNGCTL = 2
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (PROCS1,INPT7), CNGCTL + 1
ERRMSG,
	IF (SWITCH.NE.2) GO TO OTHERR
	XCALL OUTPT (11,1,0,'ERROR CREATING FILE ',V)
	XCALL OUTPT (0,0,0,AR(FILCNT),V)
	XCALL OUTPT (0,0,0,' - NOT ENOUGH ROOM',V)
	XCALL MESAG(' ',1)
;	V = 1					;AR5
	GO TO BEGIN
OTHERR,
	IF (SWITCH.EQ.1) GOTO NOTFND		;AR5
	AERRNO = FILSIZ
	XCALL OUTPT (11,1,1,'DIBOL ERROR # ',V)
	DISPLAY (15,AERRNO,' ON FILE ',AR(FILCNT))
	XCALL MESAG (' ',1)
;	V = 1					;AR5
	GO TO BEGIN
;------ AR5 ------------------------------------------------------------
NOTFND,
	XCALL OUTPT(11,1,0,'FILE NOT FOUND',V)
	XCALL OUTPT(0,0,0,AR(FILCNT),V)
	XCALL MESAG(' ',1)
	GOTO BEGIN
;-----------------------------------------------------------------------------
END
