;  SLSCNG / AR 
;

; 12-12-13: converted to isam
; 	5-21-18: ssq convert cusmas to isam
RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR

	.include 'wnd:windows.def'

RECORD	FUNKEY
	.INCLUDE 'DEF:FUNKEY.DEF'

RECORD SALES		; 
		.INCLUDE 'DEF:RD004A.DEF'
RECORD SLSCTL
		.INCLUDE 'DEF:RD004B.DEF'
RECORD CUSMAS		; 
		.INCLUDE 'DEF:RD001A.DEF'
RECORD CUSCTL	,X	; 
		.INCLUDE 'DEF:RD001B.DEF'
RECORD SALM		; 
		.INCLUDE 'DEF:RD054A.DEF'
RECORD ARACCT	;;>,X	; 
		.INCLUDE 'DEF:RD007A.DEF'
;RECORD	,X		; 
;		.INCLUDE 'DEF:RD007B.DEF'
;;;RECORD CUSIDX	;;>,X	; 
;;;		.INCLUDE 'DEF:RD002A.DEF'
RECORD ARTCDE
		.INCLUDE 'DEF:RD169A.DEF'
RECORD ARTCTL	,X
		.INCLUDE 'DEF:RD169B.DEF'
RECORD ARTERM	
		.INCLUDE 'DEF:RD170A.DEF'
RECORD ATMCTL	,X
		.INCLUDE 'DEF:RD170B.DEF'
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD	CHANNEL
	CHN001	,D2
	CHN002	,D2
	CHN004	,D2
	CHN0X4	,D2
	CHN007	,D2
	CHN054	,D2
	CHN169	,D2
	CHN170	,D2

RECORD	WVARS
	W_ID	,D4
	WND_1	,D4
	WND_2	,D4
	WN_NAM1	,A7,	'SLSCNG1'
	WN_NAM2	,A7,	'SLSCNG2'
	WN_TNMBR	,D4

RECORD	VARS
	is_fch	,d1	;1=looking for a finance charge trx
	DI	,D2
	DROW	,D2
	DCOL	,D2
	TEMP	,A25

	F_KEY	,D3
	OPNOK	,D1

	BADTAX	,D1
	A7	,A7
	A9	,A9
	A8	,A8
	TAXFRT	,D8
	CMPCOD	,A3
	C_PROF	,D3
	COL2	,D2
	DISTIX	,D2
	DEFACT	,D7
	DSTERR	,D1
	DSTFLG	,A1
	DSTTOT	,D9
	OPTION	,D1
	ENTRY	,A26
	INXCTL	,D1
	CNGCTL	,D1
	ROW2	,D2
	WHATNO	,D2
	DECMAL	,D18
	KCUSNO	,D6
	KDOCNO	,D6
	ORGCUS	,D5
	ORGARA	,D5
	LSTDOC	,D6
	LSTTYP	,D1
	RECNO	,D5
	BLANKS	,A8
	BLANK2	,A30
	MASK	,A7,	'XXXXXXX'
	MASK2	,A8,	'XXXX-XXX'
	ALPHA	,A8
	KEY	,A7
	KEY2	,A6
	KEY3	,A3
	BSEND	,D5
	BSMID	,D5
	SRCCTL	,D1
	SALMAN	,A2
	TODAY	,A8
	MAXCNT	,D5
	DCHAR	,D3
	TCHAR	,D3
	SYSTEM	,D1
	SWITCH	,D1,1
	V	,D1
	READ	,D1,	0
	WRITE	,D1,	1
	LOKCTL	,D1
	OR169	,D5
	OR170	,D5
	TAX	,D7
	DUDATE	,D8
	TERM	,A1
	MANTAX	,A1
	SAVTYP	,D1
PROC
	XCALL TERID (V)
	XCALL ENVRN (SYSTEM)
	V = 1

	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF

	XCALL WHO(CMPCOD)
;;;	IF (CMPCOD .NE. 'TST')
;;;		BEGIN
;;;		XCALL w_msg (w_id, 23, 'YOURE NOT IN TEST COMPANY',1)
;;;		STOP
;;;		END
	USING CMPCOD SELECT
	('TST'),	C_PROF = 100
	('SMC'),	C_PROF = 100
	('ROC'),	C_PROF = 200
	(),		C_PROF = 000
	ENDUSING


	CALL INIT_WINDOW

DISPLA,
	SALES =
	UNLOCK 4
	XCALL AR2 (2,DSTFLG,SMLAR,SMLSLS,SMLOCH,SMLTAX,SMLFRT,W_ID)
DOCNO,
	CLEAR IS_FCH
;;;	CTL = '03,19,06,00,NE'
	CTL = '03,19,07,00,AE'
	CALL INPUT
	GO TO (DOCNO,ENDCNG), INXCTL
	A7 = ENTRY(1,7)
	IF (A7(1,1) .EQ. 'C')
		BEGIN
		IS_FCH = 1
		ENTRY = A7(2,7)
		END

	ONERROR NOT_NUM
	KDOCNO = ENTRY (1,6)
	OFFERROR

	IF (KDOCNO.NE.0) GO TO FNDTRX
NOT_NUM,
	OFFERROR
	XCALL w_msg (w_id, 23,' ',3)
	GO TO DOCNO
DOCTYP,
	SAVTYP = SDOCTP
	XCALL W_DISP (W_ID, WD_POS, 4,23, WD_CLR, WDC_EOL)
	XCALL W_DISP (W_ID, WD_POS, 23,3, WD_CLR, WDC_EOL)
	XCALL W_DISP (W_ID, WD_POS, 23,3,'1=SALE  3=CR MEMO  4=FIN CHG  5=DR MEMO')
	CTL = '04,19,01,00,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	XCALL W_DISP (W_ID, WD_POS, 23,3, WD_CLR, WDC_EOL)
	SDOCTP = ENTRY (1,1)
	IF (SDOCTP.EQ.2.OR.SDOCTP.LT.1.OR.SDOCTP.GT.5) GO TO BADTYP
	GO TO APLYTO
BADTYP,
	SDOCTP =
	XCALL w_msg (w_id, 23, ' ',3)
	GO TO DOCTYP
APLYTO,
	IF (BALMTH.NE.'B') GO TO APL1
	SAPLNO = -1
	XCALL W_DISP (W_ID, WD_POS, 4,28, WD_CLR, WDC_EOL)
	IF (SAVTYP.NE.SDOCTP .AND. SDOCTP.EQ.4) GO TO TAX
	GO TO ANYCNG
APL1,
;;;	IF (SDOCTP.EQ.1.OR.SDOCTP.EQ.4) GO TO ASIS
	IF (SDOCTP.EQ.1) GO TO ASIS		;SSQ 10/21/02
	XCALL W_DISP (W_ID, WD_POS, 4,31,'APPLY-TO')
	CTL = '04,41,06,00,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	SAPLNO = ENTRY (1,6)
ASIS,
;;;	IF (SDOCTP.EQ.1.OR.SDOCTP.EQ.4) SAPLNO = SDOCNO
	IF (SDOCTP.EQ.1) SAPLNO = SDOCNO	;SSQ 10/21/02
	IF (SAVTYP.NE.SDOCTP) GO TO TAX
	GO TO ANYCNG
DOCDTE,
	CTL = '05,19,08,05,D '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	SDOCDT = ENTRY (1,8)
	GO TO DUEDTE
CUSTNO,
	XCALL W_DISP (W_ID, WD_POS, 6,19, WD_CLR, WDC_EOL)
	CTL = '06,19,06,01,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	KCUSNO = ENTRY (1,6)
	IF (KCUSNO.EQ.0) GO TO INVCUS
	KEY2 = KCUSNO,MASK
	
	XCALL ISIO (1, CUSMAS, KCUSNO, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO BADCUS
	
;;;	BSEND = ORGCUS
;;;	XCALL SERCH (2,CUSIDX,KEY2,1,6,BSEND,BSMID,SRCCTL,4,7,11,0,0,0,0)
;;;	GO TO (BADCUS), SRCCTL
;;;	LOKCTL = 1
;;;	XCALL IO (1,CUSMAS,IRC001,READ,LOKCTL)

	IF (ENTRY.EQ.'999999') GO TO FRENME
	SCUSNO = CUSNO
	SNAME = NAME
	TERM = 'Y'
	SRCCTL = 2
	XCALL SERCH (10,ARTERM,TERMS,1,1,OR170,BSMID,SRCCTL,4,2,7,0,0,0,0)
	IF (SRCCTL.EQ.1) ARTRDS = 'TERMS NOT FOUND'
	IF (SRCCTL.EQ.1) TERM = 'N'
	XCALL W_DISP (W_ID, WD_POS, 6,31,NAME)
	XCALL W_DISP (W_ID, WD_POS, 7,31,ARTRDS)
	IF (BALMTH.EQ.'B') GO TO APLYTO
	IF (BALMTH.EQ.'O'.AND.SAPLNO.EQ.-1) GO TO APL1
	GO TO TAX
INVCUS,
	XCALL w_msg (w_id, 23, ' ',3)
	GO TO CUSTNO
FRENME,
	SCUSNO = 999999
	CTL = '06,27,25,00,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	SNAME = ENTRY (1,25)
	IF (CNGCTL.EQ.0.OR.BALMTH.EQ.'B') GO TO APLYTO
	IF (BALMTH.EQ.'O'.AND.SAPLNO.EQ.-1) GO TO APL1
	GO TO ANYCNG
BADCUS,
	XCALL w_msg (w_id, 23, 'CUSTOMER NOT ON FILE',1)
	GO TO CUSTNO
BADSLM,
	XCALL w_msg (w_id, 23, 'SALESMAN NOT ON FILE',1)
	GO TO SALEMN
DUEDTE,
	IF (SDOCTP.NE.1) GO TO NODUE
	CTL = '08,19,08,00,D '
					; The search for the terms code
					; was done for the customer name 
	IF (TERM.EQ.'N' .OR. ARTRDY.EQ.0) GO TO ASKDTE
ASKDTE,
TAKE,
	GO TO (ANYCNG), CNGCTL
	GO TO SALEMN
NODUE,
	GO TO (ANYCNG), CNGCTL
SALEMN,
	XCALL W_DISP (W_ID, WD_POS, 9,31,BLANK2)
	CTL = '09,19,02,00,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	SSLMAN = ENTRY (1,2)
	IF (ENTRY.EQ.'  ') SSLMAN = SLSMAN
	IF (SSLMAN.LT.1) GO TO SALEMN
	LOKCTL = 1
	XCALL IO (8,SALM,SSLMAN,READ,LOKCTL)
	IF (SLSNM.EQ.']]]') GO TO BADSLM
	SALMAN = SSLMAN
	XCALL W_DISP (W_ID, WD_POS, 9,19,SALMAN)
	XCALL W_DISP (W_ID, WD_POS, 9,31,SLSNM)
	GO TO ANYCNG
SLEAMT,
	CTL = '10,19,08,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	SSLAMT = ENTRY (1,9)
	if (sslamt.ne.0) 
	then	goto (re_calc),cngctl	;1-18-12
	else	goto total		;1-18-12
;;;	GOTO (RE_CALC),CNGCTL
MISC,
	CTL = '11,19,07,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	SMISC = ENTRY (1,8)
	IF (SMISC.NE.0 .AND. DSTFLG.EQ.'Y')
		BEGIN
		ROW = 11
		DEFACT = SMSACT
		CALL GETACT
		GO TO (DISPLA), INXCTL
		SMSACT = DEFACT
		END
	if (smisc.ne.0) 		;1-18-12
	then	goto (re_calc),cngctl	;1-18-12
	else	goto total		;1-18-12
;;;	GOTO (RE_CALC),CNGCTL

FREIT,
	CTL = '12,19,07,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	SFRGHT = ENTRY (1,7)
	SFRACT = SFRTAC
	DEFACT = SFRTAC
;;;	IF (SMLFRT.NE.'Y'.OR.SFRGHT.EQ.0) GO TO TOTAL
	IF (SFRGHT.NE.0 .AND. SMLFRT.EQ.'Y')
		BEGIN
		ROW = 12
		CALL GETACT
		GO TO (DISPLA), INXCTL
		SFRACT = DEFACT
		END
	GOTO (RE_CALC),CNGCTL
RE_CALC,
	CALL GET_TAX_CODE
	IF (BADTAX)
		BEGIN
		CALL TAXCODE
		GOTO (DISPLA),INXCTL
		END
	CALL CALC_TAX
	GOTO TOTAL

;12-30-98 SSQ: 3 tax amounts
TAX,
	defact = artgln(1)
	if (defact.le.0) defact = stxact
;	if (defact.le.0) defact = staxac(1)

;;;	DEFACT = STAXAC(1)
	CTL = '13,19,07,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	STAX(1) = ENTRY (1,7)
	TAX = STAX(1)
	ROW = 13
	COL = 41
	IF (DSTFLG.NE.'Y') GO TO TAX1
	IF (TAX.NE.0) 
	THEN	CALL DSPACT		; Just display G/L acct #
	ELSE	GOTO TOTAL
	CALL GETACT
	GO TO (DISPLA), INXCTL
	STXACT(1) = DEFACT
TAX1,
	GOTO (TOTAL),CNGCTL
TAX2,

	defact = artgln(2)
	if (defact.le.0) defact = stxact	;11-12-13
;	if (defact.le.0) defact = staxac(2)
;;;	DEFACT = STAXAC(2)
	CTL = '14,19,07,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	STAX(2) = ENTRY (1,7)
	TAX = STAX(2)
	ROW = 14
	COL = 41
	IF (TAX.NE.0) 
	THEN	CALL DSPACT		; Just display G/L acct #
	ELSE	GOTO TOTAL
	CALL GETACT
	GO TO (DISPLA), INXCTL
	STXACT(2) = DEFACT
	GOTO (TOTAL),CNGCTL
TAX3,
	defact = artgln(3)
	if (defact.le.0) defact = stxact	;11-12-13
;	if (defact.le.0) defact = staxac(3)

;;;	DEFACT = STAXAC(3)
	CTL = '15,19,07,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	STAX(3) = ENTRY (1,7)
	TAX = STAX(3)
	ROW = 15
	COL = 41
	IF (TAX.NE.0) 
	THEN	CALL DSPACT		; Just display G/L acct #
	ELSE	GO TO TOTAL
	CALL GETACT
	GO TO (DISPLA), INXCTL
	STXACT(3) = DEFACT
	GOTO (TOTAL),CNGCTL

TOTAL,
	CALL DSPTOT
	IF (CNGCTL.EQ.1.AND.WHATNO.NE.13) GO TO ANYCNG
	SARACT = SARAC
	DEFACT = SARAC
	IF (DECMAL.EQ.0) GO TO TOTAL1
	IF (SCUSNO.EQ.999999.AND.SDETDS.NE.'Y') GO TO TOTAL1
	IF (SCUSNO.NE.999999.AND.SMLAR.NE.'Y') GO TO TOTAL1
	ROW = 16
	CALL GETACT
	GO TO (DISPLA), INXCTL
	SARACT = DEFACT
TOTAL1,
	GO TO (ANYCNG), CNGCTL

COST,
	CTL = '05,70,08,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	SCOST = ENTRY  (1,9)
	GO TO ANYCNG
COMM,
	CTL = '07,70,06,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	SCOMM = ENTRY (1,7)
	GO TO ANYCNG
STAXFL,
	CTL = '08,70,03,00,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	STAXFL = ENTRY (1,3)
	KEY3 = STAXFL	
	SRCCTL = 2
	XCALL SERCH (9,ARTCDE,KEY3,1,3,OR169,BSMID,SRCCTL,4,4,9,0,0,0,0)
	IF (SRCCTL)
	BEGIN
	  XCALL w_msg (w_id, 23, 'INVALID TAX CODE - PLEASE REENTER',1)
	  GOTO STAXFL
	END
	GOTO RE_CALC
DSPTOT,
	CTL = '16,19,11'
	DECMAL = SSLAMT + SFRGHT + SMISC + STAX(1)+STAX(2)+STAX(3)
	CALL DSPDLR
	RETURN
CNGBR,
	XCALL W_DISP (W_ID, WD_POS, 2,24, WD_CLR, WDC_EOL)
	GO TO (ANYCNG,DOCTYP,DOCDTE,CUSTNO,DUEDTE,SALEMN,SLEAMT,MISC,FREIT,
&		TAX, TAX2, TAX3,
&		TOTAL, COST, COMM, STAXFL), WHATNO
;;;	IF (WHATNO.GT.16.AND.WHATNO.LT.26) GO TO CNGDST
BADCNG,
	CNGCTL = 3
	GO TO ANYCNG

;========================================================
;============ INTERNAL SUBS ================

GET_TAX_CODE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR BADTAX
	SRCCTL = 2
	XCALL SERCH (9,ARTCDE,STAXFL,1,3,OR169,BSMID,SRCCTL,4,4,9,0,0,0,0)
	IF (SRCCTL)
	THEN	BEGIN
		XCALL w_msg (w_id, 23, 'INVALID TAX CODE!!',1)
		BADTAX = 1
		END
	ELSE	BEGIN
		XCALL W_DISP (W_ID, WD_POS, 08,70 ,STAXFL)
		END
	RETURN
;-------------------------------------------

CALC_TAX,	;;;;;;;;;;;;;;;;;;;
	TAXFRT = 
	USING STAXFL SELECT
	('MN'),	TAXFRT = SFRGHT
	('W'),	TAXFRT = SFRGHT
	('N'),	TAXFRT = SFRGHT
	ENDUSING

	DECMAL = SSLAMT + SMISC + TAXFRT
	STAX(1) = (DECMAL*ARTPRT(1))#5
	STAX(2) = (DECMAL*ARTPRT(2))#5
	STAX(3) = (DECMAL*ARTPRT(3))#5

	STXACT(1) = ARTGLN(1)
	STXACT(2) = ARTGLN(2)
	STXACT(3) = ARTGLN(3)

	A9 = STAX(1),	'ZZZ,ZZX.XX' [LEFT]
	XCALL W_DISP (W_ID, WD_POS, 13,19,A9)
	CTL = '13,41'
	DEFACT = STXACT(1)
	CALL DSPACT

		A9 = STAX(2),	'ZZZ,ZZX.XX' [LEFT]
		XCALL W_DISP (W_ID, WD_POS, 14,19,A9)
		CTL = '14,41'
		DEFACT = STXACT(2)
		CALL DSPACT

		A9 = STAX(3),	'ZZZ,ZZX.XX' [LEFT]
		XCALL W_DISP (W_ID, WD_POS, 15,19,A9)
		CTL = '15,41'
		DEFACT = STXACT(3)
		CALL DSPACT
	RETURN
;----------------------------------
TAXCODE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CTL = '08,70,03,00,A '
	CALL INPUT
	IF (INXCTL .EQ. 1) RETURN	;^W
	STAXFL = ENTRY (1,3)
	SRCCTL = 2
	XCALL SERCH (9,ARTCDE,STAXFL,1,3,OR169,BSMID,SRCCTL,4,4,9,0,0,0,0)
	IF (SRCCTL)
		BEGIN
		XCALL w_msg (w_id, 23, 'INVALID TAX CODE - PLEASE REENTER',1)
		GOTO TAXCODE
		END
	RETURN
;----------------------------------

;========================================================

PROCES,
	CALL CHKDST
	IF (DSTERR.EQ.1) GO TO ANYCNG
	XCALL WATE (3,2)
	IF (sdoctp.ne.4.and.SDOCTP.NE.3.AND.SDOCTP.NE.5.AND.BALMTH.EQ.'O') SAPLNO = SDOCNO
;;;	IF (SDOCTP.NE.3.AND.SDOCTP.NE.5.AND.BALMTH.EQ.'O') SAPLNO = SDOCNO
	DECMAL = SSLAMT + SFRGHT + SMISC + STAX(1)+STAX(2)+STAX(3)
	SDISAL = (DECMAL * ARTRDP / 100) #2
	GO TO CHANGE
FNDTRX,
;;;	XCALL WATE (3,2)
	RECNO = 1
	LOKCTL = 1
	XCALL IO (13,SALES,MAXCNT,READ,LOKCTL)
READ,
	INCR RECNO
	LOKCTL = 1
	XCALL IO (13,SALES,RECNO,READ,LOKCTL)
	IF (SNAME.EQ.']]]]]]') GO TO NOFIND

	USING IS_FCH SELECT
	(1),	IF(SCUSNO.NE.KDOCNO .OR. SDOCTP.NE.4) GOTO READ

	(),	IF (SDOCNO.NE.KDOCNO) GOTO READ
	ENDUSING

;;;	IF (SDOCNO.NE.KDOCNO) GO TO READ

	IF (SNAME.EQ.'000000') GO TO READ
	LOKCTL = 0
	XCALL IO (4,SALES,RECNO,READ,LOKCTL)
	IF (LOKCTL) GO TO DISPLA
	XCALL W_DISP (W_ID, WD_POS, 24,1,WD_CLR, WDC_EOL)
	XCALL W_DISP (W_ID, WD_POS, 4,25,WD_CLR, WDC_EOL)
	DECMAL = SDOCNO
	CTL = '03,19,06'
	CALL DSPNUM
	DECMAL = SDOCTP
	CTL = '04,19,01'
	CALL DSPNUM
	IF (SDOCTP.NE.3.AND.SDOCTP.NE.5.AND.SDOCTP.NE.4) GO TO DSPDAT	;SSQ 10/21/02
	IF (SAPLNO.EQ.-1) GO TO DSPDAT
	XCALL W_DISP (W_ID, WD_POS, 4,31,'APPLY-TO')
	DECMAL = SAPLNO
	CTL = '04,41,06'
	CALL DSPNUM
DSPDAT,
	DECMAL (1,8) = SDOCDT
	CTL = '05,19,06'
	CALL DSPDTE
	CTL = '05,70,08'
	DECMAL = SCOST
	CALL DSPDLR
	DECMAL = SCUSNO
	CTL = '06,19,06'
	CALL DSPNUM
	XCALL W_DISP (W_ID, WD_POS, 6,31,SNAME)
	KEY2 = SCUSNO, 'XXXXXX'
	
	XCALL ISIO (1, CUSMAS, SCUSNO, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO CONT
	
;;;	BSEND = ORGCUS
;;;	XCALL SERCH (2,CUSIDX,KEY2,1,6,BSEND,BSMID,SRCCTL,4,7,11,0,0,0,0)
;;;	GO TO (CONT), SRCCTL
;;;	LOKCTL = 1
;;;	XCALL IO (1,CUSMAS,IRC001,READ,LOKCTL)

	TERM = 'Y'
	SRCCTL = 2
	XCALL SERCH (10,ARTERM,TERMS,1,1,OR170,BSMID,SRCCTL,4,2,7,0,0,0,0)
	IF (SRCCTL.EQ.1) ARTRDS = 'TERMS NOT FOUND'
	IF (SRCCTL.EQ.1) TERM = 'N'
	XCALL W_DISP (W_ID, WD_POS, 7,31,ARTRDS)
CONT,
	DECMAL = SSLMAN
	CTL = '09,19,02'
	CALL DSPNUM
	DECMAL = SCOMM
	CTL = '07,70,06'
	CALL DSPDLR
	DECMAL = SSLAMT
	CTL = '08,70'
	XCALL W_DISP (W_ID, WD_POS, ROW,COL,STAXFL)

	CALL GET_TAX_CODE	;8-2-12: gets tax g/l acct into memory

	CTL = '10,19,08'
	CALL DSPDLR
	DECMAL = SMISC
	CTL = '11,19,07'
	CALL DSPDLR
	XCALL W_DISP (W_ID, WD_POS, 10,41, WD_CLR, WDC_EOL)


	DECMAL = STAX(1)
	CTL = '13,19,07'
	CALL DSPDLR

	DECMAL = STAX(2)
	CTL = '14,19,07'
	CALL DSPDLR

	DECMAL = STAX(3)
	CTL = '15,19,07'
	CALL DSPDLR

	DECMAL = SFRGHT
	CTL = '12,19,07'
	CALL DSPDLR

	XCALL W_DISP (W_ID, WD_POS, 12,41, WD_CLR, WDC_EOL)
	CALL DSPTOT
	IF (DSTFLG.NE.'Y') GO TO SKPDST
	XCALL W_DISP (W_ID, WD_POS, 16,41, WD_CLR, WDC_EOL)
	COL = 41
	IF (SMISC.EQ.0) GO TO SKPMSC
	ROW = 11
	DEFACT = SMSACT
	CALL DSPACT
SKPMSC,
	TAX = STAX(1)+STAX(2)+STAX(3)
	IF (TAX.EQ.0) GO TO SKPTAX
	ROW = 13
	DEFACT = STXACT(1)
	CALL DSPACT
	ROW = 14
	DEFACT = STXACT(2)
	CALL DSPACT
	ROW = 15
	DEFACT = STXACT(3)
	CALL DSPACT

SKPTAX,
	IF (SFRGHT.EQ.0) GO TO SKPFRT
	ROW = 12
	DEFACT = SFRACT
	CALL DSPACT
SKPFRT,
	IF (DECMAL.EQ.0) GO TO SKPAR
	ROW = 16
	DEFACT = SARACT
	CALL DSPACT
SKPAR,
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; display sales dist. at anycn...
;;;	CALL DSPSLS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
SKPDST,
	XCALL W_DISP (W_ID, WD_POS, 24,1,WD_CLR, WDC_EOL)
	XCALL W_DISP (W_ID, WD_POS, 24,1,WD_CLR, WDC_EOL,'RIGHT TRX ?')
;;;	CTL = '24,14,01,00,YY'
	if (sdoctp .eq. 4)
	then	CTL = '24,14,01,00,YN'
	else	CTL = '24,14,01,00,YY'

	CALL INPUT
	GO TO (READ), INXCTL - 1
	GO TO ANYCNG
NOFIND,
	XCALL w_msg (w_id, 23, 'TRX NOT FOUND',1)
	GO TO DISPLA
CHANGE,
	LOKCTL = 1
	XCALL IO (4,SALES,RECNO,WRITE,LOKCTL)
FREBUF,
	LOKCTL = 1
	XCALL IO (4,SLSCTL,MAXCNT,READ,LOKCTL)
	LOKCTL = 1
	XCALL IO (4,SLSCTL,1,READ,LOKCTL)
	GO TO DISPLA

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;DSPSLS,
;;;	XCALL W_DISP (W_ID, WD_POS, 22,1, WD_CLR, WDC_EOL)
;;;	DISTIX =
;;;DSPSL1,
;;;	INCR DISTIX
;;;	IF (DISTIX.GT.9) RETURN
;;;	CALL STRWCL
;;;	XCALL W_DISP (W_ID, WD_POS, ROW,COL,BLANK2(1,21))
;;;	IF (SDAMTS(DISTIX).EQ.0) GO TO DSPSL1
;;;	DEFACT = SDACTS (DISTIX)
;;;	ALPHA = DEFACT, MASK2
;;;	XCALL W_DISP (W_ID, WD_POS, ROW,COL,ALPHA)
;;;	DECMAL = SDAMTS (DISTIX)
;;;	COL = COL + 10
;;;	MAX = 8
;;;	CALL DSPDLR
;;;	GO TO DSPSL1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

GETACT,
	COL = 41
	CALL DSPACT
	COL = 40
	CALL ACCEPT
	IF (TCHAR.EQ.13) RETURN
	COL = 41
	XCALL W_DISP (W_ID, WD_POS, ROW,41, WD_CLR, WDC_EOL)
	CALL ENTACT
	RETURN
ENTACT,
	INXCTL =
	IF (COL.EQ.41) XCALL W_DISP (W_ID, WD_POS, ROW,41, WD_CLR, WDC_EOL)
	XCALL W_DISP (W_ID, WD_POS, ROW,COL,BLANKS)
	CTL (7,14) = '04,03,# '
	IF (COL.EQ.41) GO TO SKPDEF
	MIN = 0
	IF (DEFACT.EQ.0) GO TO SKPDEF
	CALL DSPACT
	COL = COL - 1
	CALL ACCEPT
	COL = COL + 1
	IF (TCHAR.EQ.13) RETURN
SKPDEF,
	XCALL W_DISP (W_ID, WD_POS, 22,1, WD_CLR, WDC_EOL)
	XCALL W_DISP (W_ID, WD_POS, ROW,COL,BLANKS)
	CALL INPUT
	IF (INXCTL.EQ.1) RETURN
	DEFACT (1,4) = ENTRY (1,4)
	IF (DEFACT(1,4).EQ.0) DEFACT = 0
	IF (DEFACT.EQ.0) XCALL W_DISP (W_ID, WD_POS, ROW,COL,BLANKS)
	IF (DEFACT.EQ.0) RETURN
	COL2 = COL+35-31
	XCALL W_DISP (W_ID, WD_POS, ROW,COL2,'-')
	CTL (7,11) = '03,00'
	COL = COL + 5
	CALL INPUT
	IF (ENTRY(1,3) .EQ. '   ')	;SSQ 7-20-04
		BEGIN
		ENTRY(1,3) = C_PROF,	'XXX'
		XCALL W_DISP (W_ID, WD_POS, ROW,COL,ENTRY(1,3))
		END
	COL = COL - 5
	IF (INXCTL.EQ.1) DEFACT =
	GO TO (ENTACT), INXCTL
	DEFACT (5,7) = ENTRY (1,3)
	CALL DSPACT
	IF (SRCCTL.EQ.0) RETURN
	XCALL w_msg (w_id, 23, 'INVALID ACCOUNT',1)
	IF (WHATNO.GT.12) DEFACT =
	XCALL W_DISP (W_ID, WD_POS, ROW,COL,BLANK2(1,21))
	XCALL W_DISP (W_ID, WD_POS, 22,1,WD_CLR, WDC_EOL)
	GO TO ENTACT
ACCEPT,
	XCALL FLAGS (00010000)			;DISABLE CHARACTER ECHOING
	xcall w_disp(w_id, wd_pos,ROW,COL)

	xcall w_disp (w_id, wd_accept, tchar)
	if (tchar .eq. 10) goto accept

	IF (SYSTEM.NE.1.AND.TCHAR.EQ.13) ACCEPT (15,DCHAR)
	XCALL FLAGS (00000000)			;RE-ENABLE CHARACTER ECHOING
	RETURN
DSPACT,
	BSEND = ORGARA
	KEY = DEFACT, MASK
	SRCCTL = 1
	XCALL ISIO (7, ARACCT, KEY, READ, SRCCTL)
	IF (SRCCTL.GT.1) SRCCTL = 1
;	XCALL SERCH (7,ARACCT,KEY,1,7,BSEND,BSMID,SRCCTL,4,32,37,0,0,0,0)
	IF (SRCCTL.EQ.1) ARACDS = '** ACCOUNT NOT ON FILE **'
	ALPHA = DEFACT, MASK2
	XCALL W_DISP (W_ID, WD_POS, ROW,COL,ALPHA)
	IF (COL.EQ.41) XCALL W_DISP (W_ID, WD_POS, ROW,51,ARACDS)
	IF (COL.NE.41) XCALL W_DISP (W_ID, WD_POS, 22,1,ARACDS)
	xcall w_updt
	RETURN

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;STRWCL,
;;;	COL = 60
;;;	IF (DISTIX.LT.7) COL = 33
;;;	IF (DISTIX.LT.4) COL = 5
;;;	ROW = 21
;;;	IF (DISTIX.EQ.1.OR.DISTIX.EQ.4.OR.DISTIX.EQ.7) ROW = 19
;;;	IF (DISTIX.EQ.2.OR.DISTIX.EQ.5.OR.DISTIX.EQ.8) ROW = 20
;;;	RETURN
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;CNGDST,
;;;	IF (DSTFLG.NE.'Y') GO TO ANYCNG
;;;	XCALL W_DISP (W_ID, WD_POS, 22,1, WD_CLR, WDC_EOL)
;;;	DISTIX = WHATNO - 16
;;;	CALL STRWCL
;;;	XCALL W_DISP (W_ID, WD_POS, ROW,COL,BLANK2(1,21))
;;;	DEFACT = SDACTS (DISTIX)
;;;	INXCTL =
;;;	CALL ENTACT
;;;	GO TO (DISPLA), INXCTL
;;;	SDACTS (DISTIX) = DEFACT
;;;	IF (DEFACT.NE.0) GO TO CNGDAM
;;;	SDAMTS (DISTIX) = 0
;;;	XCALL W_DISP (W_ID, WD_POS, 22,1, WD_CLR, WDC_EOL)
;;;	GO TO ANYCNG
;;;CNGDAM,
;;;	COL = COL + 10
;;;	IF (SDAMTS(DISTIX).EQ.0) GO TO CNGDM2
;;;	DECMAL = SDAMTS (DISTIX)
;;;	CALL DSPDLR
;;;	COL = COL - 1
;;;	CALL ACCEPT
;;;	COL = COL + 1
;;;	IF (TCHAR.EQ.13) GO TO ANYCNG
;;;CNGDM2,
;;;	CTL(7,14) = '08,00,$-'
;;;	CALL INPUT
;;;	COL = COL - 10
;;;	GO TO (CNGDST), INXCTL
;;;	SDAMTS(DISTIX) = ENTRY (1,9)
;;;	XCALL W_DISP (W_ID, WD_POS, 22,1, WD_CLR, WDC_EOL)
;;;	GO TO ANYCNG
;;;CHKDST,
;;;	IF (DSTFLG.NE.'Y') RETURN
;;;	DSTERR =
;;;	DSTTOT =
;;;	DSTTOT = SDAMTS(1) + SDAMTS(2) + SDAMTS(3) + SDAMTS(4) + SDAMTS(5)
;;;	DSTTOT = DSTTOT + SDAMTS(6) + SDAMTS(7) + SDAMTS(8) + SDAMTS(9)
;;;	IF (DSTTOT.EQ.SSLAMT) RETURN
;;;	DSTERR = 1
;;;	DECMAL = SSLAMT - DSTTOT
;;;	XCALL W_DISP (W_ID, WD_POS, 22,1, WD_CLR, WDC_EOL)
;;;	XCALL W_DISP (W_ID, WD_POS, 22,32,'UNDISTRIBUTED =')
;;;	CTL = '22,48,11'
;;;	CALL DSPDLR
;;;	XCALL MESAG ('SALE AMT NOT FULLY DISTRIBUTED',1)
;;;	XCALL W_DISP (W_ID, WD_POS, 22,1, WD_CLR, WDC_EOL)
;;;	RETURN
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

ENDCNG,
	XCALL WATE (3,2)
ENDOFF,
	CALL CLOSE

	XCALL PGCHN ('AR:SLSENT',1)
INPUT,
	XCALL WINPT (W_ID, ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL)
;;;	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
ANYCNG,
	XCALL W_DISP (W_ID, WD_POS, 22,1,WD_CLR, WDC_EOL)
;----------------------------------
	IF (CNGCTL.EQ.1) xcall w_disp(w_id, wd_pos,24,1,wd_clr, wdc_eol)
;;;	XCALL ANYCN (CNGCTL,WHATNO)
	XCALL WANFK(W_ID,24,CNGCTL,WHATNO,F_KEY,'F1=DISTRIBUTIONS')
	USING F_KEY SELECT
	(F_01),	BEGIN
		xcall w_disp(w_id, wd_pos,24,1,wd_clr, wdc_eol)
		xcall w_updt
		CALL DIST39
		GOTO ANYCNG
		END
	ENDUSING

	GO TO (PROCES,CNGBR,DISPLA), CNGCTL + 1


DIST39,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; DISTRIBUTIONS
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	W_ID = WND_2

	XCALL W_PROC(WP_PLACE,WND_2,5,2)	
	XCALL W_DISP(WND_2,WD_CLEAR)

	XCALL W_DISP (W_ID, WD_POS, 1,2,'-----------------------------')
	XCALL W_DISP (W_ID, WD_POS, 1,30,'SALES DISTRIBUTIONS')
	XCALL W_DISP (W_ID, WD_POS, 1,49,'------------------------------')
	XCALL W_DISP (W_ID, WD_POS, 2,6,'ACCOUNT     AMOUNT          ACCOUNT')
	XCALL W_DISP (W_ID, WD_POS, 2,46,'AMOUNT         ACCOUNT     AMOUNT')

	FOR DI FROM 1 THRU 39
		BEGIN
		CLEAR TEMP
		TEMP(1,3) = DI, 'ZX.'
		DROW = DI + 2

		USING DI SELECT
		(01 THRU 13),	DCOL = 1
		(14 THRU 26),	BEGIN
				DROW = DROW - 13 
				DCOL = 29
				END

		(27 THRU 39),	BEGIN
				DROW = DROW - 26
				DCOL = 56
				END
		ENDUSING
		IF (SDAMTS(DI) .NE. 0)
			BEGIN
			TEMP( 5,12) = SDACTS(DI), 'ZXXX-XXX'
			TEMP(15,25) = SDAMTS(DI), 'ZZZ,ZZX.XX-'
			END

		XCALL W_DISP (W_ID, WD_POS, DROW, DCOL, TEMP)

		END

	XCALL W_UPDT

ANYCN_39,
	DSTTOT =
	FOR DI FROM 1 THRU 39
		BEGIN
		DSTTOT = DSTTOT + SDAMTS(DI)
		END
	
	DECMAL = SSLAMT - DSTTOT
	xcall w_disp(w_id, wd_pos,17,1,wd_clr, wdc_eol)
	xcall w_disp(w_id, wd_pos,17,32,'UNDISTRIBUTED =')
	CTL = '17,48,11'
	CALL DSPDLR

	XCALL WANCN (W_ID, 18, CNGCTL, WHATNO)
	GOTO (PROC_39,CNGBR_39),CNGCTL+1
CNGBR_39,
	DI = WHATNO
	ROW = DI + 2

	USING DI SELECT
	(01 THRU 13),	COL = 5

	(14 THRU 26),	BEGIN
			COL = 33
			ROW = ROW - 13
			END
	(27 THRU 39),	BEGIN
			COL = 60
			ROW = ROW - 26
			END

	(),		GOTO ANYCN_39
	ENDUSING

; GET ACCOUNT...

	XCALL W_DISP (W_ID, WD_POS, 18, 1, WD_CLR, WDC_EOL)
	DEFACT = SDACTS(DI)
	CALL ENTACT
	GOTO (PROC_39),INXCTL
	SDACTS(DI) = DEFACT

; GET AMOUNT ...

	IF (DEFACT .EQ. 0)
		BEGIN
		SDAMTS(DI) = 0
		GOTO ANYCN_39
		END

	COL = COL + 10
	IF (SDAMTS(DI) .EQ. 0) GOTO CNGDM2
	ENTRY(1,11) = SDAMTS (DI), 'ZZZ,ZZX.XX-' [LEFT]
	XCALL W_DISP (W_ID, WD_POS, ROW, COL, ENTRY(1,11) )
;;;	DECMAL = SDAMTS (DI)
;;;	CALL DSPDLR
	COL = COL - 1
	CALL ACCEPT
	COL = COL + 1
	IF (TCHAR.EQ.13) GO TO ANYCN_39
CNGDM2,
	CTL(7,14) = '08,00,$-'
	CALL INPUT
	COL = COL - 10
;;;	GO TO (CNGDST), INXCTL
	GO TO (ANYCN_39), INXCTL
	SDAMTS (DI) = ENTRY (1,9)
	GO TO ANYCN_39


CHKDST,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (SMLSLS.NE.'Y') SDAMTS (1) = SSLAMT
	IF (SMLSLS.NE.'Y') RETURN
	DSTERR =
	DSTTOT =
	FOR DI FROM 1 THRU 39
		BEGIN
		DSTTOT = DSTTOT + SDAMTS(DI)
		END
	
	IF (DSTTOT.EQ.SSLAMT) RETURN
	if (sslamt .eq. 0)
		begin
		for di from 1 thru 39 clear sdamts(di)
		clear dsttot
		return
		end

	DSTERR = 1
	DECMAL = SSLAMT - DSTTOT
	xcall w_disp(w_id, wd_pos,22,1,wd_clr, wdc_eol)
	xcall w_disp(w_id, wd_pos,22,32,'UNDISTRIBUTED =')
	CTL = '22,48,11'
	CALL DSPDLR
	XCALL W_MSG (W_ID, 23, 'SALE AMT NOT FULLY DISTRIBUTED',1)
	xcall w_disp(w_id, wd_pos,22,1,wd_clr, wdc_eol)
	RETURN

	
	GOTO ANYCN_39
PROC_39,
	XCALL W_PROC (WP_REMOVE, WND_2)	
	XCALL W_UPDT

	W_ID = WND_1
	RETURN
;--------------------------------------------------------
;;;	XCALL ANYCN (CNGCTL,WHATNO)
;;;	GO TO (PROCES,CNGBR,DISPLA), CNGCTL + 1
;----------------------------------
DSPNUM,
	OPTION = 1
	GO TO CALDSP
DSPDTE,
	XCALL DATE8(DECMAL(1,8), D_OUT, D_OUTR, D_FMT, D_SW)
	XCALL W_DISP (W_ID, WD_POS, ROW, COL, D_FMT)
	RETURN

DSPDLR,
	OPTION = 3
CALDSP,
;;;	XCALL DSPLY (MAX,ROW,COL,DECMAL,OPTION,V)
	XCALL WDSPL (w_id,MAX,ROW,COL,DECMAL,OPTION)
	xcall w_updt
	RETURN

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CLEAR OPNOK

;;;	SWITCH = 5
;;;	XCALL FILES (2,'I',02,SWITCH)		;FILE # 02 -- CUSIDX FILE
;;;	IF (SWITCH.EQ.9) RETURN
;;;	CHN002 = 2

	SWITCH = 5
	XCALL FILES (4,'U',04,SWITCH)		;FILE # 04 -- SALES0 FILE
	IF (SWITCH.EQ.9) RETURN
	CHN004 = 4

	SWITCH = 5
	XCALL FILES (1,'SI',01,SWITCH)		;FILE # 01 -- CUSMAS FILE
	IF (SWITCH.EQ.9) RETURN
	CHN001 = 1

	SWITCH = 5
	XCALL FILES (7,'SI',07,SWITCH)		;FILE # 07 -- ARACCT FILE
	IF (SWITCH.EQ.9) RETURN
	CHN007 = 7

	SWITCH = 5
	XCALL FILES (8,'I',54,SWITCH)		;FILE # 54 -- SALMAN FILE
	IF (SWITCH.EQ.9) RETURN
	CHN054 = 8

	SWITCH = 5
	XCALL FILES (13,'I',04,SWITCH)
	IF (SWITCH.EQ.9) RETURN
	CHN0X4 = 13

	SWITCH = 5
	XCALL FILES (09,'I',169,SWITCH)		;FILE # 169 -- ARTCDE FILE
	IF (SWITCH.EQ.9) RETURN
	CHN169 = 9

	SWITCH = 5
	XCALL FILES (10,'I',170,SWITCH)		;FILE # 170 -- ARTERM FILE
	IF (SWITCH.EQ.9) RETURN
	CHN170 = 10

;;;	LOKCTL = 1
;;;	XCALL IO (1,CUSCTL,1,READ,LOKCTL)
;;;	ORGCUS = ORG001

	LOKCTL = 1
	XCALL IO (4,SLSCTL,1,READ,LOKCTL)
	LOKCTL = 1
;	XCALL IO (7,ARACCT,1,READ,LOKCTL)
;	ORGARA = ORG007
	DSTFLG = SDETDS
	MAXCNT = MAX004
	LOKCTL = 1
	XCALL IO (9,ARTCTL,1,READ,LOKCTL)
	OR169 = ORG169
	LOKCTL = 1
	XCALL IO (10,ATMCTL,1,READ,LOKCTL)
	OR170 = ORG170

	OPNOK = 1
	RETURN
;-----------------------------------------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	
;;;	IF (CHN002) CLOSE CHN002
	IF (CHN004) XCALL FILES (4,'U',04,4)	;ssq 3-25-08
	IF (CHN001) CLOSE CHN001  
	IF (CHN007) CLOSE CHN007  
	IF (CHN054) CLOSE CHN054  
	IF (CHN0X4) CLOSE CHN0X4  
	IF (CHN169) CLOSE CHN169  
	IF (CHN170) CLOSE CHN170  

	RETURN
;-----------------------------------------------------------------------

INIT_WINDOW,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	XCALL U_START("LIB:SMC_WND",,,,,,,100)
	XCALL TNMBR (WN_TNMBR)
	XCALL W_PROC(WP_FIND,WND_1,WN_NAM1)
	IF (WND_1.EQ.0)
		BEGIN
		XCALL W_PROC(WP_CREATE,WND_1,WN_NAM1,25,80)
		END
	XCALL W_BRDR(WND_1,WB_TITLE,'SALES ADD',
&			WB_TPOS,WBT_TOP,WBT_CENTER)
	XCALL W_PROC(WP_PLACE,WND_1,1,1)	
	XCALL W_DISP(WND_1,WD_CLEAR)

	XCALL W_UPDT
	W_ID = WND_1
	xcall u_logwnd(wnd_1)

	XCALL W_PROC(WP_FIND,WND_2,WN_NAM2)
	IF (WND_2.EQ.0)
		BEGIN
		XCALL W_PROC(WP_CREATE,WND_2,WN_NAM2,18,80)
		END
	XCALL W_BRDR(WND_2,WB_TITLE,'DISTRIBUTIONS',
&			WB_TPOS,WBT_TOP,WBT_CENTER)
;;;	XCALL W_PROC(WP_PLACE,WND_2,5,2)	
;;;	XCALL W_DISP(WND_2,WD_CLEAR)
	xcall u_logwnd(wnd_2)

	RETURN
;-----------------------------------------------------------------

END
