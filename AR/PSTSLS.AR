;  PSTSLS / AR 
;
;
;
;		POSTS SALES TRX TO AROPEN FILE
;		POST AND SORT
;
; 4-14-10: open for exclusive use...
; 8-01-18: make aropen isam



RECORD SALES		; 
		.INCLUDE 'DEF:RD004A.DEF'
RECORD AROPEN		; 
		.INCLUDE 'DEF:RD003A.DEF'
RECORD DUMARO		; 
		.INCLUDE 'DEF:RD003B.DEF'

RECORD	FFILE
	FILNUM	,D3
	CLCTL	,D1
	REDFIL	,A14
 
RECORD	HEADER
		,A7,	'DBSORT '
	HFILE	,A14

RECORD	VARS
	CMPCOD	,A3
	USER	,A12	;WHO HAS AROPEN OPEN?
	KEYMSK	,A6,	'XXXXXX'
	MSGCTL	,D1
	V	,D1
	READ	,D1,	0
	WRITE	,D1,	1
	STORE	,D1,	2
	LOKCTL	,D1
	TOTTAX	,D7

PROC
	XCALL TERID (V)
;;;	XCALL FLAGS(10000000)
	XCALL OUTPT (2,1,1,'UPDATE A/R OPEN ITEM FILE',1)
	XCALL FILES (4,'I',04,5)		;FILE # 04 -- SALES0 FILE

; 4-14-10: open aropen for exlusive use, if aropen already open,
;		shell to batch job displaying users...

;;;	XCALL WHO (CMPCOD)
;;;	filnum = 3
;;;	XCALL FFILE (FILNUM,REDFIL,CLCTL)	;GET FILE SPEC

;;;	USING CMPCOD SELECT
;;;	('CAT','ROC'), BEGIN
;;;			REDFIL(1,3) = 'SMC'
;;;			REDFIL(12,14) = 'SMC'
;;;			END
;;;	ENDUSING


	XCALL FILES (3,'SU',03,5)		;FILE # 03 -- AROPEN FILE
;;;open_aro,
;;;	open (3, U, redfil, share:0) [err=in_use]	;exclusive use
;;;	goto not_in_use
;;;in_use,
;;;	xcall chkf ('aropen')		;who has aropen?
;;;	goto open_aro

;;;not_in_use,
;;;	LOKCTL = 1
;;;	XCALL IO (3,DUMARO,1,READ,LOKCTL)

	LOKCTL = 1
	XCALL IOS (4,SALES,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO ENDSLS

LOOP,
	LOKCTL = 1
	XCALL IOS (4,SALES,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO ENDSLS
	IF (SNAME.EQ.']]]]]]') GO TO ENDSLS
	TOTTAX = STAX(1) + STAX(2) + STAX(3)
	IF (SNAME.EQ.'000000'.OR.SSLAMT+SFRGHT+SMISC+TOTTAX.EQ.0
&		.OR.SCUSNO.EQ.999999) GO TO LOOP

	ADOCNO = SDOCNO
	ADOCTP = SDOCTP
	ADOCDT = SDOCDT
	ACUSNO = SCUSNO
;;;> 10-07-04 ssq	ADOCDU = SDOCDU		;Invoice Due Date
	ACMPNY = SCMPNY				;SSQ 10-21-04
	AAMT = SSLAMT
	AOTHER = SFRGHT + SMISC + TOTTAX
	ADISC = SDISAL
	AAPLNO = SAPLNO
	AARACT = SARACT

;;;	INCR REC003
	LOKCTL = 1
	XCALL ISIO (3, AROPEN, ACUSNO, STORE, LOKCTL)
;;;	XCALL IO (3, AROPEN, REC003, WRITE, LOKCTL)

	GO TO LOOP

ENDSLS,
;;;	IF (REC003 .GE. MAX003)
;;;		BEGIN
;;;		XCALL FILL (']', AROPEN)
;;;		MAX003 = REC003 + 1
;;;		LOKCTL = 1
;;;		XCALL IO (3, AROPEN, MAX003, WRITE, LOKCTL)
;;;		END
;;;	ORG003 = REC003
;;;	LOKCTL = 1
;;;	XCALL IO (3,DUMARO,1,WRITE,LOKCTL)

END,
	CLOSE 3
	CLOSE 4

;;;	FILNUM = 3		
;;;	XCALL FFILE (FILNUM,REDFIL,CLCTL)	;GET FILE SPEC
;;;	HFILE = REDFIL
 
;;;	XCALL OUTPT (2,1,2,HEADER,1)
 
;;;	SORT (IN=REDFIL,RECORD=AROPEN,
;;;&		KEY = (ACUSNO,AAPLNO,ADOCDT,ADOCTP,ADOCNO))


	XCALL PGCHN ('AR:STSLS2',0)
END
