;  CNVARO / AR 
;
;
;		::PCPYAR.DEF::
;******************************************************************************
;		ACCOUNTS RECEIVABLE 
;
;		RELEASED: AUGUST 1, 1984 (d70s10)
;******************************************************************************
;
;		PROPRIETARY RIGHTS NOTICE:  All rights reserved.  This
;		material contains the valuable properties and trade secrets
;		of MCBA, Glendale, California, USA embodying substantial
;		creative effort and confidential information and ideas, no
;		part of which may be used and/or disclosed without MCBA's
;		duly authorized license agreement and/or written permission.
;
;		COPYRIGHT NOTICE:  Copyright <C> 1978, 1981, 1982, 1983, 1984
;		MCBA, AN UNPUBLISHED WORK.  ALL RIGHTS RESERVED.
;
;
;		COMPILE & LINK PER INSTALLATION OR TECHNICAL NOTES.
;
;:
;		PROGRAM TO CONVERT AROPEN FILE FOR USE WITH AR RELEASE 2.
;
;***************************************************************************
;
;	PATCHED AS PER MCBA PATCH AR14-DIBOL-7		30-AUG-85
;
;
;
RECORD
	,A64,'THIS MATERIAL CONTAINS THE VALUABLE PROPERTIES AND TRADE SECRETS'
	,A62,'OF MCBA, EMBODYING CONFIDENTIAL INFORMATION AND IDEAS, NO PART'
	,A56,'OF WHICH MAY BE USED AND/OR DISCLOSED WITHOUT MCBAs DULY'
	,A55,'AUTHORIZED LICENSE AGREEMENT AND/OR WRITTEN PERMISSION.'
	,A61,'COPYRIGHT (C) MCBA, AN UNPUBLISHED WORK. ALL RIGHTS RESERVED.'

RECORD NEWARO		; RECSIZ =59
		.INCLUDE 'DEF:RD003A.DEF'

RECORD OLDARO		; RECSIZ = 53
	TDOCNO	,D6	; DOCUMENT NUMBER
	TDOCTP	,D1	; DOCUMENT TYPE
	TDOCDT	,D6	; DOCUMENT DATE
	TCUSNO	,D6	; CUSTOMER NUMBER
	TAMT	,D8	; SALE AMOUNT / CASH RECEIVED ($XXX,XXX.XX)
	TOTHER	,D7	; OTHER CHARGES / DISCOUNT ALLOWED ($XX,XXX.XX)
	TTDISC	,D6	; DEFAULT INVOICE DISCOUNT (X,XXX.XX)
	TAPLNO	,D6	; APPLY-TO-DOCUMENT NUMBER
	TARACT	,D7	; A/R ACCOUNT NUMBER (XXXX-XXX)
RECORD,X
		,A45
	OMAX003  ,D5
		,A3
RECORD,X
	TTOCNO	,A6
		,A47

RECORD ARTER1
		.INCLUDE 'DEF:RD170A.DEF'
RECORD ARTCTL
		.INCLUDE 'DEF:RD170B.DEF'
RECORD CUSMA1
		.INCLUDE 'DEF:RD001A.DEF'
RECORD CUSCTL
		.INCLUDE 'DEF:RD001B.DEF'
RECORD CUSID1
		.INCLUDE 'DEF:RD002A.DEF'
RECORD NEWCTL
		,A6
	CTLREC	,A53
RECORD	,X
		,A41
	ORG003	,D5
	REC003	,D5
	MAX003	,D5
		,A3
RECORD 
	NAROPN	,A14,	'   :AROPEN.NEW'
	OAROPN  ,A14,	'   :AROPEN.   '
	ARTERM	,A14,	'   :ARTERM.   '
	CUSMAS	,A14,	'   :CUSMAS.   '
	CUSIDX	,A14,	'   :CUSIDX.   '
	UTFILE	,A14
RECORD BRACKS
		,A50,	']]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]'
		,A9,	']]]]]]]]]'
RECORD COMPNY
			.INCLUDE 'DEF:CMP001.DEF'
RECORD DEVICE
			.INCLUDE 'DEF:DEV001.DEF'
RECORD
	CNGCTL  ,D1
	CMPNTR	,D1
	CNT1	,D2
	CNT2	,D2
	BSEND	,D5
	BS001	,D5
	BS170	,D5
	BSMID	,D5
	BSMID1	,D5
	SRCCTL	,D1
	ENTRY	,A3
	ERROR	,D5
	FILBL	,A14
	TMPFL	,A14
	INXCTL	,D1
	LOKCTL	,D1
	READ    ,D1,    0
	WRITE   ,D1,    1
	READS   ,D1,    0
	SIZE	,D5
	SWITCH	,D1
	WRITES	,D1, 	1
	TDOCDU	,D6
	TERM    ,A1
	TSTOLD  ,D3,	53
	TSTSIZ  ,A400
	WHATNO  ,D2
	V	,D1
	RECCNT	,D5
	MAXCNT	,D5
PROC (3)
	V = -1			 ;RUN LOGGED OUT OF SECURITY SYSTEM.
	XCALL TERID (V)

BEGIN,
	XCALL OUTPT (1,1,2,'CONVERT A/R OPEN ITEM FILE',V)
	UTFILE = 'UT:COMPNY.DDF'
	XCALL OPENF (10,'I',UTFILE,ERROR,0,SWITCH)
	IF (SWITCH) GOTO ERRCO
	LOKCTL = 1
	XCALL IO (10,COMPNY,1,READ,LOKCTL)
	CLOSE 10
	UTFILE = 'UT:DEVICE.DDF'
	XCALL OPENF (10,'U',UTFILE,ERROR,0,SWITCH)
	IF (SWITCH) GOTO ERRDEV
COMCOD,
	XCALL OUTPT (6,17,0,'1. PLEASE ENTER COMPANY CODE',V)
	XCALL INPUT (6,47,3,3,'AE',ENTRY,INXCTL,V)
	GO TO (CLOS10,END), INXCTL
	OAROPN(12,14) = ENTRY
	ARTERM(12,14) = ENTRY
	CUSMAS(12,14) = 'NEW'	;;;
	CUSIDX(12,14) = 'SMC'	;;;
	CMPNTR =
FINDCO,
	INCR CMPNTR
	IF (CMPNTR.GT.8) GO TO COMPNF
	IF (COMCOD(CMPNTR).NE.ENTRY) GO TO FINDCO
	CNGCTL = 2
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (OPEN,COMCOD), CNGCTL + 1
COMPNF,
	XCALL MESAG ('INVALID COMPANY CODE',1)
	GO TO COMCOD
OPEN,
	XCALL WATE (4,V)
	NEWARO =
	LOKCTL = 1
	XCALL IO (10,DEVICE,003,READ,LOKCTL)
	OAROPN(1,3) = DEVNAM(CMPNTR)
	NAROPN(1,3) = DEVNAM(CMPNTR)
	LOKCTL = 1
	XCALL IO (10,DEVICE,170,READ,LOKCTL)
	ARTERM(1,3) = DEVNAM(CMPNTR)
	LOKCTL = 1
	XCALL IO (10,DEVICE,001,READ,LOKCTL)
	CUSMAS(1,3) = DEVNAM(CMPNTR)
	LOKCTL = 1
	XCALL IO (10,DEVICE,002,READ,LOKCTL)
	CUSIDX(1,3) = DEVNAM(CMPNTR)	
	TMPFL = OAROPN
	CALL SQUEEZ
	OAROPN = FILBL
	TMPFL = NAROPN
	CALL SQUEEZ
	NAROPN = FILBL
	TMPFL = ARTERM
	CALL SQUEEZ
	ARTERM = FILBL
	TMPFL = CUSMAS
	CALL SQUEEZ
	CUSMAS = TMPFL
	TMPFL = CUSIDX
	CALL SQUEEZ
	CUSIDX = FILBL
;;;	IF (STATUS(CMPNTR).NE.0) GO TO OPNERR
	XCALL OPENF (1,'I',OAROPN,ERROR,0,SWITCH)
	IF (SWITCH) GOTO FILENF
	LOKCTL = 1
	XCALL IO (10,DEVICE,003,READ,LOKCTL)
	STATUS(CMPNTR) = 99
	LOKCTL = 1
	XCALL IO (10,DEVICE,003,WRITE,LOKCTL)
	SWITCH = 
	XCALL OPENF (5,'I',ARTERM,ERROR,0,SWITCH)
	IF (SWITCH) GO TO FILENF
	SWITCH = 
	XCALL OPENF (6,'I',CUSIDX,ERROR,0,SWITCH)
	IF (SWITCH) GO TO FILENF
	SWITCH = 
	XCALL OPENF (7,'I',CUSMAS,ERROR,0,SWITCH)
	IF (SWITCH) GO TO FILENF
	LOKCTL = 1
	XCALL IO (5,ARTCTL,1,READ,LOKCTL)
	BS170 = ORG170
	LOKCTL = 1
	XCALL IO (7,CUSCTL,1,READ,LOKCTL)
	BS001 = ORG001
	LOKCTL = 1
	XCALL IOS (1,TSTSIZ,READS,LOKCTL)
	XCALL RSTAT (TSTOLD,TERM)
	IF (TSTOLD.NE.53) XCALL MESAG ('INCORRECT AROPEN RECORD LENGTH',1)
	IF (TSTOLD.NE.53) GO TO EOFILE
	LOKCTL = 1
	XCALL IO (1,OLDARO,1,READ,LOKCTL)
	SIZE = (((OMAX003 + 1) * (59 + 2))/512) + 1
	XCALL OPENF (2,'O',NAROPN,SIZE,59,SWITCH)
	IF (SWITCH) GO TO NOROOM
	XCALL OUTPT (12,1,0,'PROCESSING DOCUMENT NUMBER',V)
	CTLREC = OLDARO
	NEWARO = NEWCTL
	LOKCTL = 1
	XCALL IOS (2,NEWARO,WRITE,LOKCTL)
	RECCNT = 1
	MAXCNT = 1
PROCES,
	TDOCDU =
	NEWARO =
	LOKCTL = 1
	XCALL IOS (1,OLDARO,READS,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO EOFILE
	IF (TTOCNO.EQ.']]]]]]') GO TO WRTBRK
	IF (TDOCNO.EQ.-1) GOTO PROCES
	XCALL OUTPT (12,31,0,TDOCNO,V)
	IF (TDOCTP.NE.1) GO TO CPYREC
	SRCCTL = 3
	BSEND = BS001
	XCALL SERCH (6,CUSID1,TCUSNO,1,6,BSEND,BSMID,SRCCTL,4,7,11,0,0,0,0)
;	ABOVE LINE CHANGED FROM ,12, TO ,11, AS PER MCBA PATCH AR14-DIBOL-7
;
	IF (SRCCTL)
	BEGIN
	  DISPLAY (15,13,10,'BADCUS')
	  GOTO BADCUS
	END
	LOKCTL = 1
	XCALL IO (7,CUSMA1,IRC001,READ,LOKCTL)
	BS170 = ORG170
	SRCCTL = 2
	XCALL SERCH (5,ARTER1,TERMS,1,1,BS170,BSMID1,SRCCTL,4,2,7,0,0,0,0)
	IF (SRCCTL)
	BEGIN
	  DISPLAY (15,13,10,'BADTRM')
	  GOTO BADCUS
	END
	IF (TDOCDT.EQ.0) GO TO BADCUS
	XCALL ADDTE(TDOCDT,ARTRDY,TDOCDU)
CPYREC,
	ADOCNO = TDOCNO
	ADOCTP = TDOCTP
	ADOCDT = TDOCDT
	ACUSNO = TCUSNO
	ADOCDU = TDOCDU
	AAMT = TAMT
	AOTHER = TOTHER
	ADISC = TTDISC
	AAPLNO = TAPLNO
	AARACT = TARACT
	LOKCTL = 1
	XCALL IOS (2,NEWARO,WRITES,LOKCTL)
	INCR RECCNT
	INCR MAXCNT
	GO TO PROCES
WRTBRK,
	NEWARO = BRACKS
	LOKCTL = 1
	XCALL IOS (2,NEWARO,WRITES,LOKCTL)
	INCR MAXCNT
	LOKCTL = 1
	XCALL IOS (1,OLDARO,READS,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO EOFILE
	GO TO WRTBRK
EOFILE,
	LOKCTL = 1
	XCALL IO (10,DEVICE,003,READ,LOKCTL)
	STATUS(CMPNTR) =
	LOKCTL = 1
	XCALL IO (10,DEVICE,003,WRITE,LOKCTL)
	CLOSE 10
	CLOSE 1
	CLOSE 2
	OPEN (2,U,NAROPN)
	READ (2,NEWCTL,1)
	REC003 = RECCNT
	ORG003 = RECCNT
	MAX003 = MAXCNT-1
	WRITE (2,NEWCTL,1)
	IF (TSTOLD.NE.53) GO TO END
;;;	XCALL RENAM (3,OAROPN,NAROPN)
	XCALL OUTPT (2,1,2,'\',V)
	XCALL MESAG ('CONVERSION COMPLETED',2)
	GO TO BEGIN
;***********************************************************************
ERRCO,
	XCALL MESAG ('FILE ''COMPNY.DDF'' NOT FOUND ON DEVICE UT',1)
	GO TO END
ERRDEV,
	XCALL MESAG ('FILE ''DEVICE.DDF'' NOT FOUND ON DEVICE UT',1)
	GO TO END
;**********************************************************************
NOROOM,
	IF (SWITCH.EQ.3) GO TO FILERR
	XCALL MESAG ('NO ROOM ON DEVICE FOR NEW AROPEN FILE',1)
	CLOSE 10
	GO TO BEGIN
FILERR,
	ENTRY = SIZE
	XCALL OUTPT (24,1,1,'DIBOL ERROR # ',1)
	XCALL OUTPT (0,0,0,ENTRY,1)
	XCALL OUTPT (0,0,0,' ON OPENING AROPEN FILE',1)
	CLOSE 10
	GO TO BEGIN
OPNERR,
	XCALL MESAG ('FILE IN USE',1)
	CLOSE 10
	GO TO BEGIN
FILENF,
	XCALL MESAG ('FILE NOT FOUND WITH REQUESTED COMPANY CODE EXTENSION',1)
	CLOSE 10
	GO TO BEGIN
CLOS10,
	CLOSE 10
	GO TO BEGIN
BADCUS,
	TDOCDU =
	GO TO CPYREC
SQUEEZ,
	CNT1 =
	CNT2 =
	FILBL =
LOOP1,
	IF (CNT1.GE.14) RETURN
	INCR CNT1
	IF (TMPFL(CNT1,CNT1).EQ.' ') GO TO LOOP1
	INCR CNT2
	FILBL(CNT2,CNT2) = TMPFL(CNT1,CNT1)
	GO TO LOOP1

;**********************************************************************
END,
	XCALL PGMND
END
