;  COMPUR / AR 
;
;	PURGE AND SORT (OR JUST SORT) COMDUE FILE
;

RECORD COMDUE		;
		.INCLUDE 'DEF:RD050A.DEF'
;;;RECORD	,X
;;;			; COMMISSIONS DUE RECORD DEFINITION "RD050A.DEF"
;;;			; SIZE - 74	DEVICE - 50
;;;			; NAME - "COMDUE"
;;;		,A39
;;;	KINVYY	,D4	; DOCUMENT DATE (YYYY)
;;;	KINVMD	,D4	; DOCUMENT DATE (MMDD)
;:
RECORD COMCTL		;
		.INCLUDE 'DEF:RD050B.DEF'
RECORD BRACKS		;
		.INCLUDE 'DEF:RD050C.DEF'
RECORD
	V	,D1
	SWITCH	,D1
	INXCTL	,D1
	ENTRY	,A14
	TDATE	,D8
	PDATE	,D8
	PCNT	,D5
	COMFIL	,A14
	SAVPFL	,A14
	CNGCTL	,D1
	WHATNO	,D2
	READ	,D1,	0
	WRITE	,D1,	1
	LOKCTL	,D1
	RECNO	,D5
	SELECT	,A1
PROC
	XCALL TERID (V)
	V = 1
	XCALL OUTPT (1,1,2,'PURGE/SORT COMMISSIONS DUE FILE',V)
OPEN1,
	SWITCH = 8
	XCALL FILES (10,'U',50,SWITCH)		;FILE # 50 -- COMDUE FILE
	IF (SWITCH.EQ.9) GO TO ENDOFF

	LOKCTL = 1
	XCALL IO (10,COMCTL,1,READ,LOKCTL)
DISPLA,
	XCALL OUTPT (6,20,0,'<P>URGE OR <S>ORT COMDUE FILE <S> ?  ',1)
	XCALL INPUT (6,56,01,00,'AE',ENTRY,INXCTL,1)
	SELECT = ENTRY
	IF (SELECT.EQ.' ') SELECT = 'S'
	IF (SELECT.NE.'P'.AND.SELECT.NE.'S') GOTO DISPLA
	IF (SELECT.EQ.'P')
	BEGIN
	  XCALL OUTPT (8,20,0,'PURGE CUTOFF DATE: ',1)
	  XCALL INPUT (8,56,6,6,'D ',ENTRY,INXCTL,1)
	  PDATE = ENTRY

	  XCALL OUTPT (10,20,0,'SAVE PURGED RECORDS IN: ',1)
	  XCALL INPUT (10,56,14,1,'A ',ENTRY,INXCTL,1)
	  SAVPFL = ENTRY
	END
	CNGCTL = 2
	XCALL ANYCN (CNGCTL,WHATNO)
	IF (CNGCTL) GOTO DISPLA
	IF (SAVPFL) 
	BEGIN
	  OPEN (11,O,SAVPFL)
	  COMCTL =
	  LOKCTL = 1
	  XCALL IOS (11,COMCTL,WRITE,LOKCTL)
	END
	RECNO = 1
	PCNT =
	IF (SELECT.EQ.'S') GOTO SORTLP
	XCALL OUTPT (2,1,1,'PURGE',1)
PURGLP,
	INCR RECNO
	LOKCTL = 1
	XCALL IO (10,COMDUE,RECNO,READ,LOKCTL)
	IF (COMDUE.EQ.BRACKS) GOTO EOF1
;;;	TDATE(1,2) = KINVDT(5,6)
;;;	TDATE(3,6) = KINVDT(1,4)
;;;	IF (TDATE.GT.PDATE) GOTO PURGLP
	IF (KINVDT.GT.PDATE) GOTO PURGLP

	IF (SAVPFL) XCALL IOS (11,COMDUE,WRITE,LOKCTL)
	INCR PCNT
	COMDUE = BRACKS
	XCALL IO (10,COMDUE,RECNO,WRITE,LOKCTL)
	GOTO PURGLP
EOF1,
	IF (SAVPFL) 
	BEGIN
	  LOKCTL = 1
	  XCALL IOS (11,COMDUE,WRITE,LOKCTL)
	  CLOSE 11
	  OPEN (11,U,SAVPFL)
	  LOKCTL = 1
	  XCALL IO (11,COMCTL,1,READ,LOKCTL)
	  ORG050 = 1
	  REC050 = PCNT + 1
	  MAX050 = PCNT + 1
	  DEL050 =
	  LOKCTL = 1
	  XCALL IO (11,COMCTL,1,WRITE,LOKCTL)
	  CLOSE 11
	  SORT (INPUT=SAVPFL,
&		RECORD=COMDUE,KEY=(KSLMAN,KCUSNO,KINVDT,KINVNO))
	END
	LOKCTL = 1
	XCALL IO (10,COMCTL,1,READ,LOKCTL)
	REC050 = RECNO - PCNT - 1
	ORG050 = REC050
	LOKCTL = 1
	XCALL IO (10,COMCTL,1,WRITE,LOKCTL)
	CLOSE 10
SORTLP,
	XCALL OUTPT (2,1,1,'SORT ',1)
	XCALL FFILE (50,COMFIL,INXCTL)
	SORT (INPUT=COMFIL,
&		RECORD=COMDUE,KEY=(KSLMAN,KCUSNO,KINVDT,KINVNO))
EOF2,
	XCALL FILES (10,'I',50,4)
ENDOFF,
	XCALL PGCHN ('AR:ARSFMN',1)
END
	

