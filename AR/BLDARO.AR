;  BLDARO / AR 
;
;
;		PGM TO BUILD INITIAL ACCTS RECEIVABLE OPEN FILE
;		A MODIFIED TRX MAINTENANCE MODULE
;		(NO EDIT LIST - USE TRIAL BALANCE AS EDIT LIST)
;

; 11-18-13: converted to isam
;  4-30-18: added atmds2 (short desc) to arterm

RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR


RECORD AROPEN		; 
		.INCLUDE 'DEF:RD003A.DEF'
RECORD CUSMAS		; 
		.INCLUDE 'DEF:RD001A.DEF'
RECORD CUSCTL	,X		; 
		.INCLUDE 'DEF:RD001B.DEF'
RECORD DUMARO			; 
		.INCLUDE 'DEF:RD003B.DEF'
;;;RECORD CUSIDX			; 
;;;		.INCLUDE 'DEF:RD002A.DEF'
RECORD ARACCT			; 
		.INCLUDE 'DEF:RD007A.DEF'
;RECORD, X			; 
;		.INCLUDE 'DEF:RD007B.DEF'
RECORD ARTERM			;
		.INCLUDE 'DEF:RD170A.DEF'
RECORD ATMCTL	,X
		.INCLUDE 'DEF:RD170B.DEF'
;
RECORD SNDMSG
		,A3,	'AR:'
	PRGNAM	,A6,	'AROCNT'
	RCNT	,D5
	OCNT	,D5
RECORD NXTPRG
		,A3,	'AR:'
	MSGPRG	,A6
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD
	ALPHA	,A8
	OPTION	,D1
	ENTRY	,A9
	INXCTL  ,D1
	CNGCTL	,D1
	DUDATE	,D8
	WHATNO	,D2
	DECMAL	,D18
	LSTACT	,D7
	DSTFLG	,A1
	SELECT	,D1
	CUSORG	,D5
	AROREC	,D5
	MAXCNT	,D5
	MASK	,A6,	'XXXXXX'
	MASK2	,A7,	'XXXXXXX'
	MASK3	,A8,	'XXXX-XXX'
	ADDCNT	,D5
	KCUSNO	,D6
	KDOCNO	,D6
	MSGCTL	,D1
	RECNO	,D5
	TNAME	,A25
	KEY   	,A6
	KEY2	,A7
	CKEY	,A6
	ORGARA	,D5
	ORGARO	,D5
	OR170	,D5
	AROCNT	,D5
	BSEND	,D5
	BSMID	,D5
	SRCCTL	,D1
	BLANKS	,A40
	SAVTYP	,D1
	SWITCH	,D1
	TERM	,A1,	'Y'
	V	,D1
	READ	,D1,	0
	WRITE	,D1,	1
	LOKCTL	,D1
PROC
	XCALL TERID (V)
	SWITCH = 1
	XCALL FILES (3,'U',03,SWITCH)		;FILE # 03 -- AROPEN FILE
	IF (SWITCH.EQ.9) GO TO END1
;;;	SWITCH = 1
;;;	XCALL FILES (2,'I',02,SWITCH)		;FILE # 02 -- CUSIDX FILE
;;;	IF (SWITCH.EQ.9) GO TO INU002
	SWITCH = 1
	XCALL FILES (1,'SI',01,SWITCH)		;FILE # 01 -- CUSMAS FILE
	IF (SWITCH.EQ.9) GO TO INU001
	
	CUSNO = 0
	LOKCTL = 1
	XCALL ISIO (1,CUSMAS,CUSNO,READ,LOKCTL)
;;;	CUSORG = ORG001
	DSTFLG = DETDST
	LSTACT = DEFAR
	SWITCH = 1
	XCALL FILES (7,'SI',07,SWITCH)		;FILE # 07 -- ARACCT FILE
	IF (SWITCH.EQ.9) GO TO INU007
	XCALL FILES (13,'I',03,5)
	LOKCTL = 0
	XCALL IO (3,DUMARO,1,READ,LOKCTL)
	IF (LOKCTL) GO TO LOCKED
	MAXCNT = MAX003
	ORGARO = ORG003
	AROCNT = REC003
	DFL003 =
	SFL003 =
	LOKCTL = 1
	XCALL IO (3,DUMARO,1,WRITE,LOKCTL)
	UNLOCK 3
	SWITCH = 1
	XCALL FILES (5,'I',170,SWITCH)	; FILE #170 -- ARTERM FILE
;	IF (SWITCH.EQ.9) GO TO INU170			;AR24
	IF (SWITCH.EQ.9) GO TO LOCKED			;AR24
	LOKCTL = 1
	XCALL IO (5,ATMCTL,1,READ,LOKCTL)
	OR170 = ORG170
BEGIN,
	AROPEN =
	SELECT = -1
	XCALL AR_TMENU ('BUILD INITIAL A/R OPEN FILE',SELECT,V)
	GO TO (DISPLA,DISPLA,DISPLA,LIST), SELECT
	XCALL WATE (4,V)
ENDMNU,
	LOKCTL = 1
	XCALL IO (3,DUMARO,1,READ,LOKCTL)
	IF (DFL003.NE.1.AND.DEL003.GT.0) GO TO ORGARO
	IF (REC003.GT.ORG003.AND.SFL003.NE.1) GO TO SRTARO
ENDOFF,
	CALL CLOSE2
END1,
	XCALL PGCHN ('AR:ARSFMN',1)
;INU170,						;AR24
;	XCALL FILES (5,'I',170,4)			;AR24
LOCKED,
	CLOSE 13
	XCALL FILES (7,'I',07,4)
INU007,
	XCALL FILES (1,'SI',01,4)
INU001,
;;;	XCALL FILES (2,'I',02,4)
INU002,
	XCALL FILES (3,'U',03,4)
	GO TO END1
LIST,
	CALL CLOSE2
	XCALL OUTPT (2,1,1,'\',V)
	MSGPRG = 'ARTBAL'
SRTAR2,
	SWITCH = 2
	XCALL FILES (3,'U',03,SWITCH)
	IF (SWITCH.EQ.9) GO TO NOORG
	LOKCTL = 1
	XCALL IO (3,DUMARO,1,READ,LOKCTL)
	RCNT = REC003
	OCNT = ORG003
	IF (RCNT.GT.OCNT) GO TO SRTAR3
	XCALL FILES (3,'U',03,4)
	MSGCTL = 5
	XCALL SNMSG ('AR:BLDARO',MSGCTL)
	XCALL PGCHN ('AR:ARTBAL',1)
SRTAR3,
	MSGCTL = 5
	XCALL SNMSG (SNDMSG,MSGCTL)
	MSGCTL = 2
	XCALL SNMSG (NXTPRG,MSGCTL)
	CLOSE 3
	XCALL PGCHN ('AR:SRTARO',0)
NOORG,
	XCALL MESAG
&	('THE AROPEN FILE NEEDS SORTING / REORGANIZING, BUT IS IN USE.',2)
	GO TO END1
CLOSE2,
	CLOSE 13
	XCALL FILES (1,'I',01,4)
	XCALL FILES (2,'I',02,4)
	XCALL FILES (7,'I',07,4)
	XCALL FILES (5,'I',170,4)
CLOSE1,
	XCALL FILES (3,'U',03,4)
	RETURN
ORGARO,
	LOKCTL = 1
	XCALL IO (3,DUMARO,1,READ,LOKCTL)
	DFL003 = 1
	LOKCTL = 1
	XCALL IO (3,DUMARO,1,WRITE,LOKCTL)
	CALL CLOSE2
	SWITCH = 2
	XCALL FILES (3,'U',03,SWITCH)
	IF (SWITCH.EQ.9) GO TO NOORG
	CLOSE 3
	XCALL PGCHN ('AR:ORGARO',1)
SRTARO,
	SFL003 = 1
	LOKCTL = 1
	XCALL IO (3,DUMARO,1,WRITE,LOKCTL)
	CALL CLOSE2
	MSGPRG = 'ARSFMN'
	GO TO SRTAR2
PURGE,
	XCALL MESAG ('DELETED RECORDS MUST BE PURGED',1)
	GO TO ENDMNU
DISPLA,
	UNLOCK 3
	CNGCTL =
	WHATNO =
	ADISC =
	XCALL OUTPT (3,10,2,'1. DOCUMENT/CHECK #',V)
	XCALL OUTPT (4,10,0,'2. DOCUMENT TYPE',V)
	XCALL OUTPT (5,10,0,'3. DOCUMENT/CASH RCT DATE',V)
	XCALL OUTPT (6,10,0,'4. CUSTOMER #',V)
	XCALL OUTPT (7,10,0,'5. DOCUMENT DUE DATE',V)
	XCALL OUTPT (8,10,0,'6. SALE/CASH RCT AMOUNT',V)
	XCALL OUTPT (9,10,0,'7. OTHER CHGS/DISC TAKEN',V)
	XCALL OUTPT (10,10,0,'8. APPLY-TO-DOC #',V)
	XCALL OUTPT (11,10,0,'9. A/R ACCOUNT #',V)
	IF (SELECT.NE.1) XCALL OUTPT (3,9,0,'*',V)
	IF (SELECT.NE.1) XCALL OUTPT (6,9,0,'*',V)
DOCNO,
	IF (SELECT.EQ.1.AND.REC003.GE.MAX003) GO TO FULL
	IF (SELECT.EQ.3.AND.DEL003.GE.95) GO TO PURGE
	CTL = '03,37,06,00,#-'
	CALL INPUT
	GO TO (DISPLA,BEGIN), INXCTL
	KDOCNO = ENTRY (1,6)
	IF (ENTRY.EQ.BLANKS) GO TO NXTDOC
	IF (SELECT.NE.1) GO TO CUSTNO
	ADOCNO = KDOCNO
	IF ((ADOCTP.EQ.1.OR.ADOCTP.EQ.4).AND.CNGCTL) GO TO SAMNUM
	GO TO (ANYCNG), CNGCTL
	GO TO TRXTYP
FULL,
	XCALL MESAG ('AROPEN FILE IS NOW FULL - EXPAND BEFORE CONTINUING',2)
	GO TO ENDOFF
NXTDOC,
	IF (ADOCNO.EQ.999999) ADOCNO =
	ADOCNO = ADOCNO + 1
	DECMAL = ADOCNO
	CALL DSPNUM
	KDOCNO = ADOCNO
	IF (SELECT.NE.1) GO TO CUSTNO
	GO TO (ANYCNG), CNGCTL
TRXTYP,
	XCALL OUTPT (6,46,1,'\',V)
	XCALL OUTPT (4,70,0,'1 = SALE',V)
	XCALL OUTPT (5,70,0,'2 = PAYMENT',V)
	XCALL OUTPT (6,70,0,'3 = CR MEMO',V)
	XCALL OUTPT (7,70,0,'4 = FIN CHG',V)
	XCALL OUTPT (8,70,0,'5 = DR MEMO',V)
	CTL = '04,37,01,00,NE'
	CALL INPUT
	GO TO (DISPLA,BEGIN), INXCTL
	XCALL OUTPT (4,70,1,'\',V)
	XCALL OUTPT (5,70,1,'\',V)
	XCALL OUTPT (6,70,1,'\',V)
	XCALL OUTPT (7,70,1,'\',V)
	XCALL OUTPT (8,70,1,'\',V)
	IF (SELECT.EQ.1.AND.CNGCTL) XCALL OUTPT (6,46,0,TNAME,V)
	IF (ENTRY.EQ.BLANKS.AND.ADOCTP.NE.0) GO TO SAMTYP
	ADOCTP = ENTRY(1,1)
	IF (ADOCTP.LT.1.OR.ADOCTP.GT.5) GO TO BADTYP
	IF (ADOCTP.EQ.1.AND.CNGCTL) GO TO SAMNUM
	IF (ADOCTP.EQ.2.AND.CNGCTL) GO TO CLRACT
	IF (SAVTYP.EQ.2.AND.CNGCTL) GO TO ENTACT
	SAVTYP = ADOCTP
	GO TO (ANYCNG), CNGCTL
	GO TO DOCDTE
CLRACT,
	SAVTYP = ADOCTP
	AARACT = 0
	XCALL OUTPT (10,37,0,BLANKS,V)
	GO TO ANYCNG
ENTACT,
	SAVTYP = ADOCTP
	GO TO ACCTNO
BADTYP,
	XCALL MESAG (' ',3)
	GO TO TRXTYP
SAMTYP,
	DECMAL = ADOCTP
	CALL DSPNUM
	GO TO (ANYCNG), CNGCTL
DOCDTE,
	CTL = '05,37,08,00,D '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	IF (ENTRY.EQ.BLANKS.AND.ADOCDT.NE.0) GO TO SAMDTE
	ADOCDT = ENTRY (1,8)
	IF (ADOCDT.EQ.0) GO TO DOCDTE
	GO TO (ANYCNG), CNGCTL
	GO TO CUSTNO
SAMDTE,
	DECMAL (1,8) = ADOCDT
	CALL DSPDTE
	GO TO (ANYCNG), CNGCTL
CUSTNO,
	CTL = '06,37,06,00,#E'
	XCALL OUTPT (6,46,0,BLANKS,V)
	CALL INPUT
	GO TO (DISPLA,BEGIN), INXCTL
	KCUSNO = ENTRY (1,6)
	IF (KCUSNO.EQ.999999) GO TO INVCUS
	IF (ENTRY.EQ.BLANKS) GO TO SAMCUS
	
	XCALL ISIO (1, CUSMAS, KCUSNO, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO BADCUS
	
;;;	KEY = KCUSNO,MASK
;;;	BSEND = CUSORG
;;;	XCALL SERCH (2,CUSIDX,KEY,1,6,BSEND,BSMID,SRCCTL,1,7,11,0,0,0,0)
;;;	GO TO (BADCUS), SRCCTL
;;;	LOKCTL = 1
;;;	XCALL IO (1,CUSMAS,IRC001,READ,LOKCTL)

	ACUSNO = CUSNO
	TNAME = NAME
	XCALL OUTPT (6,46,0,TNAME,V)
	TERM = 'Y'
	SRCCTL = 2
	XCALL SERCH (5,ARTERM,TERMS,1,1,OR170,BSMID,SRCCTL,4,2,7,0,0,0,0)
	IF (SRCCTL.EQ.1) ARTRDS = 'TERMS NOT FOUND'
	IF (SRCCTL.EQ.1) TERM = 'N'
	IF (SELECT.GE.2.AND.CNGCTL.EQ.0) GO TO FNDTRX
	IF (BALMTH.NE.'B') GO TO GOON
	AAPLNO = -1
	XCALL OUTPT (9,37,0,BLANKS,V)
GOON,
	IF (CNGCTL.AND.BALMTH.EQ.'O'.AND.AAPLNO.EQ.-1) GO TO APL1
	GO TO (ANYCNG), CNGCTL
	GO TO DUEDTE
INVCUS,
	XCALL MESAG (' ',3)
	GO TO CUSTNO
SAMCUS,
	IF (CUSNO.EQ.0) GO TO INVCUS
	DECMAL = CUSNO
	KCUSNO = CUSNO
	ACUSNO = CUSNO
	CALL DSPNUM
	XCALL OUTPT (6,46,0,TNAME,V)
	IF (SELECT.NE.1.AND.CNGCTL.EQ.0) GO TO FNDTRX
	GO TO (ANYCNG), CNGCTL
	GO TO DUEDTE
BADCUS,
	XCALL MESAG ('CUSTOMER NOT ON FILE',1)
	GO TO CUSTNO
DUEDTE,
	IF (ADOCTP.NE.1) GO TO NODUE
	CTL = '07,37,08,00,D '
	DUDATE = ADOCDT			; SET DEFAULT
					; THE SEARCH FOR THE TERMS CODE
					; WAS DONE FOR THE CUSTOMER NAME
	IF (TERM.EQ.'N'.OR.ARTRDD.EQ.0) GO TO ASKDTE
	XCALL ADDTE (ADOCDT,ARTRDD,DUDATE); CALCULATE DEFAULT DISCOUNT DATE
ASKDTE,
;;;	CALL INPUT
;;;	GO TO (DISPLA),INXCTL
;;;	ADOCDU = ENTRY (1,8)		; DUE DATE FOR INVOICE
;;;	IF (ADOCDU.EQ.0) ADOCDU = DUDATE
;;;	DECMAL(1,8) = ADOCDU
;;;	CALL DSPDTE
	GO TO (ANYCNG), CNGCTL
	GO TO AMOUNT
NODUE,
;;;	ADOCDU =
	XCALL OUTPT (7,37,0,BLANKS(1,10),V)
	GO TO (ANYCNG), CNGCTL
AMOUNT,
	CTL = '08,37,08,00,$ '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	AAMT = ENTRY (1,8)
	GO TO (TOTAL), CNGCTL
OTHER,
	CTL = '09,37,07,00,$ '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	AOTHER = ENTRY (1,7)
TOTAL,
	CALL DSPTOT
	GO TO (ANYCNG), CNGCTL
APLYTO,
	IF (BALMTH.EQ.'O') GO TO APL1
	AAPLNO = -1
	IF (CNGCTL) GO TO BALMSG
	GO TO (ANYCNG), CNGCTL
	GO TO ACCTNO
APL1,
	IF (ADOCTP.EQ.1.OR.ADOCTP.EQ.4) GO TO SAMNUM
	CTL = '10,37,06,00,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	AAPLNO = ENTRY (1,6)
	GO TO (ANYCNG), CNGCTL
	GO TO ACCTNO
BALMSG,
	XCALL MESAG ('CUSTOMER USES BAL FWD ACCOUNTING',2)
	GO TO (ANYCNG), CNGCTL
	GO TO ACCTNO
SAMNUM,
	AAPLNO = ADOCNO
	DECMAL = AAPLNO
	CTL = '10,37,06'
	CALL DSPNUM
	IF (WHATNO.EQ.4) GO TO ANYCNG
	IF (SAVTYP.EQ.2.AND.CNGCTL) GO TO ENTACT
	GO TO (ANYCNG), CNGCTL
ACCTNO,
	IF (DSTFLG.NE.'Y'.OR.ADOCTP.EQ.2) GO TO ANYCNG
	XCALL OUTPT (11,37,0,BLANKS,V)
	CTL = '11,37,04,00,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	IF (ENTRY.EQ.BLANKS) GO TO LSTACT
	AARACT (1,4) = ENTRY (1,4)
	XCALL OUTPT (11,41,0,'-',V)
	CTL = '11,42,03,00,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	AARACT (5,7) = ENTRY (1,3)
	LSTACT = AARACT
	CALL DSPACT
ACCT1,
	IF (SRCCTL.EQ.0) GO TO ANYCNG
	XCALL MESAG ('INVALID ACCOUNT',1)
	GO TO ACCTNO
LSTACT,
	AARACT = LSTACT
	CALL DSPACT
	GO TO ACCT1
DSPACT,
	XCALL ISIO (7, ARACCT, AARACT, READ, LOKCTL)
	IF (LOKCTL.EQ.1) ARACDS = '** ACCOUNT NOT ON FILE **'
;	BSEND = ORGARA
;	KEY2 = AARACT, MASK2
;	XCALL SERCH (7,ARACCT,KEY2,1,7,BSEND,BSMID,SRCCTL,4,32,37,0,0,0,0)
;	IF (SRCCTL.EQ.1) ARACDS = '** ACCOUNT NOT ON FILE **'
	ALPHA = AARACT, MASK3
	XCALL OUTPT (11,37,0,ALPHA,V)
	XCALL OUTPT (11,47,0,ARACDS,V)
	RETURN
DSPTOT,
	XCALL OUTPT (9,49,0,'TOTAL = $',V)
	CTL = '09,59,10'
	DECMAL = AAMT + AOTHER
	CALL DSPDLR
	RETURN
CNGBR,
	IF (SELECT.EQ.1) GO TO CNGBR2
	IF (WHATNO.LT.5.OR.WHATNO.EQ.8) GO TO KEYCNG
CNGBR2,
	GO TO (DOCNO,TRXTYP,DOCDTE,CUSTNO,DUEDTE,AMOUNT,OTHER,
&			APLYTO,ACCTNO), WHATNO
BADCNG,
	CNGCTL = 3
	GO TO ANYCNG
KEYCNG,
	XCALL MESAG('CANNOT CHANGE KEY - DELETE AND REENTER',2)
	GO TO ANYCNG
PROCES,
	XCALL WATE (3,V)
	GO TO (ADD,CHANGE), SELECT
ADD,
	LOKCTL = 1
	XCALL IO (3,DUMARO,1,READ,LOKCTL)
	INCR REC003
	IF (REC003.GT.MAX003) GO TO FULL
	AROCNT = REC003
	LOKCTL = 1
	XCALL IO (3,DUMARO,1,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IO (3,AROPEN,REC003,WRITE,LOKCTL)
	GO TO FREBUF
FNDTRX,
	KEY = KCUSNO,MASK
SEARCH,
	LOKCTL = 1
	XCALL IO (13,AROPEN,MAXCNT,READ,LOKCTL)
	BSEND = ORGARO
	XCALL SERCH (13,AROPEN,KEY,16,21,BSEND,BSMID,SRCCTL,4,8,13,1,6,0,0)
	GO TO (NOFIND), SRCCTL
	IF (BSMID.GT.BSEND) GO TO OVRFLW
	BSMID = BSMID - 1
NXTTRX,
	INCR BSMID
	IF (BSMID.GT.AROCNT) GO TO NOFIND
	LOKCTL = 1
	XCALL IO (13,AROPEN,BSMID,READ,LOKCTL)
	IF (ADOCDT.EQ.0) GO TO NXTTRX
	IF (ACUSNO.NE.KCUSNO.AND.BSMID.LT.ORGARO) GO TO OVRFLW
	IF (ACUSNO.NE.KCUSNO) GO TO NXTTRX
	IF (ADOCNO.NE.KDOCNO) GO TO NXTTRX
	LOKCTL = 1
	XCALL IO (3,AROPEN,BSMID,READ,LOKCTL)
	AROREC = BSMID
	CTL =
	GO TO DSPTRX
OVRFLW,
	BSMID = ORGARO
	GO TO NXTTRX
DSPTRX,
	DECMAL = ADOCTP
	CTL = '04,37,01'
	CALL DSPNUM
	DECMAL(1,8) = ADOCDT
	ROW = 5
	CALL DSPDTE
;;;	DECMAL(1,6) = ADOCDU
;;;	ROW = 7
;;;	CALL DSPDTE
	DECMAL = AAMT
	CTL = '08,37,08'
	CALL DSPDLR
	DECMAL = AOTHER
	CTL = '09,37,07'
	CALL DSPDLR
	CALL DSPTOT
	IF (BALMTH.EQ.'B') GO TO SKPAPL
	DECMAL = AAPLNO
	CTL = '10,37,06'
	CALL DSPNUM
SKPAPL,
	XCALL OUTPT (11,37,0,BLANKS,V)
	IF (ADOCTP.NE.2.AND.DSTFLG.EQ.'Y') CALL DSPACT
RIGHT1,
	XCALL OUTPT (12,1,0,'RIGHT DOCUMENT ?',V)
	CTL = '12,19,01,00,YN'
	CALL INPUT
	GO TO (TRYNXT), INXCTL - 1
	XCALL WATE (3,V)
	GO TO (ANYCNG,DELETE), SELECT - 1
TRYNXT,
	BSMID = AROREC		;BSMID HAS TO BE RESTORED FOR AROPEN FILE,
	GO TO NXTTRX		;BECAUSE LAST SEARCH WAS DONE ON ARACCT FILE.
NOFIND,
	XCALL MESAG ('DOCUMENT NOT FOUND',1)
	GO TO DISPLA
CHANGE,
	LOKCTL = 1
	XCALL IO (3,AROPEN,AROREC,WRITE,LOKCTL)
	IF (SELECT.EQ.3) XCALL MESAG ('DOCUMENT DELETED',2)
FREBUF,
	LOKCTL = 1
	XCALL IO (3,DUMARO,MAX003,READ,LOKCTL)
	LOKCTL = 1
	XCALL IO (3,DUMARO,1,READ,LOKCTL)
	GO TO DISPLA
DELETE,
	XCALL OUTPT (12,1,1,'OK TO DELETE ?',V)
	CTL = '12,17,01,00,YN'
	CALL INPUT
	GO TO (DISPLA), INXCTL - 1
DELET2,
	LOKCTL = 1
	XCALL IO (3,DUMARO,1,READ,LOKCTL)
	INCR DEL003
	LOKCTL = 1
	XCALL IO (3,DUMARO,1,WRITE,LOKCTL)
	ADOCDT =
	GO TO CHANGE
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
ANYCNG,
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (PROCES,CNGBR,DISPLA), CNGCTL + 1
DSPNUM,
	OPTION = 1
	GO TO CALDSP
DSPDTE,
	XCALL DATE8(DECMAL(1,8), D_OUT, D_OUTR, D_FMT, D_SW)
	XCALL OUTPT (ROW, COL, 0, D_FMT, V)
	RETURN

	OPTION = 2
	GO TO CALDSP
DSPDLR,
	OPTION = 3
CALDSP,
	XCALL DSPLY (MAX,ROW,COL,DECMAL,OPTION,V)
	RETURN
END
