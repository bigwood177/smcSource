;  FINCHG / AR 
;
;	08-Apr-2008: match credit amounts by apply-to
; 5-16-18: ssq convert cusmas to isam
; 8-14-18: ssq convert aropen to isam
;

; 11-26-13 Converted to isam
RECORD AROPEN		; 
		.INCLUDE 'DEF:RD003A.DEF'
RECORD ARMACH		; 
		.INCLUDE 'DEF:RD003F.DEF'
RECORD	,X		; 
		.INCLUDE 'DEF:RD003B.DEF'
RECORD FINCHG		; 
		.INCLUDE 'DEF:RD097A.DEF'
RECORD CUSMAS		; 
		.INCLUDE 'DEF:RD001A.DEF'
RECORD CUSCTL	,X	; 
		.INCLUDE 'DEF:RD001B.DEF'
RECORD ARACCT		; 
		.INCLUDE 'DEF:RD007A.DEF'

RECORD FINCTL
		.INCLUDE 'DEF:RD173A.DEF'
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2
RECORD
		.INCLUDE 'DEF:RD097S.DEF'
RECORD FCHYMD
	FCHYY	,D2
	FCHMM	,D2
	FCHDD	,D2

RECORD AGEYMD
	AGEYY	,D2
	AGEMM	,D2
	AGEDD	,D2

RECORD	CHANNEL
	CHN001	,D2
	CHN002	,D2
	CHN003	,D2
	CHN007	,D2
	CHN097	,D2
	CHN173	,D2

RECORD	VARS
	SAVRFA	,A6
	CUSRFA	,A6
	ACCT	,D7
	OPNOK	,D1
	AGEDAT	,D8
	AROCNT	,D5
	CNGCTL	,D1
	CRDAMT	,D8			;AR31
	CUSBEG	,D5
	DMY	,D3
	DMY1	,D3
	ENTRY	,A8
	DAT8	,D8
	FCHDTE	,D8
	DSPDAT	,A10
	FCHAM1	,D8
	FCHAM2	,D8
	INXCTL	,D1
	ORGARA	,D5
	ORGCUS	,D5
	BSEND	,D5
	BSMID	,D5
	ROW2	,D2
	SRCCTL	,D1
	KEY	,A7
	MASK1	,A7,	'XXXXXXX'
	MASK2	,A8,	'XXXX-XXX'
	KEY3	,A6
	MASK3	,A6,	'XXXXXX'
	ALPHA	,A8
	SRCHFL	,D1
	LSTCUS	,D6
	LSTAPL	,D6
	NODAYS	,D4
	ODUNET	,D8
	ODUAMT	,D8
	RDCTL	,D5,	00001
	RDCTL2	,D5
	SWITCH	,D1
	WHATNO	,D1
	SIZE	,D5
	BLANKS	,A8
	V	,D1
	READ	,D1,	0
	WRITE	,D1,	1
	LOKCTL	,D1
PROC
	XCALL TERID (V)

	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF

	XCALL OUTPT (1,1,2,'CALCULATE FINANCE CHARGES',V)
	IF (DETDST.NE.'Y') GO TO FICHDT
	XCALL OUTPT (6,10,2,'DISTRIBUTION ACCOUNT DEFAULTS',V)
	XCALL OUTPT (7,15,0,'1. FINANCE CHGS ACCT',V)
	XCALL OUTPT (8,15,0,'2. A/R ACCT',V)
DSPDEF,
	SRCHFL = 1
	ALPHA = DEFFCH, MASK2
	KEY = DEFFCH, MASK1
	ACCT = DEFFCH
	ROW = 7
	CALL SERCH
	ALPHA = DEFAR, MASK2
	KEY = DEFAR, MASK1
	ACCT = DEFAR
	ROW = 8
	CALL SERCH
	FCHACT = DEFFCH
	FARACT = DEFAR
	GO TO ANYCNG
FCHACT,
	SRCHFL =
	CTL = '07,40,04,03,#E'
	XCALL OUTPT (7,40,1,'\',V)
	CALL INPUT
	GO TO (FCHACT,ENDFCH), INXCTL
	FCHACT (1,4) = ENTRY (1,4)
	XCALL OUTPT (7,44,0,'-',V)
	CTL = '07,45,03,00,# '
	CALL INPUT
	GO TO (FCHACT), INXCTL
	FCHACT (5,7) = ENTRY (1,3)
	KEY = FCHACT, MASK1
	ALPHA = FCHACT, MASK2
	ACCT = FCHACT
	CALL SERCH
	IF (SRCCTL.EQ.1) GO TO FCHACT
	GO TO ANYCNG
ARACT,
	SRCHFL =
	XCALL OUTPT (8,40,1,'\',V)
	CTL = '08,40,04,03,# '
	CALL INPUT
	GO TO (ARACT), INXCTL
	FARACT (1,4) = ENTRY (1,4)
	XCALL OUTPT (8,44,0,'-',V)
	CTL = '08,45,03,00,# '
	CALL INPUT
	GO TO (ARACT), INXCTL
	FARACT (5,7) = ENTRY (1,3)
	KEY = FARACT, MASK1
	ALPHA = FARACT, MASK2
	ACCT = FARACT
	CALL SERCH
	IF (SRCCTL.EQ.1) GO TO ARACT
	GO TO ANYCNG
SERCH,
	SRCCTL = 
	LOKCTL = 0
	XCALL ISIO (7, ARACCT, ACCT, READ, LOKCTL)
	IF (LOKCTL .NE. 0) SRCCTL = 1
	
	IF (SRCCTL.EQ.1) CALL BADACT
	IF (SRCCTL.EQ.0) CALL DSPACT
	RETURN
SERCH2,
	XCALL ISIO (1, CUSMAS, FCUSNO, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO NOCUS
	
	FNAME = NAME
	FBLMTH = BALMTH
	RETURN
NOCUS,
	FNAME = 'CUSTOMER NOT ON FILE'
	FBLMTH = 'O'
	RETURN
BADACT,
	IF (SRCHFL.EQ.1) ARACDS = 'ACCOUNT NOT ON FILE'
	IF (SRCHFL.EQ.0) XCALL MESAG ('ACCOUNT NOT ON FILE',1)
	IF (SRCHFL.EQ.1) SRCCTL = 0
	RETURN
DSPACT,
	XCALL OUTPT (ROW,40,0,ALPHA,V)
	XCALL OUTPT (ROW,50,0,ARACDS,V)
	RETURN
ANYCNG,
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (FICHDT,CNGBR,ANYCNG), CNGCTL + 1
CNGBR,
	GO TO (FCHACT,ARACT), WHATNO
	CNGCTL = 3
	GO TO ANYCNG
INPUT,
	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL,V)
	RETURN
FICHDT,
	XCALL OUTPT (2,1,2,'\',1)
	XCALL OUTPT (6,20,0,'PLEASE ENTER FINANCE CHARGE DATE',V)
	CTL = '06,54,08,00,DE'
	CALL INPUT
	GO TO (FICHDT,ENDFCH), INXCTL
	FCHDTE = ENTRY (1,8)
	IF (ENTRY.EQ.BLANKS) CALL TODAY
	CNGCTL = 2
	XCALL ANYCN (CNGCTL,WHATNO)
	GO TO (FICHDT), CNGCTL
	XCALL WATE (4,V)
	
	FIND (3, AROPEN, ^FIRST)[ERR=READ]
READ,
;;;	INCR RDCTL
;;;	IF (RDCTL.GT.AROCNT) GO TO EOFARO
	READS (3, AROPEN, EOFARO, GETRFA:SAVRFA)

;;;	LOKCTL = 1
;;;	XCALL IO (3,AROPEN,RDCTL,READ,LOKCTL)
	
	IF (ACUSNO.NE.LSTCUS) CALL NEWCUS
	IF (AAPLNO.NE.LSTAPL) CALL NEWAPL
	IF (AGEFLG.EQ.'I') AGEDAT = ADOCDT
	GO TO (AGEIT,CREDIT,CREDIT,READ,DEBIT,AGEIT), ADOCTP
	GO TO READ
TODAY,
	XCALL RDAT8 (FCHDTE)
	DAT8(1,4) = FCHDTE(5,8)
	DAT8(5,8) = FCHDTE(1,4)
	DSPDAT = DAT8,	'XX/XX/XXXX'
	XCALL OUTPT (6,54,0,DSPDAT,V)
	RETURN
AGEIT,
	XCALL BDAT8 (FCHDTE,AGEDAT,DMY,DMY1,NODAYS)
	IF (FCHDTE .LT. AGEDAT) GOTO READ

	IF (NODAYS.LE.PSTDUE) GO TO READ
	ODUAMT = ODUAMT + AAMT + AOTHER
	GO TO READ
CREDIT,
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 4-8-08 SSQ: now this will fall thru and age by apply-to-no,
; CRDAMT should alway be zero...

	AAMT = -AAMT
	AOTHER = - AOTHER
;;;	CRDAMT = CRDAMT + AAMT + AOTHER 
;;;	GO TO READ
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

DEBIT,
	IF (AAPLNO.EQ.-1) GO TO AGEIT
	IF (AAPLNO.EQ.0) GO TO AGEIT
	FIND (33, ARMACH, RFA:CUSRFA)
;;;	RDCTL2 = CUSBEG - 1

FNDINV,
;;;	INCR RDCTL2
;;;	IF (RDCTL2.EQ.RDCTL) GO TO FNDINV
;;;	IF (RDCTL2.GT.AROCNT) GO TO AGEIT
;;;	LOKCTL = 1
;;;	XCALL IO (3,ARMACH,RDCTL2,READ,LOKCTL)
	XCALL IOS (33, ARMACH, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO AGEIT
	IF (MCUSNO.NE.LSTCUS) GO TO AGEIT
	IF (MAPLNO.NE.LSTAPL) GO TO AGEIT
	IF (MDOCNO.NE.AAPLNO) GO TO FNDINV
	IF (MDOCDT.EQ.0) GO TO FNDINV
	AGEDAT = MDOCDT
	GO TO AGEIT
NEWCUS,
	IF (LSTCUS.EQ.0) GO TO ENDNEW
	ODUNET = ODUAMT - CRDAMT
	IF (ODUNET.LE.0) GO TO ENDNEW
	FDOCDT = FCHDTE
	FCUSNO = LSTCUS
	FODUAM = ODUNET
	FCHAM1 = CUTOFF * 100
	IF (FCHAM1.GT.ODUNET .OR. CUTOFF.EQ.0) FCHAM1 = ODUNET
	FCHAM2 = ODUNET - CUTOFF * 100
	IF (FCHAM2.LT.0 .OR. CUTOFF.EQ.0) FCHAM2 = 0
	FCHAMT = (FCHAM1 * FNCHG1/100)#3 + (FCHAM2 * FNCHG2/100)#3
	IF (FCHAMT.LT.MINCHG) FCHAMT = MINCHG
	CALL SERCH2
	GOTO (ENDNEW),FCHFLG-1		;MARKED AS NO FINCHG
	LOKCTL = 1
	XCALL IOS (5,FINCHG,WRITE,LOKCTL)
	IF (LOKCTL.EQ.3) GO TO NOROOM
ENDNEW,
	LSTCUS = ACUSNO
	CRDAMT =
	ODUAMT =
	CALL NEWAPL
	RETURN
NEWAPL,
	LSTAPL = AAPLNO
	CUSRFA = SAVRFA
;;;	CUSBEG = RDCTL
	RETURN
EOFARO,
	CALL NEWCUS
	XCALL FILES (6,'I',173,4)
	XCALL FILES (1,'SI',01,4)
;;;	XCALL FILES (2,'I',02,4)
	XCALL FILES (3,'SI',03,4)
	CLOSE 33
	CLOSE 5
	XCALL FILES (7,'I',07,4)
	XCALL PGCHN ('AR:FCHRPT',1)

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK
	SWITCH = 3

	XCALL FILES (6,'I',173,SWITCH)
	IF (SWITCH.EQ.9) RETURN

	SWITCH = 5
	XCALL FILES (6,'I',173,SWITCH)
	IF (SWITCH.EQ.9) RETURN
	CHN173 = 6

	LOKCTL = 1
	XCALL IO (6,FINCTL,1,READ,LOKCTL)
	IF (AGEFLG.EQ.']') GO TO NOCTRL


	SWITCH = 5
	XCALL FILES (3,'SI',3,SWITCH)
	XCALL FILES (33,'SI',3,SWITCH)	;FOR ARMACH
	IF (SWITCH.EQ.9) RETURN

;;;	SWITCH = 5
;;;	XCALL FILES (3,'I',3,SWITCH)
;;;	IF (SWITCH.EQ.9) RETURN
	CHN003 = 3

	SWITCH = 5
	XCALL FILES (5,'O',97,SWITCH)
	IF (SWITCH.EQ.9) RETURN
	CHN097 = 5


	SWITCH = 1
	XCALL FILES (1,'SI',01,SWITCH)
	IF (SWITCH.EQ.9) RETURN
	CHN001 = 1

	cusno = 0
	xcall isio (chn001, cusmas, cusno, read, lokctl)
	SWITCH = 1
	XCALL FILES (7,'SI',07,SWITCH)
	IF (SWITCH.EQ.9) RETURN
	CHN007 = 7

;;;	LOKCTL = 1
;;;	XCALL IO (3,ARMACH,1,READ,LOKCTL)
;;;	AROCNT = REC003
;;;	SIZE = (((REC003+1)*(SIZ097+2)+2)/512) + 1
;;;	XCALL OFILE (5,97,SIZE,SIZ097,SWITCH)
;;;	IF (SWITCH.EQ.1) RETURN

	OPNOK = 1
	RETURN
;---------------------------------------------------------------
CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


	IF (CHN007) XCALL FILES (7,'I',07,4)
	IF (CHN001) XCALL FILES (1,'SI',01,4)
;;;	IF (CHN002) XCALL FILES (2,'I',02,4)
	IF (CHN097) XCALL FILES (5,'O',97,4)
;;;	IF (CHN003) XCALL FILES (3,'I',03,4)
	IF (CHN003) CLOSE 3
	CLOSE 33
	IF (CHN173) XCALL FILES (6,'I',173,4)
	RETURN
;---------------------------------------------------------------


NOCTRL,
	XCALL MESAG ('FINANCE CONTROL FILE MAINTANCE MUST BE RUN FIRST',2)
	RETURN
;;;	GO TO END1
NOROOM,
	XCALL MESAG ('NO ROOM ON DEVICE TO CREATE FINCHG FILE - EXITING',2)
	RETURN

ENDFCH,
	XCALL WATE (3,V)
ENDOFF,
	CALL CLOSE
	XCALL PGCHN ('AR:LSRMNU',1)

;;;CLOSE2,
;;;	XCALL FILES (2,'I',02,4)
;;;	XCALL FILES (1,'I',01,4)
;;;	RETURN
END
