;SYNCAR.AR
;	Update Rockford Cusmas from SMC.
;
RECORD	CUSMAS
	.INCLUDE 'DEF:RD001A.DEF'
RECORD	CUSCTL
	.INCLUDE 'DEF:RD001B.DEF'
RECORD	CUSIDX
	.INCLUDE 'DEF:RD002A.DEF'

RECORD	SYNC
	S_CUST	,D6
		,A1
	S_REC	,D6
		,A1
	S_FLAG	,D1	;0=REG, 1=]]]DEL, 2=PROCESSED, 3=UPDATED ROC

RECORD	ERROR
	ER_CUST	,D6
		,A1
	ER_MSG	,A30

RECORD	DIS
	II	,D5

RECORD	CHANNEL
	ROC001	,D2
	ROC002	,D2
	SMC001	,D2
	SMC002	,D2
	CHNSYN	,D2
	CHNERR	,D2
;
RECORD	VARS
	OPNOK	,D1
	RECNO	,D6
	I	,D6
;
PROC
	OPEN(15,I,'TT:')
;;;	DISPLAY(15,$SCR_CLR(SCREEN),'SYNCIM')
	CALL OPENS
	IF (.NOT. OPNOK) GOTO ENDOFF

	CALL CLEAR_SYNC
	CALL READ_SMC
	CALL UPDATE_ROC

ENDOFF,
	CALL CLOSE
	XCALL FLAGS(7000000)
	STOP

CLEAR_SYNC,	;;;;;;;;;;;;;;;;;;;;;;;;;
		;;; CLEAR SYNCAR.ISM FILE
		;;;;;;;;;;;;;;;;;;;;;;;;;

	FIND (CHNSYN, SYNC, ^FIRST) [ERR=CS_EOF]
	DO FOREVER
		BEGIN
		READS (CHNSYN, SYNC, CS_EOF)
		DELETE (CHNSYN)
		END
CS_EOF,
	RETURN
;----------------------------------------
READ_SMC,	;;;;;;;;;;;;;;;;;;;;;;;;;
	RECNO = 1
	READ (SMC001, CUSMAS, 1)		;FIRST RECORD
	DO FOREVER
		BEGIN
		READS (SMC001, CUSMAS, RS_EOF)
		IF(CUSMAS .EQ. ']]]]]]') GOTO RS_EOF
		INCR RECNO
		S_CUST = CUSNO
		S_REC = RECNO
		IF(NAME .EQ.']]]DEL')
		THEN	S_FLAG = 1
		ELSE	BEGIN
			S_FLAG = 0
			STORE (CHNSYN, SYNC, S_CUST)
			END
		END
RS_EOF,
	RETURN
;----------------------------------------

UPDATE_ROC,	;;;;;;;;;;;;;;;;;;;;;;;;;
	RECNO = 1
UR_LOOP,
	INCR RECNO
	READ (ROC001, CUSMAS, RECNO)
	IF (CUSMAS .EQ. ']]]]]]') GOTO UR_EOF
	IF (NAME .EQ. ']]]DEL') GOTO UR_LOOP
	READ (CHNSYN, SYNC, CUSNO) [ERR=NOF]
	IF(S_FLAG .EQ. 0)
		BEGIN
		S_FLAG = 2
		WRITE (CHNSYN, SYNC, CUSNO)
		END
	GOTO UR_LOOP
NOF,
	ER_CUST = CUSNO
	ER_MSG = 'Not found in SYNC file'
	WRITES(CHNERR,ERROR)
	GOTO UR_LOOP

UR_EOF,
	FIND (CHNSYN, SYNC, ^FIRST) [ERR=URE_EOF]
	DO FOREVER
		BEGIN
		READS (CHNSYN, SYNC, URE_EOF)
		USING S_FLAG SELECT
		(0),	CALL ADD_CUST
		ENDUSING

		IF (S_FLAG .LT. 2)
			BEGIN
			ER_CUST = S_CUST
		;;;	ER_MSG = 'Did not update Rockford'
			IF (S_FLAG.EQ.1) ER_MSG(25,30) = 'DELETE'
			WRITES (CHNERR, ERROR)
			END
		END
URE_EOF,
	RETURN
;----------------------------------------

ADD_CUST,	;;;;;;;;;;;;;;;;;;;;;;;;;
	READ (SMC001, CUSMAS, S_REC) [ERR=E1]		;NOT IN ROCKFORD CUSMAS
	READ (ROC001, CUSCTL, 1) [ERR=E2]

	INCR REC001

	CLEAR SALMTD		; SALES MONTH-TO-DATE ($XX,XXX,XXX.XX-)
	CLEAR SALYTD		; SALES YEAR-TO-DATE  ($XX,XXX,XXX.XX-)
	CLEAR COSMTD		; COST MONTH-TO-DATE  ($XX,XXX,XXX.XX-)
	CLEAR COSYTD		; COST YEAR-TO-DATE   ($XX,XXX,XXX.XX-)
	CLEAR OSTDCR		; ACCOUNT BALANCE ($XXX,XXX.XX-)
	CLEAR ELAST		; LAST SALE DATE

	FOR I FROM 1 THRU 13
		BEGIN
		CLEAR EHIGHC(I)		; HIGHEST CREDIT EXTENDED
		CLEAR EPAYDA(I)		; NUMBER OF DAYS TO PAY
		CLEAR EPAYNO(I)		; NUMBER OF PAYMENTS
		END

	WRITE (ROC001,CUSMAS, REC001) [ERR=E3]
	WRITE (ROC001, CUSCTL, 1) [ERR=E4]

	ICUSNO = CUSNO
	IRC001 = REC001
	WRITE (ROC002, CUSIDX, REC001) [ERR=E5]

	S_FLAG = 3			;WROTE NEW ROCKFORD RECORD
	RETURN
;----------------------------------------
E1,
	ER_MSG = 'Could not read SMC CUSMAS'
	RETURN
E2,
	ER_MSG = 'Could not read ROC header'
	RETURN
E3,
	ER_MSG = 'Could not write ROC CUSMAS'
	RETURN
E4,
	ER_MSG = 'Could not write ROC header'
	RETURN
E5,
	ER_MSG = 'Could not write ROC CUSIDX'
	RETURN
;----------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLOSE SMC001
	CLOSE SMC002
	CLOSE ROC001
	CLOSE ROC002
	CLOSE CHNSYN
	CLOSE CHNERR

	RETURN
;----------------------------------------

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	OPEN(1,I,'SMC:CUSMAS.SMC')
	SMC001 = 1

	OPEN(2,I,'SMC:CUSIDX.SMC')
	SMC002 = 2

	OPEN(3,U,'ROC:CUSMAS.ROC')
;;;	OPEN(3,U,'TST:CUSMAS.TST')
	ROC001 = 3

	OPEN(4,U,'ROC:CUSIDX.ROC')
;;;	OPEN(4,U,'TST:CUSIDX.TST')
	ROC002 = 4

	OPEN(5,SU,'SMC:SYNCAR.ISM')
	CHNSYN = 5

	OPEN(6,O,'SMC:SYNCAR.ERR')
	CHNERR = 6

	OPNOK = 1
	RETURN
;----------------------------------------
