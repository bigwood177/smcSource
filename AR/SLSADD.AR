;  SLSADD / AR 
;
;		ENTRY OF SALES TRANSACTIONS
;		STANDARD TRX MAINTENANCE MODULE
;	g/l acct profit center by company code
; 	5-23-18: ssq convert cusmas to isam

RECORD	D_STUFF
	D_IN	,D8		;DATE-IN, ANY FORMAT
	D_OUT	,D6		;RETURN VALUE MMDDYY
	D_OUTR	,D8		;RETURN VALUE CCYYMMDD
	D_FMT	,A10		;RETURN VALUE MM/DD/CCYY
	D_SW	,A2		;"99" = DATE CONVERSION ERROR

	.DEFINE POOLSIZE	,25000
	.DEFINE WNDCHNL		,15
	.DEFINE MAXWINS		,10
	.INCLUDE 'wnd:WINDOWS.DEF'

; 12-12-13: converted to isam
; 12-02-15: sfrght from d6 to d7

RECORD	FUNKEY
	.INCLUDE 'DEF:FUNKEY.DEF'

RECORD SALES		; 
		.INCLUDE 'DEF:RD004A.DEF'
RECORD SLSCTL		; 
		.INCLUDE 'DEF:RD004B.DEF'
RECORD CUSMAS		; 
		.INCLUDE 'DEF:RD001A.DEF'
RECORD CUSCTL	,X	; 
		.INCLUDE 'DEF:RD001B.DEF'
RECORD SALM		; 
		.INCLUDE 'DEF:RD054A.DEF'
RECORD ARACCT	;;>,X	; 
		.INCLUDE 'DEF:RD007A.DEF'
;RECORD	,X		; 
;		.INCLUDE 'DEF:RD007B.DEF'
;;;RECORD CUSIDX	,X	; 
;;;		.INCLUDE 'DEF:RD002A.DEF'
RECORD ARTCDE
		.INCLUDE 'DEF:RD169A.DEF'
RECORD ARTCTL	,X
		.INCLUDE 'DEF:RD169B.DEF'
RECORD ARTERM	
		.INCLUDE 'DEF:RD170A.DEF'
RECORD ATMCTL	,X
		.INCLUDE 'DEF:RD170B.DEF'
RECORD CTL
	ROW	,D2
		,A1
	COL	,D2
		,A1
	MAX	,D2
		,A1
	MIN	,D2
		,A1
	TYPE	,A2

RECORD	CHANNEL
	CHN001	,D2
	CHN002	,D2
	CHN004	,D2
	CHN007	,D2
	CHN054	,D2
	CHN169	,D2
	CHN170	,D2


RECORD	WVARS
	W_ID	,D4
	WND_1	,D4
	WND_2	,D4
	WN_NAM1	,A7,	'SLSADD1'
	WN_NAM2	,A7,	'SLSADD2'
	WN_TNMBR	,D4

RECORD	VARS
	DI	,D2
	DROW	,D2
	DCOL	,D2
	TEMP	,A25

	F_KEY	,D3
	OPNOK	,D1
	tottax	,d10
	taxable	,d10
	BADTAX	,D1
	A9	,A9
	A8	,A8
	TAXFRT	,D8
	CMPCOD	,A3
	C_PROF	,D3
	COL2	,D2
	DISTIX	,D2
	DEFACT	,D7
	DSTERR	,D1
	DSTTOT	,D9
	OPTION	,D1
	ENTRY	,A26
	INXCTL	,D1
	CNGCTL	,D1
	ROW2	,D2
	WHATNO	,D2
	DECMAL	,D18
	KCUSNO	,D6
	KDOCNO	,D6
	KDATE	,D8
	ORGCUS	,D5
	ORGARA	,D5
	LSTDOC	,D6
	LSTTYP	,D1
	RECNO	,D5
	BLANKS	,A8
	BLANK2	,A30
	MASK	,A7,	'XXXXXXX'
	MASK2	,A8,	'XXXX-XXX'
	ALPHA	,A8
	KEY	,A7
	KEY2	,A6
	KEY3	,A3
	BSEND	,D5
	BSMID	,D5
	SRCCTL	,D1
	SALMAN	,A2
	TODAY	,D8
	TODAA	,A10
	TDATE	,D6
	DCHAR	,D3
	TCHAR	,D3
	SYSTEM	,D1
	V	,D1
	READ	,D1,	0
	WRITE	,D1,	1
	LOKCTL	,D1
	TAX	,D7
	OR169	,D5
	OR170	,D5
	SWITCH	,D1
	DUDATE	,D8
	TERM	,A1,	'Y'
	MANTAX	,A1

PROC
	XCALL TERID (V)
	XCALL ENVRN (SYSTEM)
	XCALL WHO(CMPCOD)
;;;	IF (CMPCOD .NE. 'TST')
;;;		BEGIN
;;;		XCALL MESAG ('YOURE NOT IN TEST COMPANY',1)
;;;		STOP
;;;		END
	
	CALL OPENS 
	IF (.NOT. OPNOK) GOTO ENDOFF


	USING CMPCOD SELECT
	('TST'),	C_PROF = 100
	('SMC'),	C_PROF = 100
	('ROC'),	C_PROF = 200
	(),		C_PROF = 000
	ENDUSING

	XCALL RDATE(TDATE)
	XCALL DATE8(TDATE, D_OUT, TODAY, TODAA, D_SW)

	call init_window
DISPLA,
	SALES =
	UNLOCK 4
	IF (INXCTL.EQ.1) LSTDOC = LSTDOC-1
	CNGCTL =
	XCALL AR2 (1,SDETDS,SMLAR,SMLSLS,SMLOCH,SMLTAX,SMLFRT, W_ID)
DOCNO,
	IF (REC004.GE.MAX004) GO TO FULL
	CTL = '03,19,06,00,NE'
	CALL INPUT
	GO TO (DISPLA,ENDADD), INXCTL
	KDOCNO = ENTRY (1,6)
	IF (ENTRY.EQ.BLANKS) GO TO NXTDOC
	SDOCNO = KDOCNO
	IF (SDOCNO.EQ.0) GO TO INVALD
	LSTDOC = SDOCNO
	GO TO (ANYCNG), CNGCTL
	GO TO DOCTYP
INVALD,
	XCALL W_MSG (W_ID, 23, ' ',3)
	GO TO DOCNO
FULL,
	XCALL W_MSG (W_ID, 23, 'SALES0 FILE IS NOW FULL. EXPAND BEFORE CONTINUING',2)
	GO TO ENDADD
NXTDOC,
	IF (LSTDOC.EQ.999999) LSTDOC =
	INCR LSTDOC
	DECMAL = LSTDOC
	CTL = '03,19,06'
	CALL DSPNUM
	SDOCNO = LSTDOC
	GO TO (ANYCNG), CNGCTL
DOCTYP,
	xcall w_disp(w_id, wd_pos,4,23,wd_clr, wdc_eol)
	xcall w_disp(w_id, wd_pos,23,3,'1=SALE  3=CR MEMO  4=FIN CHG  5=DR MEMO')
	CTL = '04,19,01,00,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	xcall w_disp(w_id, wd_pos,23,3,wd_clr, wdc_eol)
	IF (ENTRY.EQ.BLANKS.AND.LSTTYP.NE.0) CALL SAMTYP
	SDOCTP = ENTRY (1,1)
	IF (SDOCTP.EQ.2.OR.SDOCTP.LT.1.OR.SDOCTP.GT.5) GO TO BADTYP
	LSTTYP = SDOCTP
	GO TO (DOCDTE,APLYTO), CNGCTL + 1
BADTYP,
	SDOCTP =
	XCALL W_MSG (W_ID, 23, ' ',3)
	GO TO DOCTYP
SAMTYP,
	ENTRY (1,1) = LSTTYP
	xcall w_disp(w_id, wd_pos,4,19,ENTRY(1,1))
	RETURN
APLYTO,
	IF (BALMTH.NE.'B') GO TO APL1
	SAPLNO = -1
	xcall w_disp(w_id, wd_pos,4,28,wd_clr,wdc_eol)
	GO TO (DUEDTE,ANYCNG), CNGCTL + 1
APL1,
	IF (SDOCTP.EQ.1) GO TO ASIS		;SSQ 10/21/02
	xcall w_disp(w_id, wd_pos,4,31,'APPLY-TO')
	CTL = '04,43,06,00,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	SAPLNO = ENTRY (1,6)
ASIS,
	IF (SDOCTP.EQ.1) SAPLNO = SDOCNO		;ssq 10/21/02
	GO TO (DUEDTE,ANYCNG), CNGCTL + 1
DOCDTE,
	CTL = '05,19,08,00,D '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	IF (ENTRY.EQ.BLANKS.AND.KDATE.NE.0) GO TO SAMDTE
	SDOCDT = ENTRY (1,8)
	IF (SDOCDT.EQ.0) 
		BEGIN
		SDOCDT = TODAY
		xcall w_disp(w_id, wd_pos,5,19,TODAA)
		END
	IF (SDOCDT.EQ.0) GO TO DOCDTE
	KDATE = SDOCDT
	GO TO (DUEDTE), CNGCTL
	GO TO CUSTNO

SAMDTE,
	SDOCDT = KDATE
	DECMAL(1,8) = SDOCDT
	CALL DSPDTE
	GO TO (DUEDTE), CNGCTL
CUSTNO,
	xcall w_disp(w_id, wd_pos,6,19,wd_clr, wdc_eol)
	CTL = '06,19,06,01,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	KCUSNO = ENTRY (1,6)
	IF (KCUSNO.EQ.0) GO TO INVCUS
	
	XCALL ISIO (1, CUSMAS, KCUSNO, READ, LOKCTL)
	IF (LOKCTL .NE. 0) GOTO BADCUS
	
;;;	KEY2 = KCUSNO, MASK
;;;	BSEND = ORGCUS
;;;	XCALL SERCH (2,CUSIDX,KEY2,1,6,BSEND,BSMID,SRCCTL,4,7,11,0,0,0,0)
;;;	GO TO (BADCUS), SRCCTL
;;;	LOKCTL = 1
;;;	XCALL IO (1,CUSMAS,IRC001,READ,LOKCTL)

	IF (ENTRY.EQ.'999999') GO TO FRENME
	SCUSNO = CUSNO
	TERM = 'Y'
	SNAME = NAME
	STAXFL = TAXFLG		;SSQ 9-28-04

	SRCCTL = 2
	XCALL SERCH (10,ARTERM,TERMS,1,1,OR170,BSMID,SRCCTL,4,2,7,0,0,0,0)
	IF (SRCCTL.EQ.1) ARTRDS = 'TERMS NOT FOUND'
	IF (SRCCTL.EQ.1) TERM = 'N'
	xcall w_disp(w_id, wd_pos,6,31,NAME)
	xcall w_disp(w_id, wd_pos,7,31,ARTRDS)
	IF (CNGCTL.EQ.0.OR.BALMTH.EQ.'B') GO TO APLYTO
	IF (BALMTH.EQ.'O'.AND.SAPLNO.EQ.-1) GO TO APL1
	GO TO TAX
INVCUS,
	XCALL W_MSG (W_ID, 23, ' ',3)
	GO TO CUSTNO
FRENME,
	SCUSNO = 999999
	CTL = '06,27,25,00,A '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	SNAME = ENTRY (1,25)
	IF (CNGCTL.EQ.0.OR.BALMTH.EQ.'B') GO TO APLYTO
	IF (BALMTH.EQ.'O'.AND.SAPLNO.EQ.-1) GO TO APL1
	GO TO ANYCNG
BADCUS,
	XCALL W_MSG (W_ID, 23, 'CUSTOMER NOT ON FILE',1)
	GO TO CUSTNO
BADSLM,
	XCALL MESAG('SALESMAN NOT ON FILE',1)
	GO TO SALEMN
DUEDTE,
	IF (SDOCTP.NE.1) GO TO NODUE
					; The search for the terms code
					; was done for the customer name 
ASKDTE,
TAKE,
	GO TO (ANYCNG), CNGCTL
	GO TO SALEMN
NODUE,
	GO TO (ANYCNG), CNGCTL
SALEMN,
	xcall w_disp(w_id, wd_pos,9,31,BLANK2)
	CTL = '09,19,02,00,# '
	CALL INPUT
	GO TO (DISPLA), INXCTL
	SSLMAN = ENTRY (1,2)
	IF (ENTRY.EQ.'  ') SSLMAN = SLSMAN
	IF (SSLMAN.LT.1) GO TO SALEMN
	LOKCTL = 1
	XCALL IO (8,SALM,SSLMAN,READ,LOKCTL)
	IF (SLSNM.EQ.']]]]]]'.OR.SLSNM.EQ.']]]DEL') GO TO BADSLM
	SALMAN = SSLMAN
	xcall w_disp(w_id, wd_pos,9,19,SALMAN)
	xcall w_disp(w_id, wd_pos,9,31,SLSNM)
	GO TO (ANYCNG), CNGCTL
SLEAMT,
	CTL = '10,19,08,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	SSLAMT = ENTRY (1,9)
	if (cngctl .eq. 1)
		begin
		SDACTS (1) = SSLSAC
		SDAMTS (1) = SSLAMT
		end

	GO TO (RE_CALC), CNGCTL
MISC,
	CTL = '11,19,07,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	SMISC = ENTRY (1,8)
	SMSACT = SOCHAC
	DEFACT = SOCHAC
	IF (SMLOCH.EQ.'Y' .AND. SMISC.NE.0)
		BEGIN
		ROW = 11
		CALL GETACT
		GO TO (DISPLA), INXCTL
		SMSACT = DEFACT
		END
	GOTO (RE_CALC),CNGCTL

;12-30-98 SSQ fields added and re-arranged...
FREIT,
	CTL = '12,19,07,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	SFRGHT = ENTRY (1,7)
	SFRACT = SFRTAC
	DEFACT = SFRTAC
	IF (SMLFRT.EQ.'Y' .AND. SFRGHT.NE.0)
		BEGIN
		ROW = 12
		CALL GETACT
		GO TO (DISPLA), INXCTL
		SFRACT = DEFACT
		END
	GO TO (RE_CALC), CNGCTL

RE_CALC,
	CALL GET_TAX_CODE			;SSQ 9-28-04
	IF (BADTAX) 
		BEGIN
		CALL TAXCODE
		GOTO (DISPLA),INXCTL
		END

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; added 10-26-04: if adding a c/m where there is only tax,
;;; this will prevent the tax from being re_calc'd if the user
;;; changes the tax-code after entering tax amounts...
	TAXFRT = 
	USING STAXFL SELECT
	('MN'),	TAXFRT = SFRGHT
	('W'),	TAXFRT = SFRGHT
	('N'),	TAXFRT = SFRGHT
	ENDUSING

	taxable = taxfrt + sslamt
	taxable = taxable + smisc		;ssq 01-05-11
	TOTTAX = STAX(1)+STAX(2)+STAX(3)	;SSQ 10-26-04
	IF (SDOCTP.EQ.3.AND.taxable.EQ.0 .AND. TOTTAX.NE.0) GOTO TOTAL

;6-10-15 ssq: added this per dianna:if amount is changed to zero don't
;		re-calc the tax amounts - for debit memos.

	IF (SDOCTP.EQ.5.AND.taxable.EQ.0 .AND. TOTTAX.NE.0) GOTO TOTAL

;;;	IF (SDOCTP.EQ.3.AND.SSLAMT.EQ.0 .AND. TOTTAX.NE.0) GOTO TOTAL
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CALL CALC_TAX		;SSQ 9-28-04
	DECMAL = SSLAMT + SMISC + TAXFRT	;SSQ 2-6-07
	IF (DECMAL .NE. 0) GOTO TOTAL		;SSQ 2-6-07


;12-30-98 SSQ: 3 tax amounts
TAX,
	DEFACT = ARTGLN(1)
	CTL = '13,19,07,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	STAX(1) = ENTRY (1,7)
	TAX = STAX(1)
	ROW = 13
	COL = 41
	IF (SMLTAX.NE.'Y') GO TO TAX1

	IF (TAX.EQ.0) GOTO TOTAL

	CALL GETACT

	GO TO (DISPLA), INXCTL
	STXACT(1) = DEFACT
TAX1,
;;;	goto (total),cngctl		;ssq 01-05-11
	if (artgln(2) .eq. 0) GO TO (TOTAL), CNGCTL	;ssq 9-29-05
TAX2,
	DEFACT = ARTGLN(2)
	CTL = '14,19,07,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	STAX(2) = ENTRY (1,7)
	TAX = STAX(2)
	ROW = 14
	COL = 41

	IF (TAX.EQ.0) GOTO TOTAL

	CALL GETACT

	GO TO (DISPLA), INXCTL
	STXACT(2) = DEFACT

	if(artgln(3) .eq. 0) GO TO (TOTAL), CNGCTL	;ssq 9-29-05
TAX3,
	DEFACT = ARTGLN(3)
	CTL = '15,19,07,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	STAX(3) = ENTRY (1,7)
	TAX = STAX(3)
	ROW = 15
	COL = 41

	IF (TAX.EQ.0) GOTO TOTAL

	CALL GETACT

	GO TO (DISPLA), INXCTL
	STXACT(3) = DEFACT
	GO TO (TOTAL), CNGCTL

TOTAL,
	CALL DSPTOT
	IF (CNGCTL.EQ.1.AND.WHATNO.NE.10) GO TO ANYCNG
	SARACT = SARAC
	DEFACT = SARAC
	IF (DECMAL.EQ.0) GO TO TOTAL1
	IF (SCUSNO.EQ.999999.AND.SDETDS.NE.'Y') GO TO TOTAL1
	IF (SCUSNO.NE.999999.AND.SMLAR.NE.'Y') GO TO TOTAL1
	ROW = 16
;;	ROW = 15
	CALL GETACT
	GO TO (DISPLA), INXCTL
	SARACT = DEFACT
TOTAL1,
	GO TO (ANYCNG), CNGCTL
COST,
	CTL = '05,70,08,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	SCOST = ENTRY  (1,9)
	GO TO (ANYCNG), CNGCTL
COMM,
	CTL = '07,70,06,00,$-'
	CALL INPUT
	GO TO (DISPLA), INXCTL
	SCOMM = ENTRY (1,7)
	GO TO (ANYCNG), CNGCTL
	SDACTS (1) = SSLSAC
	SDAMTS (1) = SSLAMT
	IF (SDOCTP.EQ.4) SDACTS (1) = SFCHAC
	IF (SMLSLS.NE.'Y'.OR.SSLAMT.EQ.0) GO TO ANYCNG
	DEFACT = SDACTS (1)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	DECMAL = SSLAMT
;;;	DISTIX = 1
;;;	CALL STRWCL
;;;	CALL DSPACT
;;;	CTL = '19,15,11'
;;;	CALL DSPDLR
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;moved here 3-25-08 ssq...
	xcall w_disp(w_id, wd_pos,22,1,wd_clr, wdc_eol)
	xcall w_updt
	CALL DIST39

	GOTO ANYCNG

STAXFL,
	CALL TAXCODE
	GOTO RE_CALC

DSPTOT,
	CTL = '16,19,11'
	CTL = '16,19,12'
	DECMAL = SSLAMT + SFRGHT + SMISC + STAX(1)+STAX(2)+STAX(3)
	CALL DSPDLR
	RETURN
CNGBR,
	xcall w_disp(w_id, wd_pos,2,22,wd_clr, wdc_eol)
	GO TO (DOCNO,DOCTYP,DOCDTE,CUSTNO,DUEDTE,SALEMN,SLEAMT,MISC,FREIT,
&	TAX,TAX2,TAX3,
&	TOTAL,COST,COMM,STAXFL), WHATNO
;;;	IF (WHATNO.GT.16 .AND. WHATNO.LT.26) GO TO CNGDST
	CNGCTL = 3
	GO TO ANYCNG
;========================================================
;============ INTERNAL SUBS ================

GET_TAX_CODE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR BADTAX
	SRCCTL = 2
	XCALL SERCH (9,ARTCDE,STAXFL,1,3,OR169,BSMID,SRCCTL,4,4,9,0,0,0,0)
	IF (SRCCTL)
	THEN	BEGIN
		XCALL W_MSG (W_ID, 23, 'INVALID TAX CODE!!',1)
		BADTAX = 1
		END
	ELSE	BEGIN
		xcall w_disp(w_id, wd_pos,08,70,STAXFL)
		END
	RETURN
;-------------------------------------------

CALC_TAX,	;;;;;;;;;;;;;;;;;;;
	TAXFRT = 
	USING STAXFL SELECT
	('MN'),	TAXFRT = SFRGHT
	('W'),	TAXFRT = SFRGHT
	('N'),	TAXFRT = SFRGHT
	ENDUSING

	DECMAL = SSLAMT + SMISC + TAXFRT
	STAX(1) = (DECMAL*ARTPRT(1))#5
	STAX(2) = (DECMAL*ARTPRT(2))#5
	STAX(3) = (DECMAL*ARTPRT(3))#5

	STXACT(1) = ARTGLN(1)
	STXACT(2) = ARTGLN(2)
	STXACT(3) = ARTGLN(3)

	A9 = STAX(1),	'ZZZ,ZZX.XX' [LEFT]
	xcall w_disp(w_id, wd_pos,13,19,A9)
	CTL = '13,41'
	DEFACT = STXACT(1)
	CALL DSPACT

		A9 = STAX(2),	'ZZZ,ZZX.XX' [LEFT]
		xcall w_disp(w_id, wd_pos,14,19,A9)
		CTL = '14,41'
		DEFACT = STXACT(2)
		CALL DSPACT

		A9 = STAX(3),	'ZZZ,ZZX.XX' [LEFT]
		xcall w_disp(w_id, wd_pos,15,19,A9)
		CTL = '15,41'
		DEFACT = STXACT(3)
		CALL DSPACT
	RETURN
;----------------------------------
TAXCODE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CTL = '08,70,03,00,A '
	CALL INPUT
	IF (INXCTL .EQ. 1) RETURN	;^W
	STAXFL = ENTRY (1,3)
	SRCCTL = 2
	XCALL SERCH (9,ARTCDE,STAXFL,1,3,OR169,BSMID,SRCCTL,4,4,9,0,0,0,0)
	IF (SRCCTL)
		BEGIN
		XCALL W_MSG (W_ID, 23, 'INVALID TAX CODE - PLEASE REENTER',1)
		GOTO TAXCODE
		END
	RETURN
;----------------------------------

;========================================================


PROCES,
	CALL CHKDST
	IF (DSTERR.EQ.1) GO TO ANYCNG
	XCALL WATE (3,2)
	IF (SDOCTP.NE.3.AND.SDOCTP.NE.5
&		.AND.SDOCTP.NE.4.AND.BALMTH.EQ.'O') SAPLNO = SDOCNO
	DECMAL = SSLAMT + SFRGHT + SMISC + STAX(1)+STAX(2)+STAX(3)
	IF (SDOCTP.NE.4) SDISAL = (DECMAL * ARTRDP / 100) #2
ADD,
	LOKCTL = 1
	XCALL IO (4,SLSCTL,1,READ,LOKCTL)
	INCR REC004
	IF (REC004.GT.MAX004) GO TO FULL
	LOKCTL = 1
	XCALL IO (4,SLSCTL,1,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IO (4,SALES,REC004,WRITE,LOKCTL)
FREBUF,
	LOKCTL = 1
	XCALL IO (4,SLSCTL,MAX004,READ,LOKCTL)
	LOKCTL = 1
	XCALL IO (4,SLSCTL,1,READ,LOKCTL)
	GO TO DISPLA
GETACT,
	IF (SCUSNO.EQ.999999.AND.ROW.EQ.14) GO TO GETAC1
	COL = 41
	CALL DSPACT
	COL = 40
	CALL ACCEPT
	IF (TCHAR.EQ.13) RETURN
GETAC1,
	COL = 41
	xcall w_disp(w_id, wd_pos,ROW,41,wd_clr, wdc_eol)
	CALL ENTACT
	RETURN
ENTACT,
	IF (COL.EQ.41) xcall w_disp(w_id, wd_pos,ROW,COL,wd_clr, wdc_eol)
	xcall w_disp(w_id, wd_pos,ROW,COL,BLANKS)
	CTL (7,14) = '04,03,# '
	IF (COL.EQ.41) GO TO SKPDEF
	MIN = 0
	IF (DEFACT.EQ.0) GO TO SKPDEF
	CALL DSPACT
	COL = COL - 1
	CALL ACCEPT
	COL = COL + 1
	IF (TCHAR.EQ.13) RETURN
SKPDEF,
	xcall w_disp(w_id, wd_pos,ROW,COL,BLANKS)
	CALL INPUT
	IF (INXCTL.EQ.1) RETURN
	DEFACT (1,4) = ENTRY (1,4)
	IF (DEFACT(1,4).EQ.0) DEFACT = 0
	IF (DEFACT.EQ.0) xcall w_disp(w_id, wd_pos,ROW,COL,BLANKS)
	IF (DEFACT.EQ.0) RETURN
	COL2 = COL+35-31
	xcall w_disp(w_id, wd_pos,ROW,COL2,'-')
	CTL (7,11) = '03,00'
	COL = COL + 5
	CALL INPUT
	COL = COL - 5
	IF (INXCTL.EQ.1) DEFACT =
	GO TO (ENTACT), INXCTL
	IF (ENTRY(1,3) .EQ. '   ')	;SSQ 7-20-04
		BEGIN
		ENTRY(1,3) = C_PROF,	'XXX'
		xcall w_disp(w_id, wd_pos,ROW,COL,ENTRY(1,3))
		END
	DEFACT (5,7) = ENTRY (1,3)
	CALL DSPACT
	IF (SRCCTL.EQ.0) RETURN
	XCALL W_MSG (W_ID, 23, 'INVALID ACCOUNT',1)
	xcall w_disp(w_id, wd_pos,22,1,wd_clr, wdc_eol)
	IF (WHATNO.GT.12) DEFACT =
	xcall w_disp(w_id, wd_pos,ROW,COL,BLANK2(1,21))
	GO TO ENTACT
ACCEPT,
	XCALL FLAGS (00010000)			;DISABLE CHARACTER ECHOING
	xcall w_disp(w_id, wd_pos,ROW,COL)

;;;	ACCEPT (15,TCHAR)
	xcall w_disp (w_id, wd_accept, tchar)
	if (tchar .eq. 10) goto accept

	IF (SYSTEM.NE.1.AND.TCHAR.EQ.13) ACCEPT (15,DCHAR)
	XCALL FLAGS (00000000)			;RE-ENABLE CHARACTER ECHOING
	RETURN
DSPACT,
	BSEND = ORGARA
	KEY = DEFACT, MASK
	SRCCTL = 1
	XCALL ISIO (7, ARACCT, KEY, READ, SRCCTL)
	IF (SRCCTL.GT.1) SRCCTL=1
;	XCALL SERCH (7,ARACCT,KEY,1,7,BSEND,BSMID,SRCCTL,4,32,37,0,0,0,0)
	IF (SRCCTL.EQ.1) ARACDS = '** ACCOUNT NOT ON FILE **'
	ALPHA = DEFACT, MASK2
	xcall w_disp(w_id, wd_pos,ROW,COL,ALPHA)
	IF (COL.EQ.41) xcall w_disp(w_id, wd_pos,ROW,51,ARACDS)
	IF (COL.NE.41) xcall w_disp(w_id, wd_pos,22,1,ARACDS)
	xcall w_updt
	RETURN
STRWCL,
	COL = 60
	IF (DISTIX.LT.7) COL = 33
	IF (DISTIX.LT.4) COL = 5
	ROW = 21
	IF (DISTIX.EQ.1.OR.DISTIX.EQ.4.OR.DISTIX.EQ.7) ROW = 19
	IF (DISTIX.EQ.2.OR.DISTIX.EQ.5.OR.DISTIX.EQ.8) ROW = 20
	RETURN

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;CNGDST,
;;;	IF (SMLSLS.NE.'Y') GO TO ANYCNG
;;;	xcall w_disp(w_id, wd_pos,22,1,wd_clr, wdc_eol)
;;;	DISTIX = WHATNO - 16
;;;	CALL STRWCL
;;;	xcall w_disp(w_id, wd_pos,ROW,COL,BLANK2(1,21))
;;;	DEFACT = SDACTS (DISTIX)
;;;	CALL ENTACT
;;;	GO TO (DISPLA), INXCTL
;;;	SDACTS (DISTIX) = DEFACT
;;;	IF (DEFACT.NE.0) GO TO CNGDAM
;;;	SDAMTS (DISTIX) = 0
;;;	GO TO ANYCNG
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

CNGDAM,
	COL = COL + 10

ENDOFF,
	CALL CLOSE
	XCALL PGCHN ('AR:SLSENT',1)
ENDADD,
	XCALL WATE (3,2)
	CALL CLOSE
	XCALL PGCHN ('AR:SLSENT',1)

INPUT,
;;;	XCALL INPUT (ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL)
	XCALL WINPT(W_ID,ROW,COL,MAX,MIN,TYPE,ENTRY,INXCTL)
	RETURN
ANYCNG,
	IF (CNGCTL.EQ.1) xcall w_disp(w_id, wd_pos,22,1,wd_clr, wdc_eol)
;;;	XCALL ANYCN (CNGCTL,WHATNO)
	XCALL WANFK(W_ID,22,CNGCTL,WHATNO,F_KEY,'F1=DISTRIBUTIONS')
	USING F_KEY SELECT
	(F_01),	BEGIN
		xcall w_disp(w_id, wd_pos,22,1,wd_clr, wdc_eol)
		xcall w_updt
		CALL DIST39
		GOTO ANYCNG
		END
	ENDUSING

	GO TO (PROCES,CNGBR,DISPLA), CNGCTL + 1


DIST39,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;; DISTRIBUTIONS
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	W_ID = WND_2

	XCALL W_PROC(WP_PLACE,WND_2,5,2)	
	XCALL W_DISP(WND_2,WD_CLEAR)

	XCALL W_DISP (W_ID, WD_POS, 1,2,'-----------------------------')
	XCALL W_DISP (W_ID, WD_POS, 1,30,'SALES DISTRIBUTIONS')
	XCALL W_DISP (W_ID, WD_POS, 1,49,'------------------------------')
	XCALL W_DISP (W_ID, WD_POS, 2,6,'ACCOUNT     AMOUNT          ACCOUNT')
	XCALL W_DISP (W_ID, WD_POS, 2,46,'AMOUNT         ACCOUNT     AMOUNT')

	FOR DI FROM 1 THRU 39
		BEGIN
		CLEAR TEMP
		TEMP(1,3) = DI, 'ZX.'
		DROW = DI + 2

		USING DI SELECT
		(01 THRU 13),	DCOL = 1
		(14 THRU 26),	BEGIN
				DROW = DROW - 13 
				DCOL = 29
				END

		(27 THRU 39),	BEGIN
				DROW = DROW - 26
				DCOL = 56
				END
		ENDUSING
		IF (SDAMTS(DI) .NE. 0)
			BEGIN
			TEMP( 5,12) = SDACTS(DI), 'ZXXX-XXX'
			TEMP(15,25) = SDAMTS(DI), 'ZZZ,ZZX.XX-'
			END

		XCALL W_DISP (W_ID, WD_POS, DROW, DCOL, TEMP)

		END

	XCALL W_UPDT

ANYCN_39,
	XCALL WANCN (W_ID, 18, CNGCTL, WHATNO)
	GOTO (PROC_39,CNGBR_39),CNGCTL+1
CNGBR_39,
	DI = WHATNO
	ROW = DI + 2

	USING DI SELECT
	(01 THRU 13),	COL = 5

	(14 THRU 26),	BEGIN
			COL = 33
			ROW = ROW - 13
			END
	(27 THRU 39),	BEGIN
			COL = 60
			ROW = ROW - 26
			END

	(),		GOTO ANYCN_39
	ENDUSING

; GET ACCOUNT...

	XCALL W_DISP (W_ID, WD_POS, 18, 1, WD_CLR, WDC_EOL)
	DEFACT = SDACTS(DI)
	CALL ENTACT
	GOTO (PROC_39),INXCTL
	SDACTS(DI) = DEFACT

; GET AMOUNT ...

	IF (DEFACT .EQ. 0)
		BEGIN
		SDAMTS(DI) = 0
		GOTO ANYCN_39
		END

	COL = COL + 10
	IF (SDAMTS(DI) .EQ. 0) GOTO CNGDM2
	ENTRY(1,11) = SDAMTS (DI), 'ZZZ,ZZX.XX-' [LEFT]
	XCALL W_DISP (W_ID, WD_POS, ROW, COL, ENTRY(1,11) )
;;;	DECMAL = SDAMTS (DI)
;;;	CALL DSPDLR
	COL = COL - 1
	CALL ACCEPT
	COL = COL + 1
	IF (TCHAR.EQ.13) GO TO ANYCN_39
CNGDM2,
	CTL(7,14) = '08,00,$-'
	CALL INPUT
	COL = COL - 10
;;;	GO TO (CNGDST), INXCTL
	GO TO (ANYCN_39), INXCTL
	SDAMTS (DI) = ENTRY (1,9)
	GO TO ANYCN_39


CHKDST,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	IF (SMLSLS.NE.'Y') SDAMTS (1) = SSLAMT
	IF (SMLSLS.NE.'Y') RETURN
	DSTERR =
	DSTTOT =
	FOR DI FROM 1 THRU 39
		BEGIN
		DSTTOT = DSTTOT + SDAMTS(DI)
		END
	
;;;	DSTTOT = SDAMTS(1) + SDAMTS(2) + SDAMTS(3) + SDAMTS(4) + SDAMTS(5)
;;;	DSTTOT = DSTTOT + SDAMTS(6) + SDAMTS(7) + SDAMTS(8) + SDAMTS(9)
	IF (DSTTOT.EQ.SSLAMT) RETURN
	DSTERR = 1
	DECMAL = SSLAMT - DSTTOT
	xcall w_disp(w_id, wd_pos,22,1,wd_clr, wdc_eol)
	xcall w_disp(w_id, wd_pos,22,32,'UNDISTRIBUTED =')
	CTL = '22,48,11'
	CALL DSPDLR
	XCALL W_MSG (W_ID, 23, 'SALE AMT NOT FULLY DISTRIBUTED',1)
	xcall w_disp(w_id, wd_pos,22,1,wd_clr, wdc_eol)
	RETURN

	
	GOTO ANYCN_39
PROC_39,
	XCALL W_PROC (WP_REMOVE, WND_2)	
	XCALL W_UPDT

	W_ID = WND_1
	RETURN
;--------------------------------------------------------
DSPNUM,
	OPTION = 1
	GO TO CALDSP
DSPDTE,
	XCALL DATE8(DECMAL(1,8), D_OUT, D_OUTR, D_FMT, D_SW)
	xcall w_disp(w_id, wd_pos,ROW, COL, D_FMT)
	RETURN
DSPDLR,
	OPTION = 3
CALDSP,
;;;	XCALL DSPLY (MAX,ROW,COL,DECMAL,OPTION,V)
	XCALL WDSPL (w_id,MAX,ROW,COL,DECMAL,OPTION)
	xcall w_updt
	RETURN

OPENS,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	CLEAR OPNOK

	V = 1
	SWITCH = 5
	XCALL FILES (1,'SI',01,SWITCH)		;FILE # 01 -- CUSMAS FILE
	IF (SWITCH.EQ.9) RETURN
	CHN001 = 1

;;;	SWITCH = 5
;;;	XCALL FILES (2,'I',02,SWITCH)		;FILE # 02 -- CUSIDX FILE
;;;	IF (SWITCH.EQ.9) RETURN
;;;	CHN002 = 2

	SWITCH = 5
	XCALL FILES (4,'U',04,SWITCH)		;FILE # 04 -- SALES0 FILE
	IF (SWITCH.EQ.9) RETURN
	CHN004 = 4

	SWITCH = 5
	XCALL FILES (7,'SI',07,SWITCH)		;FILE # 07 -- ARACCT FILE
	IF (SWITCH.EQ.9) RETURN
	CHN007 = 7 

	SWITCH = 5
	XCALL FILES (8,'I',54,SWITCH)		;FILE # 54 -- SALMAN FILE
	IF (SWITCH.EQ.9) RETURN
	CHN054 = 8

	SWITCH = 1
	XCALL FILES (09,'I',169,SWITCH)		;FILE # 169 -- ARTCDE FILE
	IF (SWITCH.EQ.9) RETURN
	CHN169 = 9

	SWITCH = 1
	XCALL FILES (10,'I',170,SWITCH)		;FILE # 170 -- ARTERM FILE
	IF (SWITCH.EQ.9) RETURN
	CHN170 = 10

;;;	LOKCTL = 1
;;;	XCALL IO (1,CUSCTL,1,READ,LOKCTL)
;;;	ORGCUS = ORG001

	LOKCTL = 1
	XCALL IO (4,SLSCTL,1,READ,LOKCTL)
	LOKCTL = 1
;	XCALL IO (7,ARACCT,1,READ,LOKCTL)
;	ORGARA = ORG007
	LOKCTL = 1
	XCALL IO (9,ARTCTL,1,READ,LOKCTL)
	OR169 = ORG169
	LOKCTL = 1
	XCALL IO (10,ATMCTL,1,READ,LOKCTL)
	OR170 = ORG170
	
	OPNOK = 1
	RETURN
;----------------------------------------------------

CLOSE,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	IF (CHN001) CLOSE CHN001
;;;	IF (CHN002) CLOSE CHN002
	IF (CHN004) CLOSE CHN004
	IF (CHN007) CLOSE CHN007
	IF (CHN054) CLOSE CHN054
	IF (CHN169) XCALL FILES (CHN169, 'I', 169, 4)
	IF (CHN170) XCALL FILES (CHN170, 'I', 170, 4)
	
	RETURN
;----------------------------------------------------

INIT_WINDOW,	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	XCALL U_START("LIB:SMC_WND",,,,,,,100)
	XCALL TNMBR (WN_TNMBR)
	XCALL W_PROC(WP_FIND,WND_1,WN_NAM1)
	IF (WND_1.EQ.0)
		BEGIN
		XCALL W_PROC(WP_CREATE,WND_1,WN_NAM1,25,80)
		END
	XCALL W_BRDR(WND_1,WB_TITLE,'SALES ADD',
&			WB_TPOS,WBT_TOP,WBT_CENTER)
	XCALL W_PROC(WP_PLACE,WND_1,1,1)	
	XCALL W_DISP(WND_1,WD_CLEAR)

	XCALL W_UPDT
	W_ID = WND_1
	xcall u_logwnd(wnd_1)

	XCALL W_PROC(WP_FIND,WND_2,WN_NAM2)
	IF (WND_2.EQ.0)
		BEGIN
		XCALL W_PROC(WP_CREATE,WND_2,WN_NAM2,18,80)
		END
	XCALL W_BRDR(WND_2,WB_TITLE,'DISTRIBUTIONS',
&			WB_TPOS,WBT_TOP,WBT_CENTER)
;;;	XCALL W_PROC(WP_PLACE,WND_2,5,2)	
;;;	XCALL W_DISP(WND_2,WD_CLEAR)
	xcall u_logwnd(wnd_2)

	RETURN
;-----------------------------------------------------------------

END

