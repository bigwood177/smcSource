;  SLSPRP / AR 
;
;	8-OCT-01 SSQ:	SPLIT SALES AND CASH POSTING BATCHES.
;	4-NOV-03 SSQ: change finchg dist
;	5-MAR-08 SSQ: 39 distributions
;	8-AUG-18 SSQ: make aropen isam


;		SALES POSTING PREPARATION
;		STANDARD TRX MAINTENANCE MODULE
;

RECORD SALES		; 
		.INCLUDE 'DEF:RD004A.DEF'
RECORD SLSCTL	,X	; 
		.INCLUDE 'DEF:RD004B.DEF'
RECORD SLSDST		; 
		.INCLUDE 'DEF:RD005A.DEF'
RECORD SDSCTL		; 
		.INCLUDE 'DEF:RD005B.DEF'
RECORD BRACKS		; 
		.INCLUDE 'DEF:RD005C.DEF'
RECORD AROCTL		; 
		.INCLUDE 'DEF:RD003B.DEF'
RECORD ADSCTL		; 
		.INCLUDE 'DEF:RD008B.DEF'
RECORD COMCTL		; 
		.INCLUDE 'DEF:RD050B.DEF'

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
RECORD SNDMSG
;;;		,A9,	'AR:SLSJNL'
	RECCNT	,D5
;;;		,A5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

RECORD	VARS
	ADSFIL	,D1
	ADSOVF	,D5
	ALPHA	,A5
	AROFIL	,D1
	AROOVF	,D5
	COMCNT	,D5
	COMFIL	,D1
	COMOVF	,D5
	DSTCNT	,D5
	DSTIDX	,D2
	DSTFLG	,D1
	MSGCTL	,D1
	NO	,D1,	0
	ROW	,D2
	ROW2	,D2
	SDSFIL	,D1
	SDSOVF	,D5
	SLSCNT	,D5
	SWITCH	,D1
	V	,D1
	YES	,D1,	1
	READ	,D1,	0
	WRITE	,D1,	1
	LOKCTL	,D1
	TAX	,D7
PROC
	XCALL TERID (V)
	XCALL WATE (4,V)
	V = 1
	SWITCH = 5
	XCALL FILES (3,'SI',03,SWITCH)		;FILE # 03 -- AROPEN FILE
	IF (SWITCH.EQ.9) GO TO NOTFND		;FILE(S) NOT FOUND, EXIT

	SWITCH = 5
	XCALL FILES (4,'I',04,SWITCH)		;FILE # 04 -- SALES0 FILE
	IF (SWITCH.EQ.9) GO TO NOTFND

	SWITCH = 5
	XCALL FILES (5,'U',05,SWITCH)		;FILE # 05 -- SLSDST FILE
	IF (SWITCH.EQ.9) GO TO NOTFND

	SWITCH = 5
	XCALL FILES (8,'I',08,SWITCH)		;FILE # 08 -- ARDIST FILE
	IF (SWITCH.EQ.9) GO TO NOTFND

	SWITCH = 5
	XCALL FILES (9,'I',50,SWITCH)		;FILE # 50 -- COMDUE FILE
	IF (SWITCH.EQ.9) GO TO NOTFND


	LOKCTL = 1
	XCALL IO (4,SLSCTL,1,READ,LOKCTL)
	RECCNT = REC004
	IF (RECCNT.EQ.1) XCALL MESAG ('SALES TRANSACTION FILE IS EMPTY',1)
	IF (RECCNT.EQ.1) GO TO NOTFND
	IF (SDETDS.EQ.'Y') DSTFLG = YES
	SLSCNT = 0
	DSTCNT = 0
	COMCNT = 0
RDNEXT,
	LOKCTL = 1
	XCALL IOS (4,SALES,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO CHKFIL
	IF (SNAME.EQ.']]]]]]') GO TO CHKFIL
	IF (SNAME.EQ.'000000') GO TO RDNEXT
	IF (DSTFLG) CALL CNTDST
	IF (SCOMM.NE.0) INCR COMCNT
	TAX = STAX(1) + STAX(2) + STAX(3)
	IF (SSLAMT+SMISC+TAX+SFRGHT.EQ.0.OR.SCUSNO.EQ.999999) GO TO RDNEXT
	INCR SLSCNT
	GO TO RDNEXT
CHKFIL,
	AROFIL = NO
	SDSFIL = NO
	ADSFIL = NO
	COMFIL = NO

;;;	LOKCTL = 1
;;;	XCALL IO (3,AROCTL,1,READ,LOKCTL)
;;;	AROOVF = (REC003+SLSCNT) - MAX003
;;;	IF (AROOVF.GT.0) AROFIL = YES

CHKFL2,
	LOKCTL = 1
	XCALL IO (9,COMCTL,1,READ,LOKCTL)
	COMOVF = (REC050+COMCNT) - MAX050
	IF (COMOVF.GT.0) COMFIL = YES
	IF (DSTFLG) CALL CHKDST
	IF (AROFIL.OR.SDSFIL.OR.ADSFIL.OR.COMFIL) GO TO NOPOST	;;;
	IF (DSTFLG.EQ.NO) GO TO ENDPRP
	LOKCTL = 1
	XCALL IO (5,SDSCTL,1,READ,LOKCTL)
	REC005 = 1
	LOKCTL = 1
	XCALL IO (4,SLSCTL,1,READ,LOKCTL)
MAKDST,
	LOKCTL = 1
	XCALL IOS (4,SALES,READ,LOKCTL)
	IF (LOKCTL.EQ.2) GO TO ENDPRP
	IF (SNAME.EQ.']]]]]]') GO TO ENDPRP
	IF (SNAME.EQ.'000000') GO TO MAKDST
	CALL MOVE
	TAX = STAX(1) + STAX(2) + STAX(3)
	IF (SSLAMT+SMISC+TAX+SFRGHT.EQ.0) GO TO MAKDS2
	SDSTYP = 0
	IF (SCUSNO.EQ.999999) SDSTYP = 6
	SDSACT = SARACT
	SDSAMT = SSLAMT + SMISC + TAX + SFRGHT
	SDTFLG = STAXFL
	CALL WRTDST
MAKDS2,
	IF (SMISC.EQ.0) GO TO MAKDS3
	SDSTYP = 2
	IF (SDOCTP .EQ. 4) SDSTYP = 5	;SSQ 11/4/03
	SDSACT = SMSACT
	SDSAMT = SMISC
	SDTFLG = STAXFL
	CALL WRTDST
MAKDS3,
	IF ((STAX(1)+STAX(2)+STAX(3)).EQ.0) GO TO MAKDS4
	SDSTYP = 3
	SDSACT = STXACT(1)
	SDSAMT = STAX(1)
	SDTFLG = STAXFL
	CALL WRTDST

;;;	IF (STAX(2).EQ.0) GO TO MAKDS4
	IF (STAX(2).EQ.0) GO TO tax3
	SDSACT = STXACT(2)
	SDSAMT = STAX(2)
	SDTFLG = STAXFL
	CALL WRTDST
tax3,
	IF (STAX(3).EQ.0) GO TO MAKDS4
	SDSACT = STXACT(3)
	SDSAMT = STAX(3)
	SDTFLG = STAXFL
	CALL WRTDST
MAKDS4,
	IF (SFRGHT.EQ.0) GO TO MAKDS5
	SDSTYP = 4
	SDSACT = SFRACT
	SDSAMT = SFRGHT
	SDTFLG = STAXFL
	CALL WRTDST
MAKDS5,
	DSTIDX = 0
MAKDS6,
	INCR DSTIDX
	IF (DSTIDX.GT.39) GO TO MAKDST
	IF (SDAMTS(DSTIDX).EQ.0) GO TO MAKDS6
	SDSTYP = 1
	IF (SDOCTP.EQ.4) SDSTYP = 5	;REMOVED 11/4/03 SSQ
	SDSACT = SDACTS (DSTIDX)
	SDSAMT = SDAMTS (DSTIDX)
	SDTFLG = STAXFL
	CALL WRTDST
	GO TO MAKDS6
CNTDST,
	IF (SSLAMT+SMISC+TAX+SFRGHT.NE.0) INCR DSTCNT
	IF (SMISC.NE.0) INCR DSTCNT
	IF (TAX.NE.0) DSTCNT = DSTCNT + 3	;Upto 3 G/L Acct #s can be specified.
	IF (SFRGHT.NE.0) INCR DSTCNT
	DSTIDX = 0
CNTDS2,
	INCR DSTIDX
	IF (DSTIDX.GT.39) RETURN
	IF (SDAMTS(DSTIDX).NE.0) INCR DSTCNT
	GO TO CNTDS2
CHKDST,
	LOKCTL = 1
	XCALL IO (8,ADSCTL,1,READ,LOKCTL)
	ADSOVF = (REC008+DSTCNT) - MAX008
	IF (ADSOVF.GT.0) ADSFIL = YES
	LOKCTL = 1
	XCALL IO (5,SDSCTL,1,READ,LOKCTL)
	SDSOVF = DSTCNT - MAX005
	IF (SDSOVF.GT.0) SDSFIL = YES
	RETURN
MOVE,
	SDSDAT = SDOCDT
	SDSCUS = SCUSNO
	SDSDOC = SDOCNO
	SDSFLG = 0
	RETURN
WRTDST,
	IF (SDOCTP.EQ.3) SDSAMT = (-1) * SDSAMT
	INCR REC005
	LOKCTL = 1
	XCALL IO (5,SLSDST,REC005,WRITE,LOKCTL)
	LOKCTL = 1
	XCALL IO (5,SDSCTL,1,WRITE,LOKCTL)
	RETURN
NOPOST,
	XCALL OUTPT (2,1,2,'\',1)
	XCALL OUTPT (6,21,0,'THE SALES TRX CANNOT BE POSTED BECAUSE THE',V)
	XCALL OUTPT (7,21,0,'FOLLOWING FILE(S) DO NOT HAVE ENOUGH ROOM:',V)
	XCALL OUTPT (11,30,0,'FILE      EXTRA ROOM NEEDED',V)
	XCALL OUTPT (12,30,0,'----      ---------- ------',V)
	ROW = 0
	IF (AROFIL) CALL DSPARO
	IF (SDSFIL) CALL DSPSDS
	IF (ADSFIL) CALL DSPADS
	IF (COMFIL) CALL DSPCOM
	XCALL OUTPT (21,21,0,'PLEASE EXPAND THE ABOVE FILES AS NEEDED',V)
	XCALL MESAG (' ',2)
NOTFND,
	XCALL FILES (9,'I',50,4)
	XCALL FILES (8,'I',08,4)
	XCALL FILES (7,'I',07,4)
;;;	XCALL FILES (6,'I',135,4)
	XCALL FILES (5,'U',05,4)
	XCALL FILES (4,'I',04,4)
	XCALL FILES (3,'SI',03,4)
	XCALL FILES (2,'I',02,4)
	XCALL FILES (1,'I',01,4)
	XCALL PGCHN ('AR:SLSENT',1)
DSPARO,
	ROW2 = ROW + 14
	XCALL OUTPT (ROW2,24,0,'A/R OPEN ITEM',V)
	ALPHA = AROOVF
	XCALL OUTPT (ROW2,45,0,ALPHA,V)
	XCALL OUTPT (0,0,0,' RECORDS',V)
	INCR ROW
	RETURN
DSPSDS,
	ROW2 = ROW + 14
	XCALL OUTPT (ROW2,24,0,'SALES DISTRIBUTION',V)
	ALPHA = SDSOVF
	XCALL OUTPT (ROW2,45,0,ALPHA,V)
	XCALL OUTPT (0,0,0,' RECORDS',V)
	INCR ROW
	RETURN
DSPADS,
	ROW2 = ROW + 14
	XCALL OUTPT (ROW2,24,0,'A/R DISTRIBUTION',V)
	ALPHA = ADSOVF
	XCALL OUTPT (ROW2,45,0,ALPHA,V)
	XCALL OUTPT (0,0,0,' RECORDS',V)
	INCR ROW
	RETURN
DSPCOM,
	ROW2 = ROW + 14
	XCALL OUTPT (ROW2,24,0,'COMMISSIONS',V)
	ALPHA = COMOVF
	XCALL OUTPT (ROW2,45,0,ALPHA,V)
	XCALL OUTPT (0,0,0,' RECORDS',V)
	RETURN
ENDPRP,
	IF (DSTFLG.EQ.NO) GO TO END
	INCR REC005
	LOKCTL = 1
	XCALL IO (5,BRACKS,REC005,WRITE,LOKCTL)
END,
	CLOSE 3
	CLOSE 4
	CLOSE 5
	CLOSE 6
	CLOSE 8
	CLOSE 9

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;	MSGCTL = 5
;;;	XCALL SNMSG (SNDMSG,MSGCTL)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	XCALL PGCHN ('AR:SLSFCM',0)
;;;	XCALL PGCHN ('AR:SRTSLS',0)
END
